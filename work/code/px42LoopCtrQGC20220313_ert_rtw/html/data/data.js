var dataJson = {"arch":{"ispc":true,"isunix":false,"ismac":false},"build":"px42LoopCtrQGC20220313","ref":false,"files":[{"name":"ert_main.cpp","type":"source","group":"main","path":"D:\\simulink\\PX4QGCGPSCtrl\\work\\code\\px42LoopCtrQGC20220313_ert_rtw","tag":"","groupDisplay":"Main file","code":"//\r\n// Academic License - for use in teaching, academic research, and meeting\r\n// course requirements at degree granting institutions only.  Not for\r\n// government, commercial, or other organizational use.\r\n//\r\n// File: ert_main.cpp\r\n//\r\n// Code generated for Simulink model 'px42LoopCtrQGC20220313'.\r\n//\r\n// Model version                  : 5.5\r\n// Simulink Coder version         : 9.7 (R2022a) 13-Nov-2021\r\n// C/C++ source code generated on : Wed Mar 16 10:17:15 2022\r\n//\r\n// Target selection: ert.tlc\r\n// Embedded hardware selection: ARM Compatible->ARM Cortex\r\n// Code generation objectives: Unspecified\r\n// Validation result: Not run\r\n//\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\n#include \"px42LoopCtrQGC20220313.h\"\r\n#include \"px42LoopCtrQGC20220313_private.h\"\r\n#include \"rtwtypes.h\"\r\n#include \"limits.h\"\r\n#include \"rt_nonfinite.h\"\r\n#include \"MW_PX4_TaskControl.h\"\r\n#include \"nuttxinitialize.h\"\r\n#define UNUSED(x)                      x = x\r\n#define NAMELEN                        16\r\n\r\n// Function prototype declaration\r\nvoid exitFcn(int sig);\r\nvoid *terminateTask(void *arg);\r\nvoid *baseRateTask(void *arg);\r\nvoid *subrateTask(void *arg);\r\nvolatile boolean_T stopRequested = false;\r\nvolatile boolean_T runModel = true;\r\nsem_t stopSem;\r\nsem_t baserateTaskSem;\r\nsem_t subrateTaskSem[1];\r\nint taskId[1];\r\npthread_t schedulerThread;\r\npthread_t baseRateThread;\r\npthread_t backgroundThread;\r\nvoid *threadJoinStatus;\r\nint terminatingmodel = 0;\r\npthread_t subRateThread[1];\r\nint subratePriority[1];\r\nvoid *subrateTask(void *arg)\r\n{\r\n  int tid = *((int *) arg);\r\n  int subRateId;\r\n  subRateId = tid + 1;\r\n  while (runModel) {\r\n    sem_wait(&subrateTaskSem[tid]);\r\n    if (terminatingmodel)\r\n      break;\r\n\r\n#ifdef MW_RTOS_DEBUG\r\n\r\n    printf(\" -subrate task %d semaphore received\\n\", subRateId);\r\n\r\n#endif\r\n\r\n    px42LoopCtrQGC20220313_step(subRateId);\r\n\r\n    // Get model outputs here\r\n  }\r\n\r\n  pthread_exit((void *)0);\r\n  return NULL;\r\n}\r\n\r\nvoid *baseRateTask(void *arg)\r\n{\r\n  runModel = (rtmGetErrorStatus(px42LoopCtrQGC20220313_M) == (NULL)) &&\r\n    !rtmGetStopRequested(px42LoopCtrQGC20220313_M);\r\n  while (runModel) {\r\n    sem_wait(&baserateTaskSem);\r\n\r\n#ifdef MW_RTOS_DEBUG\r\n\r\n    printf(\"*base rate task semaphore received\\n\");\r\n    fflush(stdout);\r\n\r\n#endif\r\n\r\n    if (rtmStepTask(px42LoopCtrQGC20220313_M, 1)\r\n        ) {\r\n      sem_post(&subrateTaskSem[0]);\r\n    }\r\n\r\n    // External mode\r\n    {\r\n      boolean_T rtmStopReq = false;\r\n      rtExtModePauseIfNeeded(px42LoopCtrQGC20220313_M->extModeInfo, 2,\r\n        &rtmStopReq);\r\n      if (rtmStopReq) {\r\n        rtmSetStopRequested(px42LoopCtrQGC20220313_M, true);\r\n      }\r\n\r\n      if (rtmGetStopRequested(px42LoopCtrQGC20220313_M) == true) {\r\n        rtmSetErrorStatus(px42LoopCtrQGC20220313_M, \"Simulation finished\");\r\n        break;\r\n      }\r\n    }\r\n\r\n    px42LoopCtrQGC20220313_step(0);\r\n\r\n    // Get model outputs here\r\n    rtExtModeCheckEndTrigger();\r\n    stopRequested = !((rtmGetErrorStatus(px42LoopCtrQGC20220313_M) == (NULL)) &&\r\n                      !rtmGetStopRequested(px42LoopCtrQGC20220313_M));\r\n    runModel = !stopRequested;\r\n  }\r\n\r\n  terminateTask(arg);\r\n  pthread_exit((void *)0);\r\n  return NULL;\r\n}\r\n\r\nvoid exitFcn(int sig)\r\n{\r\n  UNUSED(sig);\r\n  rtmSetErrorStatus(px42LoopCtrQGC20220313_M, \"stopping the model\");\r\n  runModel = 0;\r\n}\r\n\r\nvoid *terminateTask(void *arg)\r\n{\r\n  UNUSED(arg);\r\n  terminatingmodel = 1;\r\n\r\n  {\r\n    int i;\r\n\r\n    // Signal all periodic tasks to complete\r\n    for (i=0; i<1; i++) {\r\n      CHECK_STATUS(sem_post(&subrateTaskSem[i]), 0, \"sem_post\");\r\n      CHECK_STATUS(sem_destroy(&subrateTaskSem[i]), 0, \"sem_destroy\");\r\n    }\r\n\r\n    // Wait for all periodic tasks to complete\r\n    for (i=0; i<1; i++) {\r\n      CHECK_STATUS(pthread_join(subRateThread[i], &threadJoinStatus), 0,\r\n                   \"pthread_join\");\r\n    }\r\n\r\n    runModel = 0;\r\n\r\n    // Wait for background task to complete\r\n    CHECK_STATUS(pthread_join(backgroundThread, &threadJoinStatus), 0,\r\n                 \"pthread_join\");\r\n  }\r\n\r\n  MW_PX4_Terminate();\r\n\r\n  // Terminate model\r\n  px42LoopCtrQGC20220313_terminate();\r\n  rtExtModeShutdown(2);\r\n  sem_post(&stopSem);\r\n  return NULL;\r\n}\r\n\r\nvoid *backgroundTask(void *arg)\r\n{\r\n  while (runModel) {\r\n    // External mode\r\n    {\r\n      boolean_T rtmStopReq = false;\r\n      rtExtModeOneStep(px42LoopCtrQGC20220313_M->extModeInfo, 2, &rtmStopReq);\r\n      if (rtmStopReq) {\r\n        rtmSetStopRequested(px42LoopCtrQGC20220313_M, true);\r\n      }\r\n    }\r\n  }\r\n\r\n  return NULL;\r\n}\r\n\r\nint px4_simulink_app_task_main (int argc, char *argv[])\r\n{\r\n  subratePriority[0] = 249;\r\n  px4_simulink_app_control_MAVLink();\r\n  rtmSetErrorStatus(px42LoopCtrQGC20220313_M, 0);\r\n  rtExtModeParseArgs(argc, (const char_T **)argv, NULL);\r\n\r\n  // Initialize model\r\n  px42LoopCtrQGC20220313_initialize();\r\n\r\n  // External mode\r\n  rtSetTFinalForExtMode(&rtmGetTFinal(px42LoopCtrQGC20220313_M));\r\n  rtExtModeCheckInit(2);\r\n\r\n  {\r\n    boolean_T rtmStopReq = false;\r\n    rtExtModeWaitForStartPkt(px42LoopCtrQGC20220313_M->extModeInfo, 2,\r\n      &rtmStopReq);\r\n    if (rtmStopReq) {\r\n      rtmSetStopRequested(px42LoopCtrQGC20220313_M, true);\r\n    }\r\n  }\r\n\r\n  rtERTExtModeStartMsg();\r\n\r\n  // Call RTOS Initialization function\r\n  nuttxRTOSInit(0.005, 1);\r\n\r\n  // Wait for stop semaphore\r\n  sem_wait(&stopSem);\r\n\r\n#if (MW_NUMBER_TIMER_DRIVEN_TASKS > 0)\r\n\r\n  {\r\n    int i;\r\n    for (i=0; i < MW_NUMBER_TIMER_DRIVEN_TASKS; i++) {\r\n      CHECK_STATUS(sem_destroy(&timerTaskSem[i]), 0, \"sem_destroy\");\r\n    }\r\n  }\r\n\r\n#endif\r\n\r\n  return 0;\r\n}\r\n\r\n//\r\n// File trailer for generated code.\r\n//\r\n// [EOF]\r\n//\r\n"},{"name":"px42LoopCtrQGC20220313.cpp","type":"source","group":"model","path":"D:\\simulink\\PX4QGCGPSCtrl\\work\\code\\px42LoopCtrQGC20220313_ert_rtw","tag":"","groupDisplay":"Model files","code":"//\r\n// Academic License - for use in teaching, academic research, and meeting\r\n// course requirements at degree granting institutions only.  Not for\r\n// government, commercial, or other organizational use.\r\n//\r\n// File: px42LoopCtrQGC20220313.cpp\r\n//\r\n// Code generated for Simulink model 'px42LoopCtrQGC20220313'.\r\n//\r\n// Model version                  : 5.5\r\n// Simulink Coder version         : 9.7 (R2022a) 13-Nov-2021\r\n// C/C++ source code generated on : Wed Mar 16 10:17:15 2022\r\n//\r\n// Target selection: ert.tlc\r\n// Embedded hardware selection: ARM Compatible->ARM Cortex\r\n// Code generation objectives: Unspecified\r\n// Validation result: Not run\r\n//\r\n#include \"px42LoopCtrQGC20220313.h\"\r\n#include \"rtwtypes.h\"\r\n#include \"px42LoopCtrQGC20220313_types.h\"\r\n#include \"px42LoopCtrQGC20220313_private.h\"\r\n#include <math.h>\r\n\r\nextern \"C\" {\r\n\r\n#include \"rt_nonfinite.h\"\r\n\r\n}\r\n#include <string.h>\r\n#include <stddef.h>\r\n#include \"rt_defines.h\"\r\n#include \"zero_crossing_types.h\"\r\n#include \"px42LoopCtrQGC20220313_dt.h\"\r\n\r\n// Block signals (default storage)\r\nB_px42LoopCtrQGC20220313_T px42LoopCtrQGC20220313_B;\r\n\r\n// Block states (default storage)\r\nDW_px42LoopCtrQGC20220313_T px42LoopCtrQGC20220313_DW;\r\n\r\n// Previous zero-crossings (trigger) states\r\nPrevZCX_px42LoopCtrQGC2022031_T px42LoopCtrQGC20220313_PrevZCX;\r\n\r\n// External outputs (root outports fed by signals with default storage)\r\nExtY_px42LoopCtrQGC20220313_T px42LoopCtrQGC20220313_Y;\r\n\r\n// Real-time model\r\nRT_MODEL_px42LoopCtrQGC202203_T px42LoopCtrQGC20220313_M_ =\r\n  RT_MODEL_px42LoopCtrQGC202203_T();\r\nRT_MODEL_px42LoopCtrQGC202203_T *const px42LoopCtrQGC20220313_M =\r\n  &px42LoopCtrQGC20220313_M_;\r\n\r\n// Forward declaration for local functions\r\nstatic void px42LoopCtrQGC_SystemCore_setup(px4_internal_block_PWM_px42Lo_T *obj,\r\n  boolean_T varargin_1, boolean_T varargin_2);\r\nstatic void px42LoopCtrQ_SystemCore_setup_k(px4_internal_block_PX4SCIWrit_T *obj);\r\nstatic void rate_monotonic_scheduler(void);\r\n\r\n//\r\n// Set which subrates need to run this base step (base rate always runs).\r\n// This function must be called prior to calling the model step function\r\n// in order to remember which rates need to run this base step.  The\r\n// buffering of events allows for overlapping preemption.\r\n//\r\nvoid px42LoopCtrQGC20220313_SetEventsForThisBaseStep(boolean_T *eventFlags)\r\n{\r\n  // Task runs when its counter is zero, computed via rtmStepTask macro\r\n  eventFlags[1] = ((boolean_T)rtmStepTask(px42LoopCtrQGC20220313_M, 1));\r\n}\r\n\r\n//\r\n//         This function updates active task flag for each subrate\r\n//         and rate transition flags for tasks that exchange data.\r\n//         The function assumes rate-monotonic multitasking scheduler.\r\n//         The function must be called at model base rate so that\r\n//         the generated code self-manages all its subrates and rate\r\n//         transition flags.\r\n//\r\nstatic void rate_monotonic_scheduler(void)\r\n{\r\n  // Compute which subrates run during the next base time step.  Subrates\r\n  //  are an integer multiple of the base rate counter.  Therefore, the subtask\r\n  //  counter is reset when it reaches its limit (zero means run).\r\n\r\n  (px42LoopCtrQGC20220313_M->Timing.TaskCounters.TID[1])++;\r\n  if ((px42LoopCtrQGC20220313_M->Timing.TaskCounters.TID[1]) > 1) {// Sample time: [0.01s, 0.0s] \r\n    px42LoopCtrQGC20220313_M->Timing.TaskCounters.TID[1] = 0;\r\n  }\r\n}\r\n\r\n//\r\n// Output and update for atomic system:\r\n//    '<S18>/MATLAB Function'\r\n//    '<S27>/MATLAB Function'\r\n//    '<S36>/MATLAB Function'\r\n//\r\nvoid px42LoopCtrQ_MATLABFunction(boolean_T rtu_e, real_T rtu_t, real_T rtu_s_t,\r\n  real_T rtu_y1, real_T rtu_y2, real_T *rty_y)\r\n{\r\n  if (rtu_t < 4.6) {\r\n    *rty_y = rtu_y2;\r\n  } else {\r\n    real_T tmp;\r\n    tmp = rtu_t - rtu_s_t;\r\n    if (rtu_e && (tmp <= 4.6) && (rtu_t > 4.6)) {\r\n      *rty_y = rtu_y1;\r\n    } else if (rtu_e && (tmp > 4.6)) {\r\n      *rty_y = rtu_y2;\r\n    } else if ((!rtu_e) && (tmp <= 4.6) && (rtu_t > 4.6)) {\r\n      *rty_y = rtu_y1;\r\n    } else {\r\n      *rty_y = rtu_y2;\r\n    }\r\n  }\r\n}\r\n\r\nreal_T rt_powd_snf(real_T u0, real_T u1)\r\n{\r\n  real_T y;\r\n  if (rtIsNaN(u0) || rtIsNaN(u1)) {\r\n    y = (rtNaN);\r\n  } else {\r\n    real_T tmp;\r\n    real_T tmp_0;\r\n    tmp = fabs(u0);\r\n    tmp_0 = fabs(u1);\r\n    if (rtIsInf(u1)) {\r\n      if (tmp == 1.0) {\r\n        y = 1.0;\r\n      } else if (tmp > 1.0) {\r\n        if (u1 > 0.0) {\r\n          y = (rtInf);\r\n        } else {\r\n          y = 0.0;\r\n        }\r\n      } else if (u1 > 0.0) {\r\n        y = 0.0;\r\n      } else {\r\n        y = (rtInf);\r\n      }\r\n    } else if (tmp_0 == 0.0) {\r\n      y = 1.0;\r\n    } else if (tmp_0 == 1.0) {\r\n      if (u1 > 0.0) {\r\n        y = u0;\r\n      } else {\r\n        y = 1.0 / u0;\r\n      }\r\n    } else if (u1 == 2.0) {\r\n      y = u0 * u0;\r\n    } else if ((u1 == 0.5) && (u0 >= 0.0)) {\r\n      y = sqrt(u0);\r\n    } else if ((u0 < 0.0) && (u1 > floor(u1))) {\r\n      y = (rtNaN);\r\n    } else {\r\n      y = pow(u0, u1);\r\n    }\r\n  }\r\n\r\n  return y;\r\n}\r\n\r\nreal_T rt_atan2d_snf(real_T u0, real_T u1)\r\n{\r\n  real_T y;\r\n  if (rtIsNaN(u0) || rtIsNaN(u1)) {\r\n    y = (rtNaN);\r\n  } else if (rtIsInf(u0) && rtIsInf(u1)) {\r\n    int32_T u0_0;\r\n    int32_T u1_0;\r\n    if (u0 > 0.0) {\r\n      u0_0 = 1;\r\n    } else {\r\n      u0_0 = -1;\r\n    }\r\n\r\n    if (u1 > 0.0) {\r\n      u1_0 = 1;\r\n    } else {\r\n      u1_0 = -1;\r\n    }\r\n\r\n    y = atan2(static_cast<real_T>(u0_0), static_cast<real_T>(u1_0));\r\n  } else if (u1 == 0.0) {\r\n    if (u0 > 0.0) {\r\n      y = RT_PI / 2.0;\r\n    } else if (u0 < 0.0) {\r\n      y = -(RT_PI / 2.0);\r\n    } else {\r\n      y = 0.0;\r\n    }\r\n  } else {\r\n    y = atan2(u0, u1);\r\n  }\r\n\r\n  return y;\r\n}\r\n\r\nstatic void px42LoopCtrQGC_SystemCore_setup(px4_internal_block_PWM_px42Lo_T *obj,\r\n  boolean_T varargin_1, boolean_T varargin_2)\r\n{\r\n  uint16_T status;\r\n  obj->isSetupComplete = false;\r\n  obj->isInitialized = 1;\r\n  obj->isMain = true;\r\n  obj->pwmDevObj = MW_PWM_OUTPUT_MAIN_DEVICE_PATH;\r\n  status = pwm_open(&obj->pwmDevHandler, obj->pwmDevObj,\r\n                    &obj->actuatorAdvertiseObj, &obj->armAdvertiseObj);\r\n  obj->errorStatus = static_cast<uint16_T>(obj->errorStatus | status);\r\n  obj->servoCount = 0;\r\n  status = pwm_getServoCount(&obj->pwmDevHandler, &obj->servoCount);\r\n  obj->errorStatus = static_cast<uint16_T>(obj->errorStatus | status);\r\n  if (varargin_1) {\r\n    status = pwm_arm(&obj->pwmDevHandler, &obj->armAdvertiseObj);\r\n    obj->isArmed = true;\r\n  } else {\r\n    status = pwm_disarm(&obj->pwmDevHandler, &obj->armAdvertiseObj);\r\n    obj->isArmed = false;\r\n  }\r\n\r\n  obj->errorStatus = static_cast<uint16_T>(obj->errorStatus | status);\r\n  status = pwm_setPWMRate(&obj->pwmDevHandler, obj->isMain);\r\n  obj->errorStatus = static_cast<uint16_T>(obj->errorStatus | status);\r\n  obj->channelMask = 15;\r\n  status = pwm_setChannelMask(&obj->pwmDevHandler, obj->channelMask);\r\n  obj->errorStatus = static_cast<uint16_T>(obj->errorStatus | status);\r\n  status = pwm_setFailsafePWM(&obj->pwmDevHandler, obj->servoCount,\r\n    obj->channelMask, obj->isMain);\r\n  obj->errorStatus = static_cast<uint16_T>(obj->errorStatus | status);\r\n  status = pwm_setDisarmedPWM(&obj->pwmDevHandler, obj->servoCount,\r\n    obj->channelMask, obj->isMain, &obj->actuatorAdvertiseObj);\r\n  obj->errorStatus = static_cast<uint16_T>(obj->errorStatus | status);\r\n  if (obj->isMain) {\r\n    status = pwm_forceFailsafe(&obj->pwmDevHandler, static_cast<int32_T>\r\n      (varargin_2));\r\n    obj->errorStatus = static_cast<uint16_T>(obj->errorStatus | status);\r\n    status = pwm_forceTerminateFailsafe(&obj->pwmDevHandler, 0);\r\n    obj->errorStatus = static_cast<uint16_T>(obj->errorStatus | status);\r\n  }\r\n\r\n  obj->isSetupComplete = true;\r\n}\r\n\r\nstatic void px42LoopCtrQ_SystemCore_setup_k(px4_internal_block_PX4SCIWrit_T *obj)\r\n{\r\n  uint32_T RxPinLoc;\r\n  uint32_T TxPinLoc;\r\n  char_T b_SCIModuleLoc[11];\r\n  static const char_T tmp[10] = { '/', 'd', 'e', 'v', '/', 't', 't', 'y', 'S',\r\n    '1' };\r\n\r\n  obj->isSetupComplete = false;\r\n  obj->isInitialized = 1;\r\n  RxPinLoc = MW_UNDEFINED_VALUE;\r\n  TxPinLoc = MW_UNDEFINED_VALUE;\r\n  for (int32_T i = 0; i < 10; i++) {\r\n    b_SCIModuleLoc[i] = tmp[i];\r\n  }\r\n\r\n  MW_SCI_HardwareFlowControl_Type HardwareFlowControlValue;\r\n  MW_SCI_Parity_Type ParityValue;\r\n  MW_SCI_StopBits_Type StopBitsValue;\r\n  void* SCIModuleVoidPtr;\r\n  b_SCIModuleLoc[10] = '\\x00';\r\n  SCIModuleVoidPtr = (void*)(&b_SCIModuleLoc[0]);\r\n  obj->SCIDriverObj.MW_SCIHANDLE = MW_SCI_Open(SCIModuleVoidPtr, true, RxPinLoc,\r\n    TxPinLoc);\r\n  MW_SCI_SetBaudrate(obj->SCIDriverObj.MW_SCIHANDLE, 9600U);\r\n  StopBitsValue = MW_SCI_STOPBITS_1;\r\n  ParityValue = MW_SCI_PARITY_NONE;\r\n  MW_SCI_SetFrameFormat(obj->SCIDriverObj.MW_SCIHANDLE, 8, ParityValue,\r\n                        StopBitsValue);\r\n  RxPinLoc = MW_UNDEFINED_VALUE;\r\n  TxPinLoc = MW_UNDEFINED_VALUE;\r\n  HardwareFlowControlValue = MW_SCI_FLOWCONTROL_NONE;\r\n  MW_SCI_ConfigureHardwareFlowControl(obj->SCIDriverObj.MW_SCIHANDLE,\r\n    HardwareFlowControlValue, RxPinLoc, TxPinLoc);\r\n  obj->isSetupComplete = true;\r\n}\r\n\r\n// Model step function for TID0\r\nvoid px42LoopCtrQGC20220313_step0(void) // Sample time: [0.005s, 0.0s]\r\n{\r\n  real_T roll_tmp;\r\n  real_T roll_tmp_0;\r\n  real_T u0_tmp;\r\n  uint16_T status;\r\n  boolean_T b_varargout_1;\r\n  boolean_T rtb_Compare;\r\n  boolean_T rtb_Compare_g2;\r\n  boolean_T rtb_Compare_i;\r\n  boolean_T rtb_LogicalOperator;\r\n\r\n  {                                    // Sample time: [0.005s, 0.0s]\r\n    rate_monotonic_scheduler();\r\n  }\r\n\r\n  // Reset subsysRan breadcrumbs\r\n  srClearBC(px42LoopCtrQGC20220313_DW.Subsystem_SubsysRanBC_k);\r\n\r\n  // Reset subsysRan breadcrumbs\r\n  srClearBC(px42LoopCtrQGC20220313_DW.Subsystem_SubsysRanBC_m);\r\n\r\n  // Reset subsysRan breadcrumbs\r\n  srClearBC(px42LoopCtrQGC20220313_DW.Subsystem_SubsysRanBC);\r\n\r\n  // Reset subsysRan breadcrumbs\r\n  srClearBC(px42LoopCtrQGC20220313_DW.EnabledSubsystem_SubsysRanBC_p);\r\n\r\n  // Reset subsysRan breadcrumbs\r\n  srClearBC(px42LoopCtrQGC20220313_DW.IfActionSubsystem_SubsysRanBC);\r\n\r\n  // Reset subsysRan breadcrumbs\r\n  srClearBC(px42LoopCtrQGC20220313_DW.IfActionSubsystem1_SubsysRanBC);\r\n\r\n  // Reset subsysRan breadcrumbs\r\n  srClearBC(px42LoopCtrQGC20220313_DW.IfActionSubsystem2_SubsysRanBC);\r\n\r\n  // Reset subsysRan breadcrumbs\r\n  srClearBC(px42LoopCtrQGC20220313_DW.EnabledSubsystem_SubsysRanBC);\r\n\r\n  // Reset subsysRan breadcrumbs\r\n  srClearBC(px42LoopCtrQGC20220313_DW.Subsystem1_SubsysRanBC);\r\n\r\n  // Switch: '<S12>/Switch' incorporates:\r\n  //   Constant: '<Root>/Constant3'\r\n  //   Constant: '<S12>/Constant1'\r\n  //   DataStoreRead: '<Root>/Data Store Read20'\r\n  //   DataStoreRead: '<S12>/Data Store Read'\r\n  //   DataStoreRead: '<S12>/Data Store Read1'\r\n\r\n  if (px42LoopCtrQGC20220313_DW.attitude_flag) {\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_0 =\r\n      px42LoopCtrQGC20220313_DW.yaw;\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_1 =\r\n      px42LoopCtrQGC20220313_P.Constant3_Value_g;\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_2 =\r\n      px42LoopCtrQGC20220313_DW.yaw_speed;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_0 =\r\n      px42LoopCtrQGC20220313_P.Constant1_Value_a;\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_1 =\r\n      px42LoopCtrQGC20220313_P.Constant1_Value_a;\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_2 =\r\n      px42LoopCtrQGC20220313_P.Constant1_Value_a;\r\n  }\r\n\r\n  // End of Switch: '<S12>/Switch'\r\n\r\n  // RelationalOperator: '<S37>/Compare' incorporates:\r\n  //   Abs: '<S36>/Abs'\r\n  //   Constant: '<S37>/Constant'\r\n  //   DataStoreRead: '<S36>/Data Store Read1'\r\n\r\n  rtb_Compare = (fabs(px42LoopCtrQGC20220313_DW.e_pitch_yaw) >=\r\n                 px42LoopCtrQGC20220313_P.CompareToConstant1_const);\r\n\r\n  // Sum: '<S36>/Add' incorporates:\r\n  //   DataStoreRead: '<S36>/Data Store Read'\r\n  //   DataStoreRead: '<S36>/Data Store Read3'\r\n  //   Sum: '<S39>/Add'\r\n\r\n  px42LoopCtrQGC20220313_B.Abs6 = px42LoopCtrQGC20220313_DW.t -\r\n    px42LoopCtrQGC20220313_DW.start_time_yaw;\r\n\r\n  // Fcn: '<S36>/Fcn' incorporates:\r\n  //   Constant: '<S36>/T'\r\n  //   Constant: '<S36>/ch'\r\n  //   Sum: '<S36>/Add'\r\n\r\n  px42LoopCtrQGC20220313_B.rtb_Fcn_bh = px42LoopCtrQGC20220313_P.ch_Value /\r\n    (px42LoopCtrQGC20220313_P.T_Value - px42LoopCtrQGC20220313_B.Abs6);\r\n\r\n  // MATLAB Function: '<S36>/MATLAB Function' incorporates:\r\n  //   Constant: '<S36>/t'\r\n  //   DataStoreRead: '<S36>/Data Store Read'\r\n  //   DataStoreRead: '<S36>/Data Store Read3'\r\n\r\n  px42LoopCtrQ_MATLABFunction(rtb_Compare, px42LoopCtrQGC20220313_DW.t,\r\n    px42LoopCtrQGC20220313_DW.start_time_yaw,\r\n    px42LoopCtrQGC20220313_B.rtb_Fcn_bh, px42LoopCtrQGC20220313_P.t_Value,\r\n    &px42LoopCtrQGC20220313_B.y);\r\n\r\n  // Sum: '<S36>/Add1' incorporates:\r\n  //   Constant: '<S36>/r'\r\n\r\n  px42LoopCtrQGC20220313_B.z2 = px42LoopCtrQGC20220313_P.r_Value +\r\n    px42LoopCtrQGC20220313_B.y;\r\n\r\n  // Sum: '<S35>/Add' incorporates:\r\n  //   Sum: '<S12>/Add2'\r\n\r\n  px42LoopCtrQGC20220313_DW.e_pitch_yaw =\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_0 -\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_1;\r\n\r\n  // Gain: '<S35>/Gain4' incorporates:\r\n  //   Constant: '<S12>/b'\r\n  //   Product: '<S35>/Product'\r\n  //   Sum: '<S35>/Add'\r\n\r\n  px42LoopCtrQGC20220313_B.ManualSwitch_g =\r\n    px42LoopCtrQGC20220313_DW.e_pitch_yaw * px42LoopCtrQGC20220313_B.z2 *\r\n    px42LoopCtrQGC20220313_P.b_Value * px42LoopCtrQGC20220313_P.Gain4_Gain;\r\n\r\n  // SampleTimeMath: '<S34>/TSamp'\r\n  //\r\n  //  About '<S34>/TSamp':\r\n  //   y = u * K where K = 1 / ( w * Ts )\r\n\r\n  px42LoopCtrQGC20220313_B.TSamp = px42LoopCtrQGC20220313_B.ManualSwitch_g *\r\n    px42LoopCtrQGC20220313_P.TSamp_WtEt;\r\n\r\n  // Sum: '<S12>/Add1'\r\n  px42LoopCtrQGC20220313_B.ManualSwitch_g =\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_2 -\r\n    px42LoopCtrQGC20220313_B.ManualSwitch_g;\r\n\r\n  // Gain: '<S1>/Gain1' incorporates:\r\n  //   DiscreteIntegrator: '<S15>/Discrete-Time Integrator3'\r\n\r\n  px42LoopCtrQGC20220313_B.Product6_a = px42LoopCtrQGC20220313_P.Gain1_Gain_o *\r\n    px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator3_DSTATE;\r\n\r\n  // Signum: '<S12>/Sign'\r\n  if (rtIsNaN(px42LoopCtrQGC20220313_B.ManualSwitch_g)) {\r\n    px42LoopCtrQGC20220313_B.fcn5 = px42LoopCtrQGC20220313_B.ManualSwitch_g;\r\n  } else if (px42LoopCtrQGC20220313_B.ManualSwitch_g < 0.0) {\r\n    px42LoopCtrQGC20220313_B.fcn5 = -1.0;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.fcn5 = (px42LoopCtrQGC20220313_B.ManualSwitch_g >\r\n      0.0);\r\n  }\r\n\r\n  // End of Signum: '<S12>/Sign'\r\n\r\n  // Saturate: '<S1>/Saturation4'\r\n  if (px42LoopCtrQGC20220313_B.Product6_a >\r\n      px42LoopCtrQGC20220313_P.Saturation4_UpperSat) {\r\n    px42LoopCtrQGC20220313_B.Product6_a =\r\n      px42LoopCtrQGC20220313_P.Saturation4_UpperSat;\r\n  } else if (px42LoopCtrQGC20220313_B.Product6_a <\r\n             px42LoopCtrQGC20220313_P.Saturation4_LowerSat) {\r\n    px42LoopCtrQGC20220313_B.Product6_a =\r\n      px42LoopCtrQGC20220313_P.Saturation4_LowerSat;\r\n  }\r\n\r\n  // End of Saturate: '<S1>/Saturation4'\r\n\r\n  // Sum: '<S1>/Add3' incorporates:\r\n  //   Constant: '<S12>/b'\r\n  //   Constant: '<S12>/l'\r\n  //   DataStoreWrite: '<S12>/Data Store Write'\r\n  //   Gain: '<S12>/Gain'\r\n  //   Gain: '<S12>/Gain1'\r\n  //   Product: '<S12>/Product'\r\n  //   Product: '<S12>/Product1'\r\n  //   Sum: '<S12>/Add'\r\n  //   Sum: '<S34>/Diff'\r\n  //   UnitDelay: '<S34>/UD'\r\n  //\r\n  //  Block description for '<S34>/Diff':\r\n  //\r\n  //   Add in CPU\r\n  //\r\n  //  Block description for '<S34>/UD':\r\n  //\r\n  //   Store in Global RAM\r\n\r\n  px42LoopCtrQGC20220313_B.Add3 = (((((px42LoopCtrQGC20220313_B.TSamp -\r\n    px42LoopCtrQGC20220313_DW.UD_DSTATE) - px42LoopCtrQGC20220313_DW.e_pitch_yaw)\r\n    - px42LoopCtrQGC20220313_B.ManualSwitch_g * px42LoopCtrQGC20220313_B.z2 *\r\n    px42LoopCtrQGC20220313_P.b_Value) - px42LoopCtrQGC20220313_B.fcn5 *\r\n    px42LoopCtrQGC20220313_P.l_Value) - px42LoopCtrQGC20220313_P.Gain_Gain *\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_2) *\r\n    px42LoopCtrQGC20220313_P.Gain1_Gain - px42LoopCtrQGC20220313_B.Product6_a;\r\n\r\n  // ManualSwitch: '<S1>/Manual Switch' incorporates:\r\n  //   Constant: '<S1>/Constant'\r\n  //   DataStoreWrite: '<Root>/Data Store Write11'\r\n\r\n  if (px42LoopCtrQGC20220313_P.ManualSwitch_CurrentSetting == 1) {\r\n    // Saturate: '<S1>/Saturation'\r\n    if (px42LoopCtrQGC20220313_B.Add3 >\r\n        px42LoopCtrQGC20220313_P.Saturation_UpperSat) {\r\n      px42LoopCtrQGC20220313_B.DataStoreRead27 =\r\n        px42LoopCtrQGC20220313_P.Saturation_UpperSat;\r\n    } else if (px42LoopCtrQGC20220313_B.Add3 <\r\n               px42LoopCtrQGC20220313_P.Saturation_LowerSat) {\r\n      px42LoopCtrQGC20220313_B.DataStoreRead27 =\r\n        px42LoopCtrQGC20220313_P.Saturation_LowerSat;\r\n    } else {\r\n      px42LoopCtrQGC20220313_B.DataStoreRead27 = px42LoopCtrQGC20220313_B.Add3;\r\n    }\r\n\r\n    // End of Saturate: '<S1>/Saturation'\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.DataStoreRead27 =\r\n      px42LoopCtrQGC20220313_P.Constant_Value_b;\r\n  }\r\n\r\n  // End of ManualSwitch: '<S1>/Manual Switch'\r\n\r\n  // Sin: '<Root>/Sine Wave'\r\n  if (px42LoopCtrQGC20220313_DW.systemEnable != 0) {\r\n    px42LoopCtrQGC20220313_B.z2 = px42LoopCtrQGC20220313_P.SineWave_Freq *\r\n      px42LoopCtrQGC20220313_M->Timing.taskTime0;\r\n    px42LoopCtrQGC20220313_DW.lastSin = sin(px42LoopCtrQGC20220313_B.z2);\r\n    px42LoopCtrQGC20220313_DW.lastCos = cos(px42LoopCtrQGC20220313_B.z2);\r\n    px42LoopCtrQGC20220313_DW.systemEnable = 0;\r\n  }\r\n\r\n  // ManualSwitch: '<Root>/Manual Switch' incorporates:\r\n  //   Constant: '<Root>/Constant3'\r\n  //   Sin: '<Root>/Sine Wave'\r\n\r\n  if (px42LoopCtrQGC20220313_P.ManualSwitch_CurrentSetting_i == 1) {\r\n    px42LoopCtrQGC20220313_B.ManualSwitch_g =\r\n      ((px42LoopCtrQGC20220313_DW.lastSin *\r\n        px42LoopCtrQGC20220313_P.SineWave_PCos +\r\n        px42LoopCtrQGC20220313_DW.lastCos *\r\n        px42LoopCtrQGC20220313_P.SineWave_PSin) *\r\n       px42LoopCtrQGC20220313_P.SineWave_HCos +\r\n       (px42LoopCtrQGC20220313_DW.lastCos *\r\n        px42LoopCtrQGC20220313_P.SineWave_PCos -\r\n        px42LoopCtrQGC20220313_DW.lastSin *\r\n        px42LoopCtrQGC20220313_P.SineWave_PSin) *\r\n       px42LoopCtrQGC20220313_P.SineWave_Hsin) *\r\n      px42LoopCtrQGC20220313_P.SineWave_Amp +\r\n      px42LoopCtrQGC20220313_P.SineWave_Bias;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.ManualSwitch_g =\r\n      px42LoopCtrQGC20220313_P.Constant3_Value_g;\r\n  }\r\n\r\n  // End of ManualSwitch: '<Root>/Manual Switch'\r\n\r\n  // Switch: '<S10>/Switch' incorporates:\r\n  //   Constant: '<S10>/Constant1'\r\n  //   DataStoreRead: '<Root>/Data Store Read14'\r\n  //   DataStoreRead: '<S10>/Data Store Read'\r\n  //   DataStoreRead: '<S10>/Data Store Read1'\r\n\r\n  if (px42LoopCtrQGC20220313_DW.attitude_flag) {\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_0 =\r\n      px42LoopCtrQGC20220313_DW.pitch;\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_1 =\r\n      px42LoopCtrQGC20220313_B.ManualSwitch_g;\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_2 =\r\n      px42LoopCtrQGC20220313_DW.pitch_speed;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_0 =\r\n      px42LoopCtrQGC20220313_P.Constant1_Value;\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_1 =\r\n      px42LoopCtrQGC20220313_P.Constant1_Value;\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_2 =\r\n      px42LoopCtrQGC20220313_P.Constant1_Value;\r\n  }\r\n\r\n  // End of Switch: '<S10>/Switch'\r\n\r\n  // RelationalOperator: '<S19>/Compare' incorporates:\r\n  //   Abs: '<S18>/Abs'\r\n  //   Constant: '<S19>/Constant'\r\n  //   DataStoreRead: '<S18>/Data Store Read1'\r\n\r\n  rtb_Compare_i = (fabs(px42LoopCtrQGC20220313_DW.e_pitch) >=\r\n                   px42LoopCtrQGC20220313_P.CompareToConstant1_const_b);\r\n\r\n  // Sum: '<S18>/Add' incorporates:\r\n  //   DataStoreRead: '<S18>/Data Store Read'\r\n  //   DataStoreRead: '<S18>/Data Store Read3'\r\n  //   Sum: '<S21>/Add'\r\n\r\n  px42LoopCtrQGC20220313_B.Product4 = px42LoopCtrQGC20220313_DW.t -\r\n    px42LoopCtrQGC20220313_DW.start_time;\r\n\r\n  // Fcn: '<S18>/Fcn' incorporates:\r\n  //   Constant: '<S18>/T'\r\n  //   Constant: '<S18>/ch'\r\n  //   Sum: '<S18>/Add'\r\n\r\n  px42LoopCtrQGC20220313_B.rtb_Fcn_b_c = px42LoopCtrQGC20220313_P.ch_Value_j /\r\n    (px42LoopCtrQGC20220313_P.T_Value_p - px42LoopCtrQGC20220313_B.Product4);\r\n\r\n  // MATLAB Function: '<S18>/MATLAB Function' incorporates:\r\n  //   Constant: '<S18>/t'\r\n  //   DataStoreRead: '<S18>/Data Store Read'\r\n  //   DataStoreRead: '<S18>/Data Store Read3'\r\n\r\n  px42LoopCtrQ_MATLABFunction(rtb_Compare_i, px42LoopCtrQGC20220313_DW.t,\r\n    px42LoopCtrQGC20220313_DW.start_time, px42LoopCtrQGC20220313_B.rtb_Fcn_b_c,\r\n    px42LoopCtrQGC20220313_P.t_Value_n, &px42LoopCtrQGC20220313_B.y_j);\r\n\r\n  // Sum: '<S18>/Add1' incorporates:\r\n  //   Constant: '<S18>/r'\r\n\r\n  px42LoopCtrQGC20220313_B.z2_e = px42LoopCtrQGC20220313_P.r_Value_g +\r\n    px42LoopCtrQGC20220313_B.y_j;\r\n\r\n  // Sum: '<S17>/Add' incorporates:\r\n  //   Sum: '<S10>/Add2'\r\n\r\n  px42LoopCtrQGC20220313_DW.e_pitch =\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_0 -\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_1;\r\n\r\n  // Gain: '<S17>/Gain4' incorporates:\r\n  //   Constant: '<S10>/b'\r\n  //   Product: '<S17>/Product'\r\n  //   Sum: '<S17>/Add'\r\n\r\n  px42LoopCtrQGC20220313_B.roll_hat = px42LoopCtrQGC20220313_DW.e_pitch *\r\n    px42LoopCtrQGC20220313_B.z2_e * px42LoopCtrQGC20220313_P.b_Value_l *\r\n    px42LoopCtrQGC20220313_P.Gain4_Gain_b;\r\n\r\n  // SampleTimeMath: '<S16>/TSamp'\r\n  //\r\n  //  About '<S16>/TSamp':\r\n  //   y = u * K where K = 1 / ( w * Ts )\r\n\r\n  px42LoopCtrQGC20220313_B.z2 = px42LoopCtrQGC20220313_B.roll_hat *\r\n    px42LoopCtrQGC20220313_P.TSamp_WtEt_p;\r\n\r\n  // Sum: '<S10>/Add1'\r\n  px42LoopCtrQGC20220313_B.roll_hat =\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_2 -\r\n    px42LoopCtrQGC20220313_B.roll_hat;\r\n\r\n  // Gain: '<S1>/Gain2' incorporates:\r\n  //   DiscreteIntegrator: '<S13>/Discrete-Time Integrator3'\r\n\r\n  px42LoopCtrQGC20220313_B.Gain2 = px42LoopCtrQGC20220313_P.Gain2_Gain *\r\n    px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator3_DSTAT_a;\r\n\r\n  // Signum: '<S10>/Sign'\r\n  if (rtIsNaN(px42LoopCtrQGC20220313_B.roll_hat)) {\r\n    px42LoopCtrQGC20220313_B.fcn5 = px42LoopCtrQGC20220313_B.roll_hat;\r\n  } else if (px42LoopCtrQGC20220313_B.roll_hat < 0.0) {\r\n    px42LoopCtrQGC20220313_B.fcn5 = -1.0;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.fcn5 = (px42LoopCtrQGC20220313_B.roll_hat > 0.0);\r\n  }\r\n\r\n  // End of Signum: '<S10>/Sign'\r\n\r\n  // Sum: '<S1>/Add2' incorporates:\r\n  //   Constant: '<S10>/b'\r\n  //   Constant: '<S10>/l'\r\n  //   DataStoreWrite: '<Root>/Data Store Write12'\r\n  //   DataStoreWrite: '<S10>/Data Store Write'\r\n  //   Gain: '<S10>/Gain'\r\n  //   Gain: '<S10>/Gain1'\r\n  //   Product: '<S10>/Product'\r\n  //   Product: '<S10>/Product1'\r\n  //   Sum: '<S10>/Add'\r\n  //   Sum: '<S16>/Diff'\r\n  //   UnitDelay: '<S16>/UD'\r\n  //\r\n  //  Block description for '<S16>/Diff':\r\n  //\r\n  //   Add in CPU\r\n  //\r\n  //  Block description for '<S16>/UD':\r\n  //\r\n  //   Store in Global RAM\r\n\r\n  px42LoopCtrQGC20220313_B.DataStoreRead25 = (((((px42LoopCtrQGC20220313_B.z2 -\r\n    px42LoopCtrQGC20220313_DW.UD_DSTATE_b) - px42LoopCtrQGC20220313_DW.e_pitch)\r\n    - px42LoopCtrQGC20220313_B.roll_hat * px42LoopCtrQGC20220313_B.z2_e *\r\n    px42LoopCtrQGC20220313_P.b_Value_l) - px42LoopCtrQGC20220313_B.fcn5 *\r\n    px42LoopCtrQGC20220313_P.l_Value_b) - px42LoopCtrQGC20220313_P.Gain_Gain_o *\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_2) *\r\n    px42LoopCtrQGC20220313_P.Gain1_Gain_b - px42LoopCtrQGC20220313_B.Gain2;\r\n\r\n  // Switch: '<S11>/Switch' incorporates:\r\n  //   Constant: '<S11>/Constant1'\r\n  //   DataStoreRead: '<Root>/Data Store Read18'\r\n  //   DataStoreRead: '<S11>/Data Store Read'\r\n  //   DataStoreRead: '<S11>/Data Store Read1'\r\n\r\n  if (px42LoopCtrQGC20220313_DW.attitude_flag) {\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_0 =\r\n      px42LoopCtrQGC20220313_DW.roll;\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_1 =\r\n      px42LoopCtrQGC20220313_B.ManualSwitch_g;\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_2 =\r\n      px42LoopCtrQGC20220313_DW.roll_speed;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_0 =\r\n      px42LoopCtrQGC20220313_P.Constant1_Value_n;\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_1 =\r\n      px42LoopCtrQGC20220313_P.Constant1_Value_n;\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_2 =\r\n      px42LoopCtrQGC20220313_P.Constant1_Value_n;\r\n  }\r\n\r\n  // End of Switch: '<S11>/Switch'\r\n\r\n  // RelationalOperator: '<S28>/Compare' incorporates:\r\n  //   Abs: '<S27>/Abs'\r\n  //   Constant: '<S28>/Constant'\r\n  //   DataStoreRead: '<S27>/Data Store Read1'\r\n\r\n  rtb_Compare_g2 = (fabs(px42LoopCtrQGC20220313_DW.e_pitch_roll) >=\r\n                    px42LoopCtrQGC20220313_P.CompareToConstant1_const_h);\r\n\r\n  // Sum: '<S27>/Add' incorporates:\r\n  //   DataStoreRead: '<S27>/Data Store Read'\r\n  //   DataStoreRead: '<S27>/Data Store Read3'\r\n  //   Sum: '<S30>/Add'\r\n\r\n  px42LoopCtrQGC20220313_B.Product6 = px42LoopCtrQGC20220313_DW.t -\r\n    px42LoopCtrQGC20220313_DW.start_time_roll;\r\n\r\n  // Fcn: '<S27>/Fcn' incorporates:\r\n  //   Constant: '<S27>/T'\r\n  //   Constant: '<S27>/ch'\r\n  //   Sum: '<S27>/Add'\r\n\r\n  px42LoopCtrQGC20220313_B.rtb_Fcn_a_k = px42LoopCtrQGC20220313_P.ch_Value_e /\r\n    (px42LoopCtrQGC20220313_P.T_Value_c - px42LoopCtrQGC20220313_B.Product6);\r\n\r\n  // MATLAB Function: '<S27>/MATLAB Function' incorporates:\r\n  //   Constant: '<S27>/t'\r\n  //   DataStoreRead: '<S27>/Data Store Read'\r\n  //   DataStoreRead: '<S27>/Data Store Read3'\r\n\r\n  px42LoopCtrQ_MATLABFunction(rtb_Compare_g2, px42LoopCtrQGC20220313_DW.t,\r\n    px42LoopCtrQGC20220313_DW.start_time_roll,\r\n    px42LoopCtrQGC20220313_B.rtb_Fcn_a_k, px42LoopCtrQGC20220313_P.t_Value_m,\r\n    &px42LoopCtrQGC20220313_B.y_o);\r\n\r\n  // Sum: '<S27>/Add1' incorporates:\r\n  //   Constant: '<S27>/r'\r\n\r\n  px42LoopCtrQGC20220313_B.z2_l = px42LoopCtrQGC20220313_P.r_Value_p +\r\n    px42LoopCtrQGC20220313_B.y_o;\r\n\r\n  // Sum: '<S26>/Add' incorporates:\r\n  //   Sum: '<S11>/Add2'\r\n\r\n  px42LoopCtrQGC20220313_DW.e_pitch_roll =\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_0 -\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_1;\r\n\r\n  // Gain: '<S26>/Gain4' incorporates:\r\n  //   Constant: '<S11>/b'\r\n  //   Product: '<S26>/Product'\r\n  //   Sum: '<S26>/Add'\r\n\r\n  px42LoopCtrQGC20220313_B.roll_hat = px42LoopCtrQGC20220313_DW.e_pitch_roll *\r\n    px42LoopCtrQGC20220313_B.z2_l * px42LoopCtrQGC20220313_P.b_Value_h *\r\n    px42LoopCtrQGC20220313_P.Gain4_Gain_o;\r\n\r\n  // SampleTimeMath: '<S25>/TSamp'\r\n  //\r\n  //  About '<S25>/TSamp':\r\n  //   y = u * K where K = 1 / ( w * Ts )\r\n\r\n  px42LoopCtrQGC20220313_B.z2_e = px42LoopCtrQGC20220313_B.roll_hat *\r\n    px42LoopCtrQGC20220313_P.TSamp_WtEt_o;\r\n\r\n  // Sum: '<S11>/Add1'\r\n  px42LoopCtrQGC20220313_B.roll_hat =\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_2 -\r\n    px42LoopCtrQGC20220313_B.roll_hat;\r\n\r\n  // Gain: '<S1>/J' incorporates:\r\n  //   DiscreteIntegrator: '<S14>/Discrete-Time Integrator3'\r\n\r\n  px42LoopCtrQGC20220313_B.J = px42LoopCtrQGC20220313_P.J_Gain_b *\r\n    px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator3_DSTAT_m;\r\n\r\n  // Signum: '<S11>/Sign'\r\n  if (rtIsNaN(px42LoopCtrQGC20220313_B.roll_hat)) {\r\n    px42LoopCtrQGC20220313_B.fcn5 = px42LoopCtrQGC20220313_B.roll_hat;\r\n  } else if (px42LoopCtrQGC20220313_B.roll_hat < 0.0) {\r\n    px42LoopCtrQGC20220313_B.fcn5 = -1.0;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.fcn5 = (px42LoopCtrQGC20220313_B.roll_hat > 0.0);\r\n  }\r\n\r\n  // End of Signum: '<S11>/Sign'\r\n\r\n  // Sum: '<S1>/Add1' incorporates:\r\n  //   Constant: '<S11>/b'\r\n  //   Constant: '<S11>/l'\r\n  //   DataStoreWrite: '<Root>/Data Store Write13'\r\n  //   DataStoreWrite: '<S11>/Data Store Write'\r\n  //   Gain: '<S11>/Gain'\r\n  //   Gain: '<S11>/J'\r\n  //   Product: '<S11>/Product'\r\n  //   Product: '<S11>/Product1'\r\n  //   Sum: '<S11>/Add'\r\n  //   Sum: '<S25>/Diff'\r\n  //   UnitDelay: '<S25>/UD'\r\n  //\r\n  //  Block description for '<S25>/Diff':\r\n  //\r\n  //   Add in CPU\r\n  //\r\n  //  Block description for '<S25>/UD':\r\n  //\r\n  //   Store in Global RAM\r\n\r\n  px42LoopCtrQGC20220313_B.DataStoreRead26 = (((((px42LoopCtrQGC20220313_B.z2_e\r\n    - px42LoopCtrQGC20220313_DW.UD_DSTATE_n) -\r\n    px42LoopCtrQGC20220313_DW.e_pitch_roll) - px42LoopCtrQGC20220313_B.roll_hat *\r\n    px42LoopCtrQGC20220313_B.z2_l * px42LoopCtrQGC20220313_P.b_Value_h) -\r\n    px42LoopCtrQGC20220313_B.fcn5 * px42LoopCtrQGC20220313_P.l_Value_n) -\r\n    px42LoopCtrQGC20220313_P.Gain_Gain_m *\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_2) *\r\n    px42LoopCtrQGC20220313_P.J_Gain - px42LoopCtrQGC20220313_B.J;\r\n\r\n  // DataStoreRead: '<S36>/Data Store Read4'\r\n  px42LoopCtrQGC20220313_B.DataStoreRead4 =\r\n    px42LoopCtrQGC20220313_DW.start_time_yaw;\r\n\r\n  // Logic: '<S39>/Logical Operator' incorporates:\r\n  //   Abs: '<S39>/Abs1'\r\n  //   Constant: '<S40>/Constant'\r\n  //   Constant: '<S41>/Constant'\r\n  //   DataStoreRead: '<S39>/Data Store Read2'\r\n  //   RelationalOperator: '<S40>/Compare'\r\n  //   RelationalOperator: '<S41>/Compare'\r\n\r\n  rtb_LogicalOperator = ((fabs(px42LoopCtrQGC20220313_DW.e_pitch_yaw) >=\r\n    px42LoopCtrQGC20220313_P.CompareToConstant2_const) &&\r\n    (px42LoopCtrQGC20220313_B.Abs6 >=\r\n     px42LoopCtrQGC20220313_P.CompareToConstant1_const_hq));\r\n\r\n  // Outputs for Triggered SubSystem: '<S39>/Subsystem' incorporates:\r\n  //   TriggerPort: '<S42>/Trigger'\r\n\r\n  if (rtb_LogicalOperator && (px42LoopCtrQGC20220313_PrevZCX.Subsystem_Trig_ZCE\r\n       != POS_ZCSIG)) {\r\n    // DataStoreWrite: '<S42>/Data Store Write' incorporates:\r\n    //   DataStoreRead: '<S42>/Data Store Read2'\r\n\r\n    px42LoopCtrQGC20220313_DW.start_time_yaw = px42LoopCtrQGC20220313_DW.t;\r\n    px42LoopCtrQGC20220313_DW.Subsystem_SubsysRanBC = 4;\r\n  }\r\n\r\n  px42LoopCtrQGC20220313_PrevZCX.Subsystem_Trig_ZCE = rtb_LogicalOperator;\r\n\r\n  // End of Outputs for SubSystem: '<S39>/Subsystem'\r\n  // DataStoreRead: '<S18>/Data Store Read4'\r\n  px42LoopCtrQGC20220313_B.DataStoreRead4_g =\r\n    px42LoopCtrQGC20220313_DW.start_time;\r\n\r\n  // Logic: '<S21>/Logical Operator' incorporates:\r\n  //   Abs: '<S21>/Abs1'\r\n  //   Constant: '<S22>/Constant'\r\n  //   Constant: '<S23>/Constant'\r\n  //   DataStoreRead: '<S21>/Data Store Read2'\r\n  //   RelationalOperator: '<S22>/Compare'\r\n  //   RelationalOperator: '<S23>/Compare'\r\n\r\n  rtb_LogicalOperator = ((fabs(px42LoopCtrQGC20220313_DW.e_pitch) >=\r\n    px42LoopCtrQGC20220313_P.CompareToConstant2_const_o) &&\r\n    (px42LoopCtrQGC20220313_B.Product4 >=\r\n     px42LoopCtrQGC20220313_P.CompareToConstant1_const_p));\r\n\r\n  // Outputs for Triggered SubSystem: '<S21>/Subsystem' incorporates:\r\n  //   TriggerPort: '<S24>/Trigger'\r\n\r\n  if (rtb_LogicalOperator &&\r\n      (px42LoopCtrQGC20220313_PrevZCX.Subsystem_Trig_ZCE_e != POS_ZCSIG)) {\r\n    // DataStoreWrite: '<S24>/Data Store Write' incorporates:\r\n    //   DataStoreRead: '<S24>/Data Store Read2'\r\n\r\n    px42LoopCtrQGC20220313_DW.start_time = px42LoopCtrQGC20220313_DW.t;\r\n    px42LoopCtrQGC20220313_DW.Subsystem_SubsysRanBC_k = 4;\r\n  }\r\n\r\n  px42LoopCtrQGC20220313_PrevZCX.Subsystem_Trig_ZCE_e = rtb_LogicalOperator;\r\n\r\n  // End of Outputs for SubSystem: '<S21>/Subsystem'\r\n  // DataStoreRead: '<S27>/Data Store Read4'\r\n  px42LoopCtrQGC20220313_B.DataStoreRead4_b =\r\n    px42LoopCtrQGC20220313_DW.start_time_roll;\r\n\r\n  // Logic: '<S30>/Logical Operator' incorporates:\r\n  //   Abs: '<S30>/Abs1'\r\n  //   Constant: '<S31>/Constant'\r\n  //   Constant: '<S32>/Constant'\r\n  //   DataStoreRead: '<S30>/Data Store Read2'\r\n  //   RelationalOperator: '<S31>/Compare'\r\n  //   RelationalOperator: '<S32>/Compare'\r\n\r\n  rtb_LogicalOperator = ((fabs(px42LoopCtrQGC20220313_DW.e_pitch_roll) >=\r\n    px42LoopCtrQGC20220313_P.CompareToConstant2_const_a) &&\r\n    (px42LoopCtrQGC20220313_B.Product6 >=\r\n     px42LoopCtrQGC20220313_P.CompareToConstant1_const_a));\r\n\r\n  // Outputs for Triggered SubSystem: '<S30>/Subsystem' incorporates:\r\n  //   TriggerPort: '<S33>/Trigger'\r\n\r\n  if (rtb_LogicalOperator &&\r\n      (px42LoopCtrQGC20220313_PrevZCX.Subsystem_Trig_ZCE_j != POS_ZCSIG)) {\r\n    // DataStoreWrite: '<S33>/Data Store Write' incorporates:\r\n    //   DataStoreRead: '<S33>/Data Store Read2'\r\n\r\n    px42LoopCtrQGC20220313_DW.start_time_roll = px42LoopCtrQGC20220313_DW.t;\r\n    px42LoopCtrQGC20220313_DW.Subsystem_SubsysRanBC_m = 4;\r\n  }\r\n\r\n  px42LoopCtrQGC20220313_PrevZCX.Subsystem_Trig_ZCE_j = rtb_LogicalOperator;\r\n\r\n  // End of Outputs for SubSystem: '<S30>/Subsystem'\r\n\r\n  // Gain: '<S15>/Gain2' incorporates:\r\n  //   DiscreteIntegrator: '<S15>/Discrete-Time Integrator'\r\n\r\n  px42LoopCtrQGC20220313_B.rolldegree = px42LoopCtrQGC20220313_P.Gain2_Gain_c *\r\n    px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator_DSTATE;\r\n\r\n  // Switch: '<S15>/Switch' incorporates:\r\n  //   Constant: '<S15>/Constant3'\r\n  //   DataStoreRead: '<S15>/Data Store Read'\r\n  //   DataStoreRead: '<S15>/Data Store Read1'\r\n  //   DataStoreRead: '<S15>/Data Store Read2'\r\n  //   Gain: '<S15>/1//J'\r\n  //   Gain: '<S15>/k//J'\r\n  //   ZeroOrderHold: '<S15>/Zero-Order Hold1'\r\n\r\n  if (px42LoopCtrQGC20220313_DW.observer_flag) {\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_0 =\r\n      px42LoopCtrQGC20220313_P.uJ_Gain * px42LoopCtrQGC20220313_B.Add3;\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_1 =\r\n      px42LoopCtrQGC20220313_P.kJ_Gain * px42LoopCtrQGC20220313_DW.yaw_speed;\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_2 =\r\n      px42LoopCtrQGC20220313_DW.yaw;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_0 =\r\n      px42LoopCtrQGC20220313_P.Constant3_Value_d;\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_1 =\r\n      px42LoopCtrQGC20220313_P.Constant3_Value_d;\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_2 =\r\n      px42LoopCtrQGC20220313_P.Constant3_Value_d;\r\n  }\r\n\r\n  // End of Switch: '<S15>/Switch'\r\n\r\n  // Sum: '<S15>/Add1' incorporates:\r\n  //   DiscreteIntegrator: '<S15>/Discrete-Time Integrator'\r\n\r\n  px42LoopCtrQGC20220313_B.Abs6 =\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_2 -\r\n    px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator_DSTATE;\r\n\r\n  // Abs: '<S15>/Abs3' incorporates:\r\n  //   Abs: '<S15>/Abs4'\r\n  //   Abs: '<S15>/Abs5'\r\n  //   Abs: '<S15>/Abs6'\r\n\r\n  px42LoopCtrQGC20220313_B.z2_l = fabs(px42LoopCtrQGC20220313_B.Abs6);\r\n\r\n  // Sum: '<S15>/Add7' incorporates:\r\n  //   Constant: '<S15>/Constant1'\r\n  //   Sum: '<S15>/Add13'\r\n  //   Sum: '<S15>/Add18'\r\n\r\n  px42LoopCtrQGC20220313_B.lambda4_h =\r\n    px42LoopCtrQGC20220313_P.Constant1_Value_f + px42LoopCtrQGC20220313_B.Abs6;\r\n\r\n  // Sum: '<S15>/Add6' incorporates:\r\n  //   Constant: '<S15>/Constant1'\r\n  //   Sum: '<S15>/Add12'\r\n  //   Sum: '<S15>/Add17'\r\n\r\n  u0_tmp = px42LoopCtrQGC20220313_B.Abs6 -\r\n    px42LoopCtrQGC20220313_P.Constant1_Value_f;\r\n\r\n  // Saturate: '<S15>/Saturation10' incorporates:\r\n  //   Sum: '<S15>/Add7'\r\n\r\n  if (px42LoopCtrQGC20220313_B.lambda4_h >\r\n      px42LoopCtrQGC20220313_P.Saturation10_UpperSat) {\r\n    px42LoopCtrQGC20220313_B.Product6_a =\r\n      px42LoopCtrQGC20220313_P.Saturation10_UpperSat;\r\n  } else if (px42LoopCtrQGC20220313_B.lambda4_h <\r\n             px42LoopCtrQGC20220313_P.Saturation10_LowerSat) {\r\n    px42LoopCtrQGC20220313_B.Product6_a =\r\n      px42LoopCtrQGC20220313_P.Saturation10_LowerSat;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.Product6_a = px42LoopCtrQGC20220313_B.lambda4_h;\r\n  }\r\n\r\n  // End of Saturate: '<S15>/Saturation10'\r\n\r\n  // Saturate: '<S15>/Saturation11' incorporates:\r\n  //   Sum: '<S15>/Add6'\r\n\r\n  if (u0_tmp > px42LoopCtrQGC20220313_P.Saturation11_UpperSat) {\r\n    px42LoopCtrQGC20220313_B.Product5_l =\r\n      px42LoopCtrQGC20220313_P.Saturation11_UpperSat;\r\n  } else if (u0_tmp < px42LoopCtrQGC20220313_P.Saturation11_LowerSat) {\r\n    px42LoopCtrQGC20220313_B.Product5_l =\r\n      px42LoopCtrQGC20220313_P.Saturation11_LowerSat;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.Product5_l = u0_tmp;\r\n  }\r\n\r\n  // End of Saturate: '<S15>/Saturation11'\r\n\r\n  // Gain: '<S15>/Gain' incorporates:\r\n  //   Sum: '<S15>/Add8'\r\n\r\n  px42LoopCtrQGC20220313_B.roll_hat_e = (px42LoopCtrQGC20220313_B.Product6_a -\r\n    px42LoopCtrQGC20220313_B.Product5_l) * px42LoopCtrQGC20220313_P.Gain_Gain_ml;\r\n\r\n  // Fcn: '<S15>/Fcn3' incorporates:\r\n  //   Constant: '<S15>/Constant1'\r\n\r\n  if (px42LoopCtrQGC20220313_P.Constant1_Value_f < 0.0) {\r\n    px42LoopCtrQGC20220313_B.fcn5 = -rt_powd_snf\r\n      (-px42LoopCtrQGC20220313_P.Constant1_Value_f, -0.5);\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.fcn5 = rt_powd_snf\r\n      (px42LoopCtrQGC20220313_P.Constant1_Value_f, -0.5);\r\n  }\r\n\r\n  // End of Fcn: '<S15>/Fcn3'\r\n\r\n  // Product: '<S15>/Product3'\r\n  px42LoopCtrQGC20220313_B.Add3 = px42LoopCtrQGC20220313_B.fcn5 *\r\n    px42LoopCtrQGC20220313_B.roll_hat_e * px42LoopCtrQGC20220313_B.Abs6;\r\n\r\n  // Saturate: '<S15>/Saturation8'\r\n  if (px42LoopCtrQGC20220313_B.Abs6 >\r\n      px42LoopCtrQGC20220313_P.Saturation8_UpperSat) {\r\n    px42LoopCtrQGC20220313_B.Product2_d =\r\n      px42LoopCtrQGC20220313_P.Saturation8_UpperSat;\r\n  } else if (px42LoopCtrQGC20220313_B.Abs6 <\r\n             px42LoopCtrQGC20220313_P.Saturation8_LowerSat) {\r\n    px42LoopCtrQGC20220313_B.Product2_d =\r\n      px42LoopCtrQGC20220313_P.Saturation8_LowerSat;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.Product2_d = px42LoopCtrQGC20220313_B.Abs6;\r\n  }\r\n\r\n  // End of Saturate: '<S15>/Saturation8'\r\n\r\n  // Product: '<S15>/Product4' incorporates:\r\n  //   Abs: '<S15>/Abs3'\r\n  //   Constant: '<S15>/Constant2'\r\n  //   Fcn: '<S15>/Fcn4'\r\n  //   Sum: '<S15>/Add10'\r\n\r\n  px42LoopCtrQGC20220313_B.Product4 = rt_powd_snf(px42LoopCtrQGC20220313_B.z2_l,\r\n    0.5) * px42LoopCtrQGC20220313_B.Product2_d *\r\n    (px42LoopCtrQGC20220313_P.Constant2_Value -\r\n     px42LoopCtrQGC20220313_B.roll_hat_e);\r\n\r\n  // Saturate: '<S15>/Saturation13'\r\n  if (px42LoopCtrQGC20220313_B.lambda4_h >\r\n      px42LoopCtrQGC20220313_P.Saturation13_UpperSat) {\r\n    px42LoopCtrQGC20220313_B.Product6_a =\r\n      px42LoopCtrQGC20220313_P.Saturation13_UpperSat;\r\n  } else if (px42LoopCtrQGC20220313_B.lambda4_h <\r\n             px42LoopCtrQGC20220313_P.Saturation13_LowerSat) {\r\n    px42LoopCtrQGC20220313_B.Product6_a =\r\n      px42LoopCtrQGC20220313_P.Saturation13_LowerSat;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.Product6_a = px42LoopCtrQGC20220313_B.lambda4_h;\r\n  }\r\n\r\n  // End of Saturate: '<S15>/Saturation13'\r\n\r\n  // Saturate: '<S15>/Saturation9'\r\n  if (u0_tmp > px42LoopCtrQGC20220313_P.Saturation9_UpperSat) {\r\n    px42LoopCtrQGC20220313_B.Product5_l =\r\n      px42LoopCtrQGC20220313_P.Saturation9_UpperSat;\r\n  } else if (u0_tmp < px42LoopCtrQGC20220313_P.Saturation9_LowerSat) {\r\n    px42LoopCtrQGC20220313_B.Product5_l =\r\n      px42LoopCtrQGC20220313_P.Saturation9_LowerSat;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.Product5_l = u0_tmp;\r\n  }\r\n\r\n  // End of Saturate: '<S15>/Saturation9'\r\n\r\n  // Gain: '<S15>/Gain1' incorporates:\r\n  //   Sum: '<S15>/Add14'\r\n\r\n  px42LoopCtrQGC20220313_B.roll_hat_e = (px42LoopCtrQGC20220313_B.Product6_a -\r\n    px42LoopCtrQGC20220313_B.Product5_l) * px42LoopCtrQGC20220313_P.Gain1_Gain_a;\r\n\r\n  // Fcn: '<S15>/Fcn6' incorporates:\r\n  //   Constant: '<S15>/Constant1'\r\n\r\n  if (px42LoopCtrQGC20220313_P.Constant1_Value_f < 0.0) {\r\n    px42LoopCtrQGC20220313_B.fcn5 = -rt_powd_snf\r\n      (-px42LoopCtrQGC20220313_P.Constant1_Value_f, -0.9375);\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.fcn5 = rt_powd_snf\r\n      (px42LoopCtrQGC20220313_P.Constant1_Value_f, -0.9375);\r\n  }\r\n\r\n  // End of Fcn: '<S15>/Fcn6'\r\n\r\n  // Product: '<S15>/Product6'\r\n  px42LoopCtrQGC20220313_B.Product6 = px42LoopCtrQGC20220313_B.fcn5 *\r\n    px42LoopCtrQGC20220313_B.roll_hat_e * px42LoopCtrQGC20220313_B.Abs6;\r\n\r\n  // Saturate: '<S15>/Saturation12'\r\n  if (px42LoopCtrQGC20220313_B.Abs6 >\r\n      px42LoopCtrQGC20220313_P.Saturation12_UpperSat) {\r\n    px42LoopCtrQGC20220313_B.Product2_d =\r\n      px42LoopCtrQGC20220313_P.Saturation12_UpperSat;\r\n  } else if (px42LoopCtrQGC20220313_B.Abs6 <\r\n             px42LoopCtrQGC20220313_P.Saturation12_LowerSat) {\r\n    px42LoopCtrQGC20220313_B.Product2_d =\r\n      px42LoopCtrQGC20220313_P.Saturation12_LowerSat;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.Product2_d = px42LoopCtrQGC20220313_B.Abs6;\r\n  }\r\n\r\n  // End of Saturate: '<S15>/Saturation12'\r\n\r\n  // Product: '<S15>/Product5' incorporates:\r\n  //   Constant: '<S15>/Constant4'\r\n  //   Fcn: '<S15>/Fcn5'\r\n  //   Sum: '<S15>/Add11'\r\n\r\n  px42LoopCtrQGC20220313_B.roll_hat = rt_powd_snf(px42LoopCtrQGC20220313_B.z2_l,\r\n    0.0625) * px42LoopCtrQGC20220313_B.Product2_d *\r\n    (px42LoopCtrQGC20220313_P.Constant4_Value -\r\n     px42LoopCtrQGC20220313_B.roll_hat_e);\r\n\r\n  // Saturate: '<S15>/Saturation16'\r\n  if (px42LoopCtrQGC20220313_B.lambda4_h >\r\n      px42LoopCtrQGC20220313_P.Saturation16_UpperSat) {\r\n    px42LoopCtrQGC20220313_B.lambda4_h =\r\n      px42LoopCtrQGC20220313_P.Saturation16_UpperSat;\r\n  } else if (px42LoopCtrQGC20220313_B.lambda4_h <\r\n             px42LoopCtrQGC20220313_P.Saturation16_LowerSat) {\r\n    px42LoopCtrQGC20220313_B.lambda4_h =\r\n      px42LoopCtrQGC20220313_P.Saturation16_LowerSat;\r\n  }\r\n\r\n  // End of Saturate: '<S15>/Saturation16'\r\n\r\n  // Saturate: '<S15>/Saturation14'\r\n  if (u0_tmp > px42LoopCtrQGC20220313_P.Saturation14_UpperSat) {\r\n    u0_tmp = px42LoopCtrQGC20220313_P.Saturation14_UpperSat;\r\n  } else if (u0_tmp < px42LoopCtrQGC20220313_P.Saturation14_LowerSat) {\r\n    u0_tmp = px42LoopCtrQGC20220313_P.Saturation14_LowerSat;\r\n  }\r\n\r\n  // End of Saturate: '<S15>/Saturation14'\r\n\r\n  // Gain: '<S15>/Gain3' incorporates:\r\n  //   Sum: '<S15>/Add19'\r\n\r\n  px42LoopCtrQGC20220313_B.roll_hat_e = (px42LoopCtrQGC20220313_B.lambda4_h -\r\n    u0_tmp) * px42LoopCtrQGC20220313_P.Gain3_Gain;\r\n\r\n  // Saturate: '<S15>/Saturation1'\r\n  if (px42LoopCtrQGC20220313_B.Abs6 >\r\n      px42LoopCtrQGC20220313_P.Saturation1_UpperSat) {\r\n    px42LoopCtrQGC20220313_B.Product2_d =\r\n      px42LoopCtrQGC20220313_P.Saturation1_UpperSat;\r\n  } else if (px42LoopCtrQGC20220313_B.Abs6 <\r\n             px42LoopCtrQGC20220313_P.Saturation1_LowerSat) {\r\n    px42LoopCtrQGC20220313_B.Product2_d =\r\n      px42LoopCtrQGC20220313_P.Saturation1_LowerSat;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.Product2_d = px42LoopCtrQGC20220313_B.Abs6;\r\n  }\r\n\r\n  // End of Saturate: '<S15>/Saturation1'\r\n\r\n  // Fcn: '<S15>/Fcn7' incorporates:\r\n  //   Constant: '<S15>/Constant1'\r\n\r\n  if (px42LoopCtrQGC20220313_P.Constant1_Value_f < 0.0) {\r\n    px42LoopCtrQGC20220313_B.fcn5 = -rt_powd_snf\r\n      (-px42LoopCtrQGC20220313_P.Constant1_Value_f, -0.75);\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.fcn5 = rt_powd_snf\r\n      (px42LoopCtrQGC20220313_P.Constant1_Value_f, -0.75);\r\n  }\r\n\r\n  // End of Fcn: '<S15>/Fcn7'\r\n\r\n  // Saturate: '<S15>/Saturation15'\r\n  if (px42LoopCtrQGC20220313_B.Abs6 >\r\n      px42LoopCtrQGC20220313_P.Saturation15_UpperSat) {\r\n    px42LoopCtrQGC20220313_B.lambda1_a =\r\n      px42LoopCtrQGC20220313_P.Saturation15_UpperSat;\r\n  } else if (px42LoopCtrQGC20220313_B.Abs6 <\r\n             px42LoopCtrQGC20220313_P.Saturation15_LowerSat) {\r\n    px42LoopCtrQGC20220313_B.lambda1_a =\r\n      px42LoopCtrQGC20220313_P.Saturation15_LowerSat;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.lambda1_a = px42LoopCtrQGC20220313_B.Abs6;\r\n  }\r\n\r\n  // End of Saturate: '<S15>/Saturation15'\r\n\r\n  // Sum: '<S15>/Add2' incorporates:\r\n  //   Constant: '<S15>/Constant6'\r\n  //   DiscreteIntegrator: '<S15>/Discrete-Time Integrator3'\r\n  //   Fcn: '<S15>/Fcn8'\r\n  //   Gain: '<S15>/Gain6'\r\n  //   Gain: '<S15>/l2'\r\n  //   Gain: '<S15>/lambda2'\r\n  //   Product: '<S15>/Product7'\r\n  //   Product: '<S15>/Product8'\r\n  //   Sum: '<S15>/Add16'\r\n  //   Sum: '<S15>/Add20'\r\n  //   Sum: '<S15>/Add3'\r\n\r\n  px42LoopCtrQGC20220313_B.z2_l = (((px42LoopCtrQGC20220313_P.lambda2_Gain *\r\n    px42LoopCtrQGC20220313_B.Abs6 + px42LoopCtrQGC20220313_P.l2_Gain *\r\n    px42LoopCtrQGC20220313_B.Product2_d) +\r\n    (px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_0 -\r\n     px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_1)) +\r\n    px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator3_DSTATE) +\r\n    (px42LoopCtrQGC20220313_B.fcn5 * px42LoopCtrQGC20220313_B.roll_hat_e *\r\n     px42LoopCtrQGC20220313_B.Abs6 + rt_powd_snf(px42LoopCtrQGC20220313_B.z2_l,\r\n      0.25) * px42LoopCtrQGC20220313_B.lambda1_a *\r\n     (px42LoopCtrQGC20220313_P.Constant6_Value -\r\n      px42LoopCtrQGC20220313_B.roll_hat_e)) *\r\n    px42LoopCtrQGC20220313_P.Gain6_Gain;\r\n\r\n  // Gain: '<S13>/Gain2' incorporates:\r\n  //   DiscreteIntegrator: '<S13>/Discrete-Time Integrator'\r\n\r\n  px42LoopCtrQGC20220313_B.rolldegree_l = px42LoopCtrQGC20220313_P.Gain2_Gain_g *\r\n    px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator_DSTATE_p;\r\n\r\n  // Switch: '<S13>/Switch' incorporates:\r\n  //   Constant: '<S13>/Constant3'\r\n  //   DataStoreRead: '<S13>/Data Store Read'\r\n  //   DataStoreRead: '<S13>/Data Store Read1'\r\n  //   DataStoreRead: '<S13>/Data Store Read2'\r\n  //   DataStoreWrite: '<Root>/Data Store Write12'\r\n  //   Gain: '<S13>/1//J'\r\n  //   Gain: '<S13>/k//J'\r\n  //   ZeroOrderHold: '<S13>/Zero-Order Hold1'\r\n\r\n  if (px42LoopCtrQGC20220313_DW.observer_flag) {\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_0 =\r\n      px42LoopCtrQGC20220313_P.uJ_Gain_p *\r\n      px42LoopCtrQGC20220313_B.DataStoreRead25;\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_1 =\r\n      px42LoopCtrQGC20220313_P.kJ_Gain_c * px42LoopCtrQGC20220313_DW.pitch_speed;\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_2 =\r\n      px42LoopCtrQGC20220313_DW.pitch;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_0 =\r\n      px42LoopCtrQGC20220313_P.Constant3_Value;\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_1 =\r\n      px42LoopCtrQGC20220313_P.Constant3_Value;\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_2 =\r\n      px42LoopCtrQGC20220313_P.Constant3_Value;\r\n  }\r\n\r\n  // End of Switch: '<S13>/Switch'\r\n\r\n  // Sum: '<S13>/Add1' incorporates:\r\n  //   DiscreteIntegrator: '<S13>/Discrete-Time Integrator'\r\n\r\n  px42LoopCtrQGC20220313_B.Product2_d =\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_2 -\r\n    px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator_DSTATE_p;\r\n\r\n  // Abs: '<S13>/Abs3' incorporates:\r\n  //   Abs: '<S13>/Abs4'\r\n  //   Abs: '<S13>/Abs5'\r\n  //   Abs: '<S13>/Abs6'\r\n\r\n  px42LoopCtrQGC20220313_B.Add2_o = fabs(px42LoopCtrQGC20220313_B.Product2_d);\r\n\r\n  // Saturate: '<S13>/Saturation'\r\n  if (px42LoopCtrQGC20220313_B.Product2_d >\r\n      px42LoopCtrQGC20220313_P.Saturation_UpperSat_n) {\r\n    px42LoopCtrQGC20220313_B.roll_hat_e =\r\n      px42LoopCtrQGC20220313_P.Saturation_UpperSat_n;\r\n  } else if (px42LoopCtrQGC20220313_B.Product2_d <\r\n             px42LoopCtrQGC20220313_P.Saturation_LowerSat_g) {\r\n    px42LoopCtrQGC20220313_B.roll_hat_e =\r\n      px42LoopCtrQGC20220313_P.Saturation_LowerSat_g;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.roll_hat_e = px42LoopCtrQGC20220313_B.Product2_d;\r\n  }\r\n\r\n  // End of Saturate: '<S13>/Saturation'\r\n\r\n  // Gain: '<S13>/lambda1'\r\n  px42LoopCtrQGC20220313_B.lambda1_a = px42LoopCtrQGC20220313_P.lambda1_Gain_a *\r\n    px42LoopCtrQGC20220313_B.Product2_d;\r\n\r\n  // Sum: '<S13>/Add7' incorporates:\r\n  //   Constant: '<S13>/Constant1'\r\n  //   Sum: '<S13>/Add13'\r\n  //   Sum: '<S13>/Add18'\r\n\r\n  px42LoopCtrQGC20220313_B.lambda4_h =\r\n    px42LoopCtrQGC20220313_P.Constant1_Value_j +\r\n    px42LoopCtrQGC20220313_B.Product2_d;\r\n\r\n  // Sum: '<S13>/Add6' incorporates:\r\n  //   Constant: '<S13>/Constant1'\r\n  //   Sum: '<S13>/Add12'\r\n  //   Sum: '<S13>/Add17'\r\n\r\n  u0_tmp = px42LoopCtrQGC20220313_B.Product2_d -\r\n    px42LoopCtrQGC20220313_P.Constant1_Value_j;\r\n\r\n  // Saturate: '<S13>/Saturation10' incorporates:\r\n  //   Sum: '<S13>/Add7'\r\n\r\n  if (px42LoopCtrQGC20220313_B.lambda4_h >\r\n      px42LoopCtrQGC20220313_P.Saturation10_UpperSat_o) {\r\n    px42LoopCtrQGC20220313_B.Product6_a =\r\n      px42LoopCtrQGC20220313_P.Saturation10_UpperSat_o;\r\n  } else if (px42LoopCtrQGC20220313_B.lambda4_h <\r\n             px42LoopCtrQGC20220313_P.Saturation10_LowerSat_b) {\r\n    px42LoopCtrQGC20220313_B.Product6_a =\r\n      px42LoopCtrQGC20220313_P.Saturation10_LowerSat_b;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.Product6_a = px42LoopCtrQGC20220313_B.lambda4_h;\r\n  }\r\n\r\n  // End of Saturate: '<S13>/Saturation10'\r\n\r\n  // Saturate: '<S13>/Saturation11' incorporates:\r\n  //   Sum: '<S13>/Add6'\r\n\r\n  if (u0_tmp > px42LoopCtrQGC20220313_P.Saturation11_UpperSat_p) {\r\n    px42LoopCtrQGC20220313_B.Product5_l =\r\n      px42LoopCtrQGC20220313_P.Saturation11_UpperSat_p;\r\n  } else if (u0_tmp < px42LoopCtrQGC20220313_P.Saturation11_LowerSat_i) {\r\n    px42LoopCtrQGC20220313_B.Product5_l =\r\n      px42LoopCtrQGC20220313_P.Saturation11_LowerSat_i;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.Product5_l = u0_tmp;\r\n  }\r\n\r\n  // End of Saturate: '<S13>/Saturation11'\r\n\r\n  // Gain: '<S13>/Gain' incorporates:\r\n  //   Sum: '<S13>/Add8'\r\n\r\n  px42LoopCtrQGC20220313_B.roll_hat_k = (px42LoopCtrQGC20220313_B.Product6_a -\r\n    px42LoopCtrQGC20220313_B.Product5_l) * px42LoopCtrQGC20220313_P.Gain_Gain_g;\r\n\r\n  // Fcn: '<S13>/Fcn3' incorporates:\r\n  //   Constant: '<S13>/Constant1'\r\n\r\n  if (px42LoopCtrQGC20220313_P.Constant1_Value_j < 0.0) {\r\n    px42LoopCtrQGC20220313_B.fcn5 = -rt_powd_snf\r\n      (-px42LoopCtrQGC20220313_P.Constant1_Value_j, -0.5);\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.fcn5 = rt_powd_snf\r\n      (px42LoopCtrQGC20220313_P.Constant1_Value_j, -0.5);\r\n  }\r\n\r\n  // End of Fcn: '<S13>/Fcn3'\r\n\r\n  // Product: '<S13>/Product3'\r\n  px42LoopCtrQGC20220313_B.Product3_a = px42LoopCtrQGC20220313_B.fcn5 *\r\n    px42LoopCtrQGC20220313_B.roll_hat_k * px42LoopCtrQGC20220313_B.Product2_d;\r\n\r\n  // Saturate: '<S13>/Saturation8'\r\n  if (px42LoopCtrQGC20220313_B.Product2_d >\r\n      px42LoopCtrQGC20220313_P.Saturation8_UpperSat_g) {\r\n    px42LoopCtrQGC20220313_B.lambda4_n =\r\n      px42LoopCtrQGC20220313_P.Saturation8_UpperSat_g;\r\n  } else if (px42LoopCtrQGC20220313_B.Product2_d <\r\n             px42LoopCtrQGC20220313_P.Saturation8_LowerSat_g) {\r\n    px42LoopCtrQGC20220313_B.lambda4_n =\r\n      px42LoopCtrQGC20220313_P.Saturation8_LowerSat_g;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.lambda4_n = px42LoopCtrQGC20220313_B.Product2_d;\r\n  }\r\n\r\n  // End of Saturate: '<S13>/Saturation8'\r\n\r\n  // Product: '<S13>/Product4' incorporates:\r\n  //   Abs: '<S13>/Abs3'\r\n  //   Constant: '<S13>/Constant2'\r\n  //   Fcn: '<S13>/Fcn4'\r\n  //   Sum: '<S13>/Add10'\r\n\r\n  px42LoopCtrQGC20220313_B.Product4_k = rt_powd_snf\r\n    (px42LoopCtrQGC20220313_B.Add2_o, 0.5) * px42LoopCtrQGC20220313_B.lambda4_n *\r\n    (px42LoopCtrQGC20220313_P.Constant2_Value_h -\r\n     px42LoopCtrQGC20220313_B.roll_hat_k);\r\n\r\n  // Saturate: '<S13>/Saturation13'\r\n  if (px42LoopCtrQGC20220313_B.lambda4_h >\r\n      px42LoopCtrQGC20220313_P.Saturation13_UpperSat_i) {\r\n    px42LoopCtrQGC20220313_B.Product6_a =\r\n      px42LoopCtrQGC20220313_P.Saturation13_UpperSat_i;\r\n  } else if (px42LoopCtrQGC20220313_B.lambda4_h <\r\n             px42LoopCtrQGC20220313_P.Saturation13_LowerSat_c) {\r\n    px42LoopCtrQGC20220313_B.Product6_a =\r\n      px42LoopCtrQGC20220313_P.Saturation13_LowerSat_c;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.Product6_a = px42LoopCtrQGC20220313_B.lambda4_h;\r\n  }\r\n\r\n  // End of Saturate: '<S13>/Saturation13'\r\n\r\n  // Saturate: '<S13>/Saturation9'\r\n  if (u0_tmp > px42LoopCtrQGC20220313_P.Saturation9_UpperSat_i) {\r\n    px42LoopCtrQGC20220313_B.Product5_l =\r\n      px42LoopCtrQGC20220313_P.Saturation9_UpperSat_i;\r\n  } else if (u0_tmp < px42LoopCtrQGC20220313_P.Saturation9_LowerSat_c) {\r\n    px42LoopCtrQGC20220313_B.Product5_l =\r\n      px42LoopCtrQGC20220313_P.Saturation9_LowerSat_c;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.Product5_l = u0_tmp;\r\n  }\r\n\r\n  // End of Saturate: '<S13>/Saturation9'\r\n\r\n  // Gain: '<S13>/Gain1' incorporates:\r\n  //   Sum: '<S13>/Add14'\r\n\r\n  px42LoopCtrQGC20220313_B.roll_hat_k = (px42LoopCtrQGC20220313_B.Product6_a -\r\n    px42LoopCtrQGC20220313_B.Product5_l) * px42LoopCtrQGC20220313_P.Gain1_Gain_d;\r\n\r\n  // Fcn: '<S13>/Fcn6' incorporates:\r\n  //   Constant: '<S13>/Constant1'\r\n\r\n  if (px42LoopCtrQGC20220313_P.Constant1_Value_j < 0.0) {\r\n    px42LoopCtrQGC20220313_B.fcn5 = -rt_powd_snf\r\n      (-px42LoopCtrQGC20220313_P.Constant1_Value_j, -0.9375);\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.fcn5 = rt_powd_snf\r\n      (px42LoopCtrQGC20220313_P.Constant1_Value_j, -0.9375);\r\n  }\r\n\r\n  // End of Fcn: '<S13>/Fcn6'\r\n\r\n  // Product: '<S13>/Product6'\r\n  px42LoopCtrQGC20220313_B.Product6_i = px42LoopCtrQGC20220313_B.fcn5 *\r\n    px42LoopCtrQGC20220313_B.roll_hat_k * px42LoopCtrQGC20220313_B.Product2_d;\r\n\r\n  // Saturate: '<S13>/Saturation12'\r\n  if (px42LoopCtrQGC20220313_B.Product2_d >\r\n      px42LoopCtrQGC20220313_P.Saturation12_UpperSat_c) {\r\n    px42LoopCtrQGC20220313_B.lambda4_n =\r\n      px42LoopCtrQGC20220313_P.Saturation12_UpperSat_c;\r\n  } else if (px42LoopCtrQGC20220313_B.Product2_d <\r\n             px42LoopCtrQGC20220313_P.Saturation12_LowerSat_b) {\r\n    px42LoopCtrQGC20220313_B.lambda4_n =\r\n      px42LoopCtrQGC20220313_P.Saturation12_LowerSat_b;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.lambda4_n = px42LoopCtrQGC20220313_B.Product2_d;\r\n  }\r\n\r\n  // End of Saturate: '<S13>/Saturation12'\r\n\r\n  // Product: '<S13>/Product5' incorporates:\r\n  //   Constant: '<S13>/Constant4'\r\n  //   Fcn: '<S13>/Fcn5'\r\n  //   Sum: '<S13>/Add11'\r\n\r\n  px42LoopCtrQGC20220313_B.Product5_b = rt_powd_snf\r\n    (px42LoopCtrQGC20220313_B.Add2_o, 0.0625) *\r\n    px42LoopCtrQGC20220313_B.lambda4_n *\r\n    (px42LoopCtrQGC20220313_P.Constant4_Value_n -\r\n     px42LoopCtrQGC20220313_B.roll_hat_k);\r\n\r\n  // Saturate: '<S13>/Saturation16'\r\n  if (px42LoopCtrQGC20220313_B.lambda4_h >\r\n      px42LoopCtrQGC20220313_P.Saturation16_UpperSat_l) {\r\n    px42LoopCtrQGC20220313_B.lambda4_h =\r\n      px42LoopCtrQGC20220313_P.Saturation16_UpperSat_l;\r\n  } else if (px42LoopCtrQGC20220313_B.lambda4_h <\r\n             px42LoopCtrQGC20220313_P.Saturation16_LowerSat_g) {\r\n    px42LoopCtrQGC20220313_B.lambda4_h =\r\n      px42LoopCtrQGC20220313_P.Saturation16_LowerSat_g;\r\n  }\r\n\r\n  // End of Saturate: '<S13>/Saturation16'\r\n\r\n  // Saturate: '<S13>/Saturation14'\r\n  if (u0_tmp > px42LoopCtrQGC20220313_P.Saturation14_UpperSat_l) {\r\n    u0_tmp = px42LoopCtrQGC20220313_P.Saturation14_UpperSat_l;\r\n  } else if (u0_tmp < px42LoopCtrQGC20220313_P.Saturation14_LowerSat_b) {\r\n    u0_tmp = px42LoopCtrQGC20220313_P.Saturation14_LowerSat_b;\r\n  }\r\n\r\n  // End of Saturate: '<S13>/Saturation14'\r\n\r\n  // Gain: '<S13>/Gain3' incorporates:\r\n  //   Sum: '<S13>/Add19'\r\n\r\n  px42LoopCtrQGC20220313_B.roll_hat_k = (px42LoopCtrQGC20220313_B.lambda4_h -\r\n    u0_tmp) * px42LoopCtrQGC20220313_P.Gain3_Gain_l;\r\n\r\n  // Saturate: '<S13>/Saturation1'\r\n  if (px42LoopCtrQGC20220313_B.Product2_d >\r\n      px42LoopCtrQGC20220313_P.Saturation1_UpperSat_a) {\r\n    px42LoopCtrQGC20220313_B.lambda4_n =\r\n      px42LoopCtrQGC20220313_P.Saturation1_UpperSat_a;\r\n  } else if (px42LoopCtrQGC20220313_B.Product2_d <\r\n             px42LoopCtrQGC20220313_P.Saturation1_LowerSat_i) {\r\n    px42LoopCtrQGC20220313_B.lambda4_n =\r\n      px42LoopCtrQGC20220313_P.Saturation1_LowerSat_i;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.lambda4_n = px42LoopCtrQGC20220313_B.Product2_d;\r\n  }\r\n\r\n  // End of Saturate: '<S13>/Saturation1'\r\n\r\n  // Fcn: '<S13>/Fcn7' incorporates:\r\n  //   Constant: '<S13>/Constant1'\r\n\r\n  if (px42LoopCtrQGC20220313_P.Constant1_Value_j < 0.0) {\r\n    px42LoopCtrQGC20220313_B.fcn5 = -rt_powd_snf\r\n      (-px42LoopCtrQGC20220313_P.Constant1_Value_j, -0.75);\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.fcn5 = rt_powd_snf\r\n      (px42LoopCtrQGC20220313_P.Constant1_Value_j, -0.75);\r\n  }\r\n\r\n  // End of Fcn: '<S13>/Fcn7'\r\n\r\n  // Saturate: '<S13>/Saturation15'\r\n  if (px42LoopCtrQGC20220313_B.Product2_d >\r\n      px42LoopCtrQGC20220313_P.Saturation15_UpperSat_j) {\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_2 =\r\n      px42LoopCtrQGC20220313_P.Saturation15_UpperSat_j;\r\n  } else if (px42LoopCtrQGC20220313_B.Product2_d <\r\n             px42LoopCtrQGC20220313_P.Saturation15_LowerSat_k) {\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_2 =\r\n      px42LoopCtrQGC20220313_P.Saturation15_LowerSat_k;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_2 =\r\n      px42LoopCtrQGC20220313_B.Product2_d;\r\n  }\r\n\r\n  // End of Saturate: '<S13>/Saturation15'\r\n\r\n  // Sum: '<S13>/Add2' incorporates:\r\n  //   Constant: '<S13>/Constant6'\r\n  //   DiscreteIntegrator: '<S13>/Discrete-Time Integrator3'\r\n  //   Fcn: '<S13>/Fcn8'\r\n  //   Gain: '<S13>/Gain6'\r\n  //   Gain: '<S13>/l2'\r\n  //   Gain: '<S13>/lambda2'\r\n  //   Product: '<S13>/Product7'\r\n  //   Product: '<S13>/Product8'\r\n  //   Sum: '<S13>/Add16'\r\n  //   Sum: '<S13>/Add20'\r\n  //   Sum: '<S13>/Add3'\r\n\r\n  px42LoopCtrQGC20220313_B.Add2_o = (((px42LoopCtrQGC20220313_P.lambda2_Gain_j *\r\n    px42LoopCtrQGC20220313_B.Product2_d + px42LoopCtrQGC20220313_P.l2_Gain_l *\r\n    px42LoopCtrQGC20220313_B.lambda4_n) +\r\n    (px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_0 -\r\n     px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_1)) +\r\n    px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator3_DSTAT_a) +\r\n    (px42LoopCtrQGC20220313_B.fcn5 * px42LoopCtrQGC20220313_B.roll_hat_k *\r\n     px42LoopCtrQGC20220313_B.Product2_d + rt_powd_snf\r\n     (px42LoopCtrQGC20220313_B.Add2_o, 0.25) *\r\n     px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_2 *\r\n     (px42LoopCtrQGC20220313_P.Constant6_Value_o -\r\n      px42LoopCtrQGC20220313_B.roll_hat_k)) *\r\n    px42LoopCtrQGC20220313_P.Gain6_Gain_e;\r\n\r\n  // Saturate: '<S13>/Saturation3'\r\n  if (px42LoopCtrQGC20220313_B.Product2_d >\r\n      px42LoopCtrQGC20220313_P.Saturation3_UpperSat_m) {\r\n    px42LoopCtrQGC20220313_B.roll_hat_k =\r\n      px42LoopCtrQGC20220313_P.Saturation3_UpperSat_m;\r\n  } else if (px42LoopCtrQGC20220313_B.Product2_d <\r\n             px42LoopCtrQGC20220313_P.Saturation3_LowerSat_i) {\r\n    px42LoopCtrQGC20220313_B.roll_hat_k =\r\n      px42LoopCtrQGC20220313_P.Saturation3_LowerSat_i;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.roll_hat_k = px42LoopCtrQGC20220313_B.Product2_d;\r\n  }\r\n\r\n  // End of Saturate: '<S13>/Saturation3'\r\n\r\n  // Gain: '<S13>/lambda4'\r\n  px42LoopCtrQGC20220313_B.lambda4_n = px42LoopCtrQGC20220313_P.lambda4_Gain_a *\r\n    px42LoopCtrQGC20220313_B.Product2_d;\r\n\r\n  // Gain: '<S14>/Gain2' incorporates:\r\n  //   DiscreteIntegrator: '<S14>/Discrete-Time Integrator'\r\n\r\n  px42LoopCtrQGC20220313_B.rolldegree_c = px42LoopCtrQGC20220313_P.Gain2_Gain_p *\r\n    px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator_DSTATE_f;\r\n\r\n  // Switch: '<S14>/Switch' incorporates:\r\n  //   Constant: '<S14>/Constant3'\r\n  //   DataStoreRead: '<S14>/Data Store Read'\r\n  //   DataStoreRead: '<S14>/Data Store Read1'\r\n  //   DataStoreRead: '<S14>/Data Store Read2'\r\n  //   DataStoreWrite: '<Root>/Data Store Write13'\r\n  //   Gain: '<S14>/1//J'\r\n  //   Gain: '<S14>/k//J'\r\n  //   ZeroOrderHold: '<S14>/Zero-Order Hold1'\r\n\r\n  if (px42LoopCtrQGC20220313_DW.observer_flag) {\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_0 =\r\n      px42LoopCtrQGC20220313_P.uJ_Gain_g *\r\n      px42LoopCtrQGC20220313_B.DataStoreRead26;\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_1 =\r\n      px42LoopCtrQGC20220313_P.kJ_Gain_p * px42LoopCtrQGC20220313_DW.roll_speed;\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_2 =\r\n      px42LoopCtrQGC20220313_DW.roll;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_0 =\r\n      px42LoopCtrQGC20220313_P.Constant3_Value_a;\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_1 =\r\n      px42LoopCtrQGC20220313_P.Constant3_Value_a;\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_2 =\r\n      px42LoopCtrQGC20220313_P.Constant3_Value_a;\r\n  }\r\n\r\n  // End of Switch: '<S14>/Switch'\r\n\r\n  // Sum: '<S14>/Add1' incorporates:\r\n  //   DiscreteIntegrator: '<S14>/Discrete-Time Integrator'\r\n\r\n  px42LoopCtrQGC20220313_B.Product1_p =\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_2 -\r\n    px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator_DSTATE_f;\r\n\r\n  // Abs: '<S14>/Abs3' incorporates:\r\n  //   Abs: '<S14>/Abs4'\r\n  //   Abs: '<S14>/Abs5'\r\n  //   Abs: '<S14>/Abs6'\r\n\r\n  px42LoopCtrQGC20220313_B.Product2_d = fabs(px42LoopCtrQGC20220313_B.Product1_p);\r\n\r\n  // Saturate: '<S14>/Saturation'\r\n  if (px42LoopCtrQGC20220313_B.Product1_p >\r\n      px42LoopCtrQGC20220313_P.Saturation_UpperSat_n1) {\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_2 =\r\n      px42LoopCtrQGC20220313_P.Saturation_UpperSat_n1;\r\n  } else if (px42LoopCtrQGC20220313_B.Product1_p <\r\n             px42LoopCtrQGC20220313_P.Saturation_LowerSat_c) {\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_2 =\r\n      px42LoopCtrQGC20220313_P.Saturation_LowerSat_c;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_2 =\r\n      px42LoopCtrQGC20220313_B.Product1_p;\r\n  }\r\n\r\n  // End of Saturate: '<S14>/Saturation'\r\n\r\n  // Gain: '<S14>/lambda1'\r\n  px42LoopCtrQGC20220313_B.lambda1_e = px42LoopCtrQGC20220313_P.lambda1_Gain_g *\r\n    px42LoopCtrQGC20220313_B.Product1_p;\r\n\r\n  // Sum: '<S14>/Add7' incorporates:\r\n  //   Constant: '<S14>/Constant1'\r\n  //   Sum: '<S14>/Add13'\r\n  //   Sum: '<S14>/Add18'\r\n\r\n  px42LoopCtrQGC20220313_B.lambda4_h =\r\n    px42LoopCtrQGC20220313_P.Constant1_Value_ac +\r\n    px42LoopCtrQGC20220313_B.Product1_p;\r\n\r\n  // Sum: '<S14>/Add6' incorporates:\r\n  //   Constant: '<S14>/Constant1'\r\n  //   Sum: '<S14>/Add12'\r\n  //   Sum: '<S14>/Add17'\r\n\r\n  u0_tmp = px42LoopCtrQGC20220313_B.Product1_p -\r\n    px42LoopCtrQGC20220313_P.Constant1_Value_ac;\r\n\r\n  // Saturate: '<S14>/Saturation10' incorporates:\r\n  //   Sum: '<S14>/Add7'\r\n\r\n  if (px42LoopCtrQGC20220313_B.lambda4_h >\r\n      px42LoopCtrQGC20220313_P.Saturation10_UpperSat_a) {\r\n    px42LoopCtrQGC20220313_B.Product6_a =\r\n      px42LoopCtrQGC20220313_P.Saturation10_UpperSat_a;\r\n  } else if (px42LoopCtrQGC20220313_B.lambda4_h <\r\n             px42LoopCtrQGC20220313_P.Saturation10_LowerSat_l) {\r\n    px42LoopCtrQGC20220313_B.Product6_a =\r\n      px42LoopCtrQGC20220313_P.Saturation10_LowerSat_l;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.Product6_a = px42LoopCtrQGC20220313_B.lambda4_h;\r\n  }\r\n\r\n  // End of Saturate: '<S14>/Saturation10'\r\n\r\n  // Saturate: '<S14>/Saturation11' incorporates:\r\n  //   Sum: '<S14>/Add6'\r\n\r\n  if (u0_tmp > px42LoopCtrQGC20220313_P.Saturation11_UpperSat_a) {\r\n    px42LoopCtrQGC20220313_B.Product5_l =\r\n      px42LoopCtrQGC20220313_P.Saturation11_UpperSat_a;\r\n  } else if (u0_tmp < px42LoopCtrQGC20220313_P.Saturation11_LowerSat_a) {\r\n    px42LoopCtrQGC20220313_B.Product5_l =\r\n      px42LoopCtrQGC20220313_P.Saturation11_LowerSat_a;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.Product5_l = u0_tmp;\r\n  }\r\n\r\n  // End of Saturate: '<S14>/Saturation11'\r\n\r\n  // Gain: '<S14>/Gain' incorporates:\r\n  //   Sum: '<S14>/Add8'\r\n\r\n  px42LoopCtrQGC20220313_B.Product3_i = (px42LoopCtrQGC20220313_B.Product6_a -\r\n    px42LoopCtrQGC20220313_B.Product5_l) * px42LoopCtrQGC20220313_P.Gain_Gain_h;\r\n\r\n  // Fcn: '<S14>/Fcn3' incorporates:\r\n  //   Constant: '<S14>/Constant1'\r\n\r\n  if (px42LoopCtrQGC20220313_P.Constant1_Value_ac < 0.0) {\r\n    px42LoopCtrQGC20220313_B.fcn5 = -rt_powd_snf\r\n      (-px42LoopCtrQGC20220313_P.Constant1_Value_ac, -0.5);\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.fcn5 = rt_powd_snf\r\n      (px42LoopCtrQGC20220313_P.Constant1_Value_ac, -0.5);\r\n  }\r\n\r\n  // End of Fcn: '<S14>/Fcn3'\r\n\r\n  // Product: '<S14>/Product3'\r\n  px42LoopCtrQGC20220313_B.Product3_c = px42LoopCtrQGC20220313_B.fcn5 *\r\n    px42LoopCtrQGC20220313_B.Product3_i * px42LoopCtrQGC20220313_B.Product1_p;\r\n\r\n  // Saturate: '<S14>/Saturation8'\r\n  if (px42LoopCtrQGC20220313_B.Product1_p >\r\n      px42LoopCtrQGC20220313_P.Saturation8_UpperSat_c) {\r\n    px42LoopCtrQGC20220313_B.rtb_Product1_p_p =\r\n      px42LoopCtrQGC20220313_P.Saturation8_UpperSat_c;\r\n  } else if (px42LoopCtrQGC20220313_B.Product1_p <\r\n             px42LoopCtrQGC20220313_P.Saturation8_LowerSat_c) {\r\n    px42LoopCtrQGC20220313_B.rtb_Product1_p_p =\r\n      px42LoopCtrQGC20220313_P.Saturation8_LowerSat_c;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.rtb_Product1_p_p =\r\n      px42LoopCtrQGC20220313_B.Product1_p;\r\n  }\r\n\r\n  // End of Saturate: '<S14>/Saturation8'\r\n\r\n  // Product: '<S14>/Product4' incorporates:\r\n  //   Abs: '<S14>/Abs3'\r\n  //   Constant: '<S14>/Constant2'\r\n  //   Fcn: '<S14>/Fcn4'\r\n  //   Sum: '<S14>/Add10'\r\n\r\n  px42LoopCtrQGC20220313_B.Product4_g = rt_powd_snf\r\n    (px42LoopCtrQGC20220313_B.Product2_d, 0.5) *\r\n    px42LoopCtrQGC20220313_B.rtb_Product1_p_p *\r\n    (px42LoopCtrQGC20220313_P.Constant2_Value_k -\r\n     px42LoopCtrQGC20220313_B.Product3_i);\r\n\r\n  // Saturate: '<S14>/Saturation13'\r\n  if (px42LoopCtrQGC20220313_B.lambda4_h >\r\n      px42LoopCtrQGC20220313_P.Saturation13_UpperSat_p) {\r\n    px42LoopCtrQGC20220313_B.Product6_a =\r\n      px42LoopCtrQGC20220313_P.Saturation13_UpperSat_p;\r\n  } else if (px42LoopCtrQGC20220313_B.lambda4_h <\r\n             px42LoopCtrQGC20220313_P.Saturation13_LowerSat_j) {\r\n    px42LoopCtrQGC20220313_B.Product6_a =\r\n      px42LoopCtrQGC20220313_P.Saturation13_LowerSat_j;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.Product6_a = px42LoopCtrQGC20220313_B.lambda4_h;\r\n  }\r\n\r\n  // End of Saturate: '<S14>/Saturation13'\r\n\r\n  // Saturate: '<S14>/Saturation9'\r\n  if (u0_tmp > px42LoopCtrQGC20220313_P.Saturation9_UpperSat_d) {\r\n    px42LoopCtrQGC20220313_B.Product5_l =\r\n      px42LoopCtrQGC20220313_P.Saturation9_UpperSat_d;\r\n  } else if (u0_tmp < px42LoopCtrQGC20220313_P.Saturation9_LowerSat_c4) {\r\n    px42LoopCtrQGC20220313_B.Product5_l =\r\n      px42LoopCtrQGC20220313_P.Saturation9_LowerSat_c4;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.Product5_l = u0_tmp;\r\n  }\r\n\r\n  // End of Saturate: '<S14>/Saturation9'\r\n\r\n  // Gain: '<S14>/Gain1' incorporates:\r\n  //   Sum: '<S14>/Add14'\r\n\r\n  px42LoopCtrQGC20220313_B.Product3_i = (px42LoopCtrQGC20220313_B.Product6_a -\r\n    px42LoopCtrQGC20220313_B.Product5_l) * px42LoopCtrQGC20220313_P.Gain1_Gain_e;\r\n\r\n  // Fcn: '<S14>/Fcn6' incorporates:\r\n  //   Constant: '<S14>/Constant1'\r\n\r\n  if (px42LoopCtrQGC20220313_P.Constant1_Value_ac < 0.0) {\r\n    px42LoopCtrQGC20220313_B.fcn5 = -rt_powd_snf\r\n      (-px42LoopCtrQGC20220313_P.Constant1_Value_ac, -0.9375);\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.fcn5 = rt_powd_snf\r\n      (px42LoopCtrQGC20220313_P.Constant1_Value_ac, -0.9375);\r\n  }\r\n\r\n  // End of Fcn: '<S14>/Fcn6'\r\n\r\n  // Product: '<S14>/Product6'\r\n  px42LoopCtrQGC20220313_B.Product6_a = px42LoopCtrQGC20220313_B.fcn5 *\r\n    px42LoopCtrQGC20220313_B.Product3_i * px42LoopCtrQGC20220313_B.Product1_p;\r\n\r\n  // Saturate: '<S14>/Saturation12'\r\n  if (px42LoopCtrQGC20220313_B.Product1_p >\r\n      px42LoopCtrQGC20220313_P.Saturation12_UpperSat_d) {\r\n    px42LoopCtrQGC20220313_B.rtb_Product1_p_p =\r\n      px42LoopCtrQGC20220313_P.Saturation12_UpperSat_d;\r\n  } else if (px42LoopCtrQGC20220313_B.Product1_p <\r\n             px42LoopCtrQGC20220313_P.Saturation12_LowerSat_j) {\r\n    px42LoopCtrQGC20220313_B.rtb_Product1_p_p =\r\n      px42LoopCtrQGC20220313_P.Saturation12_LowerSat_j;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.rtb_Product1_p_p =\r\n      px42LoopCtrQGC20220313_B.Product1_p;\r\n  }\r\n\r\n  // End of Saturate: '<S14>/Saturation12'\r\n\r\n  // Product: '<S14>/Product5' incorporates:\r\n  //   Constant: '<S14>/Constant4'\r\n  //   Fcn: '<S14>/Fcn5'\r\n  //   Sum: '<S14>/Add11'\r\n\r\n  px42LoopCtrQGC20220313_B.Product5_l = rt_powd_snf\r\n    (px42LoopCtrQGC20220313_B.Product2_d, 0.0625) *\r\n    px42LoopCtrQGC20220313_B.rtb_Product1_p_p *\r\n    (px42LoopCtrQGC20220313_P.Constant4_Value_l -\r\n     px42LoopCtrQGC20220313_B.Product3_i);\r\n\r\n  // Saturate: '<S14>/Saturation16'\r\n  if (px42LoopCtrQGC20220313_B.lambda4_h >\r\n      px42LoopCtrQGC20220313_P.Saturation16_UpperSat_p) {\r\n    px42LoopCtrQGC20220313_B.lambda4_h =\r\n      px42LoopCtrQGC20220313_P.Saturation16_UpperSat_p;\r\n  } else if (px42LoopCtrQGC20220313_B.lambda4_h <\r\n             px42LoopCtrQGC20220313_P.Saturation16_LowerSat_i) {\r\n    px42LoopCtrQGC20220313_B.lambda4_h =\r\n      px42LoopCtrQGC20220313_P.Saturation16_LowerSat_i;\r\n  }\r\n\r\n  // End of Saturate: '<S14>/Saturation16'\r\n\r\n  // Saturate: '<S14>/Saturation14'\r\n  if (u0_tmp > px42LoopCtrQGC20220313_P.Saturation14_UpperSat_n) {\r\n    u0_tmp = px42LoopCtrQGC20220313_P.Saturation14_UpperSat_n;\r\n  } else if (u0_tmp < px42LoopCtrQGC20220313_P.Saturation14_LowerSat_a) {\r\n    u0_tmp = px42LoopCtrQGC20220313_P.Saturation14_LowerSat_a;\r\n  }\r\n\r\n  // End of Saturate: '<S14>/Saturation14'\r\n\r\n  // Gain: '<S14>/Gain3' incorporates:\r\n  //   Sum: '<S14>/Add19'\r\n\r\n  px42LoopCtrQGC20220313_B.Product3_i = (px42LoopCtrQGC20220313_B.lambda4_h -\r\n    u0_tmp) * px42LoopCtrQGC20220313_P.Gain3_Gain_p;\r\n\r\n  // Saturate: '<S14>/Saturation1'\r\n  if (px42LoopCtrQGC20220313_B.Product1_p >\r\n      px42LoopCtrQGC20220313_P.Saturation1_UpperSat_d) {\r\n    px42LoopCtrQGC20220313_B.rtb_Product1_p_p =\r\n      px42LoopCtrQGC20220313_P.Saturation1_UpperSat_d;\r\n  } else if (px42LoopCtrQGC20220313_B.Product1_p <\r\n             px42LoopCtrQGC20220313_P.Saturation1_LowerSat_g) {\r\n    px42LoopCtrQGC20220313_B.rtb_Product1_p_p =\r\n      px42LoopCtrQGC20220313_P.Saturation1_LowerSat_g;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.rtb_Product1_p_p =\r\n      px42LoopCtrQGC20220313_B.Product1_p;\r\n  }\r\n\r\n  // End of Saturate: '<S14>/Saturation1'\r\n\r\n  // Fcn: '<S14>/Fcn7' incorporates:\r\n  //   Constant: '<S14>/Constant1'\r\n\r\n  if (px42LoopCtrQGC20220313_P.Constant1_Value_ac < 0.0) {\r\n    px42LoopCtrQGC20220313_B.fcn5 = -rt_powd_snf\r\n      (-px42LoopCtrQGC20220313_P.Constant1_Value_ac, -0.75);\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.fcn5 = rt_powd_snf\r\n      (px42LoopCtrQGC20220313_P.Constant1_Value_ac, -0.75);\r\n  }\r\n\r\n  // End of Fcn: '<S14>/Fcn7'\r\n\r\n  // Saturate: '<S14>/Saturation15'\r\n  if (px42LoopCtrQGC20220313_B.Product1_p >\r\n      px42LoopCtrQGC20220313_P.Saturation15_UpperSat_k) {\r\n    px42LoopCtrQGC20220313_B.lambda4_h =\r\n      px42LoopCtrQGC20220313_P.Saturation15_UpperSat_k;\r\n  } else if (px42LoopCtrQGC20220313_B.Product1_p <\r\n             px42LoopCtrQGC20220313_P.Saturation15_LowerSat_h) {\r\n    px42LoopCtrQGC20220313_B.lambda4_h =\r\n      px42LoopCtrQGC20220313_P.Saturation15_LowerSat_h;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.lambda4_h = px42LoopCtrQGC20220313_B.Product1_p;\r\n  }\r\n\r\n  // End of Saturate: '<S14>/Saturation15'\r\n\r\n  // Sum: '<S14>/Add2' incorporates:\r\n  //   Constant: '<S14>/Constant6'\r\n  //   DiscreteIntegrator: '<S14>/Discrete-Time Integrator3'\r\n  //   Fcn: '<S14>/Fcn8'\r\n  //   Gain: '<S14>/Gain6'\r\n  //   Gain: '<S14>/l2'\r\n  //   Gain: '<S14>/lambda2'\r\n  //   Product: '<S14>/Product7'\r\n  //   Product: '<S14>/Product8'\r\n  //   Sum: '<S14>/Add16'\r\n  //   Sum: '<S14>/Add20'\r\n  //   Sum: '<S14>/Add3'\r\n\r\n  px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_0 =\r\n    (((px42LoopCtrQGC20220313_P.lambda2_Gain_d *\r\n       px42LoopCtrQGC20220313_B.Product1_p + px42LoopCtrQGC20220313_P.l2_Gain_i *\r\n       px42LoopCtrQGC20220313_B.rtb_Product1_p_p) +\r\n      (px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_0 -\r\n       px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_1)) +\r\n     px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator3_DSTAT_m) +\r\n    (px42LoopCtrQGC20220313_B.fcn5 * px42LoopCtrQGC20220313_B.Product3_i *\r\n     px42LoopCtrQGC20220313_B.Product1_p + rt_powd_snf\r\n     (px42LoopCtrQGC20220313_B.Product2_d, 0.25) *\r\n     px42LoopCtrQGC20220313_B.lambda4_h *\r\n     (px42LoopCtrQGC20220313_P.Constant6_Value_g -\r\n      px42LoopCtrQGC20220313_B.Product3_i)) *\r\n    px42LoopCtrQGC20220313_P.Gain6_Gain_f;\r\n\r\n  // Saturate: '<S14>/Saturation3'\r\n  if (px42LoopCtrQGC20220313_B.Product1_p >\r\n      px42LoopCtrQGC20220313_P.Saturation3_UpperSat_i) {\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_1 =\r\n      px42LoopCtrQGC20220313_P.Saturation3_UpperSat_i;\r\n  } else if (px42LoopCtrQGC20220313_B.Product1_p <\r\n             px42LoopCtrQGC20220313_P.Saturation3_LowerSat_g) {\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_1 =\r\n      px42LoopCtrQGC20220313_P.Saturation3_LowerSat_g;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_1 =\r\n      px42LoopCtrQGC20220313_B.Product1_p;\r\n  }\r\n\r\n  // End of Saturate: '<S14>/Saturation3'\r\n\r\n  // Gain: '<S14>/lambda4'\r\n  px42LoopCtrQGC20220313_B.lambda4_h = px42LoopCtrQGC20220313_P.lambda4_Gain_b *\r\n    px42LoopCtrQGC20220313_B.Product1_p;\r\n\r\n  // MATLABSystem: '<S3>/SourceBlock'\r\n  rtb_LogicalOperator = uORB_read_step\r\n    (px42LoopCtrQGC20220313_DW.obj_n.orbMetadataObj,\r\n     &px42LoopCtrQGC20220313_DW.obj_n.eventStructObj,\r\n     &px42LoopCtrQGC20220313_B.b_varargout_2, false, 1.0);\r\n\r\n  // Outputs for Enabled SubSystem: '<S3>/Enabled Subsystem' incorporates:\r\n  //   EnablePort: '<S44>/Enable'\r\n\r\n  if (rtb_LogicalOperator) {\r\n    // SignalConversion generated from: '<S44>/In1'\r\n    px42LoopCtrQGC20220313_B.In1 = px42LoopCtrQGC20220313_B.b_varargout_2;\r\n    srUpdateBC(px42LoopCtrQGC20220313_DW.EnabledSubsystem_SubsysRanBC_p);\r\n  }\r\n\r\n  // End of Outputs for SubSystem: '<S3>/Enabled Subsystem'\r\n\r\n  // Sqrt: '<S51>/sqrt' incorporates:\r\n  //   DataTypeConversion: '<Root>/Data Type Conversion1'\r\n  //   Product: '<S52>/Product'\r\n  //   Product: '<S52>/Product1'\r\n  //   Product: '<S52>/Product2'\r\n  //   Product: '<S52>/Product3'\r\n  //   Sum: '<S52>/Sum'\r\n\r\n  px42LoopCtrQGC20220313_B.Product3_i = sqrt(((static_cast<real_T>\r\n    (px42LoopCtrQGC20220313_B.In1.q[0]) * px42LoopCtrQGC20220313_B.In1.q[0] +\r\n    static_cast<real_T>(px42LoopCtrQGC20220313_B.In1.q[1]) *\r\n    px42LoopCtrQGC20220313_B.In1.q[1]) + static_cast<real_T>\r\n    (px42LoopCtrQGC20220313_B.In1.q[2]) * px42LoopCtrQGC20220313_B.In1.q[2]) +\r\n    static_cast<real_T>(px42LoopCtrQGC20220313_B.In1.q[3]) *\r\n    px42LoopCtrQGC20220313_B.In1.q[3]);\r\n\r\n  // Product: '<S46>/Product' incorporates:\r\n  //   DataTypeConversion: '<Root>/Data Type Conversion1'\r\n\r\n  px42LoopCtrQGC20220313_B.fcn5 = px42LoopCtrQGC20220313_B.In1.q[0] /\r\n    px42LoopCtrQGC20220313_B.Product3_i;\r\n\r\n  // Product: '<S46>/Product1' incorporates:\r\n  //   DataTypeConversion: '<Root>/Data Type Conversion1'\r\n\r\n  px42LoopCtrQGC20220313_B.Product1_p = px42LoopCtrQGC20220313_B.In1.q[1] /\r\n    px42LoopCtrQGC20220313_B.Product3_i;\r\n\r\n  // Product: '<S46>/Product2' incorporates:\r\n  //   DataTypeConversion: '<Root>/Data Type Conversion1'\r\n\r\n  px42LoopCtrQGC20220313_B.Product2_d = px42LoopCtrQGC20220313_B.In1.q[2] /\r\n    px42LoopCtrQGC20220313_B.Product3_i;\r\n\r\n  // Product: '<S46>/Product3' incorporates:\r\n  //   DataTypeConversion: '<Root>/Data Type Conversion1'\r\n\r\n  px42LoopCtrQGC20220313_B.Product3_i = px42LoopCtrQGC20220313_B.In1.q[3] /\r\n    px42LoopCtrQGC20220313_B.Product3_i;\r\n\r\n  // Fcn: '<S4>/fcn3'\r\n  px42LoopCtrQGC20220313_B.fcn3 = (px42LoopCtrQGC20220313_B.Product1_p *\r\n    px42LoopCtrQGC20220313_B.Product3_i - px42LoopCtrQGC20220313_B.fcn5 *\r\n    px42LoopCtrQGC20220313_B.Product2_d) * -2.0;\r\n\r\n  // If: '<S47>/If' incorporates:\r\n  //   Constant: '<S48>/Constant'\r\n  //   Constant: '<S49>/Constant'\r\n\r\n  if (px42LoopCtrQGC20220313_B.fcn3 > 1.0) {\r\n    // Outputs for IfAction SubSystem: '<S47>/If Action Subsystem' incorporates:\r\n    //   ActionPort: '<S48>/Action Port'\r\n\r\n    px42LoopCtrQGC20220313_B.fcn3 = px42LoopCtrQGC20220313_P.Constant_Value_e;\r\n\r\n    // End of Outputs for SubSystem: '<S47>/If Action Subsystem'\r\n\r\n    // Update for IfAction SubSystem: '<S47>/If Action Subsystem' incorporates:\r\n    //   ActionPort: '<S48>/Action Port'\r\n\r\n    // Update for If: '<S47>/If' incorporates:\r\n    //   Constant: '<S48>/Constant'\r\n\r\n    srUpdateBC(px42LoopCtrQGC20220313_DW.IfActionSubsystem_SubsysRanBC);\r\n\r\n    // End of Update for SubSystem: '<S47>/If Action Subsystem'\r\n  } else if (px42LoopCtrQGC20220313_B.fcn3 < -1.0) {\r\n    // Outputs for IfAction SubSystem: '<S47>/If Action Subsystem1' incorporates:\r\n    //   ActionPort: '<S49>/Action Port'\r\n\r\n    px42LoopCtrQGC20220313_B.fcn3 = px42LoopCtrQGC20220313_P.Constant_Value_b1;\r\n\r\n    // End of Outputs for SubSystem: '<S47>/If Action Subsystem1'\r\n\r\n    // Update for IfAction SubSystem: '<S47>/If Action Subsystem1' incorporates:\r\n    //   ActionPort: '<S49>/Action Port'\r\n\r\n    // Update for If: '<S47>/If' incorporates:\r\n    //   Constant: '<S49>/Constant'\r\n\r\n    srUpdateBC(px42LoopCtrQGC20220313_DW.IfActionSubsystem1_SubsysRanBC);\r\n\r\n    // End of Update for SubSystem: '<S47>/If Action Subsystem1'\r\n  } else {\r\n    // Update for IfAction SubSystem: '<S47>/If Action Subsystem2' incorporates:\r\n    //   ActionPort: '<S50>/Action Port'\r\n\r\n    // Update for If: '<S47>/If'\r\n    srUpdateBC(px42LoopCtrQGC20220313_DW.IfActionSubsystem2_SubsysRanBC);\r\n\r\n    // End of Update for SubSystem: '<S47>/If Action Subsystem2'\r\n  }\r\n\r\n  // End of If: '<S47>/If'\r\n\r\n  // Fcn: '<S4>/fcn5' incorporates:\r\n  //   Fcn: '<S4>/fcn2'\r\n\r\n  u0_tmp = px42LoopCtrQGC20220313_B.fcn5 * px42LoopCtrQGC20220313_B.fcn5;\r\n  px42LoopCtrQGC20220313_B.rtb_Product1_p_p =\r\n    px42LoopCtrQGC20220313_B.Product1_p * px42LoopCtrQGC20220313_B.Product1_p;\r\n  roll_tmp = px42LoopCtrQGC20220313_B.Product2_d *\r\n    px42LoopCtrQGC20220313_B.Product2_d;\r\n  roll_tmp_0 = px42LoopCtrQGC20220313_B.Product3_i *\r\n    px42LoopCtrQGC20220313_B.Product3_i;\r\n\r\n  // DataStoreWrite: '<Root>/Data Store Write' incorporates:\r\n  //   Fcn: '<S4>/fcn4'\r\n  //   Fcn: '<S4>/fcn5'\r\n  //   Trigonometry: '<S45>/Trigonometric Function3'\r\n\r\n  px42LoopCtrQGC20220313_DW.roll = rt_atan2d_snf\r\n    ((px42LoopCtrQGC20220313_B.Product2_d * px42LoopCtrQGC20220313_B.Product3_i\r\n      + px42LoopCtrQGC20220313_B.fcn5 * px42LoopCtrQGC20220313_B.Product1_p) *\r\n     2.0, ((u0_tmp - px42LoopCtrQGC20220313_B.rtb_Product1_p_p) - roll_tmp) +\r\n     roll_tmp_0);\r\n\r\n  // Trigonometry: '<S45>/trigFcn'\r\n  if (px42LoopCtrQGC20220313_B.fcn3 > 1.0) {\r\n    px42LoopCtrQGC20220313_B.fcn3 = 1.0;\r\n  } else if (px42LoopCtrQGC20220313_B.fcn3 < -1.0) {\r\n    px42LoopCtrQGC20220313_B.fcn3 = -1.0;\r\n  }\r\n\r\n  // DataStoreWrite: '<Root>/Data Store Write1' incorporates:\r\n  //   Trigonometry: '<S45>/trigFcn'\r\n\r\n  px42LoopCtrQGC20220313_DW.pitch = asin(px42LoopCtrQGC20220313_B.fcn3);\r\n\r\n  // DataStoreWrite: '<Root>/Data Store Write10' incorporates:\r\n  //   Fcn: '<S4>/fcn1'\r\n  //   Fcn: '<S4>/fcn2'\r\n  //   Trigonometry: '<S45>/Trigonometric Function1'\r\n\r\n  px42LoopCtrQGC20220313_DW.yaw = rt_atan2d_snf\r\n    ((px42LoopCtrQGC20220313_B.Product1_p * px42LoopCtrQGC20220313_B.Product2_d\r\n      + px42LoopCtrQGC20220313_B.fcn5 * px42LoopCtrQGC20220313_B.Product3_i) *\r\n     2.0, ((u0_tmp + px42LoopCtrQGC20220313_B.rtb_Product1_p_p) - roll_tmp) -\r\n     roll_tmp_0);\r\n\r\n  // DataStoreWrite: '<Root>/Data Store Write20' incorporates:\r\n  //   DataTypeConversion: '<Root>/Data Type Conversion3'\r\n\r\n  px42LoopCtrQGC20220313_DW.yaw_speed = px42LoopCtrQGC20220313_B.In1.yawspeed;\r\n\r\n  // DataStoreWrite: '<Root>/Data Store Write21' incorporates:\r\n  //   DataTypeConversion: '<Root>/Data Type Conversion3'\r\n\r\n  px42LoopCtrQGC20220313_DW.pitch_speed =\r\n    px42LoopCtrQGC20220313_B.In1.pitchspeed;\r\n\r\n  // DataStoreWrite: '<Root>/Data Store Write22' incorporates:\r\n  //   DataTypeConversion: '<Root>/Data Type Conversion3'\r\n\r\n  px42LoopCtrQGC20220313_DW.roll_speed = px42LoopCtrQGC20220313_B.In1.rollspeed;\r\n\r\n  // MATLABSystem: '<S53>/SourceBlock'\r\n  b_varargout_1 = uORB_read_step(px42LoopCtrQGC20220313_DW.obj_a.orbMetadataObj,\r\n    &px42LoopCtrQGC20220313_DW.obj_a.eventStructObj,\r\n    &px42LoopCtrQGC20220313_B.b_varargout_2_c, false, 5000.0);\r\n\r\n  // Outputs for Enabled SubSystem: '<S53>/Enabled Subsystem' incorporates:\r\n  //   EnablePort: '<S54>/Enable'\r\n\r\n  if (b_varargout_1) {\r\n    // SignalConversion generated from: '<S54>/In1'\r\n    px42LoopCtrQGC20220313_B.In1_k = px42LoopCtrQGC20220313_B.b_varargout_2_c;\r\n    srUpdateBC(px42LoopCtrQGC20220313_DW.EnabledSubsystem_SubsysRanBC);\r\n  }\r\n\r\n  // End of MATLABSystem: '<S53>/SourceBlock'\r\n  // End of Outputs for SubSystem: '<S53>/Enabled Subsystem'\r\n  for (int32_T i = 0; i < 18; i++) {\r\n    // SignalConversion generated from: '<S5>/Bus Selector'\r\n    px42LoopCtrQGC20220313_B.values[i] = px42LoopCtrQGC20220313_B.In1_k.values[i];\r\n  }\r\n\r\n  // Switch: '<Root>/Switch3'\r\n  if (px42LoopCtrQGC20220313_B.values[7] >\r\n      px42LoopCtrQGC20220313_P.Switch3_Threshold) {\r\n    // Switch: '<Root>/Switch3' incorporates:\r\n    //   Constant: '<Root>/Constant10'\r\n\r\n    px42LoopCtrQGC20220313_B.Switch3 = px42LoopCtrQGC20220313_P.Constant10_Value;\r\n  } else {\r\n    // Switch: '<Root>/Switch3' incorporates:\r\n    //   Constant: '<Root>/Constant11'\r\n\r\n    px42LoopCtrQGC20220313_B.Switch3 = px42LoopCtrQGC20220313_P.Constant11_Value;\r\n  }\r\n\r\n  // End of Switch: '<Root>/Switch3'\r\n\r\n  // DataStoreWrite: '<S7>/Data Store Write28' incorporates:\r\n  //   Constant: '<S7>/attitude_flag'\r\n\r\n  px42LoopCtrQGC20220313_DW.attitude_flag =\r\n    px42LoopCtrQGC20220313_P.attitude_flag_Value;\r\n\r\n  // DataStoreWrite: '<S8>/Data Store Write28' incorporates:\r\n  //   Constant: '<S8>/observer_flag'\r\n\r\n  px42LoopCtrQGC20220313_DW.observer_flag =\r\n    px42LoopCtrQGC20220313_P.observer_flag_Value;\r\n  for (int32_T i = 0; i < 4; i++) {\r\n    // Gain: '<Root>/Gain4' incorporates:\r\n    //   Constant: '<Root>/Constant1'\r\n    //   Constant: '<Root>/Mixer matrix1'\r\n    //   DataStoreRead: '<Root>/Data Store Read21'\r\n    //   DataStoreRead: '<Root>/Data Store Read22'\r\n    //   DataStoreRead: '<Root>/Data Store Read23'\r\n    //   Product: '<Root>/Product2'\r\n    //   SignalConversion generated from: '<Root>/Product2'\r\n\r\n    px42LoopCtrQGC20220313_B.fcn5 = floor\r\n      ((((px42LoopCtrQGC20220313_P.Mixermatrix1_Value[i + 4] *\r\n          px42LoopCtrQGC20220313_B.DataStoreRead25 +\r\n          px42LoopCtrQGC20220313_P.Mixermatrix1_Value[i] *\r\n          px42LoopCtrQGC20220313_P.Constant1_Value_l) +\r\n         px42LoopCtrQGC20220313_P.Mixermatrix1_Value[i + 8] *\r\n         px42LoopCtrQGC20220313_B.DataStoreRead26) +\r\n        px42LoopCtrQGC20220313_P.Mixermatrix1_Value[i + 12] *\r\n        px42LoopCtrQGC20220313_B.DataStoreRead27) *\r\n       px42LoopCtrQGC20220313_P.Gain4_Gain_fc);\r\n    if (rtIsNaN(px42LoopCtrQGC20220313_B.fcn5) || rtIsInf\r\n        (px42LoopCtrQGC20220313_B.fcn5)) {\r\n      px42LoopCtrQGC20220313_B.fcn5 = 0.0;\r\n    } else {\r\n      px42LoopCtrQGC20220313_B.fcn5 = fmod(px42LoopCtrQGC20220313_B.fcn5,\r\n        65536.0);\r\n    }\r\n\r\n    px42LoopCtrQGC20220313_B.Gain4[i] = static_cast<uint16_T>\r\n      (px42LoopCtrQGC20220313_B.fcn5 < 0.0 ? static_cast<int32_T>\r\n       (static_cast<uint16_T>(-static_cast<int16_T>(static_cast<uint16_T>\r\n          (-px42LoopCtrQGC20220313_B.fcn5)))) : static_cast<int32_T>(\r\n        static_cast<uint16_T>(px42LoopCtrQGC20220313_B.fcn5)));\r\n\r\n    // End of Gain: '<Root>/Gain4'\r\n  }\r\n\r\n  // MATLABSystem: '<Root>/PX4 PWM Output1'\r\n  for (int32_T i = 0; i < 8; i++) {\r\n    px42LoopCtrQGC20220313_B.pwmValue[i] = 0U;\r\n  }\r\n\r\n  // Sum: '<Root>/Add' incorporates:\r\n  //   Constant: '<Root>/fault_1'\r\n\r\n  px42LoopCtrQGC20220313_B.fcn5 = floor(static_cast<real_T>\r\n    (px42LoopCtrQGC20220313_B.Gain4[0]) - px42LoopCtrQGC20220313_P.fault_1_Value);\r\n  if (rtIsNaN(px42LoopCtrQGC20220313_B.fcn5) || rtIsInf\r\n      (px42LoopCtrQGC20220313_B.fcn5)) {\r\n    px42LoopCtrQGC20220313_B.fcn5 = 0.0;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.fcn5 = fmod(px42LoopCtrQGC20220313_B.fcn5, 65536.0);\r\n  }\r\n\r\n  // MATLABSystem: '<Root>/PX4 PWM Output1' incorporates:\r\n  //   Sum: '<Root>/Add'\r\n\r\n  px42LoopCtrQGC20220313_B.pwmValue[0] = static_cast<uint16_T>\r\n    (px42LoopCtrQGC20220313_B.fcn5 < 0.0 ? static_cast<int32_T>\r\n     (static_cast<uint16_T>(-static_cast<int16_T>(static_cast<uint16_T>\r\n        (-px42LoopCtrQGC20220313_B.fcn5)))) : static_cast<int32_T>\r\n     (static_cast<uint16_T>(px42LoopCtrQGC20220313_B.fcn5)));\r\n\r\n  // Sum: '<Root>/Add1' incorporates:\r\n  //   Constant: '<Root>/fault_2'\r\n\r\n  px42LoopCtrQGC20220313_B.fcn5 = floor(static_cast<real_T>\r\n    (px42LoopCtrQGC20220313_B.Gain4[1]) - px42LoopCtrQGC20220313_P.fault_2_Value);\r\n  if (rtIsNaN(px42LoopCtrQGC20220313_B.fcn5) || rtIsInf\r\n      (px42LoopCtrQGC20220313_B.fcn5)) {\r\n    px42LoopCtrQGC20220313_B.fcn5 = 0.0;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.fcn5 = fmod(px42LoopCtrQGC20220313_B.fcn5, 65536.0);\r\n  }\r\n\r\n  // MATLABSystem: '<Root>/PX4 PWM Output1' incorporates:\r\n  //   Sum: '<Root>/Add1'\r\n\r\n  px42LoopCtrQGC20220313_B.pwmValue[1] = static_cast<uint16_T>\r\n    (px42LoopCtrQGC20220313_B.fcn5 < 0.0 ? static_cast<int32_T>\r\n     (static_cast<uint16_T>(-static_cast<int16_T>(static_cast<uint16_T>\r\n        (-px42LoopCtrQGC20220313_B.fcn5)))) : static_cast<int32_T>\r\n     (static_cast<uint16_T>(px42LoopCtrQGC20220313_B.fcn5)));\r\n\r\n  // Sum: '<Root>/Add2' incorporates:\r\n  //   Constant: '<Root>/fault_3'\r\n\r\n  px42LoopCtrQGC20220313_B.fcn5 = floor(static_cast<real_T>\r\n    (px42LoopCtrQGC20220313_B.Gain4[2]) - px42LoopCtrQGC20220313_P.fault_3_Value);\r\n  if (rtIsNaN(px42LoopCtrQGC20220313_B.fcn5) || rtIsInf\r\n      (px42LoopCtrQGC20220313_B.fcn5)) {\r\n    px42LoopCtrQGC20220313_B.fcn5 = 0.0;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.fcn5 = fmod(px42LoopCtrQGC20220313_B.fcn5, 65536.0);\r\n  }\r\n\r\n  // MATLABSystem: '<Root>/PX4 PWM Output1' incorporates:\r\n  //   Sum: '<Root>/Add2'\r\n\r\n  px42LoopCtrQGC20220313_B.pwmValue[2] = static_cast<uint16_T>\r\n    (px42LoopCtrQGC20220313_B.fcn5 < 0.0 ? static_cast<int32_T>\r\n     (static_cast<uint16_T>(-static_cast<int16_T>(static_cast<uint16_T>\r\n        (-px42LoopCtrQGC20220313_B.fcn5)))) : static_cast<int32_T>\r\n     (static_cast<uint16_T>(px42LoopCtrQGC20220313_B.fcn5)));\r\n\r\n  // Sum: '<Root>/Add3' incorporates:\r\n  //   Constant: '<Root>/fault_4'\r\n\r\n  px42LoopCtrQGC20220313_B.fcn5 = floor(static_cast<real_T>\r\n    (px42LoopCtrQGC20220313_B.Gain4[3]) - px42LoopCtrQGC20220313_P.fault_4_Value);\r\n  if (rtIsNaN(px42LoopCtrQGC20220313_B.fcn5) || rtIsInf\r\n      (px42LoopCtrQGC20220313_B.fcn5)) {\r\n    px42LoopCtrQGC20220313_B.fcn5 = 0.0;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.fcn5 = fmod(px42LoopCtrQGC20220313_B.fcn5, 65536.0);\r\n  }\r\n\r\n  // MATLABSystem: '<Root>/PX4 PWM Output1' incorporates:\r\n  //   Constant: '<Root>/Constant2'\r\n  //   DataStoreWrite: '<Root>/Data Store Write16'\r\n  //   Sum: '<Root>/Add3'\r\n\r\n  px42LoopCtrQGC20220313_B.pwmValue[3] = static_cast<uint16_T>\r\n    (px42LoopCtrQGC20220313_B.fcn5 < 0.0 ? static_cast<int32_T>\r\n     (static_cast<uint16_T>(-static_cast<int16_T>(static_cast<uint16_T>\r\n        (-px42LoopCtrQGC20220313_B.fcn5)))) : static_cast<int32_T>\r\n     (static_cast<uint16_T>(px42LoopCtrQGC20220313_B.fcn5)));\r\n  if (px42LoopCtrQGC20220313_B.Switch3) {\r\n    if (!px42LoopCtrQGC20220313_DW.obj.isArmed) {\r\n      px42LoopCtrQGC20220313_DW.obj.isArmed = true;\r\n      status = pwm_arm(&px42LoopCtrQGC20220313_DW.obj.pwmDevHandler,\r\n                       &px42LoopCtrQGC20220313_DW.obj.armAdvertiseObj);\r\n      px42LoopCtrQGC20220313_DW.obj.errorStatus = static_cast<uint16_T>\r\n        (px42LoopCtrQGC20220313_DW.obj.errorStatus | status);\r\n    }\r\n\r\n    status = pwm_setServo(&px42LoopCtrQGC20220313_DW.obj.pwmDevHandler,\r\n                          px42LoopCtrQGC20220313_DW.obj.servoCount,\r\n                          px42LoopCtrQGC20220313_DW.obj.channelMask,\r\n                          &px42LoopCtrQGC20220313_B.pwmValue[0],\r\n                          px42LoopCtrQGC20220313_DW.obj.isMain,\r\n                          &px42LoopCtrQGC20220313_DW.obj.actuatorAdvertiseObj);\r\n    px42LoopCtrQGC20220313_DW.obj.errorStatus = static_cast<uint16_T>\r\n      (px42LoopCtrQGC20220313_DW.obj.errorStatus | status);\r\n  } else {\r\n    status = pwm_disarm(&px42LoopCtrQGC20220313_DW.obj.pwmDevHandler,\r\n                        &px42LoopCtrQGC20220313_DW.obj.armAdvertiseObj);\r\n    px42LoopCtrQGC20220313_DW.obj.errorStatus = static_cast<uint16_T>\r\n      (px42LoopCtrQGC20220313_DW.obj.errorStatus | status);\r\n    px42LoopCtrQGC20220313_DW.obj.isArmed = false;\r\n    status = pwm_resetServo(&px42LoopCtrQGC20220313_DW.obj.pwmDevHandler,\r\n      px42LoopCtrQGC20220313_DW.obj.servoCount,\r\n      px42LoopCtrQGC20220313_DW.obj.channelMask,\r\n      px42LoopCtrQGC20220313_DW.obj.isMain,\r\n      &px42LoopCtrQGC20220313_DW.obj.actuatorAdvertiseObj);\r\n    px42LoopCtrQGC20220313_DW.obj.errorStatus = static_cast<uint16_T>\r\n      (px42LoopCtrQGC20220313_DW.obj.errorStatus | status);\r\n  }\r\n\r\n  if (px42LoopCtrQGC20220313_DW.obj.isMain) {\r\n    status = pwm_forceFailsafe(&px42LoopCtrQGC20220313_DW.obj.pwmDevHandler,\r\n      static_cast<int32_T>(px42LoopCtrQGC20220313_P.Constant2_Value_kf));\r\n    px42LoopCtrQGC20220313_DW.obj.errorStatus = static_cast<uint16_T>\r\n      (px42LoopCtrQGC20220313_DW.obj.errorStatus | status);\r\n  }\r\n\r\n  // Gain: '<Root>/Gain8' incorporates:\r\n  //   DataStoreRead: '<Root>/Data Store Read31'\r\n\r\n  px42LoopCtrQGC20220313_B.pitch = px42LoopCtrQGC20220313_P.Gain8_Gain_o1 *\r\n    px42LoopCtrQGC20220313_DW.pitch;\r\n\r\n  // Gain: '<Root>/Gain10'\r\n  px42LoopCtrQGC20220313_B.pitch_a = px42LoopCtrQGC20220313_P.Gain10_Gain *\r\n    px42LoopCtrQGC20220313_B.ManualSwitch_g;\r\n\r\n  // Gain: '<Root>/Gain7' incorporates:\r\n  //   DataStoreRead: '<Root>/Data Store Read30'\r\n\r\n  px42LoopCtrQGC20220313_B.roll = px42LoopCtrQGC20220313_P.Gain7_Gain_a *\r\n    px42LoopCtrQGC20220313_DW.roll;\r\n\r\n  // Gain: '<Root>/Gain11'\r\n  px42LoopCtrQGC20220313_B.pitch_g = px42LoopCtrQGC20220313_P.Gain11_Gain *\r\n    px42LoopCtrQGC20220313_B.ManualSwitch_g;\r\n\r\n  // Gain: '<Root>/Gain9' incorporates:\r\n  //   DataStoreRead: '<Root>/Data Store Read33'\r\n\r\n  px42LoopCtrQGC20220313_B.yaw = px42LoopCtrQGC20220313_P.Gain9_Gain *\r\n    px42LoopCtrQGC20220313_DW.yaw;\r\n\r\n  // Logic: '<S3>/NOT' incorporates:\r\n  //   MATLABSystem: '<S3>/SourceBlock'\r\n\r\n  px42LoopCtrQGC20220313_B.NOT = !rtb_LogicalOperator;\r\n\r\n  // SignalConversion generated from: '<Root>/Serial Transmit1' incorporates:\r\n  //   Constant: '<Root>/Constant6'\r\n  //   DataStoreRead: '<Root>/Data Store Read56'\r\n  //   DataStoreRead: '<Root>/Data Store Read57'\r\n  //   DataStoreRead: '<Root>/Data Store Read58'\r\n\r\n  px42LoopCtrQGC20220313_B.TmpSignalConversionAtProduc[0] =\r\n    px42LoopCtrQGC20220313_P.Constant6_Value_m;\r\n  px42LoopCtrQGC20220313_B.TmpSignalConversionAtProduc[1] =\r\n    px42LoopCtrQGC20220313_DW.pitch;\r\n  px42LoopCtrQGC20220313_B.TmpSignalConversionAtProduc[2] =\r\n    px42LoopCtrQGC20220313_DW.roll;\r\n  px42LoopCtrQGC20220313_B.TmpSignalConversionAtProduc[3] =\r\n    px42LoopCtrQGC20220313_DW.yaw;\r\n\r\n  // MATLABSystem: '<Root>/Serial Transmit1'\r\n  memcpy((void *)&px42LoopCtrQGC20220313_B.TxDataLocChar[0], (void *)\r\n         &px42LoopCtrQGC20220313_B.TmpSignalConversionAtProduc[0], (uint32_T)\r\n         ((size_t)32 * sizeof(uint8_T)));\r\n  MW_SCI_Transmit(px42LoopCtrQGC20220313_DW.obj_e.SCIDriverObj.MW_SCIHANDLE,\r\n                  &px42LoopCtrQGC20220313_B.TxDataLocChar[0], 32U);\r\n\r\n  // Gain: '<Root>/Gain5' incorporates:\r\n  //   DataStoreRead: '<Root>/Data Store Read10'\r\n\r\n  px42LoopCtrQGC20220313_B.Gain5 = px42LoopCtrQGC20220313_P.Gain5_Gain_g *\r\n    px42LoopCtrQGC20220313_DW.pitch;\r\n\r\n  // Gain: '<Root>/Gain3' incorporates:\r\n  //   DataStoreRead: '<Root>/Data Store Read11'\r\n\r\n  px42LoopCtrQGC20220313_B.Gain3 = px42LoopCtrQGC20220313_P.Gain3_Gain_c *\r\n    px42LoopCtrQGC20220313_DW.roll;\r\n\r\n  // DataStoreRead: '<Root>/Data Store Read12' incorporates:\r\n  //   DataStoreWrite: '<Root>/Data Store Write16'\r\n\r\n  px42LoopCtrQGC20220313_B.DataStoreRead12 = px42LoopCtrQGC20220313_B.Switch3;\r\n\r\n  // DataStoreRead: '<Root>/Data Store Read13' incorporates:\r\n  //   Constant: '<Root>/Constant1'\r\n\r\n  px42LoopCtrQGC20220313_B.DataStoreRead13 =\r\n    px42LoopCtrQGC20220313_P.Constant1_Value_l;\r\n\r\n  // DataStoreRead: '<Root>/Data Store Read15'\r\n  px42LoopCtrQGC20220313_B.DataStoreRead15 = px42LoopCtrQGC20220313_DW.speed_y;\r\n\r\n  // DataStoreRead: '<Root>/Data Store Read16'\r\n  px42LoopCtrQGC20220313_B.DataStoreRead16 = px42LoopCtrQGC20220313_DW.pos_x;\r\n\r\n  // DataStoreRead: '<Root>/Data Store Read17'\r\n  px42LoopCtrQGC20220313_B.DataStoreRead17 = px42LoopCtrQGC20220313_DW.pos_y;\r\n\r\n  // DataStoreRead: '<Root>/Data Store Read19'\r\n  px42LoopCtrQGC20220313_B.DataStoreRead19 = px42LoopCtrQGC20220313_DW.speed_x;\r\n\r\n  // Gain: '<Root>/Gain6' incorporates:\r\n  //   DataStoreRead: '<Root>/Data Store Read24'\r\n\r\n  px42LoopCtrQGC20220313_B.Gain6 = px42LoopCtrQGC20220313_P.Gain6_Gain_k *\r\n    px42LoopCtrQGC20220313_DW.yaw;\r\n\r\n  // DataStoreRead: '<Root>/Data Store Read28'\r\n  px42LoopCtrQGC20220313_B.pitch_thrust =\r\n    px42LoopCtrQGC20220313_B.DataStoreRead25;\r\n\r\n  // DataStoreRead: '<Root>/Data Store Read29'\r\n  px42LoopCtrQGC20220313_B.roll_thrust =\r\n    px42LoopCtrQGC20220313_B.DataStoreRead26;\r\n\r\n  // DataStoreRead: '<Root>/Data Store Read32'\r\n  px42LoopCtrQGC20220313_B.yaw_thrust = px42LoopCtrQGC20220313_B.DataStoreRead27;\r\n\r\n  // DataStoreRead: '<Root>/Data Store Read41'\r\n  px42LoopCtrQGC20220313_B.DataStoreRead41 = px42LoopCtrQGC20220313_DW.u1;\r\n\r\n  // DataStoreRead: '<Root>/Data Store Read34'\r\n  px42LoopCtrQGC20220313_B.DataStoreRead34 = px42LoopCtrQGC20220313_DW.yaw_speed;\r\n\r\n  // DataStoreRead: '<Root>/Data Store Read35'\r\n  px42LoopCtrQGC20220313_B.DataStoreRead35 =\r\n    px42LoopCtrQGC20220313_DW.pitch_speed;\r\n\r\n  // DataStoreRead: '<Root>/Data Store Read36'\r\n  px42LoopCtrQGC20220313_B.DataStoreRead36 =\r\n    px42LoopCtrQGC20220313_DW.roll_speed;\r\n\r\n  // DataStoreRead: '<Root>/Data Store Read37'\r\n  px42LoopCtrQGC20220313_B.DataStoreRead37 = px42LoopCtrQGC20220313_DW.yaw_acc;\r\n\r\n  // DataStoreRead: '<Root>/Data Store Read38'\r\n  px42LoopCtrQGC20220313_B.DataStoreRead38 = px42LoopCtrQGC20220313_DW.pitch_acc;\r\n\r\n  // DataStoreRead: '<Root>/Data Store Read39'\r\n  px42LoopCtrQGC20220313_B.DataStoreRead39 = px42LoopCtrQGC20220313_DW.roll_acc;\r\n\r\n  // DataStoreRead: '<Root>/Data Store Read48'\r\n  px42LoopCtrQGC20220313_B.DataStoreRead48 = px42LoopCtrQGC20220313_DW.pos_x;\r\n\r\n  // DataStoreRead: '<Root>/Data Store Read49'\r\n  px42LoopCtrQGC20220313_B.DataStoreRead49 = px42LoopCtrQGC20220313_DW.pos_y;\r\n\r\n  // Outputs for Enabled SubSystem: '<Root>/Subsystem1' incorporates:\r\n  //   EnablePort: '<S6>/Enable'\r\n\r\n  // DataStoreRead: '<Root>/Data Store Read54'\r\n  if (px42LoopCtrQGC20220313_DW.attitude_flag) {\r\n    // DiscreteIntegrator: '<S6>/Discrete-Time Integrator' incorporates:\r\n    //   DataStoreWrite: '<S6>/Data Store Write27'\r\n\r\n    px42LoopCtrQGC20220313_DW.t =\r\n      px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator_DSTAT_fj;\r\n\r\n    // Update for DiscreteIntegrator: '<S6>/Discrete-Time Integrator' incorporates:\r\n    //   Constant: '<S6>/Constant9'\r\n\r\n    px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator_DSTAT_fj +=\r\n      px42LoopCtrQGC20220313_P.DiscreteTimeIntegrator_gainval *\r\n      px42LoopCtrQGC20220313_P.Constant9_Value;\r\n    srUpdateBC(px42LoopCtrQGC20220313_DW.Subsystem1_SubsysRanBC);\r\n  }\r\n\r\n  // End of DataStoreRead: '<Root>/Data Store Read54'\r\n  // End of Outputs for SubSystem: '<Root>/Subsystem1'\r\n\r\n  // DataStoreRead: '<Root>/Data Store Read55'\r\n  px42LoopCtrQGC20220313_B.DataStoreRead55 = px42LoopCtrQGC20220313_DW.t;\r\n\r\n  // DataStoreRead: '<Root>/Data Store Read8'\r\n  px42LoopCtrQGC20220313_B.DataStoreRead8 = px42LoopCtrQGC20220313_DW.accX;\r\n\r\n  // DataStoreRead: '<Root>/Data Store Read9'\r\n  px42LoopCtrQGC20220313_B.DataStoreRead9 = px42LoopCtrQGC20220313_DW.accY;\r\n\r\n  // Update for UnitDelay: '<S34>/UD'\r\n  //\r\n  //  Block description for '<S34>/UD':\r\n  //\r\n  //   Store in Global RAM\r\n\r\n  px42LoopCtrQGC20220313_DW.UD_DSTATE = px42LoopCtrQGC20220313_B.TSamp;\r\n\r\n  // Saturate: '<S15>/Saturation3'\r\n  if (px42LoopCtrQGC20220313_B.Abs6 >\r\n      px42LoopCtrQGC20220313_P.Saturation3_UpperSat) {\r\n    px42LoopCtrQGC20220313_B.Product2_d =\r\n      px42LoopCtrQGC20220313_P.Saturation3_UpperSat;\r\n  } else if (px42LoopCtrQGC20220313_B.Abs6 <\r\n             px42LoopCtrQGC20220313_P.Saturation3_LowerSat) {\r\n    px42LoopCtrQGC20220313_B.Product2_d =\r\n      px42LoopCtrQGC20220313_P.Saturation3_LowerSat;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.Product2_d = px42LoopCtrQGC20220313_B.Abs6;\r\n  }\r\n\r\n  // End of Saturate: '<S15>/Saturation3'\r\n\r\n  // Update for DiscreteIntegrator: '<S15>/Discrete-Time Integrator3' incorporates:\r\n  //   Gain: '<S15>/Gain7'\r\n  //   Gain: '<S15>/l4'\r\n  //   Gain: '<S15>/lambda4'\r\n  //   Sum: '<S15>/Add15'\r\n  //   Sum: '<S15>/Add5'\r\n\r\n  px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator3_DSTATE +=\r\n    ((px42LoopCtrQGC20220313_P.l4_Gain * px42LoopCtrQGC20220313_B.Product2_d +\r\n      px42LoopCtrQGC20220313_P.lambda4_Gain * px42LoopCtrQGC20220313_B.Abs6) +\r\n     (px42LoopCtrQGC20220313_B.Product6 + px42LoopCtrQGC20220313_B.roll_hat) *\r\n     px42LoopCtrQGC20220313_P.Gain7_Gain) *\r\n    px42LoopCtrQGC20220313_P.DiscreteTimeIntegrator3_gainval;\r\n\r\n  // Update for Sin: '<Root>/Sine Wave'\r\n  px42LoopCtrQGC20220313_B.TSamp = px42LoopCtrQGC20220313_DW.lastSin;\r\n  px42LoopCtrQGC20220313_DW.lastSin = px42LoopCtrQGC20220313_DW.lastSin *\r\n    px42LoopCtrQGC20220313_P.SineWave_HCos + px42LoopCtrQGC20220313_DW.lastCos *\r\n    px42LoopCtrQGC20220313_P.SineWave_Hsin;\r\n  px42LoopCtrQGC20220313_DW.lastCos = px42LoopCtrQGC20220313_DW.lastCos *\r\n    px42LoopCtrQGC20220313_P.SineWave_HCos - px42LoopCtrQGC20220313_B.TSamp *\r\n    px42LoopCtrQGC20220313_P.SineWave_Hsin;\r\n\r\n  // Update for UnitDelay: '<S16>/UD'\r\n  //\r\n  //  Block description for '<S16>/UD':\r\n  //\r\n  //   Store in Global RAM\r\n\r\n  px42LoopCtrQGC20220313_DW.UD_DSTATE_b = px42LoopCtrQGC20220313_B.z2;\r\n\r\n  // Update for DiscreteIntegrator: '<S13>/Discrete-Time Integrator3' incorporates:\r\n  //   Gain: '<S13>/Gain7'\r\n  //   Gain: '<S13>/l4'\r\n  //   Sum: '<S13>/Add15'\r\n  //   Sum: '<S13>/Add5'\r\n\r\n  px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator3_DSTAT_a +=\r\n    ((px42LoopCtrQGC20220313_P.l4_Gain_p * px42LoopCtrQGC20220313_B.roll_hat_k +\r\n      px42LoopCtrQGC20220313_B.lambda4_n) + (px42LoopCtrQGC20220313_B.Product6_i\r\n      + px42LoopCtrQGC20220313_B.Product5_b) *\r\n     px42LoopCtrQGC20220313_P.Gain7_Gain_d) *\r\n    px42LoopCtrQGC20220313_P.DiscreteTimeIntegrator3_gainv_m;\r\n\r\n  // Update for UnitDelay: '<S25>/UD'\r\n  //\r\n  //  Block description for '<S25>/UD':\r\n  //\r\n  //   Store in Global RAM\r\n\r\n  px42LoopCtrQGC20220313_DW.UD_DSTATE_n = px42LoopCtrQGC20220313_B.z2_e;\r\n\r\n  // Update for DiscreteIntegrator: '<S14>/Discrete-Time Integrator3' incorporates:\r\n  //   Gain: '<S14>/Gain7'\r\n  //   Gain: '<S14>/l4'\r\n  //   Sum: '<S14>/Add15'\r\n  //   Sum: '<S14>/Add5'\r\n\r\n  px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator3_DSTAT_m +=\r\n    ((px42LoopCtrQGC20220313_P.l4_Gain_o *\r\n      px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_1 +\r\n      px42LoopCtrQGC20220313_B.lambda4_h) + (px42LoopCtrQGC20220313_B.Product6_a\r\n      + px42LoopCtrQGC20220313_B.Product5_l) *\r\n     px42LoopCtrQGC20220313_P.Gain7_Gain_l) *\r\n    px42LoopCtrQGC20220313_P.DiscreteTimeIntegrator3_gainv_e;\r\n\r\n  // Saturate: '<S15>/Saturation'\r\n  if (px42LoopCtrQGC20220313_B.Abs6 >\r\n      px42LoopCtrQGC20220313_P.Saturation_UpperSat_b) {\r\n    px42LoopCtrQGC20220313_B.Product2_d =\r\n      px42LoopCtrQGC20220313_P.Saturation_UpperSat_b;\r\n  } else if (px42LoopCtrQGC20220313_B.Abs6 <\r\n             px42LoopCtrQGC20220313_P.Saturation_LowerSat_k) {\r\n    px42LoopCtrQGC20220313_B.Product2_d =\r\n      px42LoopCtrQGC20220313_P.Saturation_LowerSat_k;\r\n  } else {\r\n    px42LoopCtrQGC20220313_B.Product2_d = px42LoopCtrQGC20220313_B.Abs6;\r\n  }\r\n\r\n  // End of Saturate: '<S15>/Saturation'\r\n\r\n  // Update for DiscreteIntegrator: '<S15>/Discrete-Time Integrator' incorporates:\r\n  //   DiscreteIntegrator: '<S15>/Discrete-Time Integrator1'\r\n  //   Gain: '<S15>/Gain5'\r\n  //   Gain: '<S15>/l1'\r\n  //   Gain: '<S15>/lambda1'\r\n  //   Sum: '<S15>/Add'\r\n  //   Sum: '<S15>/Add9'\r\n\r\n  px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator_DSTATE +=\r\n    (((px42LoopCtrQGC20220313_P.l1_Gain * px42LoopCtrQGC20220313_B.Product2_d +\r\n       px42LoopCtrQGC20220313_P.lambda1_Gain * px42LoopCtrQGC20220313_B.Abs6) +\r\n      px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator1_DSTATE) +\r\n     (px42LoopCtrQGC20220313_B.Add3 + px42LoopCtrQGC20220313_B.Product4) *\r\n     px42LoopCtrQGC20220313_P.Gain5_Gain) *\r\n    px42LoopCtrQGC20220313_P.DiscreteTimeIntegrator_gainva_n;\r\n\r\n  // Update for DiscreteIntegrator: '<S15>/Discrete-Time Integrator1'\r\n  px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator1_DSTATE +=\r\n    px42LoopCtrQGC20220313_P.DiscreteTimeIntegrator1_gainval *\r\n    px42LoopCtrQGC20220313_B.z2_l;\r\n\r\n  // Update for DiscreteIntegrator: '<S13>/Discrete-Time Integrator' incorporates:\r\n  //   DiscreteIntegrator: '<S13>/Discrete-Time Integrator1'\r\n  //   Gain: '<S13>/Gain5'\r\n  //   Gain: '<S13>/l1'\r\n  //   Sum: '<S13>/Add'\r\n  //   Sum: '<S13>/Add9'\r\n\r\n  px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator_DSTATE_p +=\r\n    (((px42LoopCtrQGC20220313_P.l1_Gain_p * px42LoopCtrQGC20220313_B.roll_hat_e\r\n       + px42LoopCtrQGC20220313_B.lambda1_a) +\r\n      px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator1_DSTAT_i) +\r\n     (px42LoopCtrQGC20220313_B.Product3_a + px42LoopCtrQGC20220313_B.Product4_k)\r\n     * px42LoopCtrQGC20220313_P.Gain5_Gain_o) *\r\n    px42LoopCtrQGC20220313_P.DiscreteTimeIntegrator_gainva_e;\r\n\r\n  // Update for DiscreteIntegrator: '<S13>/Discrete-Time Integrator1'\r\n  px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator1_DSTAT_i +=\r\n    px42LoopCtrQGC20220313_P.DiscreteTimeIntegrator1_gainv_n *\r\n    px42LoopCtrQGC20220313_B.Add2_o;\r\n\r\n  // Update for DiscreteIntegrator: '<S14>/Discrete-Time Integrator' incorporates:\r\n  //   DiscreteIntegrator: '<S14>/Discrete-Time Integrator1'\r\n  //   Gain: '<S14>/Gain5'\r\n  //   Gain: '<S14>/l1'\r\n  //   Sum: '<S14>/Add'\r\n  //   Sum: '<S14>/Add9'\r\n\r\n  px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator_DSTATE_f +=\r\n    (((px42LoopCtrQGC20220313_P.l1_Gain_d *\r\n       px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_2 +\r\n       px42LoopCtrQGC20220313_B.lambda1_e) +\r\n      px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator1_DSTAT_g) +\r\n     (px42LoopCtrQGC20220313_B.Product3_c + px42LoopCtrQGC20220313_B.Product4_g)\r\n     * px42LoopCtrQGC20220313_P.Gain5_Gain_l) *\r\n    px42LoopCtrQGC20220313_P.DiscreteTimeIntegrator_gainv_nv;\r\n\r\n  // Update for DiscreteIntegrator: '<S14>/Discrete-Time Integrator1'\r\n  px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator1_DSTAT_g +=\r\n    px42LoopCtrQGC20220313_P.DiscreteTimeIntegrator1_gainv_g *\r\n    px42LoopCtrQGC20220313_B.rtb_DataTypeConversion3_idx_0;\r\n\r\n  // External mode\r\n  rtExtModeUploadCheckTrigger(2);\r\n  rtExtModeUpload(0, (real_T)px42LoopCtrQGC20220313_M->Timing.taskTime0);\r\n\r\n  // signal main to stop simulation\r\n  {                                    // Sample time: [0.005s, 0.0s]\r\n    if ((rtmGetTFinal(px42LoopCtrQGC20220313_M)!=-1) &&\r\n        !((rtmGetTFinal(px42LoopCtrQGC20220313_M)-\r\n           px42LoopCtrQGC20220313_M->Timing.taskTime0) >\r\n          px42LoopCtrQGC20220313_M->Timing.taskTime0 * (DBL_EPSILON))) {\r\n      rtmSetErrorStatus(px42LoopCtrQGC20220313_M, \"Simulation finished\");\r\n    }\r\n\r\n    if (rtmGetStopRequested(px42LoopCtrQGC20220313_M)) {\r\n      rtmSetErrorStatus(px42LoopCtrQGC20220313_M, \"Simulation finished\");\r\n    }\r\n  }\r\n\r\n  // Update absolute time\r\n  // The \"clockTick0\" counts the number of times the code of this task has\r\n  //  been executed. The absolute time is the multiplication of \"clockTick0\"\r\n  //  and \"Timing.stepSize0\". Size of \"clockTick0\" ensures timer will not\r\n  //  overflow during the application lifespan selected.\r\n\r\n  px42LoopCtrQGC20220313_M->Timing.taskTime0 =\r\n    ((time_T)(++px42LoopCtrQGC20220313_M->Timing.clockTick0)) *\r\n    px42LoopCtrQGC20220313_M->Timing.stepSize0;\r\n}\r\n\r\n// Model step function for TID1\r\nvoid px42LoopCtrQGC20220313_step1(void) // Sample time: [0.01s, 0.0s]\r\n{\r\n  uint64_T rtb_timestamp;\r\n  uint32_T rtb_noutputs;\r\n  uint8_T rtb__padding0[4];\r\n  boolean_T b_varargout_1;\r\n  boolean_T rtb_NOT;\r\n\r\n  // Reset subsysRan breadcrumbs\r\n  srClearBC(px42LoopCtrQGC20220313_DW.EnabledSubsystem_SubsysRanBC_b);\r\n\r\n  // MATLABSystem: '<S2>/SourceBlock'\r\n  b_varargout_1 = uORB_read_step(px42LoopCtrQGC20220313_DW.obj_l.orbMetadataObj,\r\n    &px42LoopCtrQGC20220313_DW.obj_l.eventStructObj,\r\n    &px42LoopCtrQGC20220313_B.b_varargout_2_m, false, 1.0);\r\n\r\n  // Outputs for Enabled SubSystem: '<S2>/Enabled Subsystem' incorporates:\r\n  //   EnablePort: '<S43>/Enable'\r\n\r\n  if (b_varargout_1) {\r\n    // SignalConversion generated from: '<S43>/In1'\r\n    px42LoopCtrQGC20220313_B.In1_a = px42LoopCtrQGC20220313_B.b_varargout_2_m;\r\n    srUpdateBC(px42LoopCtrQGC20220313_DW.EnabledSubsystem_SubsysRanBC_b);\r\n  }\r\n\r\n  // End of Outputs for SubSystem: '<S2>/Enabled Subsystem'\r\n\r\n  // SignalConversion generated from: '<Root>/Bus Selector'\r\n  memcpy(&px42LoopCtrQGC20220313_B.output[0],\r\n         &px42LoopCtrQGC20220313_B.In1_a.output[0], sizeof(real32_T) << 4U);\r\n\r\n  // SignalConversion generated from: '<Root>/Bus Selector'\r\n  rtb_timestamp = px42LoopCtrQGC20220313_B.In1_a.timestamp;\r\n\r\n  // SignalConversion generated from: '<Root>/Bus Selector'\r\n  rtb_noutputs = px42LoopCtrQGC20220313_B.In1_a.noutputs;\r\n\r\n  // SignalConversion generated from: '<Root>/Bus Selector'\r\n  rtb__padding0[0] = px42LoopCtrQGC20220313_B.In1_a._padding0[0];\r\n  rtb__padding0[1] = px42LoopCtrQGC20220313_B.In1_a._padding0[1];\r\n  rtb__padding0[2] = px42LoopCtrQGC20220313_B.In1_a._padding0[2];\r\n  rtb__padding0[3] = px42LoopCtrQGC20220313_B.In1_a._padding0[3];\r\n\r\n  // Logic: '<S2>/NOT' incorporates:\r\n  //   MATLABSystem: '<S2>/SourceBlock'\r\n\r\n  rtb_NOT = !b_varargout_1;\r\n  rtExtModeUpload(1, (real_T)((px42LoopCtrQGC20220313_M->Timing.clockTick1) *\r\n    0.01));\r\n\r\n  // Update absolute time\r\n  // The \"clockTick1\" counts the number of times the code of this task has\r\n  //  been executed. The resolution of this integer timer is 0.01, which is the step size\r\n  //  of the task. Size of \"clockTick1\" ensures timer will not overflow during the\r\n  //  application lifespan selected.\r\n\r\n  px42LoopCtrQGC20220313_M->Timing.clockTick1++;\r\n}\r\n\r\n// Use this function only if you need to maintain compatibility with an existing static main program.\r\nvoid px42LoopCtrQGC20220313_step(int_T tid)\r\n{\r\n  switch (tid) {\r\n   case 0 :\r\n    px42LoopCtrQGC20220313_step0();\r\n    break;\r\n\r\n   case 1 :\r\n    px42LoopCtrQGC20220313_step1();\r\n    break;\r\n\r\n   default :\r\n    // do nothing\r\n    break;\r\n  }\r\n}\r\n\r\n// Model initialize function\r\nvoid px42LoopCtrQGC20220313_initialize(void)\r\n{\r\n  // Registration code\r\n\r\n  // initialize non-finites\r\n  rt_InitInfAndNaN(sizeof(real_T));\r\n  rtmSetTFinal(px42LoopCtrQGC20220313_M, -1);\r\n  px42LoopCtrQGC20220313_M->Timing.stepSize0 = 0.005;\r\n\r\n  // External mode info\r\n  px42LoopCtrQGC20220313_M->Sizes.checksums[0] = (2381993283U);\r\n  px42LoopCtrQGC20220313_M->Sizes.checksums[1] = (3627714463U);\r\n  px42LoopCtrQGC20220313_M->Sizes.checksums[2] = (1324412784U);\r\n  px42LoopCtrQGC20220313_M->Sizes.checksums[3] = (3501579728U);\r\n\r\n  {\r\n    static const sysRanDType rtAlwaysEnabled = SUBSYS_RAN_BC_ENABLE;\r\n    static RTWExtModeInfo rt_ExtModeInfo;\r\n    static const sysRanDType *systemRan[32];\r\n    px42LoopCtrQGC20220313_M->extModeInfo = (&rt_ExtModeInfo);\r\n    rteiSetSubSystemActiveVectorAddresses(&rt_ExtModeInfo, systemRan);\r\n    systemRan[0] = &rtAlwaysEnabled;\r\n    systemRan[1] = &rtAlwaysEnabled;\r\n    systemRan[2] = (sysRanDType *)\r\n      &px42LoopCtrQGC20220313_DW.Subsystem_SubsysRanBC_k;\r\n    systemRan[3] = &rtAlwaysEnabled;\r\n    systemRan[4] = &rtAlwaysEnabled;\r\n    systemRan[5] = &rtAlwaysEnabled;\r\n    systemRan[6] = (sysRanDType *)\r\n      &px42LoopCtrQGC20220313_DW.Subsystem_SubsysRanBC_m;\r\n    systemRan[7] = &rtAlwaysEnabled;\r\n    systemRan[8] = &rtAlwaysEnabled;\r\n    systemRan[9] = &rtAlwaysEnabled;\r\n    systemRan[10] = (sysRanDType *)\r\n      &px42LoopCtrQGC20220313_DW.Subsystem_SubsysRanBC;\r\n    systemRan[11] = &rtAlwaysEnabled;\r\n    systemRan[12] = &rtAlwaysEnabled;\r\n    systemRan[13] = &rtAlwaysEnabled;\r\n    systemRan[14] = &rtAlwaysEnabled;\r\n    systemRan[15] = &rtAlwaysEnabled;\r\n    systemRan[16] = &rtAlwaysEnabled;\r\n    systemRan[17] = &rtAlwaysEnabled;\r\n    systemRan[18] = &rtAlwaysEnabled;\r\n    systemRan[19] = (sysRanDType *)\r\n      &px42LoopCtrQGC20220313_DW.EnabledSubsystem_SubsysRanBC_b;\r\n    systemRan[20] = &rtAlwaysEnabled;\r\n    systemRan[21] = (sysRanDType *)\r\n      &px42LoopCtrQGC20220313_DW.EnabledSubsystem_SubsysRanBC_p;\r\n    systemRan[22] = &rtAlwaysEnabled;\r\n    systemRan[23] = (sysRanDType *)\r\n      &px42LoopCtrQGC20220313_DW.IfActionSubsystem_SubsysRanBC;\r\n    systemRan[24] = (sysRanDType *)\r\n      &px42LoopCtrQGC20220313_DW.IfActionSubsystem1_SubsysRanBC;\r\n    systemRan[25] = (sysRanDType *)\r\n      &px42LoopCtrQGC20220313_DW.IfActionSubsystem2_SubsysRanBC;\r\n    systemRan[26] = (sysRanDType *)\r\n      &px42LoopCtrQGC20220313_DW.EnabledSubsystem_SubsysRanBC;\r\n    systemRan[27] = &rtAlwaysEnabled;\r\n    systemRan[28] = &rtAlwaysEnabled;\r\n    systemRan[29] = (sysRanDType *)\r\n      &px42LoopCtrQGC20220313_DW.Subsystem1_SubsysRanBC;\r\n    systemRan[30] = &rtAlwaysEnabled;\r\n    systemRan[31] = &rtAlwaysEnabled;\r\n    rteiSetModelMappingInfoPtr(px42LoopCtrQGC20220313_M->extModeInfo,\r\n      &px42LoopCtrQGC20220313_M->SpecialInfo.mappingInfo);\r\n    rteiSetChecksumsPtr(px42LoopCtrQGC20220313_M->extModeInfo,\r\n                        px42LoopCtrQGC20220313_M->Sizes.checksums);\r\n    rteiSetTPtr(px42LoopCtrQGC20220313_M->extModeInfo, rtmGetTPtr\r\n                (px42LoopCtrQGC20220313_M));\r\n  }\r\n\r\n  // block I/O\r\n  (void) memset((static_cast<void *>(&px42LoopCtrQGC20220313_B)), 0,\r\n                sizeof(B_px42LoopCtrQGC20220313_T));\r\n\r\n  // states (dwork)\r\n  (void) memset(static_cast<void *>(&px42LoopCtrQGC20220313_DW), 0,\r\n                sizeof(DW_px42LoopCtrQGC20220313_T));\r\n\r\n  // external outputs\r\n  px42LoopCtrQGC20220313_Y.u = 0.0;\r\n\r\n  // data type transition information\r\n  {\r\n    static DataTypeTransInfo dtInfo;\r\n    px42LoopCtrQGC20220313_M->SpecialInfo.mappingInfo = (&dtInfo);\r\n    dtInfo.numDataTypes = 30;\r\n    dtInfo.dataTypeSizes = &rtDataTypeSizes[0];\r\n    dtInfo.dataTypeNames = &rtDataTypeNames[0];\r\n\r\n    // Block I/O transition table\r\n    dtInfo.BTransTable = &rtBTransTable;\r\n\r\n    // Parameters transition table\r\n    dtInfo.PTransTable = &rtPTransTable;\r\n  }\r\n\r\n  {\r\n    boolean_T rtb_DataStoreRead6;\r\n\r\n    // Start for DataStoreMemory: '<S36>/Data Store Memory'\r\n    px42LoopCtrQGC20220313_DW.start_time_yaw =\r\n      px42LoopCtrQGC20220313_P.DataStoreMemory_InitialValue;\r\n\r\n    // Start for DataStoreMemory: '<S18>/Data Store Memory'\r\n    px42LoopCtrQGC20220313_DW.start_time =\r\n      px42LoopCtrQGC20220313_P.DataStoreMemory_InitialValue_l;\r\n\r\n    // Start for DataStoreMemory: '<S27>/Data Store Memory'\r\n    px42LoopCtrQGC20220313_DW.start_time_roll =\r\n      px42LoopCtrQGC20220313_P.DataStoreMemory_InitialValue_b;\r\n\r\n    // Start for Sum: '<S17>/Add' incorporates:\r\n    //   DataStoreMemory: '<S1>/e_pitch'\r\n\r\n    px42LoopCtrQGC20220313_DW.e_pitch =\r\n      px42LoopCtrQGC20220313_P.e_pitch_InitialValue;\r\n\r\n    // Start for Sum: '<S26>/Add' incorporates:\r\n    //   DataStoreMemory: '<S1>/e_pitch1'\r\n\r\n    px42LoopCtrQGC20220313_DW.e_pitch_roll =\r\n      px42LoopCtrQGC20220313_P.e_pitch1_InitialValue;\r\n\r\n    // Start for Sum: '<S35>/Add' incorporates:\r\n    //   DataStoreMemory: '<S1>/e_pitch2'\r\n\r\n    px42LoopCtrQGC20220313_DW.e_pitch_yaw =\r\n      px42LoopCtrQGC20220313_P.e_pitch2_InitialValue;\r\n\r\n    // Start for DataStoreMemory: '<Root>/Data Store Memory'\r\n    px42LoopCtrQGC20220313_DW.attitude_flag =\r\n      px42LoopCtrQGC20220313_P.DataStoreMemory_InitialValue_j;\r\n\r\n    // Start for DataStoreMemory: '<Root>/Data Store Memory10'\r\n    px42LoopCtrQGC20220313_DW.speed_y =\r\n      px42LoopCtrQGC20220313_P.DataStoreMemory10_InitialValue;\r\n\r\n    // Start for DataStoreMemory: '<Root>/Data Store Memory11'\r\n    px42LoopCtrQGC20220313_DW.pos_x =\r\n      px42LoopCtrQGC20220313_P.DataStoreMemory11_InitialValue;\r\n\r\n    // Start for DataStoreMemory: '<Root>/Data Store Memory12'\r\n    px42LoopCtrQGC20220313_DW.pos_y =\r\n      px42LoopCtrQGC20220313_P.DataStoreMemory12_InitialValue;\r\n\r\n    // Start for DataStoreMemory: '<Root>/Data Store Memory16'\r\n    px42LoopCtrQGC20220313_DW.yaw_speed =\r\n      px42LoopCtrQGC20220313_P.DataStoreMemory16_InitialValue;\r\n\r\n    // Start for DataStoreMemory: '<Root>/Data Store Memory17'\r\n    px42LoopCtrQGC20220313_DW.roll_speed =\r\n      px42LoopCtrQGC20220313_P.DataStoreMemory17_InitialValue;\r\n\r\n    // Start for DataStoreMemory: '<Root>/Data Store Memory18'\r\n    px42LoopCtrQGC20220313_DW.pitch_speed =\r\n      px42LoopCtrQGC20220313_P.DataStoreMemory18_InitialValue;\r\n\r\n    // Start for DataStoreMemory: '<Root>/Data Store Memory19'\r\n    px42LoopCtrQGC20220313_DW.pitch_acc =\r\n      px42LoopCtrQGC20220313_P.DataStoreMemory19_InitialValue;\r\n\r\n    // Start for DataStoreMemory: '<Root>/Data Store Memory2'\r\n    px42LoopCtrQGC20220313_DW.accX =\r\n      px42LoopCtrQGC20220313_P.DataStoreMemory2_InitialValue;\r\n\r\n    // Start for DataStoreMemory: '<Root>/Data Store Memory20'\r\n    px42LoopCtrQGC20220313_DW.roll_acc =\r\n      px42LoopCtrQGC20220313_P.DataStoreMemory20_InitialValue;\r\n\r\n    // Start for DataStoreMemory: '<Root>/Data Store Memory21'\r\n    px42LoopCtrQGC20220313_DW.yaw_acc =\r\n      px42LoopCtrQGC20220313_P.DataStoreMemory21_InitialValue;\r\n\r\n    // Start for DataStoreMemory: '<Root>/Data Store Memory28'\r\n    px42LoopCtrQGC20220313_DW.u1 =\r\n      px42LoopCtrQGC20220313_P.DataStoreMemory28_InitialValue;\r\n\r\n    // Start for DataStoreMemory: '<Root>/Data Store Memory29'\r\n    px42LoopCtrQGC20220313_DW.t =\r\n      px42LoopCtrQGC20220313_P.DataStoreMemory29_InitialValue;\r\n\r\n    // Start for DataStoreMemory: '<Root>/Data Store Memory3'\r\n    px42LoopCtrQGC20220313_DW.accY =\r\n      px42LoopCtrQGC20220313_P.DataStoreMemory3_InitialValue;\r\n\r\n    // Start for DataStoreMemory: '<Root>/Data Store Memory30'\r\n    px42LoopCtrQGC20220313_DW.observer_flag =\r\n      px42LoopCtrQGC20220313_P.DataStoreMemory30_InitialValue;\r\n\r\n    // Start for DataStoreMemory: '<Root>/Data Store Memory4'\r\n    px42LoopCtrQGC20220313_DW.pitch =\r\n      px42LoopCtrQGC20220313_P.DataStoreMemory4_InitialValue;\r\n\r\n    // Start for DataStoreMemory: '<Root>/Data Store Memory6'\r\n    px42LoopCtrQGC20220313_DW.roll =\r\n      px42LoopCtrQGC20220313_P.DataStoreMemory6_InitialValue;\r\n\r\n    // Start for DataStoreMemory: '<Root>/Data Store Memory8'\r\n    px42LoopCtrQGC20220313_DW.yaw =\r\n      px42LoopCtrQGC20220313_P.DataStoreMemory8_InitialValue;\r\n\r\n    // Start for DataStoreMemory: '<Root>/Data Store Memory9'\r\n    px42LoopCtrQGC20220313_DW.speed_x =\r\n      px42LoopCtrQGC20220313_P.DataStoreMemory9_InitialValue;\r\n    px42LoopCtrQGC20220313_PrevZCX.Subsystem_Trig_ZCE_e = POS_ZCSIG;\r\n    px42LoopCtrQGC20220313_PrevZCX.Subsystem_Trig_ZCE_j = POS_ZCSIG;\r\n    px42LoopCtrQGC20220313_PrevZCX.Subsystem_Trig_ZCE = POS_ZCSIG;\r\n\r\n    // InitializeConditions for UnitDelay: '<S34>/UD'\r\n    //\r\n    //  Block description for '<S34>/UD':\r\n    //\r\n    //   Store in Global RAM\r\n\r\n    px42LoopCtrQGC20220313_DW.UD_DSTATE =\r\n      px42LoopCtrQGC20220313_P.DiscreteDerivative1_ICPrevScale;\r\n\r\n    // InitializeConditions for DiscreteIntegrator: '<S15>/Discrete-Time Integrator3' \r\n    px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator3_DSTATE =\r\n      px42LoopCtrQGC20220313_P.DiscreteTimeIntegrator3_IC;\r\n\r\n    // InitializeConditions for UnitDelay: '<S16>/UD'\r\n    //\r\n    //  Block description for '<S16>/UD':\r\n    //\r\n    //   Store in Global RAM\r\n\r\n    px42LoopCtrQGC20220313_DW.UD_DSTATE_b =\r\n      px42LoopCtrQGC20220313_P.DiscreteDerivative1_ICPrevSca_o;\r\n\r\n    // InitializeConditions for DiscreteIntegrator: '<S13>/Discrete-Time Integrator3' \r\n    px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator3_DSTAT_a =\r\n      px42LoopCtrQGC20220313_P.DiscreteTimeIntegrator3_IC_k;\r\n\r\n    // InitializeConditions for UnitDelay: '<S25>/UD'\r\n    //\r\n    //  Block description for '<S25>/UD':\r\n    //\r\n    //   Store in Global RAM\r\n\r\n    px42LoopCtrQGC20220313_DW.UD_DSTATE_n =\r\n      px42LoopCtrQGC20220313_P.DiscreteDerivative1_ICPrevSca_d;\r\n\r\n    // InitializeConditions for DiscreteIntegrator: '<S14>/Discrete-Time Integrator3' \r\n    px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator3_DSTAT_m =\r\n      px42LoopCtrQGC20220313_P.DiscreteTimeIntegrator3_IC_l;\r\n\r\n    // InitializeConditions for DiscreteIntegrator: '<S15>/Discrete-Time Integrator' \r\n    px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator_DSTATE =\r\n      px42LoopCtrQGC20220313_P.DiscreteTimeIntegrator_IC_l;\r\n\r\n    // InitializeConditions for DiscreteIntegrator: '<S15>/Discrete-Time Integrator1' \r\n    px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator1_DSTATE =\r\n      px42LoopCtrQGC20220313_P.DiscreteTimeIntegrator1_IC;\r\n\r\n    // InitializeConditions for DiscreteIntegrator: '<S13>/Discrete-Time Integrator' \r\n    px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator_DSTATE_p =\r\n      px42LoopCtrQGC20220313_P.DiscreteTimeIntegrator_IC_h;\r\n\r\n    // InitializeConditions for DiscreteIntegrator: '<S13>/Discrete-Time Integrator1' \r\n    px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator1_DSTAT_i =\r\n      px42LoopCtrQGC20220313_P.DiscreteTimeIntegrator1_IC_j;\r\n\r\n    // InitializeConditions for DiscreteIntegrator: '<S14>/Discrete-Time Integrator' \r\n    px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator_DSTATE_f =\r\n      px42LoopCtrQGC20220313_P.DiscreteTimeIntegrator_IC_o;\r\n\r\n    // InitializeConditions for DiscreteIntegrator: '<S14>/Discrete-Time Integrator1' \r\n    px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator1_DSTAT_g =\r\n      px42LoopCtrQGC20220313_P.DiscreteTimeIntegrator1_IC_c;\r\n\r\n    // SystemInitialize for Enabled SubSystem: '<S2>/Enabled Subsystem'\r\n    // SystemInitialize for SignalConversion generated from: '<S43>/In1' incorporates:\r\n    //   Outport: '<S43>/Out1'\r\n\r\n    px42LoopCtrQGC20220313_B.In1_a = px42LoopCtrQGC20220313_P.Out1_Y0_k;\r\n\r\n    // End of SystemInitialize for SubSystem: '<S2>/Enabled Subsystem'\r\n\r\n    // SystemInitialize for Enabled SubSystem: '<S3>/Enabled Subsystem'\r\n    // SystemInitialize for SignalConversion generated from: '<S44>/In1' incorporates:\r\n    //   Outport: '<S44>/Out1'\r\n\r\n    px42LoopCtrQGC20220313_B.In1 = px42LoopCtrQGC20220313_P.Out1_Y0;\r\n\r\n    // End of SystemInitialize for SubSystem: '<S3>/Enabled Subsystem'\r\n\r\n    // SystemInitialize for Enabled SubSystem: '<S53>/Enabled Subsystem'\r\n    // SystemInitialize for SignalConversion generated from: '<S54>/In1' incorporates:\r\n    //   Outport: '<S54>/Out1'\r\n\r\n    px42LoopCtrQGC20220313_B.In1_k = px42LoopCtrQGC20220313_P.Out1_Y0_g;\r\n\r\n    // End of SystemInitialize for SubSystem: '<S53>/Enabled Subsystem'\r\n\r\n    // SystemInitialize for Enabled SubSystem: '<Root>/Subsystem1'\r\n    // InitializeConditions for DiscreteIntegrator: '<S6>/Discrete-Time Integrator' \r\n    px42LoopCtrQGC20220313_DW.DiscreteTimeIntegrator_DSTAT_fj =\r\n      px42LoopCtrQGC20220313_P.DiscreteTimeIntegrator_IC;\r\n\r\n    // End of SystemInitialize for SubSystem: '<Root>/Subsystem1'\r\n\r\n    // Start for MATLABSystem: '<S3>/SourceBlock'\r\n    px42LoopCtrQGC20220313_DW.obj_n.matlabCodegenIsDeleted = false;\r\n    px42LoopCtrQGC20220313_DW.obj_n.isSetupComplete = false;\r\n    px42LoopCtrQGC20220313_DW.obj_n.isInitialized = 1;\r\n    px42LoopCtrQGC20220313_DW.obj_n.orbMetadataObj = ORB_ID(vehicle_odometry);\r\n    uORB_read_initialize(px42LoopCtrQGC20220313_DW.obj_n.orbMetadataObj,\r\n                         &px42LoopCtrQGC20220313_DW.obj_n.eventStructObj);\r\n    px42LoopCtrQGC20220313_DW.obj_n.isSetupComplete = true;\r\n\r\n    // Start for MATLABSystem: '<S53>/SourceBlock'\r\n    px42LoopCtrQGC20220313_DW.obj_a.matlabCodegenIsDeleted = false;\r\n    px42LoopCtrQGC20220313_DW.obj_a.isSetupComplete = false;\r\n    px42LoopCtrQGC20220313_DW.obj_a.isInitialized = 1;\r\n    px42LoopCtrQGC20220313_DW.obj_a.orbMetadataObj = ORB_ID(input_rc);\r\n    uORB_read_initialize(px42LoopCtrQGC20220313_DW.obj_a.orbMetadataObj,\r\n                         &px42LoopCtrQGC20220313_DW.obj_a.eventStructObj);\r\n    px42LoopCtrQGC20220313_DW.obj_a.isSetupComplete = true;\r\n\r\n    // Start for MATLABSystem: '<Root>/PX4 PWM Output1' incorporates:\r\n    //   Constant: '<Root>/Constant2'\r\n\r\n    px42LoopCtrQGC20220313_DW.obj.errorStatus = 0U;\r\n    px42LoopCtrQGC20220313_DW.obj.isInitialized = 0;\r\n    px42LoopCtrQGC20220313_DW.obj.matlabCodegenIsDeleted = false;\r\n    px42LoopCtrQGC_SystemCore_setup(&px42LoopCtrQGC20220313_DW.obj,\r\n      rtb_DataStoreRead6, px42LoopCtrQGC20220313_P.Constant2_Value_kf);\r\n\r\n    // Start for MATLABSystem: '<Root>/Serial Transmit1'\r\n    px42LoopCtrQGC20220313_DW.obj_e.isInitialized = 0;\r\n    px42LoopCtrQGC20220313_DW.obj_e.SCIDriverObj.MW_SCIHANDLE = NULL;\r\n    px42LoopCtrQGC20220313_DW.obj_e.matlabCodegenIsDeleted = false;\r\n    px42LoopCtrQ_SystemCore_setup_k(&px42LoopCtrQGC20220313_DW.obj_e);\r\n\r\n    // Start for MATLABSystem: '<S2>/SourceBlock'\r\n    px42LoopCtrQGC20220313_DW.obj_l.matlabCodegenIsDeleted = false;\r\n    px42LoopCtrQGC20220313_DW.obj_l.isSetupComplete = false;\r\n    px42LoopCtrQGC20220313_DW.obj_l.isInitialized = 1;\r\n    px42LoopCtrQGC20220313_DW.obj_l.orbMetadataObj = ORB_ID(actuator_outputs);\r\n    uORB_read_initialize(px42LoopCtrQGC20220313_DW.obj_l.orbMetadataObj,\r\n                         &px42LoopCtrQGC20220313_DW.obj_l.eventStructObj);\r\n    px42LoopCtrQGC20220313_DW.obj_l.isSetupComplete = true;\r\n\r\n    // Enable for Sin: '<Root>/Sine Wave'\r\n    px42LoopCtrQGC20220313_DW.systemEnable = 1;\r\n\r\n    // ConstCode for Outport: '<Root>/u'\r\n    px42LoopCtrQGC20220313_Y.u = 0.0;\r\n  }\r\n}\r\n\r\n// Model terminate function\r\nvoid px42LoopCtrQGC20220313_terminate(void)\r\n{\r\n  // Terminate for MATLABSystem: '<S3>/SourceBlock'\r\n  if (!px42LoopCtrQGC20220313_DW.obj_n.matlabCodegenIsDeleted) {\r\n    px42LoopCtrQGC20220313_DW.obj_n.matlabCodegenIsDeleted = true;\r\n    if ((px42LoopCtrQGC20220313_DW.obj_n.isInitialized == 1) &&\r\n        px42LoopCtrQGC20220313_DW.obj_n.isSetupComplete) {\r\n      uORB_read_terminate(&px42LoopCtrQGC20220313_DW.obj_n.eventStructObj);\r\n    }\r\n  }\r\n\r\n  // End of Terminate for MATLABSystem: '<S3>/SourceBlock'\r\n\r\n  // Terminate for MATLABSystem: '<S53>/SourceBlock'\r\n  if (!px42LoopCtrQGC20220313_DW.obj_a.matlabCodegenIsDeleted) {\r\n    px42LoopCtrQGC20220313_DW.obj_a.matlabCodegenIsDeleted = true;\r\n    if ((px42LoopCtrQGC20220313_DW.obj_a.isInitialized == 1) &&\r\n        px42LoopCtrQGC20220313_DW.obj_a.isSetupComplete) {\r\n      uORB_read_terminate(&px42LoopCtrQGC20220313_DW.obj_a.eventStructObj);\r\n    }\r\n  }\r\n\r\n  // End of Terminate for MATLABSystem: '<S53>/SourceBlock'\r\n\r\n  // Terminate for MATLABSystem: '<Root>/PX4 PWM Output1'\r\n  if (!px42LoopCtrQGC20220313_DW.obj.matlabCodegenIsDeleted) {\r\n    px42LoopCtrQGC20220313_DW.obj.matlabCodegenIsDeleted = true;\r\n    if ((px42LoopCtrQGC20220313_DW.obj.isInitialized == 1) &&\r\n        px42LoopCtrQGC20220313_DW.obj.isSetupComplete) {\r\n      uint16_T status;\r\n      status = pwm_disarm(&px42LoopCtrQGC20220313_DW.obj.pwmDevHandler,\r\n                          &px42LoopCtrQGC20220313_DW.obj.armAdvertiseObj);\r\n      px42LoopCtrQGC20220313_DW.obj.errorStatus = static_cast<uint16_T>\r\n        (px42LoopCtrQGC20220313_DW.obj.errorStatus | status);\r\n      status = pwm_resetServo(&px42LoopCtrQGC20220313_DW.obj.pwmDevHandler,\r\n        px42LoopCtrQGC20220313_DW.obj.servoCount,\r\n        px42LoopCtrQGC20220313_DW.obj.channelMask,\r\n        px42LoopCtrQGC20220313_DW.obj.isMain,\r\n        &px42LoopCtrQGC20220313_DW.obj.actuatorAdvertiseObj);\r\n      px42LoopCtrQGC20220313_DW.obj.errorStatus = static_cast<uint16_T>\r\n        (px42LoopCtrQGC20220313_DW.obj.errorStatus | status);\r\n      status = pwm_close(&px42LoopCtrQGC20220313_DW.obj.pwmDevHandler,\r\n                         &px42LoopCtrQGC20220313_DW.obj.actuatorAdvertiseObj,\r\n                         &px42LoopCtrQGC20220313_DW.obj.armAdvertiseObj);\r\n      px42LoopCtrQGC20220313_DW.obj.errorStatus = static_cast<uint16_T>\r\n        (px42LoopCtrQGC20220313_DW.obj.errorStatus | status);\r\n    }\r\n  }\r\n\r\n  // End of Terminate for MATLABSystem: '<Root>/PX4 PWM Output1'\r\n\r\n  // Terminate for MATLABSystem: '<Root>/Serial Transmit1'\r\n  if (!px42LoopCtrQGC20220313_DW.obj_e.matlabCodegenIsDeleted) {\r\n    px42LoopCtrQGC20220313_DW.obj_e.matlabCodegenIsDeleted = true;\r\n    if ((px42LoopCtrQGC20220313_DW.obj_e.isInitialized == 1) &&\r\n        px42LoopCtrQGC20220313_DW.obj_e.isSetupComplete) {\r\n      MW_SCI_Close(px42LoopCtrQGC20220313_DW.obj_e.SCIDriverObj.MW_SCIHANDLE);\r\n    }\r\n  }\r\n\r\n  // End of Terminate for MATLABSystem: '<Root>/Serial Transmit1'\r\n\r\n  // Terminate for MATLABSystem: '<S2>/SourceBlock'\r\n  if (!px42LoopCtrQGC20220313_DW.obj_l.matlabCodegenIsDeleted) {\r\n    px42LoopCtrQGC20220313_DW.obj_l.matlabCodegenIsDeleted = true;\r\n    if ((px42LoopCtrQGC20220313_DW.obj_l.isInitialized == 1) &&\r\n        px42LoopCtrQGC20220313_DW.obj_l.isSetupComplete) {\r\n      uORB_read_terminate(&px42LoopCtrQGC20220313_DW.obj_l.eventStructObj);\r\n    }\r\n  }\r\n\r\n  // End of Terminate for MATLABSystem: '<S2>/SourceBlock'\r\n}\r\n\r\n//\r\n// File trailer for generated code.\r\n//\r\n// [EOF]\r\n//\r\n"},{"name":"px42LoopCtrQGC20220313.h","type":"header","group":"model","path":"D:\\simulink\\PX4QGCGPSCtrl\\work\\code\\px42LoopCtrQGC20220313_ert_rtw","tag":"","groupDisplay":"Model files","code":"//\r\n// Academic License - for use in teaching, academic research, and meeting\r\n// course requirements at degree granting institutions only.  Not for\r\n// government, commercial, or other organizational use.\r\n//\r\n// File: px42LoopCtrQGC20220313.h\r\n//\r\n// Code generated for Simulink model 'px42LoopCtrQGC20220313'.\r\n//\r\n// Model version                  : 5.5\r\n// Simulink Coder version         : 9.7 (R2022a) 13-Nov-2021\r\n// C/C++ source code generated on : Wed Mar 16 10:17:15 2022\r\n//\r\n// Target selection: ert.tlc\r\n// Embedded hardware selection: ARM Compatible->ARM Cortex\r\n// Code generation objectives: Unspecified\r\n// Validation result: Not run\r\n//\r\n#ifndef RTW_HEADER_px42LoopCtrQGC20220313_h_\r\n#define RTW_HEADER_px42LoopCtrQGC20220313_h_\r\n#include <poll.h>\r\n#include <uORB/uORB.h>\r\n#include \"rtwtypes.h\"\r\n#include \"rtw_extmode.h\"\r\n#include \"sysran_types.h\"\r\n#include \"dt_info.h\"\r\n#include \"ext_work.h\"\r\n#include \"MW_PX4_PWM.h\"\r\n#include \"MW_uORB_Read.h\"\r\n#include \"MW_SCI.h\"\r\n#include \"px42LoopCtrQGC20220313_types.h\"\r\n#include <uORB/topics/vehicle_odometry.h>\r\n#include <uORB/topics/actuator_outputs.h>\r\n#include <uORB/topics/input_rc.h>\r\n#include <float.h>\r\n#include <string.h>\r\n\r\nextern \"C\" {\r\n\r\n#include \"rt_nonfinite.h\"\r\n\r\n}\r\n#include <stddef.h>\r\n#include \"zero_crossing_types.h\"\r\n\r\n// Macros for accessing real-time model data structure\r\n#ifndef rtmGetFinalTime\r\n#define rtmGetFinalTime(rtm)           ((rtm)->Timing.tFinal)\r\n#endif\r\n\r\n#ifndef rtmGetRTWExtModeInfo\r\n#define rtmGetRTWExtModeInfo(rtm)      ((rtm)->extModeInfo)\r\n#endif\r\n\r\n#ifndef rtmGetErrorStatus\r\n#define rtmGetErrorStatus(rtm)         ((rtm)->errorStatus)\r\n#endif\r\n\r\n#ifndef rtmSetErrorStatus\r\n#define rtmSetErrorStatus(rtm, val)    ((rtm)->errorStatus = (val))\r\n#endif\r\n\r\n#ifndef rtmStepTask\r\n#define rtmStepTask(rtm, idx)          ((rtm)->Timing.TaskCounters.TID[(idx)] == 0)\r\n#endif\r\n\r\n#ifndef rtmGetStopRequested\r\n#define rtmGetStopRequested(rtm)       ((rtm)->Timing.stopRequestedFlag)\r\n#endif\r\n\r\n#ifndef rtmSetStopRequested\r\n#define rtmSetStopRequested(rtm, val)  ((rtm)->Timing.stopRequestedFlag = (val))\r\n#endif\r\n\r\n#ifndef rtmGetStopRequestedPtr\r\n#define rtmGetStopRequestedPtr(rtm)    (&((rtm)->Timing.stopRequestedFlag))\r\n#endif\r\n\r\n#ifndef rtmGetT\r\n#define rtmGetT(rtm)                   ((rtm)->Timing.taskTime0)\r\n#endif\r\n\r\n#ifndef rtmGetTFinal\r\n#define rtmGetTFinal(rtm)              ((rtm)->Timing.tFinal)\r\n#endif\r\n\r\n#ifndef rtmGetTPtr\r\n#define rtmGetTPtr(rtm)                (&(rtm)->Timing.taskTime0)\r\n#endif\r\n\r\n#ifndef rtmTaskCounter\r\n#define rtmTaskCounter(rtm, idx)       ((rtm)->Timing.TaskCounters.TID[(idx)])\r\n#endif\r\n\r\n// Block signals (default storage)\r\nstruct B_px42LoopCtrQGC20220313_T {\r\n  px4_Bus_vehicle_odometry In1;        // '<S44>/In1'\r\n  px4_Bus_vehicle_odometry b_varargout_2;\r\n  px4_Bus_actuator_outputs In1_a;      // '<S43>/In1'\r\n  px4_Bus_actuator_outputs b_varargout_2_m;\r\n  px4_Bus_input_rc In1_k;              // '<S54>/In1'\r\n  px4_Bus_input_rc b_varargout_2_c;\r\n  uint8_T TxDataLocChar[32];\r\n  real_T TmpSignalConversionAtProduc[4];\r\n  uint16_T pwmValue[8];\r\n  real_T Gain2;                        // '<S1>/Gain2'\r\n  real_T J;                            // '<S1>/J'\r\n  real_T DataStoreRead4;               // '<S36>/Data Store Read4'\r\n  real_T DataStoreRead4_g;             // '<S18>/Data Store Read4'\r\n  real_T DataStoreRead4_b;             // '<S27>/Data Store Read4'\r\n  real_T rolldegree;                   // '<S15>/Gain2'\r\n  real_T rolldegree_l;                 // '<S13>/Gain2'\r\n  real_T rolldegree_c;                 // '<S14>/Gain2'\r\n  real_T pitch;                        // '<Root>/Gain8'\r\n  real_T pitch_a;                      // '<Root>/Gain10'\r\n  real_T roll;                         // '<Root>/Gain7'\r\n  real_T pitch_g;                      // '<Root>/Gain11'\r\n  real_T yaw;                          // '<Root>/Gain9'\r\n  real_T Gain5;                        // '<Root>/Gain5'\r\n  real_T Gain3;                        // '<Root>/Gain3'\r\n  real_T DataStoreRead13;              // '<Root>/Data Store Read13'\r\n  real_T DataStoreRead15;              // '<Root>/Data Store Read15'\r\n  real_T DataStoreRead16;              // '<Root>/Data Store Read16'\r\n  real_T DataStoreRead17;              // '<Root>/Data Store Read17'\r\n  real_T DataStoreRead19;              // '<Root>/Data Store Read19'\r\n  real_T Gain6;                        // '<Root>/Gain6'\r\n  real_T DataStoreRead25;              // '<Root>/Data Store Read25'\r\n  real_T DataStoreRead26;              // '<Root>/Data Store Read26'\r\n  real_T DataStoreRead27;              // '<Root>/Data Store Read27'\r\n  real_T pitch_thrust;                 // '<Root>/Data Store Read28'\r\n  real_T roll_thrust;                  // '<Root>/Data Store Read29'\r\n  real_T yaw_thrust;                   // '<Root>/Data Store Read32'\r\n  real_T DataStoreRead41;              // '<Root>/Data Store Read41'\r\n  real_T DataStoreRead34;              // '<Root>/Data Store Read34'\r\n  real_T DataStoreRead35;              // '<Root>/Data Store Read35'\r\n  real_T DataStoreRead36;              // '<Root>/Data Store Read36'\r\n  real_T DataStoreRead37;              // '<Root>/Data Store Read37'\r\n  real_T DataStoreRead38;              // '<Root>/Data Store Read38'\r\n  real_T DataStoreRead39;              // '<Root>/Data Store Read39'\r\n  real_T DataStoreRead48;              // '<Root>/Data Store Read48'\r\n  real_T DataStoreRead49;              // '<Root>/Data Store Read49'\r\n  real_T DataStoreRead55;              // '<Root>/Data Store Read55'\r\n  real_T DataStoreRead8;               // '<Root>/Data Store Read8'\r\n  real_T DataStoreRead9;               // '<Root>/Data Store Read9'\r\n  real_T y;                            // '<S36>/MATLAB Function'\r\n  real_T y_o;                          // '<S27>/MATLAB Function'\r\n  real_T y_j;                          // '<S18>/MATLAB Function'\r\n  real32_T output[16];\r\n                 // '<Root>/BusConversion_InsertedFor_Bus Selector_at_inport_0'\r\n  uint16_T values[18];\r\n  real_T ManualSwitch_g;               // '<Root>/Manual Switch'\r\n  real_T z2;                           // '<S15>/Discrete-Time Integrator3'\r\n  real_T TSamp;                        // '<S34>/TSamp'\r\n  real_T Add3;                         // '<S1>/Add3'\r\n  real_T roll_hat;                     // '<S15>/Discrete-Time Integrator'\r\n  real_T z2_e;                         // '<S13>/Discrete-Time Integrator3'\r\n  real_T z2_l;                         // '<S14>/Discrete-Time Integrator3'\r\n  real_T Abs6;                         // '<S14>/Abs6'\r\n  real_T Product2_d;                   // '<S46>/Product2'\r\n  real_T roll_hat_e;                   // '<S13>/Discrete-Time Integrator'\r\n  real_T Product4;                     // '<S15>/Product4'\r\n  real_T Product6;                     // '<S15>/Product6'\r\n  real_T lambda1_a;                    // '<S13>/lambda1'\r\n  real_T Product1_p;                   // '<S46>/Product1'\r\n  real_T roll_hat_k;                   // '<S14>/Discrete-Time Integrator'\r\n  real_T Product3_a;                   // '<S13>/Product3'\r\n  real_T Product4_k;                   // '<S13>/Product4'\r\n  real_T Product6_i;                   // '<S13>/Product6'\r\n  real_T Product5_b;                   // '<S13>/Product5'\r\n  real_T Add2_o;                       // '<S13>/Add2'\r\n  real_T lambda4_n;                    // '<S13>/lambda4'\r\n  real_T lambda1_e;                    // '<S14>/lambda1'\r\n  real_T fcn5;                         // '<S4>/fcn5'\r\n  real_T Product3_i;                   // '<S46>/Product3'\r\n  real_T Product3_c;                   // '<S14>/Product3'\r\n  real_T Product4_g;                   // '<S14>/Product4'\r\n  real_T Product6_a;                   // '<S14>/Product6'\r\n  real_T Product5_l;                   // '<S14>/Product5'\r\n  real_T lambda4_h;                    // '<S14>/lambda4'\r\n  real_T fcn3;                         // '<S4>/fcn3'\r\n  real_T rtb_Fcn_a_k;\r\n  real_T rtb_Fcn_b_c;\r\n  real_T rtb_Fcn_bh;\r\n  real_T rtb_DataTypeConversion3_idx_0;\r\n  real_T rtb_DataTypeConversion3_idx_1;\r\n  real_T rtb_DataTypeConversion3_idx_2;\r\n  real_T rtb_Product1_p_p;\r\n  uint16_T Gain4[4];                   // '<Root>/Gain4'\r\n  boolean_T Switch3;                   // '<Root>/Switch3'\r\n  boolean_T NOT;                       // '<S3>/NOT'\r\n  boolean_T DataStoreRead12;           // '<Root>/Data Store Read12'\r\n};\r\n\r\n// Block states (default storage) for system '<Root>'\r\nstruct DW_px42LoopCtrQGC20220313_T {\r\n  px4_internal_block_PWM_px42Lo_T obj; // '<Root>/PX4 PWM Output1'\r\n  px4_internal_block_Subscriber_T obj_a;// '<S53>/SourceBlock'\r\n  px4_internal_block_Subscriber_T obj_n;// '<S3>/SourceBlock'\r\n  px4_internal_block_Subscriber_T obj_l;// '<S2>/SourceBlock'\r\n  px4_internal_block_PX4SCIWrit_T obj_e;// '<Root>/Serial Transmit1'\r\n  real_T UD_DSTATE;                    // '<S34>/UD'\r\n  real_T DiscreteTimeIntegrator3_DSTATE;// '<S15>/Discrete-Time Integrator3'\r\n  real_T UD_DSTATE_b;                  // '<S16>/UD'\r\n  real_T DiscreteTimeIntegrator3_DSTAT_a;// '<S13>/Discrete-Time Integrator3'\r\n  real_T UD_DSTATE_n;                  // '<S25>/UD'\r\n  real_T DiscreteTimeIntegrator3_DSTAT_m;// '<S14>/Discrete-Time Integrator3'\r\n  real_T DiscreteTimeIntegrator_DSTATE;// '<S15>/Discrete-Time Integrator'\r\n  real_T DiscreteTimeIntegrator1_DSTATE;// '<S15>/Discrete-Time Integrator1'\r\n  real_T DiscreteTimeIntegrator_DSTATE_p;// '<S13>/Discrete-Time Integrator'\r\n  real_T DiscreteTimeIntegrator1_DSTAT_i;// '<S13>/Discrete-Time Integrator1'\r\n  real_T DiscreteTimeIntegrator_DSTATE_f;// '<S14>/Discrete-Time Integrator'\r\n  real_T DiscreteTimeIntegrator1_DSTAT_g;// '<S14>/Discrete-Time Integrator1'\r\n  real_T DiscreteTimeIntegrator_DSTAT_fj;// '<S6>/Discrete-Time Integrator'\r\n  real_T lastSin;                      // '<Root>/Sine Wave'\r\n  real_T lastCos;                      // '<Root>/Sine Wave'\r\n  real_T start_time_yaw;               // '<S36>/Data Store Memory'\r\n  real_T start_time;                   // '<S18>/Data Store Memory'\r\n  real_T start_time_roll;              // '<S27>/Data Store Memory'\r\n  real_T e_pitch;                      // '<S1>/e_pitch'\r\n  real_T e_pitch_roll;                 // '<S1>/e_pitch1'\r\n  real_T e_pitch_yaw;                  // '<S1>/e_pitch2'\r\n  real_T speed_y;                      // '<Root>/Data Store Memory10'\r\n  real_T pos_x;                        // '<Root>/Data Store Memory11'\r\n  real_T pos_y;                        // '<Root>/Data Store Memory12'\r\n  real_T yaw_speed;                    // '<Root>/Data Store Memory16'\r\n  real_T roll_speed;                   // '<Root>/Data Store Memory17'\r\n  real_T pitch_speed;                  // '<Root>/Data Store Memory18'\r\n  real_T pitch_acc;                    // '<Root>/Data Store Memory19'\r\n  real_T accX;                         // '<Root>/Data Store Memory2'\r\n  real_T roll_acc;                     // '<Root>/Data Store Memory20'\r\n  real_T yaw_acc;                      // '<Root>/Data Store Memory21'\r\n  real_T u1;                           // '<Root>/Data Store Memory28'\r\n  real_T t;                            // '<Root>/Data Store Memory29'\r\n  real_T accY;                         // '<Root>/Data Store Memory3'\r\n  real_T pitch;                        // '<Root>/Data Store Memory4'\r\n  real_T roll;                         // '<Root>/Data Store Memory6'\r\n  real_T yaw;                          // '<Root>/Data Store Memory8'\r\n  real_T speed_x;                      // '<Root>/Data Store Memory9'\r\n  struct {\r\n    void *LoggedData;\r\n  } Scope_PWORK;                       // '<S36>/Scope'\r\n\r\n  struct {\r\n    void *LoggedData;\r\n  } Scope_PWORK_o;                     // '<S18>/Scope'\r\n\r\n  struct {\r\n    void *LoggedData;\r\n  } Scope_PWORK_i;                     // '<S27>/Scope'\r\n\r\n  struct {\r\n    void *LoggedData;\r\n  } Scope_PWORK_ot;                    // '<S15>/Scope'\r\n\r\n  struct {\r\n    void *LoggedData[2];\r\n  } Scope_PWORK_f;                     // '<S1>/Scope'\r\n\r\n  struct {\r\n    void *LoggedData;\r\n  } Scope_PWORK_b;                     // '<S13>/Scope'\r\n\r\n  struct {\r\n    void *LoggedData;\r\n  } Scope_PWORK_j;                     // '<S14>/Scope'\r\n\r\n  struct {\r\n    void *LoggedData[3];\r\n  } Scope_PWORK_m;                     // '<Root>/Scope'\r\n\r\n  struct {\r\n    void *LoggedData[4];\r\n  } Scope1_PWORK;                      // '<Root>/Scope1'\r\n\r\n  struct {\r\n    void *LoggedData[2];\r\n  } Scope2_PWORK;                      // '<Root>/Scope2'\r\n\r\n  int32_T systemEnable;                // '<Root>/Sine Wave'\r\n  int8_T Subsystem1_SubsysRanBC;       // '<Root>/Subsystem1'\r\n  int8_T EnabledSubsystem_SubsysRanBC; // '<S53>/Enabled Subsystem'\r\n  int8_T IfActionSubsystem2_SubsysRanBC;// '<S47>/If Action Subsystem2'\r\n  int8_T IfActionSubsystem1_SubsysRanBC;// '<S47>/If Action Subsystem1'\r\n  int8_T IfActionSubsystem_SubsysRanBC;// '<S47>/If Action Subsystem'\r\n  int8_T EnabledSubsystem_SubsysRanBC_p;// '<S3>/Enabled Subsystem'\r\n  int8_T EnabledSubsystem_SubsysRanBC_b;// '<S2>/Enabled Subsystem'\r\n  int8_T Subsystem_SubsysRanBC;        // '<S39>/Subsystem'\r\n  int8_T Subsystem_SubsysRanBC_m;      // '<S30>/Subsystem'\r\n  int8_T Subsystem_SubsysRanBC_k;      // '<S21>/Subsystem'\r\n  boolean_T attitude_flag;             // '<Root>/Data Store Memory'\r\n  boolean_T observer_flag;             // '<Root>/Data Store Memory30'\r\n};\r\n\r\n// Zero-crossing (trigger) state\r\nstruct PrevZCX_px42LoopCtrQGC2022031_T {\r\n  ZCSigState Subsystem_Trig_ZCE;       // '<S39>/Subsystem'\r\n  ZCSigState Subsystem_Trig_ZCE_j;     // '<S30>/Subsystem'\r\n  ZCSigState Subsystem_Trig_ZCE_e;     // '<S21>/Subsystem'\r\n};\r\n\r\n// External outputs (root outports fed by signals with default storage)\r\nstruct ExtY_px42LoopCtrQGC20220313_T {\r\n  real_T u;                            // '<Root>/u'\r\n};\r\n\r\n// Parameters (default storage)\r\nstruct P_px42LoopCtrQGC20220313_T_ {\r\n  real_T DiscreteDerivative1_ICPrevScale;\r\n                              // Mask Parameter: DiscreteDerivative1_ICPrevScale\r\n                                 //  Referenced by: '<S34>/UD'\r\n\r\n  real_T DiscreteDerivative1_ICPrevSca_o;\r\n                              // Mask Parameter: DiscreteDerivative1_ICPrevSca_o\r\n                                 //  Referenced by: '<S16>/UD'\r\n\r\n  real_T DiscreteDerivative1_ICPrevSca_d;\r\n                              // Mask Parameter: DiscreteDerivative1_ICPrevSca_d\r\n                                 //  Referenced by: '<S25>/UD'\r\n\r\n  real_T CompareToConstant1_const;   // Mask Parameter: CompareToConstant1_const\r\n                                        //  Referenced by: '<S37>/Constant'\r\n\r\n  real_T CompareToConstant1_const_b;\r\n                                   // Mask Parameter: CompareToConstant1_const_b\r\n                                      //  Referenced by: '<S19>/Constant'\r\n\r\n  real_T CompareToConstant1_const_h;\r\n                                   // Mask Parameter: CompareToConstant1_const_h\r\n                                      //  Referenced by: '<S28>/Constant'\r\n\r\n  real_T CompareToConstant2_const;   // Mask Parameter: CompareToConstant2_const\r\n                                        //  Referenced by: '<S41>/Constant'\r\n\r\n  real_T CompareToConstant1_const_hq;\r\n                                  // Mask Parameter: CompareToConstant1_const_hq\r\n                                     //  Referenced by: '<S40>/Constant'\r\n\r\n  real_T CompareToConstant2_const_o;\r\n                                   // Mask Parameter: CompareToConstant2_const_o\r\n                                      //  Referenced by: '<S23>/Constant'\r\n\r\n  real_T CompareToConstant1_const_p;\r\n                                   // Mask Parameter: CompareToConstant1_const_p\r\n                                      //  Referenced by: '<S22>/Constant'\r\n\r\n  real_T CompareToConstant2_const_a;\r\n                                   // Mask Parameter: CompareToConstant2_const_a\r\n                                      //  Referenced by: '<S32>/Constant'\r\n\r\n  real_T CompareToConstant1_const_a;\r\n                                   // Mask Parameter: CompareToConstant1_const_a\r\n                                      //  Referenced by: '<S31>/Constant'\r\n\r\n  px4_Bus_vehicle_odometry Out1_Y0;    // Computed Parameter: Out1_Y0\r\n                                          //  Referenced by: '<S44>/Out1'\r\n\r\n  px4_Bus_vehicle_odometry Constant_Value;// Computed Parameter: Constant_Value\r\n                                             //  Referenced by: '<S3>/Constant'\r\n\r\n  px4_Bus_actuator_outputs Out1_Y0_k;  // Computed Parameter: Out1_Y0_k\r\n                                          //  Referenced by: '<S43>/Out1'\r\n\r\n  px4_Bus_actuator_outputs Constant_Value_c;// Computed Parameter: Constant_Value_c\r\n                                               //  Referenced by: '<S2>/Constant'\r\n\r\n  px4_Bus_input_rc Out1_Y0_g;          // Computed Parameter: Out1_Y0_g\r\n                                          //  Referenced by: '<S54>/Out1'\r\n\r\n  px4_Bus_input_rc Constant_Value_i;   // Computed Parameter: Constant_Value_i\r\n                                          //  Referenced by: '<S53>/Constant'\r\n\r\n  real_T Constant1_Value;              // Expression: 0\r\n                                          //  Referenced by: '<S10>/Constant1'\r\n\r\n  real_T Constant1_Value_n;            // Expression: 0\r\n                                          //  Referenced by: '<S11>/Constant1'\r\n\r\n  real_T Constant1_Value_a;            // Expression: 0\r\n                                          //  Referenced by: '<S12>/Constant1'\r\n\r\n  real_T Saturation_UpperSat;          // Expression: 0.1\r\n                                          //  Referenced by: '<S1>/Saturation'\r\n\r\n  real_T Saturation_LowerSat;          // Expression: -0.1\r\n                                          //  Referenced by: '<S1>/Saturation'\r\n\r\n  real_T Constant_Value_b;             // Expression: 0\r\n                                          //  Referenced by: '<S1>/Constant'\r\n\r\n  real_T Constant3_Value;              // Expression: 0\r\n                                          //  Referenced by: '<S13>/Constant3'\r\n\r\n  real_T Constant3_Value_a;            // Expression: 0\r\n                                          //  Referenced by: '<S14>/Constant3'\r\n\r\n  real_T Constant3_Value_d;            // Expression: 0\r\n                                          //  Referenced by: '<S15>/Constant3'\r\n\r\n  real_T Constant_Value_e;             // Expression: 1\r\n                                          //  Referenced by: '<S48>/Constant'\r\n\r\n  real_T Constant_Value_b1;            // Expression: 1\r\n                                          //  Referenced by: '<S49>/Constant'\r\n\r\n  real_T DiscreteTimeIntegrator_gainval;\r\n                           // Computed Parameter: DiscreteTimeIntegrator_gainval\r\n                              //  Referenced by: '<S6>/Discrete-Time Integrator'\r\n\r\n  real_T DiscreteTimeIntegrator_IC;    // Expression: 0\r\n                                          //  Referenced by: '<S6>/Discrete-Time Integrator'\r\n\r\n  real_T Constant9_Value;              // Expression: 1\r\n                                          //  Referenced by: '<S6>/Constant9'\r\n\r\n  real_T DataStoreMemory22_InitialValue;// Expression: 0\r\n                                           //  Referenced by: '<Root>/Data Store Memory22'\r\n\r\n  real_T DataStoreMemory23_InitialValue;// Expression: 0\r\n                                           //  Referenced by: '<Root>/Data Store Memory23'\r\n\r\n  real_T DataStoreMemory24_InitialValue;// Expression: 0\r\n                                           //  Referenced by: '<Root>/Data Store Memory24'\r\n\r\n  real_T DataStoreMemory25_InitialValue;// Expression: 0\r\n                                           //  Referenced by: '<Root>/Data Store Memory25'\r\n\r\n  real_T DataStoreMemory26_InitialValue;// Expression: 0\r\n                                           //  Referenced by: '<Root>/Data Store Memory26'\r\n\r\n  real_T DataStoreMemory5_InitialValue;// Expression: 0\r\n                                          //  Referenced by: '<Root>/Data Store Memory5'\r\n\r\n  real_T Constant3_Value_g;            // Expression: 0\r\n                                          //  Referenced by: '<Root>/Constant3'\r\n\r\n  real_T r_Value;                      // Expression: 8.00109649122807\r\n                                          //  Referenced by: '<S36>/r'\r\n\r\n  real_T ch_Value;                     // Expression: 2\r\n                                          //  Referenced by: '<S36>/ch'\r\n\r\n  real_T T_Value;                      // Expression: 5\r\n                                          //  Referenced by: '<S36>/T'\r\n\r\n  real_T t_Value;                      // Expression: 0\r\n                                          //  Referenced by: '<S36>/t'\r\n\r\n  real_T b_Value;                      // Expression: 2.036184210526316\r\n                                          //  Referenced by: '<S12>/b'\r\n\r\n  real_T Gain4_Gain;                   // Expression: -1\r\n                                          //  Referenced by: '<S35>/Gain4'\r\n\r\n  real_T TSamp_WtEt;                   // Computed Parameter: TSamp_WtEt\r\n                                          //  Referenced by: '<S34>/TSamp'\r\n\r\n  real_T l_Value;                      // Expression: 0.5282118055555556\r\n                                          //  Referenced by: '<S12>/l'\r\n\r\n  real_T Gain_Gain;                    // Expression: 0.01/0.0052\r\n                                          //  Referenced by: '<S12>/Gain'\r\n\r\n  real_T Gain1_Gain;                   // Expression: 0.00502\r\n                                          //  Referenced by: '<S12>/Gain1'\r\n\r\n  real_T DiscreteTimeIntegrator3_gainval;\r\n                          // Computed Parameter: DiscreteTimeIntegrator3_gainval\r\n                             //  Referenced by: '<S15>/Discrete-Time Integrator3'\r\n\r\n  real_T DiscreteTimeIntegrator3_IC;   // Expression: 0\r\n                                          //  Referenced by: '<S15>/Discrete-Time Integrator3'\r\n\r\n  real_T Gain1_Gain_o;                 // Expression: 0.008\r\n                                          //  Referenced by: '<S1>/Gain1'\r\n\r\n  real_T Saturation4_UpperSat;         // Expression: 0.2\r\n                                          //  Referenced by: '<S1>/Saturation4'\r\n\r\n  real_T Saturation4_LowerSat;         // Expression: -0.5\r\n                                          //  Referenced by: '<S1>/Saturation4'\r\n\r\n  real_T SineWave_Amp;                 // Expression: pi/18\r\n                                          //  Referenced by: '<Root>/Sine Wave'\r\n\r\n  real_T SineWave_Bias;                // Expression: 0\r\n                                          //  Referenced by: '<Root>/Sine Wave'\r\n\r\n  real_T SineWave_Freq;                // Expression: pi/5\r\n                                          //  Referenced by: '<Root>/Sine Wave'\r\n\r\n  real_T SineWave_Hsin;                // Computed Parameter: SineWave_Hsin\r\n                                          //  Referenced by: '<Root>/Sine Wave'\r\n\r\n  real_T SineWave_HCos;                // Computed Parameter: SineWave_HCos\r\n                                          //  Referenced by: '<Root>/Sine Wave'\r\n\r\n  real_T SineWave_PSin;                // Computed Parameter: SineWave_PSin\r\n                                          //  Referenced by: '<Root>/Sine Wave'\r\n\r\n  real_T SineWave_PCos;                // Computed Parameter: SineWave_PCos\r\n                                          //  Referenced by: '<Root>/Sine Wave'\r\n\r\n  real_T r_Value_g;                    // Expression: 6.033653846153846\r\n                                          //  Referenced by: '<S18>/r'\r\n\r\n  real_T ch_Value_j;                   // Expression: 2\r\n                                          //  Referenced by: '<S18>/ch'\r\n\r\n  real_T T_Value_p;                    // Expression: 5.018640350877193\r\n                                          //  Referenced by: '<S18>/T'\r\n\r\n  real_T t_Value_n;                    // Expression: 0\r\n                                          //  Referenced by: '<S18>/t'\r\n\r\n  real_T b_Value_l;                    // Expression: 2.470900809716599\r\n                                          //  Referenced by: '<S10>/b'\r\n\r\n  real_T Gain4_Gain_b;                 // Expression: -1\r\n                                          //  Referenced by: '<S17>/Gain4'\r\n\r\n  real_T TSamp_WtEt_p;                 // Computed Parameter: TSamp_WtEt_p\r\n                                          //  Referenced by: '<S16>/TSamp'\r\n\r\n  real_T l_Value_b;                    // Expression: 0.5282118055555556\r\n                                          //  Referenced by: '<S10>/l'\r\n\r\n  real_T Gain_Gain_o;                  // Expression: 0.01/0.0052\r\n                                          //  Referenced by: '<S10>/Gain'\r\n\r\n  real_T Gain1_Gain_b;                 // Expression: 0.00502\r\n                                          //  Referenced by: '<S10>/Gain1'\r\n\r\n  real_T DiscreteTimeIntegrator3_gainv_m;\r\n                          // Computed Parameter: DiscreteTimeIntegrator3_gainv_m\r\n                             //  Referenced by: '<S13>/Discrete-Time Integrator3'\r\n\r\n  real_T DiscreteTimeIntegrator3_IC_k; // Expression: 0\r\n                                          //  Referenced by: '<S13>/Discrete-Time Integrator3'\r\n\r\n  real_T Gain2_Gain;                   // Expression: 0.00478\r\n                                          //  Referenced by: '<S1>/Gain2'\r\n\r\n  real_T r_Value_p;                    // Expression: 6.001388888888889\r\n                                          //  Referenced by: '<S27>/r'\r\n\r\n  real_T ch_Value_e;                   // Expression: 2\r\n                                          //  Referenced by: '<S27>/ch'\r\n\r\n  real_T T_Value_c;                    // Expression: 5\r\n                                          //  Referenced by: '<S27>/T'\r\n\r\n  real_T t_Value_m;                    // Expression: 0\r\n                                          //  Referenced by: '<S27>/t'\r\n\r\n  real_T b_Value_h;                    // Expression: 2.490277777777778\r\n                                          //  Referenced by: '<S11>/b'\r\n\r\n  real_T Gain4_Gain_o;                 // Expression: -1\r\n                                          //  Referenced by: '<S26>/Gain4'\r\n\r\n  real_T TSamp_WtEt_o;                 // Computed Parameter: TSamp_WtEt_o\r\n                                          //  Referenced by: '<S25>/TSamp'\r\n\r\n  real_T l_Value_n;                    // Expression: 0.5340277777777778\r\n                                          //  Referenced by: '<S11>/l'\r\n\r\n  real_T Gain_Gain_m;                  // Expression: 0.01/0.0052\r\n                                          //  Referenced by: '<S11>/Gain'\r\n\r\n  real_T J_Gain;                       // Expression: 0.00478\r\n                                          //  Referenced by: '<S11>/J'\r\n\r\n  real_T DiscreteTimeIntegrator3_gainv_e;\r\n                          // Computed Parameter: DiscreteTimeIntegrator3_gainv_e\r\n                             //  Referenced by: '<S14>/Discrete-Time Integrator3'\r\n\r\n  real_T DiscreteTimeIntegrator3_IC_l; // Expression: 0\r\n                                          //  Referenced by: '<S14>/Discrete-Time Integrator3'\r\n\r\n  real_T J_Gain_b;                     // Expression: 0.00478\r\n                                          //  Referenced by: '<S1>/J'\r\n\r\n  real_T DataStoreMemory_InitialValue; // Expression: 0\r\n                                          //  Referenced by: '<S36>/Data Store Memory'\r\n\r\n  real_T DataStoreMemory_InitialValue_l;// Expression: 0\r\n                                           //  Referenced by: '<S18>/Data Store Memory'\r\n\r\n  real_T DataStoreMemory_InitialValue_b;// Expression: 0\r\n                                           //  Referenced by: '<S27>/Data Store Memory'\r\n\r\n  real_T DiscreteTimeIntegrator_gainva_n;\r\n                          // Computed Parameter: DiscreteTimeIntegrator_gainva_n\r\n                             //  Referenced by: '<S15>/Discrete-Time Integrator'\r\n\r\n  real_T DiscreteTimeIntegrator_IC_l;  // Expression: 0\r\n                                          //  Referenced by: '<S15>/Discrete-Time Integrator'\r\n\r\n  real_T Gain2_Gain_c;                 // Expression: 180/pi\r\n                                          //  Referenced by: '<S15>/Gain2'\r\n\r\n  real_T uJ_Gain;                      // Expression: 1/0.008\r\n                                          //  Referenced by: '<S15>/1//J'\r\n\r\n  real_T kJ_Gain;                      // Expression: 0.01/0.008\r\n                                          //  Referenced by: '<S15>/k//J'\r\n\r\n  real_T Saturation_UpperSat_b;        // Expression: 1\r\n                                          //  Referenced by: '<S15>/Saturation'\r\n\r\n  real_T Saturation_LowerSat_k;        // Expression: -1\r\n                                          //  Referenced by: '<S15>/Saturation'\r\n\r\n  real_T l1_Gain;                      // Expression: 0\r\n                                          //  Referenced by: '<S15>/l1'\r\n\r\n  real_T lambda1_Gain;                 // Expression: 0\r\n                                          //  Referenced by: '<S15>/lambda1'\r\n\r\n  real_T DiscreteTimeIntegrator1_gainval;\r\n                          // Computed Parameter: DiscreteTimeIntegrator1_gainval\r\n                             //  Referenced by: '<S15>/Discrete-Time Integrator1'\r\n\r\n  real_T DiscreteTimeIntegrator1_IC;   // Expression: 0\r\n                                          //  Referenced by: '<S15>/Discrete-Time Integrator1'\r\n\r\n  real_T Constant1_Value_f;            // Expression: 0.1\r\n                                          //  Referenced by: '<S15>/Constant1'\r\n\r\n  real_T Saturation10_UpperSat;        // Expression: 1\r\n                                          //  Referenced by: '<S15>/Saturation10'\r\n\r\n  real_T Saturation10_LowerSat;        // Expression: -1\r\n                                          //  Referenced by: '<S15>/Saturation10'\r\n\r\n  real_T Saturation11_UpperSat;        // Expression: 1\r\n                                          //  Referenced by: '<S15>/Saturation11'\r\n\r\n  real_T Saturation11_LowerSat;        // Expression: -1\r\n                                          //  Referenced by: '<S15>/Saturation11'\r\n\r\n  real_T Gain_Gain_ml;                 // Expression: 0.5\r\n                                          //  Referenced by: '<S15>/Gain'\r\n\r\n  real_T Saturation8_UpperSat;         // Expression: 1\r\n                                          //  Referenced by: '<S15>/Saturation8'\r\n\r\n  real_T Saturation8_LowerSat;         // Expression: -1\r\n                                          //  Referenced by: '<S15>/Saturation8'\r\n\r\n  real_T Constant2_Value;              // Expression: 1\r\n                                          //  Referenced by: '<S15>/Constant2'\r\n\r\n  real_T Gain5_Gain;                   // Expression: 30\r\n                                          //  Referenced by: '<S15>/Gain5'\r\n\r\n  real_T Saturation13_UpperSat;        // Expression: 1\r\n                                          //  Referenced by: '<S15>/Saturation13'\r\n\r\n  real_T Saturation13_LowerSat;        // Expression: -1\r\n                                          //  Referenced by: '<S15>/Saturation13'\r\n\r\n  real_T Saturation9_UpperSat;         // Expression: 1\r\n                                          //  Referenced by: '<S15>/Saturation9'\r\n\r\n  real_T Saturation9_LowerSat;         // Expression: -1\r\n                                          //  Referenced by: '<S15>/Saturation9'\r\n\r\n  real_T Gain1_Gain_a;                 // Expression: 0.5\r\n                                          //  Referenced by: '<S15>/Gain1'\r\n\r\n  real_T Constant4_Value;              // Expression: 1\r\n                                          //  Referenced by: '<S15>/Constant4'\r\n\r\n  real_T Saturation12_UpperSat;        // Expression: 1\r\n                                          //  Referenced by: '<S15>/Saturation12'\r\n\r\n  real_T Saturation12_LowerSat;        // Expression: -1\r\n                                          //  Referenced by: '<S15>/Saturation12'\r\n\r\n  real_T Saturation16_UpperSat;        // Expression: 1\r\n                                          //  Referenced by: '<S15>/Saturation16'\r\n\r\n  real_T Saturation16_LowerSat;        // Expression: -1\r\n                                          //  Referenced by: '<S15>/Saturation16'\r\n\r\n  real_T Saturation14_UpperSat;        // Expression: 1\r\n                                          //  Referenced by: '<S15>/Saturation14'\r\n\r\n  real_T Saturation14_LowerSat;        // Expression: -1\r\n                                          //  Referenced by: '<S15>/Saturation14'\r\n\r\n  real_T Gain3_Gain;                   // Expression: 0.5\r\n                                          //  Referenced by: '<S15>/Gain3'\r\n\r\n  real_T Constant6_Value;              // Expression: 1\r\n                                          //  Referenced by: '<S15>/Constant6'\r\n\r\n  real_T lambda2_Gain;                 // Expression: 0\r\n                                          //  Referenced by: '<S15>/lambda2'\r\n\r\n  real_T Saturation1_UpperSat;         // Expression: 1\r\n                                          //  Referenced by: '<S15>/Saturation1'\r\n\r\n  real_T Saturation1_LowerSat;         // Expression: -1\r\n                                          //  Referenced by: '<S15>/Saturation1'\r\n\r\n  real_T l2_Gain;                      // Expression: 0\r\n                                          //  Referenced by: '<S15>/l2'\r\n\r\n  real_T Saturation15_UpperSat;        // Expression: 1\r\n                                          //  Referenced by: '<S15>/Saturation15'\r\n\r\n  real_T Saturation15_LowerSat;        // Expression: -1\r\n                                          //  Referenced by: '<S15>/Saturation15'\r\n\r\n  real_T Gain6_Gain;                   // Expression: 30\r\n                                          //  Referenced by: '<S15>/Gain6'\r\n\r\n  real_T Saturation19_UpperSat;        // Expression: 1\r\n                                          //  Referenced by: '<S15>/Saturation19'\r\n\r\n  real_T Saturation19_LowerSat;        // Expression: -1\r\n                                          //  Referenced by: '<S15>/Saturation19'\r\n\r\n  real_T Saturation17_UpperSat;        // Expression: 1\r\n                                          //  Referenced by: '<S15>/Saturation17'\r\n\r\n  real_T Saturation17_LowerSat;        // Expression: -1\r\n                                          //  Referenced by: '<S15>/Saturation17'\r\n\r\n  real_T Gain4_Gain_f;                 // Expression: 0.5\r\n                                          //  Referenced by: '<S15>/Gain4'\r\n\r\n  real_T Constant8_Value;              // Expression: 1\r\n                                          //  Referenced by: '<S15>/Constant8'\r\n\r\n  real_T Saturation18_UpperSat;        // Expression: 1\r\n                                          //  Referenced by: '<S15>/Saturation18'\r\n\r\n  real_T Saturation18_LowerSat;        // Expression: -1\r\n                                          //  Referenced by: '<S15>/Saturation18'\r\n\r\n  real_T Saturation3_UpperSat;         // Expression: 1\r\n                                          //  Referenced by: '<S15>/Saturation3'\r\n\r\n  real_T Saturation3_LowerSat;         // Expression: -1\r\n                                          //  Referenced by: '<S15>/Saturation3'\r\n\r\n  real_T l4_Gain;                      // Expression: 0\r\n                                          //  Referenced by: '<S15>/l4'\r\n\r\n  real_T lambda4_Gain;                 // Expression: 0\r\n                                          //  Referenced by: '<S15>/lambda4'\r\n\r\n  real_T Gain7_Gain;                   // Expression: 40\r\n                                          //  Referenced by: '<S15>/Gain7'\r\n\r\n  real_T Gain8_Gain;                   // Expression: 1\r\n                                          //  Referenced by: '<S15>/Gain8'\r\n\r\n  real_T DiscreteTimeIntegrator_gainva_e;\r\n                          // Computed Parameter: DiscreteTimeIntegrator_gainva_e\r\n                             //  Referenced by: '<S13>/Discrete-Time Integrator'\r\n\r\n  real_T DiscreteTimeIntegrator_IC_h;  // Expression: 0\r\n                                          //  Referenced by: '<S13>/Discrete-Time Integrator'\r\n\r\n  real_T Gain2_Gain_g;                 // Expression: 180/pi\r\n                                          //  Referenced by: '<S13>/Gain2'\r\n\r\n  real_T uJ_Gain_p;                    // Expression: 1/0.00478\r\n                                          //  Referenced by: '<S13>/1//J'\r\n\r\n  real_T kJ_Gain_c;                    // Expression: 0.01/0.00478\r\n                                          //  Referenced by: '<S13>/k//J'\r\n\r\n  real_T Saturation_UpperSat_n;        // Expression: 1\r\n                                          //  Referenced by: '<S13>/Saturation'\r\n\r\n  real_T Saturation_LowerSat_g;        // Expression: -1\r\n                                          //  Referenced by: '<S13>/Saturation'\r\n\r\n  real_T l1_Gain_p;                    // Expression: 0\r\n                                          //  Referenced by: '<S13>/l1'\r\n\r\n  real_T lambda1_Gain_a;               // Expression: 0\r\n                                          //  Referenced by: '<S13>/lambda1'\r\n\r\n  real_T DiscreteTimeIntegrator1_gainv_n;\r\n                          // Computed Parameter: DiscreteTimeIntegrator1_gainv_n\r\n                             //  Referenced by: '<S13>/Discrete-Time Integrator1'\r\n\r\n  real_T DiscreteTimeIntegrator1_IC_j; // Expression: 0\r\n                                          //  Referenced by: '<S13>/Discrete-Time Integrator1'\r\n\r\n  real_T Constant1_Value_j;            // Expression: 0.1\r\n                                          //  Referenced by: '<S13>/Constant1'\r\n\r\n  real_T Saturation10_UpperSat_o;      // Expression: 1\r\n                                          //  Referenced by: '<S13>/Saturation10'\r\n\r\n  real_T Saturation10_LowerSat_b;      // Expression: -1\r\n                                          //  Referenced by: '<S13>/Saturation10'\r\n\r\n  real_T Saturation11_UpperSat_p;      // Expression: 1\r\n                                          //  Referenced by: '<S13>/Saturation11'\r\n\r\n  real_T Saturation11_LowerSat_i;      // Expression: -1\r\n                                          //  Referenced by: '<S13>/Saturation11'\r\n\r\n  real_T Gain_Gain_g;                  // Expression: 0.5\r\n                                          //  Referenced by: '<S13>/Gain'\r\n\r\n  real_T Saturation8_UpperSat_g;       // Expression: 1\r\n                                          //  Referenced by: '<S13>/Saturation8'\r\n\r\n  real_T Saturation8_LowerSat_g;       // Expression: -1\r\n                                          //  Referenced by: '<S13>/Saturation8'\r\n\r\n  real_T Constant2_Value_h;            // Expression: 1\r\n                                          //  Referenced by: '<S13>/Constant2'\r\n\r\n  real_T Gain5_Gain_o;                 // Expression: 30\r\n                                          //  Referenced by: '<S13>/Gain5'\r\n\r\n  real_T Saturation13_UpperSat_i;      // Expression: 1\r\n                                          //  Referenced by: '<S13>/Saturation13'\r\n\r\n  real_T Saturation13_LowerSat_c;      // Expression: -1\r\n                                          //  Referenced by: '<S13>/Saturation13'\r\n\r\n  real_T Saturation9_UpperSat_i;       // Expression: 1\r\n                                          //  Referenced by: '<S13>/Saturation9'\r\n\r\n  real_T Saturation9_LowerSat_c;       // Expression: -1\r\n                                          //  Referenced by: '<S13>/Saturation9'\r\n\r\n  real_T Gain1_Gain_d;                 // Expression: 0.5\r\n                                          //  Referenced by: '<S13>/Gain1'\r\n\r\n  real_T Constant4_Value_n;            // Expression: 1\r\n                                          //  Referenced by: '<S13>/Constant4'\r\n\r\n  real_T Saturation12_UpperSat_c;      // Expression: 1\r\n                                          //  Referenced by: '<S13>/Saturation12'\r\n\r\n  real_T Saturation12_LowerSat_b;      // Expression: -1\r\n                                          //  Referenced by: '<S13>/Saturation12'\r\n\r\n  real_T Saturation16_UpperSat_l;      // Expression: 1\r\n                                          //  Referenced by: '<S13>/Saturation16'\r\n\r\n  real_T Saturation16_LowerSat_g;      // Expression: -1\r\n                                          //  Referenced by: '<S13>/Saturation16'\r\n\r\n  real_T Saturation14_UpperSat_l;      // Expression: 1\r\n                                          //  Referenced by: '<S13>/Saturation14'\r\n\r\n  real_T Saturation14_LowerSat_b;      // Expression: -1\r\n                                          //  Referenced by: '<S13>/Saturation14'\r\n\r\n  real_T Gain3_Gain_l;                 // Expression: 0.5\r\n                                          //  Referenced by: '<S13>/Gain3'\r\n\r\n  real_T Constant6_Value_o;            // Expression: 1\r\n                                          //  Referenced by: '<S13>/Constant6'\r\n\r\n  real_T lambda2_Gain_j;               // Expression: 0\r\n                                          //  Referenced by: '<S13>/lambda2'\r\n\r\n  real_T Saturation1_UpperSat_a;       // Expression: 1\r\n                                          //  Referenced by: '<S13>/Saturation1'\r\n\r\n  real_T Saturation1_LowerSat_i;       // Expression: -1\r\n                                          //  Referenced by: '<S13>/Saturation1'\r\n\r\n  real_T l2_Gain_l;                    // Expression: 0\r\n                                          //  Referenced by: '<S13>/l2'\r\n\r\n  real_T Saturation15_UpperSat_j;      // Expression: 1\r\n                                          //  Referenced by: '<S13>/Saturation15'\r\n\r\n  real_T Saturation15_LowerSat_k;      // Expression: -1\r\n                                          //  Referenced by: '<S13>/Saturation15'\r\n\r\n  real_T Gain6_Gain_e;                 // Expression: 30\r\n                                          //  Referenced by: '<S13>/Gain6'\r\n\r\n  real_T Saturation19_UpperSat_b;      // Expression: 1\r\n                                          //  Referenced by: '<S13>/Saturation19'\r\n\r\n  real_T Saturation19_LowerSat_j;      // Expression: -1\r\n                                          //  Referenced by: '<S13>/Saturation19'\r\n\r\n  real_T Saturation17_UpperSat_d;      // Expression: 1\r\n                                          //  Referenced by: '<S13>/Saturation17'\r\n\r\n  real_T Saturation17_LowerSat_o;      // Expression: -1\r\n                                          //  Referenced by: '<S13>/Saturation17'\r\n\r\n  real_T Gain4_Gain_n;                 // Expression: 0.5\r\n                                          //  Referenced by: '<S13>/Gain4'\r\n\r\n  real_T Constant8_Value_f;            // Expression: 1\r\n                                          //  Referenced by: '<S13>/Constant8'\r\n\r\n  real_T Saturation18_UpperSat_a;      // Expression: 1\r\n                                          //  Referenced by: '<S13>/Saturation18'\r\n\r\n  real_T Saturation18_LowerSat_h;      // Expression: -1\r\n                                          //  Referenced by: '<S13>/Saturation18'\r\n\r\n  real_T Saturation3_UpperSat_m;       // Expression: 1\r\n                                          //  Referenced by: '<S13>/Saturation3'\r\n\r\n  real_T Saturation3_LowerSat_i;       // Expression: -1\r\n                                          //  Referenced by: '<S13>/Saturation3'\r\n\r\n  real_T l4_Gain_p;                    // Expression: 0\r\n                                          //  Referenced by: '<S13>/l4'\r\n\r\n  real_T lambda4_Gain_a;               // Expression: 0\r\n                                          //  Referenced by: '<S13>/lambda4'\r\n\r\n  real_T Gain7_Gain_d;                 // Expression: 40\r\n                                          //  Referenced by: '<S13>/Gain7'\r\n\r\n  real_T Gain8_Gain_b;                 // Expression: 1\r\n                                          //  Referenced by: '<S13>/Gain8'\r\n\r\n  real_T DiscreteTimeIntegrator_gainv_nv;\r\n                          // Computed Parameter: DiscreteTimeIntegrator_gainv_nv\r\n                             //  Referenced by: '<S14>/Discrete-Time Integrator'\r\n\r\n  real_T DiscreteTimeIntegrator_IC_o;  // Expression: 0\r\n                                          //  Referenced by: '<S14>/Discrete-Time Integrator'\r\n\r\n  real_T Gain2_Gain_p;                 // Expression: 180/pi\r\n                                          //  Referenced by: '<S14>/Gain2'\r\n\r\n  real_T uJ_Gain_g;                    // Expression: 1/0.00478\r\n                                          //  Referenced by: '<S14>/1//J'\r\n\r\n  real_T kJ_Gain_p;                    // Expression: 0.01/0.00478\r\n                                          //  Referenced by: '<S14>/k//J'\r\n\r\n  real_T Saturation_UpperSat_n1;       // Expression: 1\r\n                                          //  Referenced by: '<S14>/Saturation'\r\n\r\n  real_T Saturation_LowerSat_c;        // Expression: -1\r\n                                          //  Referenced by: '<S14>/Saturation'\r\n\r\n  real_T l1_Gain_d;                    // Expression: 0\r\n                                          //  Referenced by: '<S14>/l1'\r\n\r\n  real_T lambda1_Gain_g;               // Expression: 0\r\n                                          //  Referenced by: '<S14>/lambda1'\r\n\r\n  real_T DiscreteTimeIntegrator1_gainv_g;\r\n                          // Computed Parameter: DiscreteTimeIntegrator1_gainv_g\r\n                             //  Referenced by: '<S14>/Discrete-Time Integrator1'\r\n\r\n  real_T DiscreteTimeIntegrator1_IC_c; // Expression: 0\r\n                                          //  Referenced by: '<S14>/Discrete-Time Integrator1'\r\n\r\n  real_T Constant1_Value_ac;           // Expression: 0.1\r\n                                          //  Referenced by: '<S14>/Constant1'\r\n\r\n  real_T Saturation10_UpperSat_a;      // Expression: 1\r\n                                          //  Referenced by: '<S14>/Saturation10'\r\n\r\n  real_T Saturation10_LowerSat_l;      // Expression: -1\r\n                                          //  Referenced by: '<S14>/Saturation10'\r\n\r\n  real_T Saturation11_UpperSat_a;      // Expression: 1\r\n                                          //  Referenced by: '<S14>/Saturation11'\r\n\r\n  real_T Saturation11_LowerSat_a;      // Expression: -1\r\n                                          //  Referenced by: '<S14>/Saturation11'\r\n\r\n  real_T Gain_Gain_h;                  // Expression: 0.5\r\n                                          //  Referenced by: '<S14>/Gain'\r\n\r\n  real_T Saturation8_UpperSat_c;       // Expression: 1\r\n                                          //  Referenced by: '<S14>/Saturation8'\r\n\r\n  real_T Saturation8_LowerSat_c;       // Expression: -1\r\n                                          //  Referenced by: '<S14>/Saturation8'\r\n\r\n  real_T Constant2_Value_k;            // Expression: 1\r\n                                          //  Referenced by: '<S14>/Constant2'\r\n\r\n  real_T Gain5_Gain_l;                 // Expression: 30\r\n                                          //  Referenced by: '<S14>/Gain5'\r\n\r\n  real_T Saturation13_UpperSat_p;      // Expression: 1\r\n                                          //  Referenced by: '<S14>/Saturation13'\r\n\r\n  real_T Saturation13_LowerSat_j;      // Expression: -1\r\n                                          //  Referenced by: '<S14>/Saturation13'\r\n\r\n  real_T Saturation9_UpperSat_d;       // Expression: 1\r\n                                          //  Referenced by: '<S14>/Saturation9'\r\n\r\n  real_T Saturation9_LowerSat_c4;      // Expression: -1\r\n                                          //  Referenced by: '<S14>/Saturation9'\r\n\r\n  real_T Gain1_Gain_e;                 // Expression: 0.5\r\n                                          //  Referenced by: '<S14>/Gain1'\r\n\r\n  real_T Constant4_Value_l;            // Expression: 1\r\n                                          //  Referenced by: '<S14>/Constant4'\r\n\r\n  real_T Saturation12_UpperSat_d;      // Expression: 1\r\n                                          //  Referenced by: '<S14>/Saturation12'\r\n\r\n  real_T Saturation12_LowerSat_j;      // Expression: -1\r\n                                          //  Referenced by: '<S14>/Saturation12'\r\n\r\n  real_T Saturation16_UpperSat_p;      // Expression: 1\r\n                                          //  Referenced by: '<S14>/Saturation16'\r\n\r\n  real_T Saturation16_LowerSat_i;      // Expression: -1\r\n                                          //  Referenced by: '<S14>/Saturation16'\r\n\r\n  real_T Saturation14_UpperSat_n;      // Expression: 1\r\n                                          //  Referenced by: '<S14>/Saturation14'\r\n\r\n  real_T Saturation14_LowerSat_a;      // Expression: -1\r\n                                          //  Referenced by: '<S14>/Saturation14'\r\n\r\n  real_T Gain3_Gain_p;                 // Expression: 0.5\r\n                                          //  Referenced by: '<S14>/Gain3'\r\n\r\n  real_T Constant6_Value_g;            // Expression: 1\r\n                                          //  Referenced by: '<S14>/Constant6'\r\n\r\n  real_T lambda2_Gain_d;               // Expression: 0\r\n                                          //  Referenced by: '<S14>/lambda2'\r\n\r\n  real_T Saturation1_UpperSat_d;       // Expression: 1\r\n                                          //  Referenced by: '<S14>/Saturation1'\r\n\r\n  real_T Saturation1_LowerSat_g;       // Expression: -1\r\n                                          //  Referenced by: '<S14>/Saturation1'\r\n\r\n  real_T l2_Gain_i;                    // Expression: 0\r\n                                          //  Referenced by: '<S14>/l2'\r\n\r\n  real_T Saturation15_UpperSat_k;      // Expression: 1\r\n                                          //  Referenced by: '<S14>/Saturation15'\r\n\r\n  real_T Saturation15_LowerSat_h;      // Expression: -1\r\n                                          //  Referenced by: '<S14>/Saturation15'\r\n\r\n  real_T Gain6_Gain_f;                 // Expression: 30\r\n                                          //  Referenced by: '<S14>/Gain6'\r\n\r\n  real_T Saturation19_UpperSat_bc;     // Expression: 1\r\n                                          //  Referenced by: '<S14>/Saturation19'\r\n\r\n  real_T Saturation19_LowerSat_e;      // Expression: -1\r\n                                          //  Referenced by: '<S14>/Saturation19'\r\n\r\n  real_T Saturation17_UpperSat_o;      // Expression: 1\r\n                                          //  Referenced by: '<S14>/Saturation17'\r\n\r\n  real_T Saturation17_LowerSat_m;      // Expression: -1\r\n                                          //  Referenced by: '<S14>/Saturation17'\r\n\r\n  real_T Gain4_Gain_e;                 // Expression: 0.5\r\n                                          //  Referenced by: '<S14>/Gain4'\r\n\r\n  real_T Constant8_Value_p;            // Expression: 1\r\n                                          //  Referenced by: '<S14>/Constant8'\r\n\r\n  real_T Saturation18_UpperSat_c;      // Expression: 1\r\n                                          //  Referenced by: '<S14>/Saturation18'\r\n\r\n  real_T Saturation18_LowerSat_g;      // Expression: -1\r\n                                          //  Referenced by: '<S14>/Saturation18'\r\n\r\n  real_T Saturation3_UpperSat_i;       // Expression: 1\r\n                                          //  Referenced by: '<S14>/Saturation3'\r\n\r\n  real_T Saturation3_LowerSat_g;       // Expression: -1\r\n                                          //  Referenced by: '<S14>/Saturation3'\r\n\r\n  real_T l4_Gain_o;                    // Expression: 0\r\n                                          //  Referenced by: '<S14>/l4'\r\n\r\n  real_T lambda4_Gain_b;               // Expression: 0\r\n                                          //  Referenced by: '<S14>/lambda4'\r\n\r\n  real_T Gain7_Gain_l;                 // Expression: 40\r\n                                          //  Referenced by: '<S14>/Gain7'\r\n\r\n  real_T Gain8_Gain_o;                 // Expression: 1\r\n                                          //  Referenced by: '<S14>/Gain8'\r\n\r\n  real_T Saturation2_UpperSat;         // Expression: 0.2\r\n                                          //  Referenced by: '<S1>/Saturation2'\r\n\r\n  real_T Saturation2_LowerSat;         // Expression: -0.5\r\n                                          //  Referenced by: '<S1>/Saturation2'\r\n\r\n  real_T e_pitch_InitialValue;         // Expression: 0\r\n                                          //  Referenced by: '<S1>/e_pitch'\r\n\r\n  real_T e_pitch1_InitialValue;        // Expression: 0\r\n                                          //  Referenced by: '<S1>/e_pitch1'\r\n\r\n  real_T e_pitch2_InitialValue;        // Expression: 0\r\n                                          //  Referenced by: '<S1>/e_pitch2'\r\n\r\n  real_T Constant1_Value_l;            // Expression: 1.1\r\n                                          //  Referenced by: '<Root>/Constant1'\r\n\r\n  real_T fault_1_Value;                // Expression: 0\r\n                                          //  Referenced by: '<Root>/fault_1'\r\n\r\n  real_T Mixermatrix1_Value[16];\r\n                          // Expression: [1 1 -1 1;1 -1 1 1;1 1 1 -1;1 -1 -1 -1]\r\n                             //  Referenced by: '<Root>/Mixer matrix1'\r\n\r\n  real_T Gain4_Gain_fc;                // Expression: 1000\r\n                                          //  Referenced by: '<Root>/Gain4'\r\n\r\n  real_T fault_2_Value;                // Expression: 0.3835227272727273\r\n                                          //  Referenced by: '<Root>/fault_2'\r\n\r\n  real_T fault_3_Value;                // Expression: 0\r\n                                          //  Referenced by: '<Root>/fault_3'\r\n\r\n  real_T fault_4_Value;                // Expression: 0\r\n                                          //  Referenced by: '<Root>/fault_4'\r\n\r\n  real_T Gain8_Gain_o1;                // Expression: 180/3.1415926\r\n                                          //  Referenced by: '<Root>/Gain8'\r\n\r\n  real_T Gain10_Gain;                  // Expression: 180/3.1415926\r\n                                          //  Referenced by: '<Root>/Gain10'\r\n\r\n  real_T Gain7_Gain_a;                 // Expression: 180/3.1415926\r\n                                          //  Referenced by: '<Root>/Gain7'\r\n\r\n  real_T Gain11_Gain;                  // Expression: 180/3.1415926\r\n                                          //  Referenced by: '<Root>/Gain11'\r\n\r\n  real_T Gain9_Gain;                   // Expression: 180/3.1415926\r\n                                          //  Referenced by: '<Root>/Gain9'\r\n\r\n  real_T Constant6_Value_m;            // Expression: 170\r\n                                          //  Referenced by: '<Root>/Constant6'\r\n\r\n  real_T Gain5_Gain_g;                 // Expression: 180/3.1415926\r\n                                          //  Referenced by: '<Root>/Gain5'\r\n\r\n  real_T Gain3_Gain_c;                 // Expression: 180/3.1415926\r\n                                          //  Referenced by: '<Root>/Gain3'\r\n\r\n  real_T Gain6_Gain_k;                 // Expression: 180/3.1415926\r\n                                          //  Referenced by: '<Root>/Gain6'\r\n\r\n  real_T Saturation_UpperSat_e;        // Expression: 1.2\r\n                                          //  Referenced by: '<Root>/Saturation'\r\n\r\n  real_T Saturation_LowerSat_l;        // Expression: 1\r\n                                          //  Referenced by: '<Root>/Saturation'\r\n\r\n  real_T DataStoreMemory10_InitialValue;// Expression: 0\r\n                                           //  Referenced by: '<Root>/Data Store Memory10'\r\n\r\n  real_T DataStoreMemory11_InitialValue;// Expression: 0\r\n                                           //  Referenced by: '<Root>/Data Store Memory11'\r\n\r\n  real_T DataStoreMemory12_InitialValue;// Expression: 0\r\n                                           //  Referenced by: '<Root>/Data Store Memory12'\r\n\r\n  real_T DataStoreMemory13_InitialValue;// Expression: 0\r\n                                           //  Referenced by: '<Root>/Data Store Memory13'\r\n\r\n  real_T DataStoreMemory14_InitialValue;// Expression: 0\r\n                                           //  Referenced by: '<Root>/Data Store Memory14'\r\n\r\n  real_T DataStoreMemory15_InitialValue;// Expression: 0\r\n                                           //  Referenced by: '<Root>/Data Store Memory15'\r\n\r\n  real_T DataStoreMemory16_InitialValue;// Expression: 0\r\n                                           //  Referenced by: '<Root>/Data Store Memory16'\r\n\r\n  real_T DataStoreMemory17_InitialValue;// Expression: 0\r\n                                           //  Referenced by: '<Root>/Data Store Memory17'\r\n\r\n  real_T DataStoreMemory18_InitialValue;// Expression: 0\r\n                                           //  Referenced by: '<Root>/Data Store Memory18'\r\n\r\n  real_T DataStoreMemory19_InitialValue;// Expression: 0\r\n                                           //  Referenced by: '<Root>/Data Store Memory19'\r\n\r\n  real_T DataStoreMemory2_InitialValue;// Expression: 0\r\n                                          //  Referenced by: '<Root>/Data Store Memory2'\r\n\r\n  real_T DataStoreMemory20_InitialValue;// Expression: 0\r\n                                           //  Referenced by: '<Root>/Data Store Memory20'\r\n\r\n  real_T DataStoreMemory21_InitialValue;// Expression: 0\r\n                                           //  Referenced by: '<Root>/Data Store Memory21'\r\n\r\n  real_T DataStoreMemory28_InitialValue;// Expression: 0\r\n                                           //  Referenced by: '<Root>/Data Store Memory28'\r\n\r\n  real_T DataStoreMemory29_InitialValue;// Expression: 0\r\n                                           //  Referenced by: '<Root>/Data Store Memory29'\r\n\r\n  real_T DataStoreMemory3_InitialValue;// Expression: 0\r\n                                          //  Referenced by: '<Root>/Data Store Memory3'\r\n\r\n  real_T DataStoreMemory4_InitialValue;// Expression: 0\r\n                                          //  Referenced by: '<Root>/Data Store Memory4'\r\n\r\n  real_T DataStoreMemory6_InitialValue;// Expression: 0\r\n                                          //  Referenced by: '<Root>/Data Store Memory6'\r\n\r\n  real_T DataStoreMemory7_InitialValue;// Expression: 0\r\n                                          //  Referenced by: '<Root>/Data Store Memory7'\r\n\r\n  real_T DataStoreMemory8_InitialValue;// Expression: 0\r\n                                          //  Referenced by: '<Root>/Data Store Memory8'\r\n\r\n  real_T DataStoreMemory9_InitialValue;// Expression: 0\r\n                                          //  Referenced by: '<Root>/Data Store Memory9'\r\n\r\n  uint16_T Switch3_Threshold;          // Computed Parameter: Switch3_Threshold\r\n                                          //  Referenced by: '<Root>/Switch3'\r\n\r\n  boolean_T Constant10_Value;          // Computed Parameter: Constant10_Value\r\n                                          //  Referenced by: '<Root>/Constant10'\r\n\r\n  boolean_T Constant11_Value;          // Computed Parameter: Constant11_Value\r\n                                          //  Referenced by: '<Root>/Constant11'\r\n\r\n  boolean_T attitude_flag_Value;      // Computed Parameter: attitude_flag_Value\r\n                                         //  Referenced by: '<S7>/attitude_flag'\r\n\r\n  boolean_T observer_flag_Value;      // Computed Parameter: observer_flag_Value\r\n                                         //  Referenced by: '<S8>/observer_flag'\r\n\r\n  boolean_T position_flag_Value;      // Computed Parameter: position_flag_Value\r\n                                         //  Referenced by: '<S9>/position_flag'\r\n\r\n  boolean_T Constant2_Value_kf;        // Computed Parameter: Constant2_Value_kf\r\n                                          //  Referenced by: '<Root>/Constant2'\r\n\r\n  boolean_T DataStoreMemory_InitialValue_j;\r\n                           // Computed Parameter: DataStoreMemory_InitialValue_j\r\n                              //  Referenced by: '<Root>/Data Store Memory'\r\n\r\n  boolean_T DataStoreMemory1_InitialValue;\r\n                            // Computed Parameter: DataStoreMemory1_InitialValue\r\n                               //  Referenced by: '<Root>/Data Store Memory1'\r\n\r\n  boolean_T DataStoreMemory27_InitialValue;\r\n                           // Computed Parameter: DataStoreMemory27_InitialValue\r\n                              //  Referenced by: '<Root>/Data Store Memory27'\r\n\r\n  boolean_T DataStoreMemory30_InitialValue;\r\n                           // Computed Parameter: DataStoreMemory30_InitialValue\r\n                              //  Referenced by: '<Root>/Data Store Memory30'\r\n\r\n  uint8_T Gain1_Gain_n;                // Computed Parameter: Gain1_Gain_n\r\n                                          //  Referenced by: '<S5>/Gain1'\r\n\r\n  uint8_T Gain_Gain_e;                 // Computed Parameter: Gain_Gain_e\r\n                                          //  Referenced by: '<S5>/Gain'\r\n\r\n  uint8_T ManualSwitch_CurrentSetting;\r\n                              // Computed Parameter: ManualSwitch_CurrentSetting\r\n                                 //  Referenced by: '<S1>/Manual Switch'\r\n\r\n  uint8_T ManualSwitch_CurrentSetting_i;\r\n                            // Computed Parameter: ManualSwitch_CurrentSetting_i\r\n                               //  Referenced by: '<Root>/Manual Switch'\r\n\r\n};\r\n\r\n// Real-time Model Data Structure\r\nstruct tag_RTM_px42LoopCtrQGC2022031_T {\r\n  const char_T *errorStatus;\r\n  RTWExtModeInfo *extModeInfo;\r\n\r\n  //\r\n  //  Sizes:\r\n  //  The following substructure contains sizes information\r\n  //  for many of the model attributes such as inputs, outputs,\r\n  //  dwork, sample times, etc.\r\n\r\n  struct {\r\n    uint32_T checksums[4];\r\n  } Sizes;\r\n\r\n  //\r\n  //  SpecialInfo:\r\n  //  The following substructure contains special information\r\n  //  related to other components that are dependent on RTW.\r\n\r\n  struct {\r\n    const void *mappingInfo;\r\n  } SpecialInfo;\r\n\r\n  //\r\n  //  Timing:\r\n  //  The following substructure contains information regarding\r\n  //  the timing information for the model.\r\n\r\n  struct {\r\n    time_T taskTime0;\r\n    uint32_T clockTick0;\r\n    time_T stepSize0;\r\n    uint32_T clockTick1;\r\n    struct {\r\n      uint8_T TID[2];\r\n    } TaskCounters;\r\n\r\n    time_T tFinal;\r\n    boolean_T stopRequestedFlag;\r\n  } Timing;\r\n};\r\n\r\n// Block parameters (default storage)\r\n#ifdef __cplusplus\r\n\r\nextern \"C\" {\r\n\r\n#endif\r\n\r\n  extern P_px42LoopCtrQGC20220313_T px42LoopCtrQGC20220313_P;\r\n\r\n#ifdef __cplusplus\r\n\r\n}\r\n#endif\r\n\r\n// Block signals (default storage)\r\n#ifdef __cplusplus\r\n\r\nextern \"C\" {\r\n\r\n#endif\r\n\r\n  extern struct B_px42LoopCtrQGC20220313_T px42LoopCtrQGC20220313_B;\r\n\r\n#ifdef __cplusplus\r\n\r\n}\r\n#endif\r\n\r\n// Block states (default storage)\r\nextern struct DW_px42LoopCtrQGC20220313_T px42LoopCtrQGC20220313_DW;\r\n\r\n// Zero-crossing (trigger) state\r\nextern PrevZCX_px42LoopCtrQGC2022031_T px42LoopCtrQGC20220313_PrevZCX;\r\n\r\n#ifdef __cplusplus\r\n\r\nextern \"C\" {\r\n\r\n#endif\r\n\r\n  // External outputs (root outports fed by signals with default storage)\r\n  extern struct ExtY_px42LoopCtrQGC20220313_T px42LoopCtrQGC20220313_Y;\r\n\r\n#ifdef __cplusplus\r\n\r\n}\r\n#endif\r\n\r\n// External function called from main\r\n#ifdef __cplusplus\r\n\r\nextern \"C\" {\r\n\r\n#endif\r\n\r\n  extern void px42LoopCtrQGC20220313_SetEventsForThisBaseStep(boolean_T\r\n    *eventFlags);\r\n\r\n#ifdef __cplusplus\r\n\r\n}\r\n#endif\r\n\r\n#ifdef __cplusplus\r\n\r\nextern \"C\" {\r\n\r\n#endif\r\n\r\n  // Model entry point functions\r\n  extern void px42LoopCtrQGC20220313_SetEventsForThisBaseStep(boolean_T\r\n    *eventFlags);\r\n  extern void px42LoopCtrQGC20220313_initialize(void);\r\n  extern void px42LoopCtrQGC20220313_step0(void);\r\n  extern void px42LoopCtrQGC20220313_step1(void);\r\n  extern void px42LoopCtrQGC20220313_step(int_T tid);\r\n  extern void px42LoopCtrQGC20220313_terminate(void);\r\n\r\n#ifdef __cplusplus\r\n\r\n}\r\n#endif\r\n\r\n// Real-time Model object\r\n#ifdef __cplusplus\r\n\r\nextern \"C\" {\r\n\r\n#endif\r\n\r\n  extern RT_MODEL_px42LoopCtrQGC202203_T *const px42LoopCtrQGC20220313_M;\r\n\r\n#ifdef __cplusplus\r\n\r\n}\r\n#endif\r\n\r\n//-\r\n//  The generated code includes comments that allow you to trace directly\r\n//  back to the appropriate location in the model.  The basic format\r\n//  is <system>/block_name, where system is the system number (uniquely\r\n//  assigned by Simulink) and block_name is the name of the block.\r\n//\r\n//  Use the MATLAB hilite_system command to trace the generated code back\r\n//  to the model.  For example,\r\n//\r\n//  hilite_system('<S3>')    - opens system 3\r\n//  hilite_system('<S3>/Kp') - opens and selects block Kp which resides in S3\r\n//\r\n//  Here is the system hierarchy for this model\r\n//\r\n//  '<Root>' : 'px42LoopCtrQGC20220313'\r\n//  '<S1>'   : 'px42LoopCtrQGC20220313/Attitude controller'\r\n//  '<S2>'   : 'px42LoopCtrQGC20220313/PX4 uORB Read'\r\n//  '<S3>'   : 'px42LoopCtrQGC20220313/PX4 uORB Read2'\r\n//  '<S4>'   : 'px42LoopCtrQGC20220313/Quaternions to Rotation Angles'\r\n//  '<S5>'   : 'px42LoopCtrQGC20220313/Radio Control Transmitter'\r\n//  '<S6>'   : 'px42LoopCtrQGC20220313/Subsystem1'\r\n//  '<S7>'   : 'px42LoopCtrQGC20220313/attitude_button'\r\n//  '<S8>'   : 'px42LoopCtrQGC20220313/observer_button'\r\n//  '<S9>'   : 'px42LoopCtrQGC20220313/position_button'\r\n//  '<S10>'  : 'px42LoopCtrQGC20220313/Attitude controller/Subsystem'\r\n//  '<S11>'  : 'px42LoopCtrQGC20220313/Attitude controller/Subsystem6'\r\n//  '<S12>'  : 'px42LoopCtrQGC20220313/Attitude controller/Subsystem7'\r\n//  '<S13>'  : 'px42LoopCtrQGC20220313/Attitude controller/observer_pitch_3'\r\n//  '<S14>'  : 'px42LoopCtrQGC20220313/Attitude controller/observer_roll_3'\r\n//  '<S15>'  : 'px42LoopCtrQGC20220313/Attitude controller/observer_yaw'\r\n//  '<S16>'  : 'px42LoopCtrQGC20220313/Attitude controller/Subsystem/Discrete Derivative1'\r\n//  '<S17>'  : 'px42LoopCtrQGC20220313/Attitude controller/Subsystem/Subsystem1'\r\n//  '<S18>'  : 'px42LoopCtrQGC20220313/Attitude controller/Subsystem/Subsystem1/Subsystem'\r\n//  '<S19>'  : 'px42LoopCtrQGC20220313/Attitude controller/Subsystem/Subsystem1/Subsystem/Compare To Constant1'\r\n//  '<S20>'  : 'px42LoopCtrQGC20220313/Attitude controller/Subsystem/Subsystem1/Subsystem/MATLAB Function'\r\n//  '<S21>'  : 'px42LoopCtrQGC20220313/Attitude controller/Subsystem/Subsystem1/Subsystem/start_time'\r\n//  '<S22>'  : 'px42LoopCtrQGC20220313/Attitude controller/Subsystem/Subsystem1/Subsystem/start_time/Compare To Constant1'\r\n//  '<S23>'  : 'px42LoopCtrQGC20220313/Attitude controller/Subsystem/Subsystem1/Subsystem/start_time/Compare To Constant2'\r\n//  '<S24>'  : 'px42LoopCtrQGC20220313/Attitude controller/Subsystem/Subsystem1/Subsystem/start_time/Subsystem'\r\n//  '<S25>'  : 'px42LoopCtrQGC20220313/Attitude controller/Subsystem6/Discrete Derivative1'\r\n//  '<S26>'  : 'px42LoopCtrQGC20220313/Attitude controller/Subsystem6/Subsystem1'\r\n//  '<S27>'  : 'px42LoopCtrQGC20220313/Attitude controller/Subsystem6/Subsystem1/Subsystem'\r\n//  '<S28>'  : 'px42LoopCtrQGC20220313/Attitude controller/Subsystem6/Subsystem1/Subsystem/Compare To Constant1'\r\n//  '<S29>'  : 'px42LoopCtrQGC20220313/Attitude controller/Subsystem6/Subsystem1/Subsystem/MATLAB Function'\r\n//  '<S30>'  : 'px42LoopCtrQGC20220313/Attitude controller/Subsystem6/Subsystem1/Subsystem/start_time'\r\n//  '<S31>'  : 'px42LoopCtrQGC20220313/Attitude controller/Subsystem6/Subsystem1/Subsystem/start_time/Compare To Constant1'\r\n//  '<S32>'  : 'px42LoopCtrQGC20220313/Attitude controller/Subsystem6/Subsystem1/Subsystem/start_time/Compare To Constant2'\r\n//  '<S33>'  : 'px42LoopCtrQGC20220313/Attitude controller/Subsystem6/Subsystem1/Subsystem/start_time/Subsystem'\r\n//  '<S34>'  : 'px42LoopCtrQGC20220313/Attitude controller/Subsystem7/Discrete Derivative1'\r\n//  '<S35>'  : 'px42LoopCtrQGC20220313/Attitude controller/Subsystem7/Subsystem1'\r\n//  '<S36>'  : 'px42LoopCtrQGC20220313/Attitude controller/Subsystem7/Subsystem1/Subsystem'\r\n//  '<S37>'  : 'px42LoopCtrQGC20220313/Attitude controller/Subsystem7/Subsystem1/Subsystem/Compare To Constant1'\r\n//  '<S38>'  : 'px42LoopCtrQGC20220313/Attitude controller/Subsystem7/Subsystem1/Subsystem/MATLAB Function'\r\n//  '<S39>'  : 'px42LoopCtrQGC20220313/Attitude controller/Subsystem7/Subsystem1/Subsystem/start_time'\r\n//  '<S40>'  : 'px42LoopCtrQGC20220313/Attitude controller/Subsystem7/Subsystem1/Subsystem/start_time/Compare To Constant1'\r\n//  '<S41>'  : 'px42LoopCtrQGC20220313/Attitude controller/Subsystem7/Subsystem1/Subsystem/start_time/Compare To Constant2'\r\n//  '<S42>'  : 'px42LoopCtrQGC20220313/Attitude controller/Subsystem7/Subsystem1/Subsystem/start_time/Subsystem'\r\n//  '<S43>'  : 'px42LoopCtrQGC20220313/PX4 uORB Read/Enabled Subsystem'\r\n//  '<S44>'  : 'px42LoopCtrQGC20220313/PX4 uORB Read2/Enabled Subsystem'\r\n//  '<S45>'  : 'px42LoopCtrQGC20220313/Quaternions to Rotation Angles/Angle Calculation'\r\n//  '<S46>'  : 'px42LoopCtrQGC20220313/Quaternions to Rotation Angles/Quaternion Normalize'\r\n//  '<S47>'  : 'px42LoopCtrQGC20220313/Quaternions to Rotation Angles/Angle Calculation/Protect asincos input'\r\n//  '<S48>'  : 'px42LoopCtrQGC20220313/Quaternions to Rotation Angles/Angle Calculation/Protect asincos input/If Action Subsystem'\r\n//  '<S49>'  : 'px42LoopCtrQGC20220313/Quaternions to Rotation Angles/Angle Calculation/Protect asincos input/If Action Subsystem1'\r\n//  '<S50>'  : 'px42LoopCtrQGC20220313/Quaternions to Rotation Angles/Angle Calculation/Protect asincos input/If Action Subsystem2'\r\n//  '<S51>'  : 'px42LoopCtrQGC20220313/Quaternions to Rotation Angles/Quaternion Normalize/Quaternion Modulus'\r\n//  '<S52>'  : 'px42LoopCtrQGC20220313/Quaternions to Rotation Angles/Quaternion Normalize/Quaternion Modulus/Quaternion Norm'\r\n//  '<S53>'  : 'px42LoopCtrQGC20220313/Radio Control Transmitter/PX4 uORB Read'\r\n//  '<S54>'  : 'px42LoopCtrQGC20220313/Radio Control Transmitter/PX4 uORB Read/Enabled Subsystem'\r\n\r\n#endif                                 // RTW_HEADER_px42LoopCtrQGC20220313_h_\r\n\r\n//\r\n// File trailer for generated code.\r\n//\r\n// [EOF]\r\n//\r\n"},{"name":"px42LoopCtrQGC20220313_private.h","type":"header","group":"model","path":"D:\\simulink\\PX4QGCGPSCtrl\\work\\code\\px42LoopCtrQGC20220313_ert_rtw","tag":"","groupDisplay":"Model files","code":"//\r\n// Academic License - for use in teaching, academic research, and meeting\r\n// course requirements at degree granting institutions only.  Not for\r\n// government, commercial, or other organizational use.\r\n//\r\n// File: px42LoopCtrQGC20220313_private.h\r\n//\r\n// Code generated for Simulink model 'px42LoopCtrQGC20220313'.\r\n//\r\n// Model version                  : 5.5\r\n// Simulink Coder version         : 9.7 (R2022a) 13-Nov-2021\r\n// C/C++ source code generated on : Wed Mar 16 10:17:15 2022\r\n//\r\n// Target selection: ert.tlc\r\n// Embedded hardware selection: ARM Compatible->ARM Cortex\r\n// Code generation objectives: Unspecified\r\n// Validation result: Not run\r\n//\r\n#ifndef RTW_HEADER_px42LoopCtrQGC20220313_private_h_\r\n#define RTW_HEADER_px42LoopCtrQGC20220313_private_h_\r\n#include \"rtwtypes.h\"\r\n#include \"multiword_types.h\"\r\n#include \"zero_crossing_types.h\"\r\n#include \"px42LoopCtrQGC20220313.h\"\r\n\r\n// Private macros used by the generated code to access rtModel\r\n#ifndef rtmSetTFinal\r\n#define rtmSetTFinal(rtm, val)         ((rtm)->Timing.tFinal = (val))\r\n#endif\r\n\r\n#ifndef UCHAR_MAX\r\n#include <limits.h>\r\n#endif\r\n\r\n#if ( UCHAR_MAX != (0xFFU) ) || ( SCHAR_MAX != (0x7F) )\r\n#error Code was generated for compiler with different sized uchar/char. \\\r\nConsider adjusting Test hardware word size settings on the \\\r\nHardware Implementation pane to match your compiler word sizes as \\\r\ndefined in limits.h of the compiler. Alternatively, you can \\\r\nselect the Test hardware is the same as production hardware option and \\\r\nselect the Enable portable word sizes option on the Code Generation > \\\r\nVerification pane for ERT based targets, which will disable the \\\r\npreprocessor word size checks.\r\n#endif\r\n\r\n#if ( USHRT_MAX != (0xFFFFU) ) || ( SHRT_MAX != (0x7FFF) )\r\n#error Code was generated for compiler with different sized ushort/short. \\\r\nConsider adjusting Test hardware word size settings on the \\\r\nHardware Implementation pane to match your compiler word sizes as \\\r\ndefined in limits.h of the compiler. Alternatively, you can \\\r\nselect the Test hardware is the same as production hardware option and \\\r\nselect the Enable portable word sizes option on the Code Generation > \\\r\nVerification pane for ERT based targets, which will disable the \\\r\npreprocessor word size checks.\r\n#endif\r\n\r\n#if ( UINT_MAX != (0xFFFFFFFFU) ) || ( INT_MAX != (0x7FFFFFFF) )\r\n#error Code was generated for compiler with different sized uint/int. \\\r\nConsider adjusting Test hardware word size settings on the \\\r\nHardware Implementation pane to match your compiler word sizes as \\\r\ndefined in limits.h of the compiler. Alternatively, you can \\\r\nselect the Test hardware is the same as production hardware option and \\\r\nselect the Enable portable word sizes option on the Code Generation > \\\r\nVerification pane for ERT based targets, which will disable the \\\r\npreprocessor word size checks.\r\n#endif\r\n\r\n#if ( ULONG_MAX != (0xFFFFFFFFU) ) || ( LONG_MAX != (0x7FFFFFFF) )\r\n#error Code was generated for compiler with different sized ulong/long. \\\r\nConsider adjusting Test hardware word size settings on the \\\r\nHardware Implementation pane to match your compiler word sizes as \\\r\ndefined in limits.h of the compiler. Alternatively, you can \\\r\nselect the Test hardware is the same as production hardware option and \\\r\nselect the Enable portable word sizes option on the Code Generation > \\\r\nVerification pane for ERT based targets, which will disable the \\\r\npreprocessor word size checks.\r\n#endif\r\n\r\n// Skipping ulong_long/long_long check: insufficient preprocessor integer range. \r\nextern real_T rt_powd_snf(real_T u0, real_T u1);\r\nextern real_T rt_atan2d_snf(real_T u0, real_T u1);\r\nextern void px42LoopCtrQ_MATLABFunction(boolean_T rtu_e, real_T rtu_t, real_T\r\n  rtu_s_t, real_T rtu_y1, real_T rtu_y2, real_T *rty_y);\r\n\r\n#endif                          // RTW_HEADER_px42LoopCtrQGC20220313_private_h_\r\n\r\n//\r\n// File trailer for generated code.\r\n//\r\n// [EOF]\r\n//\r\n"},{"name":"px42LoopCtrQGC20220313_types.h","type":"header","group":"model","path":"D:\\simulink\\PX4QGCGPSCtrl\\work\\code\\px42LoopCtrQGC20220313_ert_rtw","tag":"","groupDisplay":"Model files","code":"//\r\n// Academic License - for use in teaching, academic research, and meeting\r\n// course requirements at degree granting institutions only.  Not for\r\n// government, commercial, or other organizational use.\r\n//\r\n// File: px42LoopCtrQGC20220313_types.h\r\n//\r\n// Code generated for Simulink model 'px42LoopCtrQGC20220313'.\r\n//\r\n// Model version                  : 5.5\r\n// Simulink Coder version         : 9.7 (R2022a) 13-Nov-2021\r\n// C/C++ source code generated on : Wed Mar 16 10:17:15 2022\r\n//\r\n// Target selection: ert.tlc\r\n// Embedded hardware selection: ARM Compatible->ARM Cortex\r\n// Code generation objectives: Unspecified\r\n// Validation result: Not run\r\n//\r\n#ifndef RTW_HEADER_px42LoopCtrQGC20220313_types_h_\r\n#define RTW_HEADER_px42LoopCtrQGC20220313_types_h_\r\n#include \"rtwtypes.h\"\r\n#include \"MW_SVD.h\"\r\n#include <uORB/topics/actuator_outputs.h>\r\n#include <uORB/topics/vehicle_odometry.h>\r\n#include <uORB/topics/input_rc.h>\r\n\r\n// Model Code Variants\r\n#ifndef struct_px4_internal_block_PWM_px42Lo_T\r\n#define struct_px4_internal_block_PWM_px42Lo_T\r\n\r\nstruct px4_internal_block_PWM_px42Lo_T\r\n{\r\n  boolean_T matlabCodegenIsDeleted;\r\n  int32_T isInitialized;\r\n  boolean_T isSetupComplete;\r\n  int pwmDevHandler;\r\n  const char * pwmDevObj;\r\n  unsigned int servoCount;\r\n  int channelMask;\r\n  boolean_T isMain;\r\n  uint16_T errorStatus;\r\n  orb_advert_t armAdvertiseObj;\r\n  orb_advert_t actuatorAdvertiseObj;\r\n  boolean_T isArmed;\r\n};\r\n\r\n#endif                                // struct_px4_internal_block_PWM_px42Lo_T\r\n\r\n#ifndef struct_e_px4_internal_block_SampleTi_T\r\n#define struct_e_px4_internal_block_SampleTi_T\r\n\r\nstruct e_px4_internal_block_SampleTi_T\r\n{\r\n  int32_T __dummy;\r\n};\r\n\r\n#endif                                // struct_e_px4_internal_block_SampleTi_T\r\n\r\n#ifndef struct_px4_internal_block_Subscriber_T\r\n#define struct_px4_internal_block_Subscriber_T\r\n\r\nstruct px4_internal_block_Subscriber_T\r\n{\r\n  boolean_T matlabCodegenIsDeleted;\r\n  int32_T isInitialized;\r\n  boolean_T isSetupComplete;\r\n  e_px4_internal_block_SampleTi_T SampleTimeHandler;\r\n  pollfd_t eventStructObj;\r\n  orb_metadata_t * orbMetadataObj;\r\n};\r\n\r\n#endif                                // struct_px4_internal_block_Subscriber_T\r\n\r\n// Custom Type definition for MATLABSystem: '<Root>/Serial Transmit1'\r\n#include \"MW_SVD.h\"\r\n#ifndef struct_c_px4_internal_block_Hardware_T\r\n#define struct_c_px4_internal_block_Hardware_T\r\n\r\nstruct c_px4_internal_block_Hardware_T\r\n{\r\n  int32_T __dummy;\r\n};\r\n\r\n#endif                                // struct_c_px4_internal_block_Hardware_T\r\n\r\n#ifndef struct_d_px4_internal_block_PX4SCIDr_T\r\n#define struct_d_px4_internal_block_PX4SCIDr_T\r\n\r\nstruct d_px4_internal_block_PX4SCIDr_T\r\n{\r\n  MW_Handle_Type MW_SCIHANDLE;\r\n};\r\n\r\n#endif                                // struct_d_px4_internal_block_PX4SCIDr_T\r\n\r\n#ifndef struct_px4_internal_block_PX4SCIWrit_T\r\n#define struct_px4_internal_block_PX4SCIWrit_T\r\n\r\nstruct px4_internal_block_PX4SCIWrit_T\r\n{\r\n  boolean_T matlabCodegenIsDeleted;\r\n  int32_T isInitialized;\r\n  boolean_T isSetupComplete;\r\n  c_px4_internal_block_Hardware_T Hw;\r\n  d_px4_internal_block_PX4SCIDr_T SCIDriverObj;\r\n};\r\n\r\n#endif                                // struct_px4_internal_block_PX4SCIWrit_T\r\n\r\n// Parameters (default storage)\r\ntypedef struct P_px42LoopCtrQGC20220313_T_ P_px42LoopCtrQGC20220313_T;\r\n\r\n// Forward declaration for rtModel\r\ntypedef struct tag_RTM_px42LoopCtrQGC2022031_T RT_MODEL_px42LoopCtrQGC202203_T;\r\n\r\n#endif                            // RTW_HEADER_px42LoopCtrQGC20220313_types_h_\r\n\r\n//\r\n// File trailer for generated code.\r\n//\r\n// [EOF]\r\n//\r\n"},{"name":"px42LoopCtrQGC20220313_data.cpp","type":"source","group":"data","path":"D:\\simulink\\PX4QGCGPSCtrl\\work\\code\\px42LoopCtrQGC20220313_ert_rtw","tag":"","groupDisplay":"Data files","code":"//\r\n// Academic License - for use in teaching, academic research, and meeting\r\n// course requirements at degree granting institutions only.  Not for\r\n// government, commercial, or other organizational use.\r\n//\r\n// File: px42LoopCtrQGC20220313_data.cpp\r\n//\r\n// Code generated for Simulink model 'px42LoopCtrQGC20220313'.\r\n//\r\n// Model version                  : 5.5\r\n// Simulink Coder version         : 9.7 (R2022a) 13-Nov-2021\r\n// C/C++ source code generated on : Wed Mar 16 10:17:15 2022\r\n//\r\n// Target selection: ert.tlc\r\n// Embedded hardware selection: ARM Compatible->ARM Cortex\r\n// Code generation objectives: Unspecified\r\n// Validation result: Not run\r\n//\r\n#include \"px42LoopCtrQGC20220313.h\"\r\n\r\n// Block parameters (default storage)\r\nP_px42LoopCtrQGC20220313_T px42LoopCtrQGC20220313_P = {\r\n  // Mask Parameter: DiscreteDerivative1_ICPrevScale\r\n  //  Referenced by: '<S34>/UD'\r\n\r\n  0.0,\r\n\r\n  // Mask Parameter: DiscreteDerivative1_ICPrevSca_o\r\n  //  Referenced by: '<S16>/UD'\r\n\r\n  0.0,\r\n\r\n  // Mask Parameter: DiscreteDerivative1_ICPrevSca_d\r\n  //  Referenced by: '<S25>/UD'\r\n\r\n  0.0,\r\n\r\n  // Mask Parameter: CompareToConstant1_const\r\n  //  Referenced by: '<S37>/Constant'\r\n\r\n  0.087266462599716474,\r\n\r\n  // Mask Parameter: CompareToConstant1_const_b\r\n  //  Referenced by: '<S19>/Constant'\r\n\r\n  0.087266462599716474,\r\n\r\n  // Mask Parameter: CompareToConstant1_const_h\r\n  //  Referenced by: '<S28>/Constant'\r\n\r\n  0.087266462599716474,\r\n\r\n  // Mask Parameter: CompareToConstant2_const\r\n  //  Referenced by: '<S41>/Constant'\r\n\r\n  0.087266462599716474,\r\n\r\n  // Mask Parameter: CompareToConstant1_const_hq\r\n  //  Referenced by: '<S40>/Constant'\r\n\r\n  4.8,\r\n\r\n  // Mask Parameter: CompareToConstant2_const_o\r\n  //  Referenced by: '<S23>/Constant'\r\n\r\n  0.087266462599716474,\r\n\r\n  // Mask Parameter: CompareToConstant1_const_p\r\n  //  Referenced by: '<S22>/Constant'\r\n\r\n  4.6,\r\n\r\n  // Mask Parameter: CompareToConstant2_const_a\r\n  //  Referenced by: '<S32>/Constant'\r\n\r\n  0.087266462599716474,\r\n\r\n  // Mask Parameter: CompareToConstant1_const_a\r\n  //  Referenced by: '<S31>/Constant'\r\n\r\n  4.6,\r\n\r\n  // Computed Parameter: Out1_Y0\r\n  //  Referenced by: '<S44>/Out1'\r\n\r\n  {\r\n    (0ULL),                            // timestamp\r\n    0.0F,                              // x\r\n    0.0F,                              // y\r\n    0.0F,                              // z\r\n\r\n    {\r\n      0.0F, 0.0F, 0.0F, 0.0F }\r\n    ,                                  // q\r\n\r\n    {\r\n      0.0F, 0.0F, 0.0F, 0.0F }\r\n    ,                                  // q_offset\r\n\r\n    {\r\n      0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F,\r\n      0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F }\r\n    ,                                  // pose_covariance\r\n    0.0F,                              // vx\r\n    0.0F,                              // vy\r\n    0.0F,                              // vz\r\n    0.0F,                              // rollspeed\r\n    0.0F,                              // pitchspeed\r\n    0.0F,                              // yawspeed\r\n\r\n    {\r\n      0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F,\r\n      0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F }\r\n    ,                                  // velocity_covariance\r\n    0U,                                // local_frame\r\n\r\n    {\r\n      0U, 0U, 0U }\r\n    // _padding0\r\n  },\r\n\r\n  // Computed Parameter: Constant_Value\r\n  //  Referenced by: '<S3>/Constant'\r\n\r\n  {\r\n    (0ULL),                            // timestamp\r\n    0.0F,                              // x\r\n    0.0F,                              // y\r\n    0.0F,                              // z\r\n\r\n    {\r\n      0.0F, 0.0F, 0.0F, 0.0F }\r\n    ,                                  // q\r\n\r\n    {\r\n      0.0F, 0.0F, 0.0F, 0.0F }\r\n    ,                                  // q_offset\r\n\r\n    {\r\n      0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F,\r\n      0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F }\r\n    ,                                  // pose_covariance\r\n    0.0F,                              // vx\r\n    0.0F,                              // vy\r\n    0.0F,                              // vz\r\n    0.0F,                              // rollspeed\r\n    0.0F,                              // pitchspeed\r\n    0.0F,                              // yawspeed\r\n\r\n    {\r\n      0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F,\r\n      0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F }\r\n    ,                                  // velocity_covariance\r\n    0U,                                // local_frame\r\n\r\n    {\r\n      0U, 0U, 0U }\r\n    // _padding0\r\n  },\r\n\r\n  // Computed Parameter: Out1_Y0_k\r\n  //  Referenced by: '<S43>/Out1'\r\n\r\n  {\r\n    (0ULL),                            // timestamp\r\n    0U,                                // noutputs\r\n\r\n    {\r\n      0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F,\r\n      0.0F, 0.0F, 0.0F, 0.0F }\r\n    ,                                  // output\r\n\r\n    {\r\n      0U, 0U, 0U, 0U }\r\n    // _padding0\r\n  },\r\n\r\n  // Computed Parameter: Constant_Value_c\r\n  //  Referenced by: '<S2>/Constant'\r\n\r\n  {\r\n    (0ULL),                            // timestamp\r\n    0U,                                // noutputs\r\n\r\n    {\r\n      0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F,\r\n      0.0F, 0.0F, 0.0F, 0.0F }\r\n    ,                                  // output\r\n\r\n    {\r\n      0U, 0U, 0U, 0U }\r\n    // _padding0\r\n  },\r\n\r\n  // Computed Parameter: Out1_Y0_g\r\n  //  Referenced by: '<S54>/Out1'\r\n\r\n  {\r\n    (0ULL),                            // timestamp\r\n    (0ULL),                            // timestamp_last_signal\r\n    0U,                                // channel_count\r\n    0,                                 // rssi\r\n    0U,                                // rc_lost_frame_count\r\n    0U,                                // rc_total_frame_count\r\n    0U,                                // rc_ppm_frame_length\r\n\r\n    {\r\n      0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U }\r\n    ,                                  // values\r\n    false,                             // rc_failsafe\r\n    false,                             // rc_lost\r\n    0U,                                // input_source\r\n\r\n    {\r\n      0U, 0U, 0U }\r\n    // _padding0\r\n  },\r\n\r\n  // Computed Parameter: Constant_Value_i\r\n  //  Referenced by: '<S53>/Constant'\r\n\r\n  {\r\n    (0ULL),                            // timestamp\r\n    (0ULL),                            // timestamp_last_signal\r\n    0U,                                // channel_count\r\n    0,                                 // rssi\r\n    0U,                                // rc_lost_frame_count\r\n    0U,                                // rc_total_frame_count\r\n    0U,                                // rc_ppm_frame_length\r\n\r\n    {\r\n      0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U }\r\n    ,                                  // values\r\n    false,                             // rc_failsafe\r\n    false,                             // rc_lost\r\n    0U,                                // input_source\r\n\r\n    {\r\n      0U, 0U, 0U }\r\n    // _padding0\r\n  },\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S10>/Constant1'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S11>/Constant1'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S12>/Constant1'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0.1\r\n  //  Referenced by: '<S1>/Saturation'\r\n\r\n  0.1,\r\n\r\n  // Expression: -0.1\r\n  //  Referenced by: '<S1>/Saturation'\r\n\r\n  -0.1,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S1>/Constant'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S13>/Constant3'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S14>/Constant3'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S15>/Constant3'\r\n\r\n  0.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S48>/Constant'\r\n\r\n  1.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S49>/Constant'\r\n\r\n  1.0,\r\n\r\n  // Computed Parameter: DiscreteTimeIntegrator_gainval\r\n  //  Referenced by: '<S6>/Discrete-Time Integrator'\r\n\r\n  0.005,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S6>/Discrete-Time Integrator'\r\n\r\n  0.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S6>/Constant9'\r\n\r\n  1.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<Root>/Data Store Memory22'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<Root>/Data Store Memory23'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<Root>/Data Store Memory24'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<Root>/Data Store Memory25'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<Root>/Data Store Memory26'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<Root>/Data Store Memory5'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<Root>/Constant3'\r\n\r\n  0.0,\r\n\r\n  // Expression: 8.00109649122807\r\n  //  Referenced by: '<S36>/r'\r\n\r\n  8.00109649122807,\r\n\r\n  // Expression: 2\r\n  //  Referenced by: '<S36>/ch'\r\n\r\n  2.0,\r\n\r\n  // Expression: 5\r\n  //  Referenced by: '<S36>/T'\r\n\r\n  5.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S36>/t'\r\n\r\n  0.0,\r\n\r\n  // Expression: 2.036184210526316\r\n  //  Referenced by: '<S12>/b'\r\n\r\n  2.0361842105263159,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S35>/Gain4'\r\n\r\n  -1.0,\r\n\r\n  // Computed Parameter: TSamp_WtEt\r\n  //  Referenced by: '<S34>/TSamp'\r\n\r\n  200.0,\r\n\r\n  // Expression: 0.5282118055555556\r\n  //  Referenced by: '<S12>/l'\r\n\r\n  0.52821180555555558,\r\n\r\n  // Expression: 0.01/0.0052\r\n  //  Referenced by: '<S12>/Gain'\r\n\r\n  1.9230769230769231,\r\n\r\n  // Expression: 0.00502\r\n  //  Referenced by: '<S12>/Gain1'\r\n\r\n  0.00502,\r\n\r\n  // Computed Parameter: DiscreteTimeIntegrator3_gainval\r\n  //  Referenced by: '<S15>/Discrete-Time Integrator3'\r\n\r\n  0.005,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S15>/Discrete-Time Integrator3'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0.008\r\n  //  Referenced by: '<S1>/Gain1'\r\n\r\n  0.008,\r\n\r\n  // Expression: 0.2\r\n  //  Referenced by: '<S1>/Saturation4'\r\n\r\n  0.2,\r\n\r\n  // Expression: -0.5\r\n  //  Referenced by: '<S1>/Saturation4'\r\n\r\n  -0.5,\r\n\r\n  // Expression: pi/18\r\n  //  Referenced by: '<Root>/Sine Wave'\r\n\r\n  0.17453292519943295,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<Root>/Sine Wave'\r\n\r\n  0.0,\r\n\r\n  // Expression: pi/5\r\n  //  Referenced by: '<Root>/Sine Wave'\r\n\r\n  0.62831853071795862,\r\n\r\n  // Computed Parameter: SineWave_Hsin\r\n  //  Referenced by: '<Root>/Sine Wave'\r\n\r\n  0.0031415874858795635,\r\n\r\n  // Computed Parameter: SineWave_HCos\r\n  //  Referenced by: '<Root>/Sine Wave'\r\n\r\n  0.99999506520185821,\r\n\r\n  // Computed Parameter: SineWave_PSin\r\n  //  Referenced by: '<Root>/Sine Wave'\r\n\r\n  -0.0031415874858795635,\r\n\r\n  // Computed Parameter: SineWave_PCos\r\n  //  Referenced by: '<Root>/Sine Wave'\r\n\r\n  0.99999506520185821,\r\n\r\n  // Expression: 6.033653846153846\r\n  //  Referenced by: '<S18>/r'\r\n\r\n  6.0336538461538458,\r\n\r\n  // Expression: 2\r\n  //  Referenced by: '<S18>/ch'\r\n\r\n  2.0,\r\n\r\n  // Expression: 5.018640350877193\r\n  //  Referenced by: '<S18>/T'\r\n\r\n  5.0186403508771926,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S18>/t'\r\n\r\n  0.0,\r\n\r\n  // Expression: 2.470900809716599\r\n  //  Referenced by: '<S10>/b'\r\n\r\n  2.470900809716599,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S17>/Gain4'\r\n\r\n  -1.0,\r\n\r\n  // Computed Parameter: TSamp_WtEt_p\r\n  //  Referenced by: '<S16>/TSamp'\r\n\r\n  200.0,\r\n\r\n  // Expression: 0.5282118055555556\r\n  //  Referenced by: '<S10>/l'\r\n\r\n  0.52821180555555558,\r\n\r\n  // Expression: 0.01/0.0052\r\n  //  Referenced by: '<S10>/Gain'\r\n\r\n  1.9230769230769231,\r\n\r\n  // Expression: 0.00502\r\n  //  Referenced by: '<S10>/Gain1'\r\n\r\n  0.00502,\r\n\r\n  // Computed Parameter: DiscreteTimeIntegrator3_gainv_m\r\n  //  Referenced by: '<S13>/Discrete-Time Integrator3'\r\n\r\n  0.005,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S13>/Discrete-Time Integrator3'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0.00478\r\n  //  Referenced by: '<S1>/Gain2'\r\n\r\n  0.00478,\r\n\r\n  // Expression: 6.001388888888889\r\n  //  Referenced by: '<S27>/r'\r\n\r\n  6.0013888888888891,\r\n\r\n  // Expression: 2\r\n  //  Referenced by: '<S27>/ch'\r\n\r\n  2.0,\r\n\r\n  // Expression: 5\r\n  //  Referenced by: '<S27>/T'\r\n\r\n  5.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S27>/t'\r\n\r\n  0.0,\r\n\r\n  // Expression: 2.490277777777778\r\n  //  Referenced by: '<S11>/b'\r\n\r\n  2.490277777777778,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S26>/Gain4'\r\n\r\n  -1.0,\r\n\r\n  // Computed Parameter: TSamp_WtEt_o\r\n  //  Referenced by: '<S25>/TSamp'\r\n\r\n  200.0,\r\n\r\n  // Expression: 0.5340277777777778\r\n  //  Referenced by: '<S11>/l'\r\n\r\n  0.53402777777777777,\r\n\r\n  // Expression: 0.01/0.0052\r\n  //  Referenced by: '<S11>/Gain'\r\n\r\n  1.9230769230769231,\r\n\r\n  // Expression: 0.00478\r\n  //  Referenced by: '<S11>/J'\r\n\r\n  0.00478,\r\n\r\n  // Computed Parameter: DiscreteTimeIntegrator3_gainv_e\r\n  //  Referenced by: '<S14>/Discrete-Time Integrator3'\r\n\r\n  0.005,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S14>/Discrete-Time Integrator3'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0.00478\r\n  //  Referenced by: '<S1>/J'\r\n\r\n  0.00478,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S36>/Data Store Memory'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S18>/Data Store Memory'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S27>/Data Store Memory'\r\n\r\n  0.0,\r\n\r\n  // Computed Parameter: DiscreteTimeIntegrator_gainva_n\r\n  //  Referenced by: '<S15>/Discrete-Time Integrator'\r\n\r\n  0.005,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S15>/Discrete-Time Integrator'\r\n\r\n  0.0,\r\n\r\n  // Expression: 180/pi\r\n  //  Referenced by: '<S15>/Gain2'\r\n\r\n  57.295779513082323,\r\n\r\n  // Expression: 1/0.008\r\n  //  Referenced by: '<S15>/1//J'\r\n\r\n  125.0,\r\n\r\n  // Expression: 0.01/0.008\r\n  //  Referenced by: '<S15>/k//J'\r\n\r\n  1.25,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S15>/Saturation'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S15>/Saturation'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S15>/l1'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S15>/lambda1'\r\n\r\n  0.0,\r\n\r\n  // Computed Parameter: DiscreteTimeIntegrator1_gainval\r\n  //  Referenced by: '<S15>/Discrete-Time Integrator1'\r\n\r\n  0.005,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S15>/Discrete-Time Integrator1'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0.1\r\n  //  Referenced by: '<S15>/Constant1'\r\n\r\n  0.1,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S15>/Saturation10'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S15>/Saturation10'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S15>/Saturation11'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S15>/Saturation11'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 0.5\r\n  //  Referenced by: '<S15>/Gain'\r\n\r\n  0.5,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S15>/Saturation8'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S15>/Saturation8'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S15>/Constant2'\r\n\r\n  1.0,\r\n\r\n  // Expression: 30\r\n  //  Referenced by: '<S15>/Gain5'\r\n\r\n  30.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S15>/Saturation13'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S15>/Saturation13'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S15>/Saturation9'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S15>/Saturation9'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 0.5\r\n  //  Referenced by: '<S15>/Gain1'\r\n\r\n  0.5,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S15>/Constant4'\r\n\r\n  1.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S15>/Saturation12'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S15>/Saturation12'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S15>/Saturation16'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S15>/Saturation16'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S15>/Saturation14'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S15>/Saturation14'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 0.5\r\n  //  Referenced by: '<S15>/Gain3'\r\n\r\n  0.5,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S15>/Constant6'\r\n\r\n  1.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S15>/lambda2'\r\n\r\n  0.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S15>/Saturation1'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S15>/Saturation1'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S15>/l2'\r\n\r\n  0.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S15>/Saturation15'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S15>/Saturation15'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 30\r\n  //  Referenced by: '<S15>/Gain6'\r\n\r\n  30.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S15>/Saturation19'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S15>/Saturation19'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S15>/Saturation17'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S15>/Saturation17'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 0.5\r\n  //  Referenced by: '<S15>/Gain4'\r\n\r\n  0.5,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S15>/Constant8'\r\n\r\n  1.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S15>/Saturation18'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S15>/Saturation18'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S15>/Saturation3'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S15>/Saturation3'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S15>/l4'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S15>/lambda4'\r\n\r\n  0.0,\r\n\r\n  // Expression: 40\r\n  //  Referenced by: '<S15>/Gain7'\r\n\r\n  40.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S15>/Gain8'\r\n\r\n  1.0,\r\n\r\n  // Computed Parameter: DiscreteTimeIntegrator_gainva_e\r\n  //  Referenced by: '<S13>/Discrete-Time Integrator'\r\n\r\n  0.005,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S13>/Discrete-Time Integrator'\r\n\r\n  0.0,\r\n\r\n  // Expression: 180/pi\r\n  //  Referenced by: '<S13>/Gain2'\r\n\r\n  57.295779513082323,\r\n\r\n  // Expression: 1/0.00478\r\n  //  Referenced by: '<S13>/1//J'\r\n\r\n  209.20502092050208,\r\n\r\n  // Expression: 0.01/0.00478\r\n  //  Referenced by: '<S13>/k//J'\r\n\r\n  2.0920502092050208,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S13>/Saturation'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S13>/Saturation'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S13>/l1'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S13>/lambda1'\r\n\r\n  0.0,\r\n\r\n  // Computed Parameter: DiscreteTimeIntegrator1_gainv_n\r\n  //  Referenced by: '<S13>/Discrete-Time Integrator1'\r\n\r\n  0.005,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S13>/Discrete-Time Integrator1'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0.1\r\n  //  Referenced by: '<S13>/Constant1'\r\n\r\n  0.1,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S13>/Saturation10'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S13>/Saturation10'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S13>/Saturation11'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S13>/Saturation11'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 0.5\r\n  //  Referenced by: '<S13>/Gain'\r\n\r\n  0.5,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S13>/Saturation8'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S13>/Saturation8'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S13>/Constant2'\r\n\r\n  1.0,\r\n\r\n  // Expression: 30\r\n  //  Referenced by: '<S13>/Gain5'\r\n\r\n  30.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S13>/Saturation13'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S13>/Saturation13'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S13>/Saturation9'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S13>/Saturation9'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 0.5\r\n  //  Referenced by: '<S13>/Gain1'\r\n\r\n  0.5,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S13>/Constant4'\r\n\r\n  1.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S13>/Saturation12'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S13>/Saturation12'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S13>/Saturation16'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S13>/Saturation16'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S13>/Saturation14'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S13>/Saturation14'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 0.5\r\n  //  Referenced by: '<S13>/Gain3'\r\n\r\n  0.5,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S13>/Constant6'\r\n\r\n  1.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S13>/lambda2'\r\n\r\n  0.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S13>/Saturation1'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S13>/Saturation1'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S13>/l2'\r\n\r\n  0.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S13>/Saturation15'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S13>/Saturation15'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 30\r\n  //  Referenced by: '<S13>/Gain6'\r\n\r\n  30.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S13>/Saturation19'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S13>/Saturation19'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S13>/Saturation17'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S13>/Saturation17'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 0.5\r\n  //  Referenced by: '<S13>/Gain4'\r\n\r\n  0.5,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S13>/Constant8'\r\n\r\n  1.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S13>/Saturation18'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S13>/Saturation18'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S13>/Saturation3'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S13>/Saturation3'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S13>/l4'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S13>/lambda4'\r\n\r\n  0.0,\r\n\r\n  // Expression: 40\r\n  //  Referenced by: '<S13>/Gain7'\r\n\r\n  40.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S13>/Gain8'\r\n\r\n  1.0,\r\n\r\n  // Computed Parameter: DiscreteTimeIntegrator_gainv_nv\r\n  //  Referenced by: '<S14>/Discrete-Time Integrator'\r\n\r\n  0.005,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S14>/Discrete-Time Integrator'\r\n\r\n  0.0,\r\n\r\n  // Expression: 180/pi\r\n  //  Referenced by: '<S14>/Gain2'\r\n\r\n  57.295779513082323,\r\n\r\n  // Expression: 1/0.00478\r\n  //  Referenced by: '<S14>/1//J'\r\n\r\n  209.20502092050208,\r\n\r\n  // Expression: 0.01/0.00478\r\n  //  Referenced by: '<S14>/k//J'\r\n\r\n  2.0920502092050208,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S14>/Saturation'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S14>/Saturation'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S14>/l1'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S14>/lambda1'\r\n\r\n  0.0,\r\n\r\n  // Computed Parameter: DiscreteTimeIntegrator1_gainv_g\r\n  //  Referenced by: '<S14>/Discrete-Time Integrator1'\r\n\r\n  0.005,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S14>/Discrete-Time Integrator1'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0.1\r\n  //  Referenced by: '<S14>/Constant1'\r\n\r\n  0.1,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S14>/Saturation10'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S14>/Saturation10'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S14>/Saturation11'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S14>/Saturation11'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 0.5\r\n  //  Referenced by: '<S14>/Gain'\r\n\r\n  0.5,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S14>/Saturation8'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S14>/Saturation8'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S14>/Constant2'\r\n\r\n  1.0,\r\n\r\n  // Expression: 30\r\n  //  Referenced by: '<S14>/Gain5'\r\n\r\n  30.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S14>/Saturation13'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S14>/Saturation13'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S14>/Saturation9'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S14>/Saturation9'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 0.5\r\n  //  Referenced by: '<S14>/Gain1'\r\n\r\n  0.5,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S14>/Constant4'\r\n\r\n  1.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S14>/Saturation12'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S14>/Saturation12'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S14>/Saturation16'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S14>/Saturation16'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S14>/Saturation14'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S14>/Saturation14'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 0.5\r\n  //  Referenced by: '<S14>/Gain3'\r\n\r\n  0.5,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S14>/Constant6'\r\n\r\n  1.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S14>/lambda2'\r\n\r\n  0.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S14>/Saturation1'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S14>/Saturation1'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S14>/l2'\r\n\r\n  0.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S14>/Saturation15'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S14>/Saturation15'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 30\r\n  //  Referenced by: '<S14>/Gain6'\r\n\r\n  30.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S14>/Saturation19'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S14>/Saturation19'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S14>/Saturation17'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S14>/Saturation17'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 0.5\r\n  //  Referenced by: '<S14>/Gain4'\r\n\r\n  0.5,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S14>/Constant8'\r\n\r\n  1.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S14>/Saturation18'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S14>/Saturation18'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S14>/Saturation3'\r\n\r\n  1.0,\r\n\r\n  // Expression: -1\r\n  //  Referenced by: '<S14>/Saturation3'\r\n\r\n  -1.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S14>/l4'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S14>/lambda4'\r\n\r\n  0.0,\r\n\r\n  // Expression: 40\r\n  //  Referenced by: '<S14>/Gain7'\r\n\r\n  40.0,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<S14>/Gain8'\r\n\r\n  1.0,\r\n\r\n  // Expression: 0.2\r\n  //  Referenced by: '<S1>/Saturation2'\r\n\r\n  0.2,\r\n\r\n  // Expression: -0.5\r\n  //  Referenced by: '<S1>/Saturation2'\r\n\r\n  -0.5,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S1>/e_pitch'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S1>/e_pitch1'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<S1>/e_pitch2'\r\n\r\n  0.0,\r\n\r\n  // Expression: 1.1\r\n  //  Referenced by: '<Root>/Constant1'\r\n\r\n  1.1,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<Root>/fault_1'\r\n\r\n  0.0,\r\n\r\n  // Expression: [1 1 -1 1;1 -1 1 1;1 1 1 -1;1 -1 -1 -1]\r\n  //  Referenced by: '<Root>/Mixer matrix1'\r\n\r\n  { 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0,\r\n    -1.0, -1.0 },\r\n\r\n  // Expression: 1000\r\n  //  Referenced by: '<Root>/Gain4'\r\n\r\n  1000.0,\r\n\r\n  // Expression: 0.3835227272727273\r\n  //  Referenced by: '<Root>/fault_2'\r\n\r\n  0.38352272727272729,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<Root>/fault_3'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<Root>/fault_4'\r\n\r\n  0.0,\r\n\r\n  // Expression: 180/3.1415926\r\n  //  Referenced by: '<Root>/Gain8'\r\n\r\n  57.295780490442965,\r\n\r\n  // Expression: 180/3.1415926\r\n  //  Referenced by: '<Root>/Gain10'\r\n\r\n  57.295780490442965,\r\n\r\n  // Expression: 180/3.1415926\r\n  //  Referenced by: '<Root>/Gain7'\r\n\r\n  57.295780490442965,\r\n\r\n  // Expression: 180/3.1415926\r\n  //  Referenced by: '<Root>/Gain11'\r\n\r\n  57.295780490442965,\r\n\r\n  // Expression: 180/3.1415926\r\n  //  Referenced by: '<Root>/Gain9'\r\n\r\n  57.295780490442965,\r\n\r\n  // Expression: 170\r\n  //  Referenced by: '<Root>/Constant6'\r\n\r\n  170.0,\r\n\r\n  // Expression: 180/3.1415926\r\n  //  Referenced by: '<Root>/Gain5'\r\n\r\n  57.295780490442965,\r\n\r\n  // Expression: 180/3.1415926\r\n  //  Referenced by: '<Root>/Gain3'\r\n\r\n  57.295780490442965,\r\n\r\n  // Expression: 180/3.1415926\r\n  //  Referenced by: '<Root>/Gain6'\r\n\r\n  57.295780490442965,\r\n\r\n  // Expression: 1.2\r\n  //  Referenced by: '<Root>/Saturation'\r\n\r\n  1.2,\r\n\r\n  // Expression: 1\r\n  //  Referenced by: '<Root>/Saturation'\r\n\r\n  1.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<Root>/Data Store Memory10'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<Root>/Data Store Memory11'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<Root>/Data Store Memory12'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<Root>/Data Store Memory13'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<Root>/Data Store Memory14'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<Root>/Data Store Memory15'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<Root>/Data Store Memory16'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<Root>/Data Store Memory17'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<Root>/Data Store Memory18'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<Root>/Data Store Memory19'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<Root>/Data Store Memory2'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<Root>/Data Store Memory20'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<Root>/Data Store Memory21'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<Root>/Data Store Memory28'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<Root>/Data Store Memory29'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<Root>/Data Store Memory3'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<Root>/Data Store Memory4'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<Root>/Data Store Memory6'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<Root>/Data Store Memory7'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<Root>/Data Store Memory8'\r\n\r\n  0.0,\r\n\r\n  // Expression: 0\r\n  //  Referenced by: '<Root>/Data Store Memory9'\r\n\r\n  0.0,\r\n\r\n  // Computed Parameter: Switch3_Threshold\r\n  //  Referenced by: '<Root>/Switch3'\r\n\r\n  1500U,\r\n\r\n  // Computed Parameter: Constant10_Value\r\n  //  Referenced by: '<Root>/Constant10'\r\n\r\n  true,\r\n\r\n  // Computed Parameter: Constant11_Value\r\n  //  Referenced by: '<Root>/Constant11'\r\n\r\n  false,\r\n\r\n  // Computed Parameter: attitude_flag_Value\r\n  //  Referenced by: '<S7>/attitude_flag'\r\n\r\n  false,\r\n\r\n  // Computed Parameter: observer_flag_Value\r\n  //  Referenced by: '<S8>/observer_flag'\r\n\r\n  false,\r\n\r\n  // Computed Parameter: position_flag_Value\r\n  //  Referenced by: '<S9>/position_flag'\r\n\r\n  false,\r\n\r\n  // Computed Parameter: Constant2_Value_kf\r\n  //  Referenced by: '<Root>/Constant2'\r\n\r\n  false,\r\n\r\n  // Computed Parameter: DataStoreMemory_InitialValue_j\r\n  //  Referenced by: '<Root>/Data Store Memory'\r\n\r\n  false,\r\n\r\n  // Computed Parameter: DataStoreMemory1_InitialValue\r\n  //  Referenced by: '<Root>/Data Store Memory1'\r\n\r\n  false,\r\n\r\n  // Computed Parameter: DataStoreMemory27_InitialValue\r\n  //  Referenced by: '<Root>/Data Store Memory27'\r\n\r\n  false,\r\n\r\n  // Computed Parameter: DataStoreMemory30_InitialValue\r\n  //  Referenced by: '<Root>/Data Store Memory30'\r\n\r\n  false,\r\n\r\n  // Computed Parameter: Gain1_Gain_n\r\n  //  Referenced by: '<S5>/Gain1'\r\n\r\n  128U,\r\n\r\n  // Computed Parameter: Gain_Gain_e\r\n  //  Referenced by: '<S5>/Gain'\r\n\r\n  128U,\r\n\r\n  // Computed Parameter: ManualSwitch_CurrentSetting\r\n  //  Referenced by: '<S1>/Manual Switch'\r\n\r\n  1U,\r\n\r\n  // Computed Parameter: ManualSwitch_CurrentSetting_i\r\n  //  Referenced by: '<Root>/Manual Switch'\r\n\r\n  0U\r\n};\r\n\r\n//\r\n// File trailer for generated code.\r\n//\r\n// [EOF]\r\n//\r\n"},{"name":"multiword_types.h","type":"header","group":"utility","path":"D:\\simulink\\PX4QGCGPSCtrl\\work\\code\\px42LoopCtrQGC20220313_ert_rtw","tag":"","groupDisplay":"Utility files","code":"//\r\n// Academic License - for use in teaching, academic research, and meeting\r\n// course requirements at degree granting institutions only.  Not for\r\n// government, commercial, or other organizational use.\r\n//\r\n// File: multiword_types.h\r\n//\r\n// Code generated for Simulink model 'px42LoopCtrQGC20220313'.\r\n//\r\n// Model version                  : 5.5\r\n// Simulink Coder version         : 9.7 (R2022a) 13-Nov-2021\r\n// C/C++ source code generated on : Wed Mar 16 10:17:15 2022\r\n//\r\n// Target selection: ert.tlc\r\n// Embedded hardware selection: ARM Compatible->ARM Cortex\r\n// Code generation objectives: Unspecified\r\n// Validation result: Not run\r\n//\r\n\r\n#ifndef MULTIWORD_TYPES_H\r\n#define MULTIWORD_TYPES_H\r\n#include \"rtwtypes.h\"\r\n\r\n//\r\n//  Definitions supporting external data access\r\ntypedef int64_T chunk_T;\r\ntypedef uint64_T uchunk_T;\r\n\r\n#endif                                 // MULTIWORD_TYPES_H\r\n\r\n//\r\n// File trailer for generated code.\r\n//\r\n// [EOF]\r\n//\r\n"},{"name":"rtGetInf.cpp","type":"source","group":"utility","path":"D:\\simulink\\PX4QGCGPSCtrl\\work\\code\\px42LoopCtrQGC20220313_ert_rtw","tag":"","groupDisplay":"Utility files","code":"//\r\n// Academic License - for use in teaching, academic research, and meeting\r\n// course requirements at degree granting institutions only.  Not for\r\n// government, commercial, or other organizational use.\r\n//\r\n// File: rtGetInf.cpp\r\n//\r\n// Code generated for Simulink model 'px42LoopCtrQGC20220313'.\r\n//\r\n// Model version                  : 5.5\r\n// Simulink Coder version         : 9.7 (R2022a) 13-Nov-2021\r\n// C/C++ source code generated on : Wed Mar 16 10:17:15 2022\r\n//\r\n// Target selection: ert.tlc\r\n// Embedded hardware selection: ARM Compatible->ARM Cortex\r\n// Code generation objectives: Unspecified\r\n// Validation result: Not run\r\n//\r\n\r\n#include \"rtwtypes.h\"\r\n\r\nextern \"C\" {\r\n\r\n#include \"rtGetInf.h\"\r\n\r\n}\r\n#include <stddef.h>\r\n\r\nextern \"C\" {\r\n\r\n#include \"rt_nonfinite.h\"\r\n\r\n}\r\n#define NumBitsPerChar                 8U\r\n\r\nextern \"C\" {\r\n  //\r\n  // Initialize rtInf needed by the generated code.\r\n  // Inf is initialized as non-signaling. Assumes IEEE.\r\n  //\r\n  real_T rtGetInf(void)\r\n  {\r\n    size_t bitsPerReal = sizeof(real_T) * (NumBitsPerChar);\r\n    real_T inf = 0.0;\r\n    if (bitsPerReal == 32U) {\r\n      inf = rtGetInfF();\r\n    } else {\r\n      union {\r\n        LittleEndianIEEEDouble bitVal;\r\n        real_T fltVal;\r\n      } tmpVal;\r\n\r\n      tmpVal.bitVal.words.wordH = 0x7FF00000U;\r\n      tmpVal.bitVal.words.wordL = 0x00000000U;\r\n      inf = tmpVal.fltVal;\r\n    }\r\n\r\n    return inf;\r\n  }\r\n\r\n  //\r\n  // Initialize rtInfF needed by the generated code.\r\n  // Inf is initialized as non-signaling. Assumes IEEE.\r\n  //\r\n  real32_T rtGetInfF(void)\r\n  {\r\n    IEEESingle infF;\r\n    infF.wordL.wordLuint = 0x7F800000U;\r\n    return infF.wordL.wordLreal;\r\n  }\r\n\r\n  //\r\n  // Initialize rtMinusInf needed by the generated code.\r\n  // Inf is initialized as non-signaling. Assumes IEEE.\r\n  //\r\n  real_T rtGetMinusInf(void)\r\n  {\r\n    size_t bitsPerReal = sizeof(real_T) * (NumBitsPerChar);\r\n    real_T minf = 0.0;\r\n    if (bitsPerReal == 32U) {\r\n      minf = rtGetMinusInfF();\r\n    } else {\r\n      union {\r\n        LittleEndianIEEEDouble bitVal;\r\n        real_T fltVal;\r\n      } tmpVal;\r\n\r\n      tmpVal.bitVal.words.wordH = 0xFFF00000U;\r\n      tmpVal.bitVal.words.wordL = 0x00000000U;\r\n      minf = tmpVal.fltVal;\r\n    }\r\n\r\n    return minf;\r\n  }\r\n\r\n  //\r\n  // Initialize rtMinusInfF needed by the generated code.\r\n  // Inf is initialized as non-signaling. Assumes IEEE.\r\n  //\r\n  real32_T rtGetMinusInfF(void)\r\n  {\r\n    IEEESingle minfF;\r\n    minfF.wordL.wordLuint = 0xFF800000U;\r\n    return minfF.wordL.wordLreal;\r\n  }\r\n}\r\n//\r\n// File trailer for generated code.\r\n//\r\n// [EOF]\r\n//\r\n"},{"name":"rtGetInf.h","type":"header","group":"utility","path":"D:\\simulink\\PX4QGCGPSCtrl\\work\\code\\px42LoopCtrQGC20220313_ert_rtw","tag":"","groupDisplay":"Utility files","code":"//\r\n// Academic License - for use in teaching, academic research, and meeting\r\n// course requirements at degree granting institutions only.  Not for\r\n// government, commercial, or other organizational use.\r\n//\r\n// File: rtGetInf.h\r\n//\r\n// Code generated for Simulink model 'px42LoopCtrQGC20220313'.\r\n//\r\n// Model version                  : 5.5\r\n// Simulink Coder version         : 9.7 (R2022a) 13-Nov-2021\r\n// C/C++ source code generated on : Wed Mar 16 10:17:15 2022\r\n//\r\n// Target selection: ert.tlc\r\n// Embedded hardware selection: ARM Compatible->ARM Cortex\r\n// Code generation objectives: Unspecified\r\n// Validation result: Not run\r\n//\r\n#ifndef RTW_HEADER_rtGetInf_h_\r\n#define RTW_HEADER_rtGetInf_h_\r\n#include \"rtwtypes.h\"\r\n#ifdef __cplusplus\r\n\r\nextern \"C\" {\r\n\r\n#endif\r\n\r\n  extern real_T rtGetInf(void);\r\n  extern real32_T rtGetInfF(void);\r\n  extern real_T rtGetMinusInf(void);\r\n  extern real32_T rtGetMinusInfF(void);\r\n\r\n#ifdef __cplusplus\r\n\r\n}                                      // extern \"C\"\r\n#endif\r\n#endif                                 // RTW_HEADER_rtGetInf_h_\r\n\r\n//\r\n// File trailer for generated code.\r\n//\r\n// [EOF]\r\n//\r\n"},{"name":"rtGetNaN.cpp","type":"source","group":"utility","path":"D:\\simulink\\PX4QGCGPSCtrl\\work\\code\\px42LoopCtrQGC20220313_ert_rtw","tag":"","groupDisplay":"Utility files","code":"//\r\n// Academic License - for use in teaching, academic research, and meeting\r\n// course requirements at degree granting institutions only.  Not for\r\n// government, commercial, or other organizational use.\r\n//\r\n// File: rtGetNaN.cpp\r\n//\r\n// Code generated for Simulink model 'px42LoopCtrQGC20220313'.\r\n//\r\n// Model version                  : 5.5\r\n// Simulink Coder version         : 9.7 (R2022a) 13-Nov-2021\r\n// C/C++ source code generated on : Wed Mar 16 10:17:15 2022\r\n//\r\n// Target selection: ert.tlc\r\n// Embedded hardware selection: ARM Compatible->ARM Cortex\r\n// Code generation objectives: Unspecified\r\n// Validation result: Not run\r\n//\r\n\r\n#include \"rtwtypes.h\"\r\n\r\nextern \"C\" {\r\n\r\n#include \"rtGetNaN.h\"\r\n\r\n}\r\n#include <stddef.h>\r\n\r\nextern \"C\" {\r\n\r\n#include \"rt_nonfinite.h\"\r\n\r\n}\r\n#define NumBitsPerChar                 8U\r\n\r\nextern \"C\" {\r\n  //\r\n  // Initialize rtNaN needed by the generated code.\r\n  // NaN is initialized as non-signaling. Assumes IEEE.\r\n  //\r\n  real_T rtGetNaN(void)\r\n  {\r\n    size_t bitsPerReal = sizeof(real_T) * (NumBitsPerChar);\r\n    real_T nan = 0.0;\r\n    if (bitsPerReal == 32U) {\r\n      nan = rtGetNaNF();\r\n    } else {\r\n      union {\r\n        LittleEndianIEEEDouble bitVal;\r\n        real_T fltVal;\r\n      } tmpVal;\r\n\r\n      tmpVal.bitVal.words.wordH = 0xFFF80000U;\r\n      tmpVal.bitVal.words.wordL = 0x00000000U;\r\n      nan = tmpVal.fltVal;\r\n    }\r\n\r\n    return nan;\r\n  }\r\n\r\n  //\r\n  // Initialize rtNaNF needed by the generated code.\r\n  // NaN is initialized as non-signaling. Assumes IEEE.\r\n  //\r\n  real32_T rtGetNaNF(void)\r\n  {\r\n    IEEESingle nanF = { { 0.0F } };\r\n\r\n    nanF.wordL.wordLuint = 0xFFC00000U;\r\n    return nanF.wordL.wordLreal;\r\n  }\r\n}\r\n//\r\n// File trailer for generated code.\r\n//\r\n// [EOF]\r\n//\r\n"},{"name":"rtGetNaN.h","type":"header","group":"utility","path":"D:\\simulink\\PX4QGCGPSCtrl\\work\\code\\px42LoopCtrQGC20220313_ert_rtw","tag":"","groupDisplay":"Utility files","code":"//\r\n// Academic License - for use in teaching, academic research, and meeting\r\n// course requirements at degree granting institutions only.  Not for\r\n// government, commercial, or other organizational use.\r\n//\r\n// File: rtGetNaN.h\r\n//\r\n// Code generated for Simulink model 'px42LoopCtrQGC20220313'.\r\n//\r\n// Model version                  : 5.5\r\n// Simulink Coder version         : 9.7 (R2022a) 13-Nov-2021\r\n// C/C++ source code generated on : Wed Mar 16 10:17:15 2022\r\n//\r\n// Target selection: ert.tlc\r\n// Embedded hardware selection: ARM Compatible->ARM Cortex\r\n// Code generation objectives: Unspecified\r\n// Validation result: Not run\r\n//\r\n#ifndef RTW_HEADER_rtGetNaN_h_\r\n#define RTW_HEADER_rtGetNaN_h_\r\n#include \"rtwtypes.h\"\r\n#ifdef __cplusplus\r\n\r\nextern \"C\" {\r\n\r\n#endif\r\n\r\n  extern real_T rtGetNaN(void);\r\n  extern real32_T rtGetNaNF(void);\r\n\r\n#ifdef __cplusplus\r\n\r\n}                                      // extern \"C\"\r\n#endif\r\n#endif                                 // RTW_HEADER_rtGetNaN_h_\r\n\r\n//\r\n// File trailer for generated code.\r\n//\r\n// [EOF]\r\n//\r\n"},{"name":"rt_defines.h","type":"header","group":"utility","path":"D:\\simulink\\PX4QGCGPSCtrl\\work\\code\\px42LoopCtrQGC20220313_ert_rtw","tag":"","groupDisplay":"Utility files","code":"//\r\n// Academic License - for use in teaching, academic research, and meeting\r\n// course requirements at degree granting institutions only.  Not for\r\n// government, commercial, or other organizational use.\r\n//\r\n// File: rt_defines.h\r\n//\r\n// Code generated for Simulink model 'px42LoopCtrQGC20220313'.\r\n//\r\n// Model version                  : 5.5\r\n// Simulink Coder version         : 9.7 (R2022a) 13-Nov-2021\r\n// C/C++ source code generated on : Wed Mar 16 10:17:15 2022\r\n//\r\n// Target selection: ert.tlc\r\n// Embedded hardware selection: ARM Compatible->ARM Cortex\r\n// Code generation objectives: Unspecified\r\n// Validation result: Not run\r\n//\r\n#ifndef RTW_HEADER_rt_defines_h_\r\n#define RTW_HEADER_rt_defines_h_\r\n\r\n//===========*\r\n//  Constants *\r\n// ===========\r\n#define RT_PI                          3.14159265358979323846\r\n#define RT_PIF                         3.1415927F\r\n#define RT_LN_10                       2.30258509299404568402\r\n#define RT_LN_10F                      2.3025851F\r\n#define RT_LOG10E                      0.43429448190325182765\r\n#define RT_LOG10EF                     0.43429449F\r\n#define RT_E                           2.7182818284590452354\r\n#define RT_EF                          2.7182817F\r\n\r\n//\r\n//  UNUSED_PARAMETER(x)\r\n//    Used to specify that a function parameter (argument) is required but not\r\n//    accessed by the function body.\r\n\r\n#ifndef UNUSED_PARAMETER\r\n#if defined(__LCC__)\r\n#define UNUSED_PARAMETER(x)                                      // do nothing\r\n#else\r\n\r\n//\r\n//  This is the semi-ANSI standard way of indicating that an\r\n//  unused function parameter is required.\r\n\r\n#define UNUSED_PARAMETER(x)            (void) (x)\r\n#endif\r\n#endif\r\n#endif                                 // RTW_HEADER_rt_defines_h_\r\n\r\n//\r\n// File trailer for generated code.\r\n//\r\n// [EOF]\r\n//\r\n"},{"name":"rt_nonfinite.cpp","type":"source","group":"utility","path":"D:\\simulink\\PX4QGCGPSCtrl\\work\\code\\px42LoopCtrQGC20220313_ert_rtw","tag":"","groupDisplay":"Utility files","code":"//\r\n// Academic License - for use in teaching, academic research, and meeting\r\n// course requirements at degree granting institutions only.  Not for\r\n// government, commercial, or other organizational use.\r\n//\r\n// File: rt_nonfinite.cpp\r\n//\r\n// Code generated for Simulink model 'px42LoopCtrQGC20220313'.\r\n//\r\n// Model version                  : 5.5\r\n// Simulink Coder version         : 9.7 (R2022a) 13-Nov-2021\r\n// C/C++ source code generated on : Wed Mar 16 10:17:15 2022\r\n//\r\n// Target selection: ert.tlc\r\n// Embedded hardware selection: ARM Compatible->ARM Cortex\r\n// Code generation objectives: Unspecified\r\n// Validation result: Not run\r\n//\r\n\r\nextern \"C\" {\r\n\r\n#include \"rtGetNaN.h\"\r\n\r\n}\r\n  extern \"C\"\r\n{\r\n\r\n#include \"rtGetInf.h\"\r\n\r\n}\r\n\r\n#include <stddef.h>\r\n#include \"rtwtypes.h\"\r\n\r\nextern \"C\" {\r\n\r\n#include \"rt_nonfinite.h\"\r\n\r\n}\r\n#define NumBitsPerChar                 8U\r\n\r\nextern \"C\" {\r\n  real_T rtInf;\r\n  real_T rtMinusInf;\r\n  real_T rtNaN;\r\n  real32_T rtInfF;\r\n  real32_T rtMinusInfF;\r\n  real32_T rtNaNF;\r\n}\r\n  extern \"C\"\r\n{\r\n  //\r\n  // Initialize the rtInf, rtMinusInf, and rtNaN needed by the\r\n  // generated code. NaN is initialized as non-signaling. Assumes IEEE.\r\n  //\r\n  void rt_InitInfAndNaN(size_t realSize)\r\n  {\r\n    (void) (realSize);\r\n    rtNaN = rtGetNaN();\r\n    rtNaNF = rtGetNaNF();\r\n    rtInf = rtGetInf();\r\n    rtInfF = rtGetInfF();\r\n    rtMinusInf = rtGetMinusInf();\r\n    rtMinusInfF = rtGetMinusInfF();\r\n  }\r\n\r\n  // Test if value is infinite\r\n  boolean_T rtIsInf(real_T value)\r\n  {\r\n    return (boolean_T)((value==rtInf || value==rtMinusInf) ? 1U : 0U);\r\n  }\r\n\r\n  // Test if single-precision value is infinite\r\n  boolean_T rtIsInfF(real32_T value)\r\n  {\r\n    return (boolean_T)(((value)==rtInfF || (value)==rtMinusInfF) ? 1U : 0U);\r\n  }\r\n\r\n  // Test if value is not a number\r\n  boolean_T rtIsNaN(real_T value)\r\n  {\r\n    boolean_T result = (boolean_T) 0;\r\n    size_t bitsPerReal = sizeof(real_T) * (NumBitsPerChar);\r\n    if (bitsPerReal == 32U) {\r\n      result = rtIsNaNF((real32_T)value);\r\n    } else {\r\n      union {\r\n        LittleEndianIEEEDouble bitVal;\r\n        real_T fltVal;\r\n      } tmpVal;\r\n\r\n      tmpVal.fltVal = value;\r\n      result = (boolean_T)((tmpVal.bitVal.words.wordH & 0x7FF00000) ==\r\n                           0x7FF00000 &&\r\n                           ( (tmpVal.bitVal.words.wordH & 0x000FFFFF) != 0 ||\r\n                            (tmpVal.bitVal.words.wordL != 0) ));\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  // Test if single-precision value is not a number\r\n  boolean_T rtIsNaNF(real32_T value)\r\n  {\r\n    IEEESingle tmp;\r\n    tmp.wordL.wordLreal = value;\r\n    return (boolean_T)( (tmp.wordL.wordLuint & 0x7F800000) == 0x7F800000 &&\r\n                       (tmp.wordL.wordLuint & 0x007FFFFF) != 0 );\r\n  }\r\n}\r\n\r\n//\r\n// File trailer for generated code.\r\n//\r\n// [EOF]\r\n//\r\n"},{"name":"rt_nonfinite.h","type":"header","group":"utility","path":"D:\\simulink\\PX4QGCGPSCtrl\\work\\code\\px42LoopCtrQGC20220313_ert_rtw","tag":"","groupDisplay":"Utility files","code":"//\r\n// Academic License - for use in teaching, academic research, and meeting\r\n// course requirements at degree granting institutions only.  Not for\r\n// government, commercial, or other organizational use.\r\n//\r\n// File: rt_nonfinite.h\r\n//\r\n// Code generated for Simulink model 'px42LoopCtrQGC20220313'.\r\n//\r\n// Model version                  : 5.5\r\n// Simulink Coder version         : 9.7 (R2022a) 13-Nov-2021\r\n// C/C++ source code generated on : Wed Mar 16 10:17:15 2022\r\n//\r\n// Target selection: ert.tlc\r\n// Embedded hardware selection: ARM Compatible->ARM Cortex\r\n// Code generation objectives: Unspecified\r\n// Validation result: Not run\r\n//\r\n#ifndef RTW_HEADER_rt_nonfinite_h_\r\n#define RTW_HEADER_rt_nonfinite_h_\r\n#include <stddef.h>\r\n#include \"rtwtypes.h\"\r\n#ifdef __cplusplus\r\n\r\nextern \"C\" {\r\n\r\n#endif\r\n\r\n  extern real_T rtInf;\r\n  extern real_T rtMinusInf;\r\n  extern real_T rtNaN;\r\n  extern real32_T rtInfF;\r\n  extern real32_T rtMinusInfF;\r\n  extern real32_T rtNaNF;\r\n  extern void rt_InitInfAndNaN(size_t realSize);\r\n  extern boolean_T rtIsInf(real_T value);\r\n  extern boolean_T rtIsInfF(real32_T value);\r\n  extern boolean_T rtIsNaN(real_T value);\r\n  extern boolean_T rtIsNaNF(real32_T value);\r\n  struct BigEndianIEEEDouble {\r\n    struct {\r\n      uint32_T wordH;\r\n      uint32_T wordL;\r\n    } words;\r\n  };\r\n\r\n  struct LittleEndianIEEEDouble {\r\n    struct {\r\n      uint32_T wordL;\r\n      uint32_T wordH;\r\n    } words;\r\n  };\r\n\r\n  struct IEEESingle {\r\n    union {\r\n      real32_T wordLreal;\r\n      uint32_T wordLuint;\r\n    } wordL;\r\n  };\r\n\r\n#ifdef __cplusplus\r\n\r\n}                                      // extern \"C\"\r\n#endif\r\n#endif                                 // RTW_HEADER_rt_nonfinite_h_\r\n\r\n//\r\n// File trailer for generated code.\r\n//\r\n// [EOF]\r\n//\r\n"},{"name":"rtwtypes.h","type":"header","group":"utility","path":"D:\\simulink\\PX4QGCGPSCtrl\\work\\code\\px42LoopCtrQGC20220313_ert_rtw","tag":"","groupDisplay":"Utility files","code":"//\r\n// Academic License - for use in teaching, academic research, and meeting\r\n// course requirements at degree granting institutions only.  Not for\r\n// government, commercial, or other organizational use.\r\n//\r\n// File: rtwtypes.h\r\n//\r\n// Code generated for Simulink model 'px42LoopCtrQGC20220313'.\r\n//\r\n// Model version                  : 5.5\r\n// Simulink Coder version         : 9.7 (R2022a) 13-Nov-2021\r\n// C/C++ source code generated on : Wed Mar 16 10:17:15 2022\r\n//\r\n// Target selection: ert.tlc\r\n// Embedded hardware selection: ARM Compatible->ARM Cortex\r\n// Code generation objectives: Unspecified\r\n// Validation result: Not run\r\n//\r\n\r\n#ifndef RTWTYPES_H\r\n#define RTWTYPES_H\r\n\r\n// Logical type definitions\r\n#if (!defined(__cplusplus))\r\n#ifndef false\r\n#define false                          (0U)\r\n#endif\r\n\r\n#ifndef true\r\n#define true                           (1U)\r\n#endif\r\n#endif\r\n\r\n//=======================================================================*\r\n//  Target hardware information\r\n//    Device type: ARM Compatible->ARM Cortex\r\n//    Number of bits:     char:   8    short:   16    int:  32\r\n//                        long:  32    long long:  64\r\n//                        native word size:  32\r\n//    Byte ordering: LittleEndian\r\n//    Signed integer division rounds to: Zero\r\n//    Shift right on a signed integer as arithmetic shift: on\r\n// =======================================================================\r\n\r\n//=======================================================================*\r\n//  Fixed width word size data types:                                     *\r\n//    int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\r\n//    uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\r\n//    real32_T, real64_T           - 32 and 64 bit floating point numbers *\r\n// =======================================================================\r\ntypedef signed char int8_T;\r\ntypedef unsigned char uint8_T;\r\ntypedef short int16_T;\r\ntypedef unsigned short uint16_T;\r\ntypedef int int32_T;\r\ntypedef unsigned int uint32_T;\r\ntypedef long long int64_T;\r\ntypedef unsigned long long uint64_T;\r\ntypedef float real32_T;\r\ntypedef double real64_T;\r\n\r\n//===========================================================================*\r\n//  Generic type definitions: boolean_T, char_T, byte_T, int_T, uint_T,       *\r\n//                            real_T, time_T, ulong_T, ulonglong_T.           *\r\n// ===========================================================================\r\ntypedef double real_T;\r\ntypedef double time_T;\r\ntypedef unsigned char boolean_T;\r\ntypedef int int_T;\r\ntypedef unsigned int uint_T;\r\ntypedef unsigned long ulong_T;\r\ntypedef unsigned long long ulonglong_T;\r\ntypedef char char_T;\r\ntypedef unsigned char uchar_T;\r\ntypedef char_T byte_T;\r\n\r\n//===========================================================================*\r\n//  Complex number type definitions                                           *\r\n// ===========================================================================\r\n#define CREAL_T\r\n\r\ntypedef struct {\r\n  real32_T re;\r\n  real32_T im;\r\n} creal32_T;\r\n\r\ntypedef struct {\r\n  real64_T re;\r\n  real64_T im;\r\n} creal64_T;\r\n\r\ntypedef struct {\r\n  real_T re;\r\n  real_T im;\r\n} creal_T;\r\n\r\n#define CINT8_T\r\n\r\ntypedef struct {\r\n  int8_T re;\r\n  int8_T im;\r\n} cint8_T;\r\n\r\n#define CUINT8_T\r\n\r\ntypedef struct {\r\n  uint8_T re;\r\n  uint8_T im;\r\n} cuint8_T;\r\n\r\n#define CINT16_T\r\n\r\ntypedef struct {\r\n  int16_T re;\r\n  int16_T im;\r\n} cint16_T;\r\n\r\n#define CUINT16_T\r\n\r\ntypedef struct {\r\n  uint16_T re;\r\n  uint16_T im;\r\n} cuint16_T;\r\n\r\n#define CINT32_T\r\n\r\ntypedef struct {\r\n  int32_T re;\r\n  int32_T im;\r\n} cint32_T;\r\n\r\n#define CUINT32_T\r\n\r\ntypedef struct {\r\n  uint32_T re;\r\n  uint32_T im;\r\n} cuint32_T;\r\n\r\n#define CINT64_T\r\n\r\ntypedef struct {\r\n  int64_T re;\r\n  int64_T im;\r\n} cint64_T;\r\n\r\n#define CUINT64_T\r\n\r\ntypedef struct {\r\n  uint64_T re;\r\n  uint64_T im;\r\n} cuint64_T;\r\n\r\n//=======================================================================*\r\n//  Min and Max:                                                          *\r\n//    int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\r\n//    uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\r\n// =======================================================================\r\n#define MAX_int8_T                     ((int8_T)(127))\r\n#define MIN_int8_T                     ((int8_T)(-128))\r\n#define MAX_uint8_T                    ((uint8_T)(255U))\r\n#define MAX_int16_T                    ((int16_T)(32767))\r\n#define MIN_int16_T                    ((int16_T)(-32768))\r\n#define MAX_uint16_T                   ((uint16_T)(65535U))\r\n#define MAX_int32_T                    ((int32_T)(2147483647))\r\n#define MIN_int32_T                    ((int32_T)(-2147483647-1))\r\n#define MAX_uint32_T                   ((uint32_T)(0xFFFFFFFFU))\r\n#define MAX_int64_T                    ((int64_T)(9223372036854775807LL))\r\n#define MIN_int64_T                    ((int64_T)(-9223372036854775807LL-1LL))\r\n#define MAX_uint64_T                   ((uint64_T)(0xFFFFFFFFFFFFFFFFULL))\r\n\r\n// Block D-Work pointer type\r\ntypedef void * pointer_T;\r\n\r\n#endif                                 // RTWTYPES_H\r\n\r\n//\r\n// File trailer for generated code.\r\n//\r\n// [EOF]\r\n//\r\n"},{"name":"zero_crossing_types.h","type":"header","group":"utility","path":"D:\\simulink\\PX4QGCGPSCtrl\\work\\code\\px42LoopCtrQGC20220313_ert_rtw","tag":"","groupDisplay":"Utility files","code":"//\r\n// Academic License - for use in teaching, academic research, and meeting\r\n// course requirements at degree granting institutions only.  Not for\r\n// government, commercial, or other organizational use.\r\n//\r\n// File: zero_crossing_types.h\r\n//\r\n// Code generated for Simulink model 'px42LoopCtrQGC20220313'.\r\n//\r\n// Model version                  : 5.5\r\n// Simulink Coder version         : 9.7 (R2022a) 13-Nov-2021\r\n// C/C++ source code generated on : Wed Mar 16 10:17:15 2022\r\n//\r\n// Target selection: ert.tlc\r\n// Embedded hardware selection: ARM Compatible->ARM Cortex\r\n// Code generation objectives: Unspecified\r\n// Validation result: Not run\r\n//\r\n\r\n#ifndef ZERO_CROSSING_TYPES_H\r\n#define ZERO_CROSSING_TYPES_H\r\n#include \"rtwtypes.h\"\r\n\r\n// Trigger directions: falling, either, and rising\r\ntypedef enum {\r\n  FALLING_ZERO_CROSSING = -1,\r\n  ANY_ZERO_CROSSING = 0,\r\n  RISING_ZERO_CROSSING = 1\r\n} ZCDirection;\r\n\r\n// Previous state of a trigger signal\r\ntypedef uint8_T ZCSigState;\r\n\r\n// Initial value of a trigger zero crossing signal\r\n#define UNINITIALIZED_ZCSIG            0x03U\r\n#define NEG_ZCSIG                      0x02U\r\n#define POS_ZCSIG                      0x01U\r\n#define ZERO_ZCSIG                     0x00U\r\n\r\n// Current state of a trigger signal\r\ntypedef enum { FALLING_ZCEVENT = -1, NO_ZCEVENT = 0, RISING_ZCEVENT = 1 }\r\n  ZCEventType;\r\n\r\n#endif                                 // ZERO_CROSSING_TYPES_H\r\n\r\n//\r\n// File trailer for generated code.\r\n//\r\n// [EOF]\r\n//\r\n"},{"name":"px42LoopCtrQGC20220313_dt.h","type":"header","group":"interface","path":"D:\\simulink\\PX4QGCGPSCtrl\\work\\code\\px42LoopCtrQGC20220313_ert_rtw","tag":"","groupDisplay":"Interface files","code":"//\r\n//  px42LoopCtrQGC20220313_dt.h\r\n//\r\n//  Academic License - for use in teaching, academic research, and meeting\r\n//  course requirements at degree granting institutions only.  Not for\r\n//  government, commercial, or other organizational use.\r\n//\r\n//  Code generation for model \"px42LoopCtrQGC20220313\".\r\n//\r\n//  Model version              : 5.5\r\n//  Simulink Coder version : 9.7 (R2022a) 13-Nov-2021\r\n//  C++ source code generated on : Wed Mar 16 10:17:15 2022\r\n//\r\n//  Target selection: ert.tlc\r\n//  Embedded hardware selection: ARM Compatible->ARM Cortex\r\n//  Code generation objectives: Unspecified\r\n//  Validation result: Not run\r\n\r\n\r\n#include \"ext_types.h\"\r\n\r\n// data type size table\r\nstatic uint_T rtDataTypeSizes[] = {\r\n  sizeof(real_T),\r\n  sizeof(real32_T),\r\n  sizeof(int8_T),\r\n  sizeof(uint8_T),\r\n  sizeof(int16_T),\r\n  sizeof(uint16_T),\r\n  sizeof(int32_T),\r\n  sizeof(uint32_T),\r\n  sizeof(boolean_T),\r\n  sizeof(fcn_call_T),\r\n  sizeof(int_T),\r\n  sizeof(pointer_T),\r\n  sizeof(action_T),\r\n  2*sizeof(uint32_T),\r\n  sizeof(int32_T),\r\n  sizeof(int64_T),\r\n  sizeof(uint64_T),\r\n  sizeof(px4_Bus_actuator_outputs),\r\n  sizeof(px4_Bus_vehicle_odometry),\r\n  sizeof(px4_Bus_input_rc),\r\n  sizeof(uint8_T),\r\n  sizeof(uint8_T),\r\n  sizeof(px4_internal_block_PWM_px42Lo_T),\r\n  sizeof(px4_internal_block_Subscriber_T),\r\n  sizeof(px4_internal_block_PX4SCIWrit_T),\r\n  sizeof(uint64_T),\r\n  sizeof(int64_T),\r\n  sizeof(char_T),\r\n  sizeof(uchar_T),\r\n  sizeof(time_T)\r\n};\r\n\r\n// data type name table\r\nstatic const char_T * rtDataTypeNames[] = {\r\n  \"real_T\",\r\n  \"real32_T\",\r\n  \"int8_T\",\r\n  \"uint8_T\",\r\n  \"int16_T\",\r\n  \"uint16_T\",\r\n  \"int32_T\",\r\n  \"uint32_T\",\r\n  \"boolean_T\",\r\n  \"fcn_call_T\",\r\n  \"int_T\",\r\n  \"pointer_T\",\r\n  \"action_T\",\r\n  \"timer_uint32_pair_T\",\r\n  \"physical_connection\",\r\n  \"int64_T\",\r\n  \"uint64_T\",\r\n  \"px4_Bus_actuator_outputs\",\r\n  \"px4_Bus_vehicle_odometry\",\r\n  \"px4_Bus_input_rc\",\r\n  \"uint8_T\",\r\n  \"uint8_T\",\r\n  \"px4_internal_block_PWM_px42Lo_T\",\r\n  \"px4_internal_block_Subscriber_T\",\r\n  \"px4_internal_block_PX4SCIWrit_T\",\r\n  \"uint64_T\",\r\n  \"int64_T\",\r\n  \"char_T\",\r\n  \"uchar_T\",\r\n  \"time_T\"\r\n};\r\n\r\n// data type transitions for block I/O structure\r\nstatic DataTypeTransition rtBTransitions[] = {\r\n  { (char_T *)(&px42LoopCtrQGC20220313_B.In1), 18, 0, 1 },\r\n\r\n  { (char_T *)(&px42LoopCtrQGC20220313_B.In1_a), 17, 0, 1 },\r\n\r\n  { (char_T *)(&px42LoopCtrQGC20220313_B.In1_k), 19, 0, 1 },\r\n\r\n  { (char_T *)(&px42LoopCtrQGC20220313_B.Gain2), 0, 0, 42 },\r\n\r\n  { (char_T *)(&px42LoopCtrQGC20220313_B.output[0]), 1, 0, 16 },\r\n\r\n  { (char_T *)(&px42LoopCtrQGC20220313_B.values[0]), 5, 0, 18 },\r\n\r\n  { (char_T *)(&px42LoopCtrQGC20220313_B.Switch3), 8, 0, 3 }\r\n  ,\r\n\r\n  { (char_T *)(&px42LoopCtrQGC20220313_DW.obj), 22, 0, 1 },\r\n\r\n  { (char_T *)(&px42LoopCtrQGC20220313_DW.obj_a), 23, 0, 3 },\r\n\r\n  { (char_T *)(&px42LoopCtrQGC20220313_DW.obj_e), 24, 0, 1 },\r\n\r\n  { (char_T *)(&px42LoopCtrQGC20220313_DW.UD_DSTATE), 0, 0, 38 },\r\n\r\n  { (char_T *)(&px42LoopCtrQGC20220313_DW.Scope_PWORK.LoggedData), 11, 0, 17 },\r\n\r\n  { (char_T *)(&px42LoopCtrQGC20220313_DW.systemEnable), 6, 0, 1 },\r\n\r\n  { (char_T *)(&px42LoopCtrQGC20220313_DW.Subsystem1_SubsysRanBC), 2, 0, 10 },\r\n\r\n  { (char_T *)(&px42LoopCtrQGC20220313_DW.attitude_flag), 8, 0, 2 }\r\n};\r\n\r\n// data type transition table for block I/O structure\r\nstatic DataTypeTransitionTable rtBTransTable = {\r\n  15U,\r\n  rtBTransitions\r\n};\r\n\r\n// data type transitions for Parameters structure\r\nstatic DataTypeTransition rtPTransitions[] = {\r\n  { (char_T *)(&px42LoopCtrQGC20220313_P.DiscreteDerivative1_ICPrevScale), 0, 0,\r\n    12 },\r\n\r\n  { (char_T *)(&px42LoopCtrQGC20220313_P.Out1_Y0), 18, 0, 1 },\r\n\r\n  { (char_T *)(&px42LoopCtrQGC20220313_P.Constant_Value), 18, 0, 1 },\r\n\r\n  { (char_T *)(&px42LoopCtrQGC20220313_P.Out1_Y0_k), 17, 0, 1 },\r\n\r\n  { (char_T *)(&px42LoopCtrQGC20220313_P.Constant_Value_c), 17, 0, 1 },\r\n\r\n  { (char_T *)(&px42LoopCtrQGC20220313_P.Out1_Y0_g), 19, 0, 1 },\r\n\r\n  { (char_T *)(&px42LoopCtrQGC20220313_P.Constant_Value_i), 19, 0, 1 },\r\n\r\n  { (char_T *)(&px42LoopCtrQGC20220313_P.Constant1_Value), 0, 0, 299 },\r\n\r\n  { (char_T *)(&px42LoopCtrQGC20220313_P.Switch3_Threshold), 5, 0, 1 },\r\n\r\n  { (char_T *)(&px42LoopCtrQGC20220313_P.Constant10_Value), 8, 0, 10 },\r\n\r\n  { (char_T *)(&px42LoopCtrQGC20220313_P.Gain1_Gain_n), 20, 0, 4 }\r\n};\r\n\r\n// data type transition table for Parameters structure\r\nstatic DataTypeTransitionTable rtPTransTable = {\r\n  11U,\r\n  rtPTransitions\r\n};\r\n\r\n// [EOF] px42LoopCtrQGC20220313_dt.h\r\n"},{"name":"rtmodel.h","type":"header","group":"interface","path":"D:\\simulink\\PX4QGCGPSCtrl\\work\\code\\px42LoopCtrQGC20220313_ert_rtw","tag":"","groupDisplay":"Interface files","code":"//\r\n// Academic License - for use in teaching, academic research, and meeting\r\n// course requirements at degree granting institutions only.  Not for\r\n// government, commercial, or other organizational use.\r\n//\r\n// File: rtmodel.h\r\n//\r\n// Code generated for Simulink model 'px42LoopCtrQGC20220313'.\r\n//\r\n// Model version                  : 5.5\r\n// Simulink Coder version         : 9.7 (R2022a) 13-Nov-2021\r\n// C/C++ source code generated on : Wed Mar 16 10:17:15 2022\r\n//\r\n// Target selection: ert.tlc\r\n// Embedded hardware selection: ARM Compatible->ARM Cortex\r\n// Code generation objectives: Unspecified\r\n// Validation result: Not run\r\n//\r\n#ifndef RTW_HEADER_rtmodel_h_\r\n#define RTW_HEADER_rtmodel_h_\r\n#include \"px42LoopCtrQGC20220313.h\"\r\n#endif                                 // RTW_HEADER_rtmodel_h_\r\n\r\n//\r\n// File trailer for generated code.\r\n//\r\n// [EOF]\r\n//\r\n"},{"name":"MW_PX4_PWM.cpp","type":"source","group":"legacy","path":"C:\\ProgramData\\MATLAB\\SupportPackages\\R2022a\\toolbox\\target\\supportpackages\\px4\\src","tag":"","groupDisplay":"Other files","code":"/* Copyright 2018-2021 The MathWorks, Inc. */\n\n#include \"nuttxinitialize.h\"\n#include \"MW_PX4_TaskControl.h\"\n#include \"MW_PX4_PWM.h\"\n\n#ifndef MW_PWM_MAIN_ONESHOT\n#define MW_PWM_MAIN_ONESHOT 0\n#endif\n\n#ifndef MW_PWM_MAIN_FREQUENCY\n#define MW_PWM_MAIN_FREQUENCY 0\n#endif\n\n#ifndef MW_PWM_AUX_ONESHOT\n#define MW_PWM_AUX_ONESHOT 0\n#endif\n\n#ifndef MW_PWM_AUX_FREQUENCY\n#define MW_PWM_AUX_FREQUENCY 0\n#endif\n\n#ifndef MW_PWM_CH1_FAILSAFE\n#define MW_PWM_CH1_FAILSAFE 0\n#endif\n\n#ifndef MW_PWM_CH1_DISARMED\n#define MW_PWM_CH1_DISARMED 0\n#endif\n\n#ifndef MW_PWM_CH2_FAILSAFE\n#define MW_PWM_CH2_FAILSAFE 0\n#endif\n\n#ifndef MW_PWM_CH2_DISARMED\n#define MW_PWM_CH2_DISARMED 0\n#endif\n\n#ifndef MW_PWM_CH3_FAILSAFE\n#define MW_PWM_CH3_FAILSAFE 0\n#endif\n\n#ifndef MW_PWM_CH3_DISARMED\n#define MW_PWM_CH3_DISARMED 0\n#endif\n\n#ifndef MW_PWM_CH4_FAILSAFE\n#define MW_PWM_CH4_FAILSAFE 0\n#endif\n\n#ifndef MW_PWM_CH4_DISARMED\n#define MW_PWM_CH4_DISARMED 0\n#endif\n\n#ifndef MW_PWM_CH5_FAILSAFE\n#define MW_PWM_CH5_FAILSAFE 0\n#endif\n\n#ifndef MW_PWM_CH5_DISARMED\n#define MW_PWM_CH5_DISARMED 0\n#endif\n\n#ifndef MW_PWM_CH6_FAILSAFE\n#define MW_PWM_CH6_FAILSAFE 0\n#endif\n\n#ifndef MW_PWM_CH6_DISARMED\n#define MW_PWM_CH6_DISARMED 0\n#endif\n\n#ifndef MW_PWM_CH7_FAILSAFE\n#define MW_PWM_CH7_FAILSAFE 0\n#endif\n\n#ifndef MW_PWM_CH7_DISARMED\n#define MW_PWM_CH7_DISARMED 0\n#endif\n\n#ifndef MW_PWM_CH8_FAILSAFE\n#define MW_PWM_CH8_FAILSAFE 0\n#endif\n\n#ifndef MW_PWM_CH8_DISARMED\n#define MW_PWM_CH8_DISARMED 0\n#endif\n\n#ifndef MW_PWM_AUX_CH1_FAILSAFE\n#define MW_PWM_AUX_CH1_FAILSAFE 0\n#endif\n\n#ifndef MW_PWM_AUX_CH1_DISARMED\n#define MW_PWM_AUX_CH1_DISARMED 0\n#endif\n\n#ifndef MW_PWM_AUX_CH2_FAILSAFE\n#define MW_PWM_AUX_CH2_FAILSAFE 0\n#endif\n\n#ifndef MW_PWM_AUX_CH2_DISARMED\n#define MW_PWM_AUX_CH2_DISARMED 0\n#endif\n\n#ifndef MW_PWM_AUX_CH3_FAILSAFE\n#define MW_PWM_AUX_CH3_FAILSAFE 0\n#endif\n\n#ifndef MW_PWM_AUX_CH3_DISARMED\n#define MW_PWM_AUX_CH3_DISARMED 0\n#endif\n\n#ifndef MW_PWM_AUX_CH4_FAILSAFE\n#define MW_PWM_AUX_CH4_FAILSAFE 0\n#endif\n\n#ifndef MW_PWM_AUX_CH4_DISARMED\n#define MW_PWM_AUX_CH4_DISARMED 0\n#endif\n\n#ifndef MW_PWM_AUX_CH5_FAILSAFE\n#define MW_PWM_AUX_CH5_FAILSAFE 0\n#endif\n\n#ifndef MW_PWM_AUX_CH5_DISARMED\n#define MW_PWM_AUX_CH5_DISARMED 0\n#endif\n\n#ifndef MW_PWM_AUX_CH6_FAILSAFE\n#define MW_PWM_AUX_CH6_FAILSAFE 0\n#endif\n\n#ifndef MW_PWM_AUX_CH6_DISARMED\n#define MW_PWM_AUX_CH6_DISARMED 0\n#endif\n\n#ifndef MW_PWM_AUX_CH7_FAILSAFE\n#define MW_PWM_AUX_CH7_FAILSAFE 0\n#endif\n\n#ifndef MW_PWM_AUX_CH7_DISARMED\n#define MW_PWM_AUX_CH7_DISARMED 0\n#endif\n\n#ifndef MW_PWM_AUX_CH8_FAILSAFE\n#define MW_PWM_AUX_CH8_FAILSAFE 0\n#endif\n\n#ifndef MW_PWM_AUX_CH8_DISARMED\n#define MW_PWM_AUX_CH8_DISARMED 0\n#endif\n\n#define DEBUG 0\n\n#define PWM_SUCCESS 0\n#define PWM_OPEN_FAIL 1\n#define PWM_SERVOCOUNT_FAIL 2\n#define PWM_ARM_FAIL 4\n#define PWM_DISARM_FAIL 8\n#define PWM_SETRATE_FAIL 16\n#define PWM_SETCHANNEL_FAIL 32\n#define PWM_SETFS_FAIL 64\n#define PWM_SETDA_FAIL 128\n#define PWM_FORCEFS_FAIL 256\n#define PWM_FORCETERMFS_FAIL 512\n#define PWM_SETSERVO_FAIL 1024\n#define PWM_RESETSERVO_FAIL 2048\n#define PWM_CLOSE_FAIL 4096\n\nunsigned pwm_open(int* pwmHandler, \n                  const char* pwmDevice, \n                  orb_advert_t* actuatorObj,\n                  orb_advert_t* armObj) {\n#if (defined(PX4_CONNECTEDIO) && (DEBUG == 1))\n    PX4_INFO(\"* pwm_open: PWM Device: %s * \", pwmDevice);\n    PX4_INFO(\"*     actuatorObj: %d * \", actuatorObj);\n    PX4_INFO(\"*     armObj: %d *\\n\", armObj);\n#endif\n#if USE_IOCTL    \n    int fd = px4_open(pwmDevice, 0);\n\n    if (fd < 0) {\n        PX4_ERR(\"can't open %s\", pwmDevice);\n        return PWM_OPEN_FAIL;\n    }\n    *pwmHandler = fd;\n\n    PX4_INFO(\"* Opened PWM Device: %s (fd = %d)*\\n\", pwmDevice, *pwmHandler);\n#else\n    *pwmHandler = 0;\n\t/* advertise actuator_outputs topic */\n\tstruct actuator_outputs_s outputs;\n\tmemset(&outputs, 0, sizeof(outputs));\n\t*actuatorObj = orb_advertise_queue(ORB_ID(actuator_outputs), &outputs, 1);    \n\n\t/* advertise actuator_armed topic */\n\tstruct actuator_armed_s armPWM;\n\tmemset(&armPWM, 0, sizeof(armPWM));\n\t*armObj = orb_advertise_queue(ORB_ID(actuator_armed), &armPWM, 1);       \n#endif\n    return PWM_SUCCESS;\n}\n\nunsigned pwm_getServoCount(const int* pwmHandler, unsigned* servoCount) {\n#if (defined(PX4_CONNECTEDIO) && (DEBUG == 1))\n    PX4_INFO(\"* pwm_getServoCount: *pwmHandler (fd = %d)* \", *pwmHandler);\n#endif\n    /* get the number of servo channels */\n#if USE_IOCTL   \n    unsigned servo_count;\n    int fd = *pwmHandler;\n    int ret = px4_ioctl(fd, PWM_SERVO_GET_COUNT, (unsigned long)&servo_count);\n\n    if (ret != OK) {\n#if DEBUG\n        PX4_ERR(\"PWM_SERVO_GET_COUNT\");\n#endif\n        return PWM_SERVOCOUNT_FAIL;\n    }\n#if DEBUG\n    PX4_INFO(\"Number of servo channels is %d\", servo_count);\n#endif\n\n    *servoCount = servo_count;\n#else\n    *servoCount = 8;\n#endif\n    return PWM_SUCCESS;\n}\n\nunsigned pwm_arm(const int* pwmHandler,\n                 orb_advert_t* armObj) {\n#if (defined(PX4_CONNECTEDIO) && (DEBUG == 1))\n    PX4_INFO(\"* pwm_arm: *pwmHandler (fd = %d)* \", *pwmHandler);\n    PX4_INFO(\"*     armObj: %d *\\n\", armObj);\n#endif\n    /* tell safety that its ok to disable it with the switch */\n#if USE_IOCTL      \n    int fd = *pwmHandler;\n    int ret = px4_ioctl(fd, PWM_SERVO_SET_ARM_OK, 0);\n\n    if (ret != OK) {\n#if DEBUG\n        err(1, \"PWM_SERVO_SET_ARM_OK\");\n#endif\n    }\n\n    /* tell IO that the system is armed (it will output values if safety is off) */\n    ret = px4_ioctl(fd, PWM_SERVO_ARM, 0);\n\n    if (ret != OK) {\n#if DEBUG\n        err(1, \"PWM_SERVO_ARM\");\n#endif\n        return PWM_ARM_FAIL;\n    }\n#else\n\tstruct actuator_armed_s armPWM;\n\tmemset(&armPWM, 0, sizeof(armPWM));\n    armPWM.armed = true;\n    orb_publish(ORB_ID(actuator_armed), *armObj, &armPWM);\n#endif\n    return PWM_SUCCESS;\n}\n\nunsigned pwm_disarm(const int* pwmHandler,\n                    orb_advert_t* armObj) {\n#if (defined(PX4_CONNECTEDIO) && (DEBUG == 1))\n    PX4_INFO(\"* pwm_disarm: *pwmHandler (fd = %d)* \", *pwmHandler);\n    PX4_INFO(\"*     armObj: %d *\\n\", armObj);\n#endif\n    /* disarm, but do not revoke the SET_ARM_OK flag */\n#if USE_IOCTL   \n    int fd = *pwmHandler;\n    int ret = px4_ioctl(fd, PWM_SERVO_DISARM, 0);\n\n    if (ret != OK) {\n#if DEBUG\n        err(1, \"PWM_SERVO_DISARM\");\n#endif\n        return PWM_DISARM_FAIL;\n    }\n#else\n\tstruct actuator_armed_s armPWM;\n\tmemset(&armPWM, 0, sizeof(armPWM));\n    armPWM.armed = false;\n    orb_publish(ORB_ID(actuator_armed), *armObj, &armPWM);\n#endif\n    return PWM_SUCCESS;\n}\n\nunsigned pwm_setPWMRate(const int* pwmHandler, boolean_T isMain) {\n#if (defined(PX4_CONNECTEDIO) && (DEBUG == 1))    \n    PX4_INFO(\"* pwm_setPWMRate: *pwmHandler (fd = %d)* \", *pwmHandler);\n    PX4_INFO(\"*     isMain %d* \\n\", isMain);\n#endif\n#if USE_IOCTL   \n    /* Change alternate PWM rate or set oneshot\n     * Either the \"oneshot\" command was used\n     * OR rate was provided, so we will issue the\n     * PWM_SERVO_SET_UPDATE_RATE ioctl\n     */\n    int fd = *pwmHandler;\n#ifndef PX4_CONNECTEDIO\n    int rate = 0;\n    if (isMain) {\n#if defined(MW_PWM_MAIN_ONESHOT) && (MW_PWM_MAIN_ONESHOT == 1)\n        rate = 0; /*Set rate as 0 for oneshot*/\n#else\n        rate = MW_PWM_MAIN_FREQUENCY;\n#endif\n    } else {\n#if defined(MW_PWM_AUX_ONESHOT) && (MW_PWM_AUX_ONESHOT == 1)\n        rate = 0; /*Set rate as 0 for oneshot*/\n#else\n        rate = MW_PWM_AUX_FREQUENCY;\n#endif\n    }\n#else\n\textern int rate;\n#endif\n#if DEBUG\n    PX4_INFO(\"Frequency %d:\", rate);\n#endif\n\n    int ret = px4_ioctl(fd, PWM_SERVO_SET_UPDATE_RATE, rate);\n\n    if (ret != OK) {\n\n#if DEBUG\n        PX4_ERR(\"PWM_SERVO_SET_UPDATE_RATE (check rate for sanity)\");\n#endif\n        return PWM_SETRATE_FAIL;\n    }\n#else\n\n#endif    \n\n    return PWM_SUCCESS;\n}\n\nunsigned pwm_setChannelMask(const int* pwmHandler, int channelMask) {\n#if (defined(PX4_CONNECTEDIO) && (DEBUG == 1))    \n    PX4_INFO(\"* pwm_setChannelMask: *pwmHandler (fd = %d)* \", *pwmHandler);\n    PX4_INFO(\"*     channelMask %d*\\n\", channelMask);\n#endif\n#if USE_IOCTL  \n    int fd = *pwmHandler;\n    int ret = px4_ioctl(fd, PWM_SERVO_SET_SELECT_UPDATE_RATE, channelMask);\n\n    if (ret != OK) {\n#if DEBUG\n        PX4_ERR(\"PWM_SERVO_SET_SELECT_UPDATE_RATE\");\n#endif\n        return PWM_SETCHANNEL_FAIL;\n    }\n#else\n\n#endif    \n    return PWM_SUCCESS;\n}\n\nunsigned pwm_setDisarmedPWM(const int* pwmHandler,\n                            unsigned servo_count,\n                            int channelMask,\n                            boolean_T isMain,\n                            orb_advert_t* actuatorObj) {\n#if (defined(PX4_CONNECTEDIO) && (DEBUG == 1))    \n    PX4_INFO(\"* pwm_setDisarmedPWM: *pwmHandler (fd = %d)* \", *pwmHandler);\n    PX4_INFO(\"*     servo_count %d* \", servo_count);\n    PX4_INFO(\"*     channelMask %d* \", channelMask);\n    PX4_INFO(\"*     isMain %d* \", isMain);\n    PX4_INFO(\"*     actuatorObj %d* \\n\", actuatorObj);\n#endif\n#if USE_IOCTL                               \n    struct pwm_output_values pwm_values;\n\n    memset(&pwm_values, 0, sizeof(pwm_values));\n\n    pwm_values.channel_count = servo_count;\n\n    /* first get current state before modifying it */\n    int fd = *pwmHandler;\n    int ret = px4_ioctl(fd, PWM_SERVO_GET_DISARMED_PWM, (long unsigned int)&pwm_values);\n\n    if (ret != OK) {\n#if DEBUG\n        PX4_ERR(\"failed get disarmed values\");\n#endif\n    }\n#ifndef PX4_CONNECTEDIO\t\n    int pwmValue[8];\n    getDAPWMValues(isMain, pwmValue);\n#else\n\textern int pwmValue[];\n#endif\n    \n#if (defined(PX4_CONNECTEDIO) && (DEBUG == 1))        \n    uint32_T iPWM;\n    printf(\"pwm_setDisarmedPWM: PWM values :\");\n    for (iPWM= 0;iPWM<8;iPWM++)\n    {\n        printf(\"[%d]\",pwmValue[iPWM]);\n    }\n    printf(\"\\n\");\n#endif    \n    \n    for (unsigned i = 0; i < servo_count; i++) {\n        if (channelMask & 1 << i) {\n            pwm_values.values[i] = pwmValue[i];\n        }\n    }\n\n    ret = px4_ioctl(fd, PWM_SERVO_SET_DISARMED_PWM, (long unsigned int)&pwm_values);\n\n    if (ret != OK) {\n#if DEBUG\n        PX4_ERR(\"failed setting disarmed values (%d)\", ret);\n#endif\n        return PWM_SETDA_FAIL;\n    }\n#else\n    if(isMain)\n    {\t\t\n#ifndef PX4_CONNECTEDIO\t\n\t\tint pwmValue[8];\n\t\tgetDAPWMValues(true, pwmValue);\n#else\n\t\textern int pwmValue[];\n#endif\n\n#if (defined(PX4_CONNECTEDIO) && (DEBUG == 1))        \n        uint32_T iPWM;\n        printf(\"pwm_setDisarmedPWM: PWM values :\");\n        for (iPWM= 0;iPWM<8;iPWM++)\n        {\n            printf(\"[%d]\",pwmValue[iPWM]);\n        }\n        printf(\"\\n\");\n#endif\n        struct actuator_outputs_s outputs;\n        memset(&outputs, 0, sizeof(outputs));\n        outputs.noutputs = servo_count;\n        outputs.timestamp = hrt_absolute_time();\n        for (unsigned i = 0; i < servo_count; i++) {\n            if (channelMask & 1 << i) {\n            outputs.output[i] =  pwmValue[i]; \n            }\n        }\n        orb_publish(ORB_ID(actuator_outputs), *actuatorObj, &outputs);\n    }\n#endif\n        return PWM_SUCCESS;\n\n\n}\n\nunsigned pwm_setFailsafePWM(const int* pwmHandler,\n                            unsigned servo_count,\n                            int channelMask,\n                            boolean_T isMain) {\n#if (defined(PX4_CONNECTEDIO) && (DEBUG == 1))    \n    PX4_INFO(\"* pwm_setFailsafePWM: *pwmHandler (fd = %d)* \", *pwmHandler);\n    PX4_INFO(\"*     servo_count %d* \", servo_count);\n    PX4_INFO(\"*     channelMask %d* \", channelMask);\n    PX4_INFO(\"*     isMain %d* \\n\", isMain);\n#endif\n#if USE_IOCTL                                 \n    struct pwm_output_values pwm_values;\n\n    memset(&pwm_values, 0, sizeof(pwm_values));\n\n    pwm_values.channel_count = servo_count;\n\n    /* first get current state before modifying it */\n    int fd = *pwmHandler;\n    int ret = px4_ioctl(fd, PWM_SERVO_GET_FAILSAFE_PWM, (long unsigned int)&pwm_values);\n\n    if (ret != OK) {\n#if DEBUG\n        PX4_ERR(\"failed get failsafe values\");\n#endif\n    }\n#ifndef PX4_CONNECTEDIO\t\n    int pwmValue[8];\n    getFSPWMValues(isMain, pwmValue);\n#else\n\textern int pwmValue[];\n#endif\n    \n#if (defined(PX4_CONNECTEDIO) && (DEBUG == 1))    \n    uint32_T iPWM;\n    printf(\"pwm_setFailsafePWM: PWM values :\");\n    for (iPWM= 0;iPWM<8;iPWM++)\n    {\n        printf(\"[%d]\",pwmValue[iPWM]);\n    }\n    printf(\"\\n\");\n#endif    \n    for (unsigned i = 0; i < servo_count; i++) {\n        if (channelMask & 1 << i) {\n            pwm_values.values[i] = pwmValue[i];\n        }\n    }\n\n    ret = px4_ioctl(fd, PWM_SERVO_SET_FAILSAFE_PWM, (long unsigned int)&pwm_values);\n\n    if (ret != OK) {\n#if DEBUG\n        PX4_ERR(\"failed setting failsafe values (%d)\", ret);\n#endif\n        return PWM_SETFS_FAIL;\n    }\n#else\n    \n#endif\n    return PWM_SUCCESS;\n\n}\n\nunsigned pwm_forceFailsafe(const int* pwmHandler, int value) {\n#if (defined(PX4_CONNECTEDIO) && (DEBUG == 1))    \n    PX4_INFO(\"* pwm_forceFailsafe: *pwmHandler (fd = %d)* \", *pwmHandler);\n    PX4_INFO(\"*     value %d*\\n\", value);\n#endif    \n#if USE_IOCTL      \n    /*force failsafe: 1 - on, 0 - off*/\n    int fd = *pwmHandler;\n    int ret = px4_ioctl(fd, PWM_SERVO_SET_FORCE_FAILSAFE, value);\n    if (ret != OK) {\n#if DEBUG\n        PX4_ERR(\"FAILED setting forcefail\");\n#endif\n        return PWM_FORCEFS_FAIL;\n    }\n#else\n\n#endif\n    return PWM_SUCCESS;\n}\n\nunsigned pwm_forceTerminateFailsafe(const int* pwmHandler, int value) {\n#if (defined(PX4_CONNECTEDIO) && (DEBUG == 1))    \n    PX4_INFO(\"* pwm_forceTerminateFailsafe: *pwmHandler (fd = %d)* \", *pwmHandler);\n    PX4_INFO(\"*     value %d*\\n\", value);\n#endif\n#if USE_IOCTL     \n    /*force terminate failsafe: 1 - on, 0 - off*/\n    int fd = *pwmHandler;\n    int ret = px4_ioctl(fd, PWM_SERVO_SET_TERMINATION_FAILSAFE, value);\n    if (ret != OK) {\n#if DEBUG\n        PX4_ERR(\"FAILED setting termination forcefail\");\n#endif\n        return PWM_FORCETERMFS_FAIL;\n    }\n#else\n\n#endif\n    return PWM_SUCCESS;\n}\n\nunsigned pwm_setServo(const int* pwmHandler,\n                      unsigned servo_count,\n                      int channelMask,\n                      uint16_t* pwm_value,\n                      boolean_T isMain,\n                      orb_advert_t* actuatorObj) {\n#if (defined(PX4_CONNECTEDIO) && (DEBUG == 1))    \n    PX4_INFO(\"* pwm_setServo: *pwmHandler (fd = %d)* \", *pwmHandler);\n    PX4_INFO(\"*     servo_count %d* \", servo_count);\n    PX4_INFO(\"*     isMain %d* \", isMain);\n    PX4_INFO(\"*     actuatorObj %d* \\n\", actuatorObj);\n    uint32_T iPWM;\n    printf(\"* pwm_setServo: PWM values :\");\n    for (iPWM= 0;iPWM<8;iPWM++)\n    {\n        printf(\"[%d]\",pwm_value[iPWM]);\n    }\n    printf(\"\\n\");\n#endif    \n#if USE_IOCTL                           \n    int fd = *pwmHandler;\n    int ret;\n    for (unsigned i = 0; i < servo_count; i++) {\n        if (channelMask & 1 << i) {\n            ret = px4_ioctl(fd, PWM_SERVO_SET(i), pwm_value[i]);\n\n            if (ret != OK) {\n#if DEBUG\n                PX4_ERR(\"PWM_SERVO_SET(%d)\", i);\n#endif\n                return PWM_SETSERVO_FAIL;\n            }\n        }\n    }\n    \n/* add a delay longer than the max Oneshot duration if Oneshot is enabled */    \naddDelayOneshot(isMain);\n\n#ifdef __PX4_NUTTX\n    /* Trigger all timer's channels in Oneshot mode to fire\n     * the oneshots with updated values.\n     */\n    up_pwm_update();\n#endif\n\n#else\n    if(isMain)\n    {\n        struct actuator_outputs_s outputs;\n        memset(&outputs, 0, sizeof(outputs));\n        outputs.noutputs = servo_count;\n        outputs.timestamp = hrt_absolute_time();\n       for (unsigned i = 0; i < servo_count; i++) {\n            if (channelMask & 1 << i) {\n               outputs.output[i] =  pwm_value[i]; \n            }\n        }\n        orb_publish(ORB_ID(actuator_outputs), *actuatorObj, &outputs);\n    }\n#endif    \n    return PWM_SUCCESS;\n}\n\nunsigned pwm_resetServo(const int* pwmHandler,\n                        unsigned servo_count,\n                        int channelMask,\n                        boolean_T isMain,\n                        orb_advert_t* actuatorObj) {\n#if (defined(PX4_CONNECTEDIO) && (DEBUG == 1))    \n    PX4_INFO(\"* pwm_resetServo: *pwmHandler (fd = %d)* \", *pwmHandler);\n    PX4_INFO(\"*     servo_count %d* \", servo_count);\n    PX4_INFO(\"*     isMain %d* \", isMain);\n    PX4_INFO(\"*     actuatorObj %d* \\n\", actuatorObj);\n#endif\n#if USE_IOCTL                            \n    int fd = *pwmHandler;\n    int ret;\n\n#ifndef PX4_CONNECTEDIO\t\n    int pwmValue[8];\n    getDAPWMValues(isMain, pwmValue);\n#else\n\textern int pwmValue[];\n#endif\n#if (defined(PX4_CONNECTEDIO) && (DEBUG == 1))    \n    uint32_T iPWM;\n    printf(\"pwm_resetServo: PWM values :\");\n    for (iPWM= 0;iPWM<8;iPWM++)\n    {\n        printf(\"[%d]\",pwmValue[iPWM]);\n    }\n    printf(\"\\n\");\n#endif\n    for (unsigned i = 0; i < servo_count; i++) {\n        if (channelMask & 1 << i) {\n            ret = px4_ioctl(fd, PWM_SERVO_SET(i), pwmValue[i]);\n\n            if (ret != OK) {\n#if DEBUG\n                PX4_ERR(\"PWM_SERVO_SET(%d)\", i);\n#endif\n                return PWM_RESETSERVO_FAIL;\n            }\n        }\n    }\n\n#else\n    if(isMain)\n    {\n#ifndef PX4_CONNECTEDIO\t\n\t\tint pwmValue[8];\n\t\tgetDAPWMValues(true, pwmValue);\n#else\n\t\textern int pwmValue[];\n#endif\n#if (defined(PX4_CONNECTEDIO) && (DEBUG == 1))    \n        uint32_T iPWM;\n        printf(\"pwm_resetServo: PWM values :\");\n        for (iPWM= 0;iPWM<8;iPWM++)\n        {\n            printf(\"[%d]\",pwmValue[iPWM]);\n        }\n        printf(\"\\n\");\n#endif        \n        struct actuator_outputs_s outputs;\n        memset(&outputs, 0, sizeof(outputs));\n        outputs.noutputs = servo_count;\n        outputs.timestamp = hrt_absolute_time();\n    for (unsigned i = 0; i < servo_count; i++) {\n            if (channelMask & 1 << i) {\n            outputs.output[i] =  pwmValue[i]; \n            }\n        }\n        orb_publish(ORB_ID(actuator_outputs), *actuatorObj, &outputs);\n    }\n\n#endif\n    return PWM_SUCCESS;\n\n}\n\nunsigned pwm_close(const int* pwmHandler, orb_advert_t* actuatorObj, orb_advert_t* armObj) {\n#if (defined(PX4_CONNECTEDIO) && (DEBUG == 1))\n    PX4_INFO(\"* pwm_close: *pwmHandler (fd = %d)* \", *pwmHandler);\n    PX4_INFO(\"*     armObj %d* \", armObj);\n    PX4_INFO(\"*     actuatorObj %d*\\n\", actuatorObj);\n#endif\n#if USE_IOCTL      \n    int fd = *pwmHandler;\n    /** clear the 'ARM ok' bit, which deactivates the safety switch */\n    px4_ioctl(fd, PWM_SERVO_CLEAR_ARM_OK, 0);\n    px4_close(fd);\n#else\n    orb_unadvertise(*actuatorObj);\n    orb_unadvertise(*armObj);\n#endif\n    return PWM_SUCCESS;\n}\n\nvoid getFSPWMValues(boolean_T isMain, int* fsPWMvalues) {\n\n    for (int index = 0; index < 8; index++) {\n        if (isMain) {\n            switch (index) {\n            case 0:\n                fsPWMvalues[index] = MW_PWM_CH1_FAILSAFE;\n                break;\n            case 1:\n                fsPWMvalues[index] = MW_PWM_CH2_FAILSAFE;\n                break;\n            case 2:\n                fsPWMvalues[index] = MW_PWM_CH3_FAILSAFE;\n                break;\n            case 3:\n                fsPWMvalues[index] = MW_PWM_CH4_FAILSAFE;\n                break;\n            case 4:\n                fsPWMvalues[index] = MW_PWM_CH5_FAILSAFE;\n                break;\n            case 5:\n                fsPWMvalues[index] = MW_PWM_CH6_FAILSAFE;\n                break;\n            case 6:\n                fsPWMvalues[index] = MW_PWM_CH7_FAILSAFE;\n                break;\n            case 7:\n                fsPWMvalues[index] = MW_PWM_CH8_FAILSAFE;\n                break;\n            }\n        } else {\n            switch (index) {\n            case 0:\n                fsPWMvalues[index] = MW_PWM_AUX_CH1_FAILSAFE;\n                break;\n            case 1:\n                fsPWMvalues[index] = MW_PWM_AUX_CH2_FAILSAFE;\n                break;\n            case 2:\n                fsPWMvalues[index] = MW_PWM_AUX_CH3_FAILSAFE;\n                break;\n            case 3:\n                fsPWMvalues[index] = MW_PWM_AUX_CH4_FAILSAFE;\n                break;\n            case 4:\n                fsPWMvalues[index] = MW_PWM_AUX_CH5_FAILSAFE;\n                break;\n            case 5:\n                fsPWMvalues[index] = MW_PWM_AUX_CH6_FAILSAFE;\n                break;\n            case 6:\n                fsPWMvalues[index] = MW_PWM_AUX_CH7_FAILSAFE;\n                break;\n            case 7:\n                fsPWMvalues[index] = MW_PWM_AUX_CH8_FAILSAFE;\n                break;\n            }\n        }\n    }\n}\n\nvoid getDAPWMValues(boolean_T isMain, int* daPWMvalues) {\n\n    for (int index = 0; index < 8; index++) {\n        if (isMain) {\n            switch (index) {\n            case 0:\n                daPWMvalues[index] = MW_PWM_CH1_DISARMED;\n                break;\n            case 1:\n                daPWMvalues[index] = MW_PWM_CH2_DISARMED;\n                break;\n            case 2:\n                daPWMvalues[index] = MW_PWM_CH3_DISARMED;\n                break;\n            case 3:\n                daPWMvalues[index] = MW_PWM_CH4_DISARMED;\n                break;\n            case 4:\n                daPWMvalues[index] = MW_PWM_CH5_DISARMED;\n                break;\n            case 5:\n                daPWMvalues[index] = MW_PWM_CH6_DISARMED;\n                break;\n            case 6:\n                daPWMvalues[index] = MW_PWM_CH7_DISARMED;\n                break;\n            case 7:\n                daPWMvalues[index] = MW_PWM_CH8_DISARMED;\n                break;\n            }\n        } else {\n            switch (index) {\n            case 0:\n                daPWMvalues[index] = MW_PWM_AUX_CH1_DISARMED;\n                break;\n            case 1:\n                daPWMvalues[index] = MW_PWM_AUX_CH2_DISARMED;\n                break;\n            case 2:\n                daPWMvalues[index] = MW_PWM_AUX_CH3_DISARMED;\n                break;\n            case 3:\n                daPWMvalues[index] = MW_PWM_AUX_CH4_DISARMED;\n                break;\n            case 4:\n                daPWMvalues[index] = MW_PWM_AUX_CH5_DISARMED;\n                break;\n            case 5:\n                daPWMvalues[index] = MW_PWM_AUX_CH6_DISARMED;\n                break;\n            case 6:\n                daPWMvalues[index] = MW_PWM_AUX_CH7_DISARMED;\n                break;\n            case 7:\n                daPWMvalues[index] = MW_PWM_AUX_CH8_DISARMED;\n                break;\n            }\n        }\n    }\n}\n\nvoid addDelayOneshot(boolean_T isMain)\n{\n#ifndef PX4_CONNECTEDIO\t\n\tboolean_T isOneShot = false;\n    if (isMain) {\n#if defined(MW_PWM_MAIN_ONESHOT) && (MW_PWM_MAIN_ONESHOT == 1)\n            isOneShot = true; \n#endif\n        } else {\n#if defined(MW_PWM_AUX_ONESHOT) && (MW_PWM_AUX_ONESHOT == 1)\n            isOneShot = true; \n#endif\n        }\n#else\n\textern boolean_T isOneShot;\n#endif\n\tif(isOneShot)\n\t{\n    /* Delay longer than the max Oneshot duration */\n    usleep(2542);\n\t}\n}\n"},{"name":"MW_PX4_TaskControl.cpp","type":"source","group":"legacy","path":"C:\\ProgramData\\MATLAB\\SupportPackages\\R2022a\\toolbox\\target\\supportpackages\\px4\\src","tag":"","groupDisplay":"Other files","code":"/*\n * Copyright 2018-2020 The MathWorks, Inc.\n *\n * File: MW_PX4_TaskControl.c     \n *\n * Abstract:\n *  This file contains the main application for Simulink that is launched \n *  by PX4 stack at boot up. The main function spawns a new task and assigns \n *  the main function in ert_main.c as callback.\n *\n */\n\n#include \"nuttxinitialize.h\"\n#include \"MW_PX4_TaskControl.h\"\n/*Simulink model generated code specific headers*/\n\n#define MW_StringifyDefine(x) MW_StringifyDefineExpanded(x)\n#define MW_StringifyDefineExpanded(x)  #x\n\n#define MW_StringifyDefineFunction(x,y) MW_StringifyDefineExpandedFunction(x,y)\n#define MW_StringifyDefineExpandedFunction(x,y)  x##y\n\n#define MW_StringifyDefineX(x) MW_StringifyDefineExpandedX(x)\n#define MW_StringifyDefineExpandedX(x)  x.##h\n\n#define MW_StringifyDefineTypesX(x) MW_StringifyDefineExpandedTypesX(x)\n#define MW_StringifyDefineExpandedTypesX(x)  x##_types.h\n\n#define MW_StringifyDefinePrivateX(x) MW_StringifyDefineExpandedPrivateX(x)\n#define MW_StringifyDefineExpandedPrivateX(x)  x##_private.h\n\n#include MW_StringifyDefine(MODEL.h)\n#include MW_StringifyDefine(MW_StringifyDefineTypesX(MODEL))\n#include MW_StringifyDefine(MW_StringifyDefinePrivateX(MODEL))\n\n#ifndef MW_PX4_DISABLE_MAVLINK\n#include \"mavlink_main.h\"\n#endif\n\n#define DEBUG 0\n\n#ifdef PIL\nextern int errorOccurred;\n#endif\n\nextern \"C\" __EXPORT int px4_simulink_app_main(int argc, char *argv[]);/* sbcheck:ok:extern_c needed */\n\nextern struct hrt_call BaseRate_HRT;      /* Base-rate HRT-callback is used to post base-rate semaphore */\nextern int terminatingmodel;\nextern int baserate_sem_copy; \t\t\t  /* used for checking HRT semaphore water-mark*/\nstatic bool g_baseRateLife = false;\t\t  /* global storage to contain the status of the px4_simulink_app */\nstatic int px4_simulink_app_task;\t\t  /* Handle of daemon thread */\nchar mavlink_shell_started = 0;\n\n#ifndef MW_PX4_DISABLE_MAVLINK\nconst char *mavlink_start_command[] = {\"mavlink\", \"start\", \"-r\", \"800000\", \"-d\" ,\"/dev/ttyACM0\", \"-m\", \"config\", \"-x\", 0};\n#endif\n\n/* Print the correct usage. */\nvoid px4_app_usage(const char *reason)\n{\n  if (reason)\n  PX4_INFO(\"px4_simulink_app : %s\\n\", reason);\n  errx(1,\"usage: px4_simulink_app {start|stop|status} [-p <additional params>]\\n\\n\");\n}\n\n#if defined(MW_PX4_DISABLE_MAVLINK) || defined(MW_PX4_CRAZYFLIE_PATHFOLLOWER) || defined(MW_PX4_CRAZYFLIE_CONTROLLER)\nuint8_t buffer[100];\nMavlinkShell shell;\nvoid shellWait(MavlinkShell* shell_ptr, uint8_t buf[]){\n    /*The shell wait here is to be used for commands which are expected to \n      return a few characters (a max. of 100 characters.)*/\n    int read = 0, readTotal = 0;\n    for(int i = 0; i <100; i++){\n        buf[i] = 0;\n    }\n    while(strstr((char*)buf, \"nsh>\") == NULL){\n        read = shell_ptr->read(buf + readTotal, 100 - readTotal);\n        readTotal = readTotal + read;\n    }\n}\n#endif\n\n#if defined(MW_PX4_CRAZYFLIE_PATHFOLLOWER) || defined(MW_PX4_CRAZYFLIE_CONTROLLER)\nvoid px4_simulink_app_stop_Crazyflie_modules()\n{\n     shell.start();\n     shellWait(&shell, buffer);\n     mavlink_shell_started = 1;\n#ifdef MW_PX4_CRAZYFLIE_PATHFOLLOWER\n    shell.write((uint8_t*)\"navigator stop\\n\",sizeof(\"navigator stop\\n\"));\n    shellWait(&shell, buffer);\n#endif\n    \n#ifdef MW_PX4_CRAZYFLIE_CONTROLLER\n    shell.write((uint8_t*)\"navigator stop\\n\",sizeof(\"navigator stop\\n\"));\n    shellWait(&shell, buffer);\n    shell.write((uint8_t*)\"commander stop\\n\",sizeof(\"commander stop\\n\"));\n    shellWait(&shell, buffer);\n    shell.write((uint8_t*)\"mc_att_control stop\\n\",sizeof(\"mc_att_control stop\\n\"));\n    shellWait(&shell, buffer);\n    shell.write((uint8_t*)\"mc_pos_control stop\\n\",sizeof(\"mc_pos_control stop\\n\"));\n    shellWait(&shell, buffer);\n#endif\n}\n#endif\n\nvoid px4_simulink_app_control_MAVLink()\n{\n    if(mavlink_shell_started == 0){\n       #ifdef MW_PX4_DISABLE_MAVLINK\n            shell.start();\n            shellWait(&shell, buffer);\n        #endif\n    }\n    \n#ifndef MW_PX4_DISABLE_MAVLINK\n    int narg = sizeof(mavlink_start_command)/sizeof(mavlink_start_command[0]);\n    Mavlink::start(narg-1, (char**) mavlink_start_command);\n#endif\n        \n#ifdef MW_PX4_DISABLE_MAVLINK\n    shell.write((uint8_t*)\"mavlink stop-all\\n\",sizeof(\"mavlink stop-all\\n\"));\n    usleep(100000);\n#endif\n}\n\nint px4_simulink_app_main(int argc, char *argv[])\n{\n\tif (argc < 2) \n\t{\n\t\tpx4_app_usage(\"missing command\");\n\t}\n\n\tif (!strcmp(argv[1], \"start\"))\n\t{\n\t\tif (g_baseRateLife == false)\n\t\t{\n\t\t\t/* Start the Simulink Tasks here */\n#if DEBUG\n\t\t\tprintf(\"px4_simulink_app : Starting the Simulink model\\n\");\n\t\t\tfflush(stdout);\n#endif\n\n\t\t\t/* Reset semaphore */\n\t\t\tg_baseRateLife = true;\n\t\t\tterminatingmodel = 0; // reset global variable. For more info on the rational behind this, please see:\n \t\t\t\t\t\t  \t\t  // http://nuttx.org/doku.php?id=wiki:nxinternal:tasks-vs-processes#nuttx_flat-build_behavior\n\n\t\t\tpx4_simulink_app_task = px4_task_spawn_cmd(\"px4_simulink_app_task\",\t\t\t/* Definition of px4_task_spawn_cmd : C:\\px4\\Firmware\\src\\platforms\\nuttx\\px4_layer\\px4_nuttx_tasks.c */\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tSCHED_DEFAULT,\t\t\t\t\t/* For STM32 F4, NuttX has SCHED_DEFAULT as SCHED_RR */\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tSCHED_PRIORITY_MAX - 15,\t\t/* SCHED_PRIORITY_MAX: 255 */\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t2048,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpx4_simulink_app_task_main,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(char *const *)NULL);\n\n\t\t}\n\t\telse\n\t\t{\n\t\t\twarnx(\"px4_simulink_app : Simulink model is already running\\n\");\n\t\t\tfflush(stdout);\n\t\t}\n#if defined(MW_PX4_NUTTX_BUILD)\t\t\n\t\texit(0);\n#else\n\treturn 0;\n#endif\t\t\n\t}\n\n\tif (!strcmp(argv[1], \"stop\"))\n\t{\n\t\tif (g_baseRateLife == true)\n\t\t{\n#ifdef PIL\n            errorOccurred = 1;\n#else            \n\t\t\trtmSetErrorStatus(MW_StringifyDefineFunction(MODEL, _M), \"Module stopped by user\");\n\t\t\tg_baseRateLife = false;\n\t\t\tsem_post(&baserateTaskSem);\n#endif\n#if DEBUG\t\t\t\n\t\t\tPX4_INFO(\"px4_simulink_app : Exiting the Simulink model\\n\");\n#endif\n\t\t}\n\t\telse\n\t\t{\n\t\t\twarnx(\"px4_simulink_app : No Simulink model is running\\n\");\n\t\t}\n\n        fflush(stdout);\n#if defined(MW_PX4_NUTTX_BUILD)\t\t\n\t\texit(0);\n#else\n\treturn 0;\n#endif\t\t\n\t}\n\n\tif (!strcmp(argv[1], \"status\"))\n\t{\n        if (g_baseRateLife)\n        {\n            PX4_INFO(\"px4_simulink_app : model is running\\n\");\n        }\n        else\n        {\n            PX4_INFO(\"px4_simulink_app : model is not started\\n\");\n        }\n\t\tfflush(stdout);\n#if defined(MW_PX4_NUTTX_BUILD)       \n        exit(0);\n#else\n\treturn 0;\n#endif\t\t\n\t}\n\n\tpx4_app_usage(\"unrecognized command\");\n#if defined(MW_PX4_NUTTX_BUILD)\t\n\texit(1);\n#else\n\treturn 1;\n#endif\n}\n\nvoid MW_PX4_Terminate()\n{\n    hrt_cancel(&BaseRate_HRT);\n\tg_baseRateLife = false; // set status of PX4 Simulink App to stop\n    \n#if defined(MW_HRT_CONSTRAINT) && (1 == MW_HRT_CONSTRAINT)\n    if (baserate_sem_copy > MW_SEM_WATERMARK)\n    {\n        PX4_INFO(\"Hard real-time constraint violated, shutting down. Updating log file. \\n\");\n        FILE* fp_taskover_run = NULL;\n        char msg_watermark[100] = { 0 };\n        char msg_timestamp[50] = { 0 };\n        struct tm *sTm;\n        time_t now = time(NULL);\n        sTm = gmtime (&now);\n        sprintf(msg_watermark,\"Base-rate semaphore exceeded water-mark value %d. Model base-rate = %.3f sec.\",MW_SEM_WATERMARK,(float)MW_BASERATE_PERIOD);\n        strftime(msg_timestamp, sizeof(msg_timestamp),\"%Y-%m-%d %H:%M:%S\", sTm);\n        fp_taskover_run = fopen(\"/fs/microsd/log/task_overrun_log.txt\",\"a+\");        \n        fprintf(fp_taskover_run,\"%s Timestamp=%s \\n\",msg_watermark,msg_timestamp);\n        fclose(fp_taskover_run);  \n        \n    }  \n    #endif\n    \n#if DEBUG    \n    PX4_INFO(\"px4_simulink_app : Received command to end the Simulink task \\n\");\n\tfflush(stdout);\n#endif\t\n}\n\n// LocalWords:  HRT px nsh mavlink nuttx doku nxinternal Nutt SCHED fs microsd\n// LocalWords:  dev ACM tty\n"},{"name":"MW_PX4_rtiostream_serial.cpp","type":"source","group":"legacy","path":"C:\\ProgramData\\MATLAB\\SupportPackages\\R2022a\\toolbox\\target\\supportpackages\\px4\\src","tag":"","groupDisplay":"Other files","code":"/*\n * Copyright 2018-2020 The MathWorks, Inc.\n *\n * File: MW_PX4_rtiostream_serial.c\n *\n * Abstract:\n *  Serial communications channel for PX4 Nuttx machine\n */\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <ctype.h>\n#include <string.h>\n#include <limits.h>\n#include <assert.h>\n#include \"systemlib/err.h\"\n\n#include <termios.h>   /* POSIX terminal control definition*/\n#include <unistd.h>    /*UNIX standard function definitions*/\n#include <fcntl.h>     /* File control definition*/\n#include <errno.h>     /*To get a description of error */\n#include <sys/ioctl.h> /*For IOCTL Functions*/\n\n#include \"MW_target_hardware_resources.h\"\n\n#ifndef _rtiostream\nextern \"C\" {                /* sbcheck:ok:extern_c needed because of C++ compatibility for rtiostream.h*/\n#include \"rtiostream.h\"\n}\n#define _rtiostream\n#endif\n\n#ifdef USE_MEXPRINTF\n#include \"mex.h\"\n#define printf mexPrintf\n#endif\n\n/***************** DEFINES ****************************************************/\n\n#define N_SERIAL_PORTS 10    /* Number of com ports allowed to open */\n#define MAX_COM_LEN 30       /* length of com port name */\n#define MAX_COM_PREFIX_LEN 7 /* Full prefix is \\\\.\\COM  */\n#define TMP_BUF_SIZ (40)\n\n#ifndef MIN\n#define MIN(a, b) ((a) < (b) ? (a) : (b))\n#endif\n\n#define COM_PORT_PREFIX \"/dev/\"\n#define PORTNAME_DEFAULT_VAL \"/dev/ttyS0\"\n\n#define BAUD_DEFAULT_VAL 57600\n#define RTS_DTR_ENABLE_DEFAULT_VAL 0\n\n# define MW_EXTSERIALPORT_STR(x) MW_EXTSERIALPORT_STR_EXPANDED(x)\n# define MW_EXTSERIALPORT_STR_EXPANDED(x) #x\n\n/* define a set of verbosity levels:\n *\n * 0: no verbose output\n * 1: basic verbose output\n * 2: extra verbose output */\ntypedef enum { VERBOSITY_LEVEL_0 = 0, VERBOSITY_LEVEL_1, VERBOSITY_LEVEL_2 } VerbosityLevel;\n/* default verbosity */\n#define DEFAULT_VERBOSITY VERBOSITY_LEVEL_0\n\n#define READ_FILE_TIMEOUT 10000 /* 10 seconds */\n#define WRITE_FILE_TIMEOUT                  \\\n2000 /* 2 seconds. This should be large \\\n * enough to send 512 bytes at the \\\n * lowest possible baud rate. See  \\\n * comments in serialDataSet for   \\\n * more details                    \\\n */\n        \n        /***************** TYPEDEFS **************************************************/\n        \n        typedef struct SerialCommsData_tag {\n    int isInUse; /* flag to indicate whether an instance is in use */\n    char port[MAX_COM_LEN];\n    int serialHandle;\n    uint32_T baud;\n    VerbosityLevel verbosity;\n    uint8_T rtsDtrEnable;\n} SerialCommsData;\n\n/**************** LOCAL DATA *************************************************/\n\n/* All local data resides in the per instance SerialCommsData structures to\n * make sure each connection is completely independent.\n *\n * The static array will be deallocated when the shared library is unloaded.\n *\n * Using an array rather than a linked list allows us to have fast direct lookup\n * of SerialCommsData from streamID during calls to rtIOStreamSend/Recv */\nstatic SerialCommsData SerialData[N_SERIAL_PORTS];\nstatic bool dataInitialised = false;\n\n/*\n * Refer to geck 700573 for resources used\n * All the parameters defined for Termios structure which\n * stores anything in relation to port attributes\n */\nstatic struct termios sTermios;\n\n/************** LOCAL FUNCTION PROTOTYPES ************************************/\n\nstatic int serialDataSet(SerialCommsData* sd, const void* src, const size_t size, size_t* sizeSent);\n\nstatic int serialDataGet(SerialCommsData* sd, char* dst, const size_t size, size_t* sizeRecvd);\n\nstatic int serialDataPending(SerialCommsData* sd, int* outPending);\n\nstatic void initSerialCommsDataStructure(void);\n\nstatic SerialCommsData* getSerialData(int streamID);\n\n#ifndef PIL\nstatic bool firsttime = true;\n#endif\n\n/*************** LOCAL FUNCTIONS **********************************************/\n\n/* Function: initSerialCommsDataStructure\n * =========================================================== Abstract: Initializes the data\n * structures to zero.\n */\nstatic void initSerialCommsDataStructure(void) {\n    if (!dataInitialised) {\n        memset(&SerialData, 0, sizeof(SerialData));\n        dataInitialised = true;\n    }\n}\n\n/* Function: initTermios ===========================================================\n * Abstract:\n *  Initializes the control settings for a UNIX serial communications device.\n */\nstatic int initTermios(int fd, uint32_T baud) {\n    speed_t baudC = B0;\n    \n    if (tcgetattr(fd, &sTermios) != 0) { /*Get the attributes set by default*/\n        printf(\"ERROR: Failed to get existing serial port configuration\\n\");\n        return RTIOSTREAM_ERROR;\n    }\n    \n    /* ---------- Serial Port Config ------- */\n    sTermios.c_cflag |= (CLOCAL     /*To not become port 'owner'*/\n            | CREAD);  /*Allow reading of incoming data*/\n    sTermios.c_cflag &= ~(CSTOPB    /*To have one stop bit */\n            | CSIZE); /*Mask Character size bites */\n    sTermios.c_cflag &= ~(PARENB);  /*Disable Parity Check*/\n    sTermios.c_cflag |= CS8;        /*Character size at 8 bits */\n    \n    sTermios.c_lflag &= ~(ICANON   /*To have raw output*/\n            | ECHO   /*Disable input character echo*/\n            | ECHONL  /*Disable echoing NL character */\n            | ISIG /*Disable SIGINTR, SIGSUSP, SIGDSUSP, and SIGQUIT signals*/\n            | IEXTEN); /* implementation-defined input processing */\n    \n    sTermios.c_cc[VMIN] = 0; /*To not have read operation dependent\n     * on number of characters received*/\n    sTermios.c_cc[VTIME] = 0; /* Does not have a timeout*/\n    \n    sTermios.c_iflag &= ~(IGNBRK | BRKINT | PARMRK | ISTRIP\n            | INLCR | IGNCR | ICRNL | IXON);/*Disable Software Flow Control*/\n       \n    sTermios.c_oflag &= ~OPOST; /*Disable Post processing of output*/\n    \n    /*Determine Actual Baud Value to setup port*/\n    switch (baud) {\n        case 50:\n            baudC = B50;\n            break;\n        case 75:\n            baudC = B75;\n            break;\n        case 110:\n            baudC = B110;\n            break;\n        case 134:\n            baudC = B134;\n            break;\n        case 150:\n            baudC = B150;\n            break;\n        case 200:\n            baudC = B200;\n            break;\n        case 300:\n            baudC = B300;\n            break;\n        case 600:\n            baudC = B600;\n            break;\n        case 1200:\n            baudC = B1200;\n            break;\n        case 1800:\n            baudC = B1800;\n            break;\n        case 2400:\n            baudC = B2400;\n            break;\n        case 4800:\n            baudC = B4800;\n            break;\n        case 9600:\n            baudC = B9600;\n            break;\n        case 19200:\n            baudC = B19200;\n            break;\n        case 38400:\n            baudC = B38400;\n            break;\n        case 57600:\n            baudC = B57600;\n            break;\n        case 115200:\n            baudC = B115200;\n            break;\n        case 128000:\n            baudC = B128000;\n            break;\n        case 230400:\n            baudC = B230400;\n            break;\n        case 256000:\n            baudC = B256000;\n            break;\n        case 460800:\n            baudC = B460800;\n            break;\n        case 500000:\n            baudC = B500000;\n            break;\n        case 576000:\n            baudC = B576000;\n            break;\n        case 921600:\n            baudC = B921600;\n            break;\n        case 1000000:\n            baudC = B1000000;\n            break;\n        case 1152000:\n            baudC = B1152000;\n            break;\n        case 1500000:\n            baudC = B1500000;\n            break;\n        case 2000000:\n            baudC = B2000000;\n            break;\n        case 2500000:\n            baudC = B2500000;\n            break;\n        case 3000000:\n            baudC = B3000000;\n            break;\n        default: {\n            printf(\"ERROR: Invalid baud rate supplied (%d)\\n\", baud);\n            return RTIOSTREAM_ERROR;\n        }\n    }\n    \n    if (cfsetispeed(&sTermios, baudC) != 0) { /*Set incoming Baud Rate*/\n        printf(\"ERROR: Failed to set input baud rate to %d\\n\", baud);\n        return RTIOSTREAM_ERROR;\n    }\n    \n    if (cfsetospeed(&sTermios, baudC) != 0) { /*Set outgoing Baud Rate*/\n        printf(\"ERROR: Failed to set output baud rate to %d\\n\", baud);\n        return RTIOSTREAM_ERROR;\n    }\n    \n    /************Didn't Find Equivalent for following***************/\n    /* Write timeout not available for UNIX*/\n    /* No equivalent for XonLim and XoffLim or EvtChar*/\n    /***************************************************************/\n    \n    /* -------- Serial Port Config END---- */\n    \n    if (tcsetattr(fd, TCSANOW, &sTermios) != 0) {\n        printf(\"ERROR: Failed to configure serial port\\n\");\n        return RTIOSTREAM_ERROR;\n    }\n    return RTIOSTREAM_NO_ERROR;\n}\n\n/* Function: serialDataPending =================================================\n * Abstract:\n *  Returns true, via the 'pending' arg, if data is pending on the comm line.\n *  Returns false otherwise.\n *\n *  RTIOSTREAM_NO_ERROR is returned on success, RTIOSTREAM_ERROR on failure.\n */\nstatic int serialDataPending(SerialCommsData* sd, int* outPending) {\n    int retVal = RTIOSTREAM_NO_ERROR;\n    \n    int temp = 0;\n    \n    assert(sd->serialHandle >= 0);\n    \n    /* Find out how much data is available. */\n    temp = ioctl(sd->serialHandle, FIONREAD, (unsigned long)outPending);\n    if (temp < 0) {\n        retVal = RTIOSTREAM_ERROR;\n        *outPending = 0;\n    }\n    \n    return retVal;\n} /* end serialDataPending */\n\n\n/* Function: serialDataGet =====================================================\n * Abstract:\n *  Attempts to gets the specified number of bytes from the specified serial.\n *  The number of bytes read is returned via the 'sizeRecvd' parameter.\n *  RTIOSTREAM_NO_ERROR is returned on success, RTIOSTREAM_ERROR is returned on\n *  failure.\n *\n * NOTES:\n *  o it is not an error for 'sizeRecvd' to be returned as 0\n *  o this function waits for at most READ_FILE_TIMEOUT\n */\nstatic int serialDataGet(SerialCommsData* sd, char* dst, const size_t size, size_t* sizeRecvd) {\n    static const char* fnName = \"serialDataGet:\";\n    int retVal = RTIOSTREAM_NO_ERROR;\n    int avail = 0;\n    \n    ssize_t sizeRecvdTemp = 0;\n    assert(sd->serialHandle >= 0);\n    \n    *sizeRecvd = 0;\n    if (size == 0) {\n        /* return immediately if caller requested to read 0 bytes */\n        return retVal;\n    }\n    \n    retVal = serialDataPending(sd, &avail);\n    if (retVal == RTIOSTREAM_ERROR || avail == 0) {\n        if (retVal == RTIOSTREAM_ERROR) {\n            printf(\"%s Pending returned RTIOSTREAM_ERROR\\n\", fnName);\n        }\n        return retVal;\n    }\n    \n    sizeRecvdTemp = read(sd->serialHandle, dst, size);\n    if (sizeRecvdTemp < 0) /*Error Condition check*/\n        \n    {\n        printf(\"%s ReadFile returned ERROR\\n\", fnName);\n        retVal = RTIOSTREAM_ERROR;\n        return retVal;\n    }\n    \n    *sizeRecvd = (size_t)sizeRecvdTemp;\n    \n    return retVal;\n} /* end serialDataGet */\n\n\n/* Function: serialDataSet =====================================================\n * Abstract:\n *  Utility function to send data via the specified serial\n */\nstatic int serialDataSet(SerialCommsData* sd,\n        const void* src,\n        const size_t size,\n        size_t* sizeSent) {\n    static const char* fnName = \"serialDataSet:\";\n    int retVal = RTIOSTREAM_NO_ERROR;\n    \n    /* G861098: workaround an issue for some serial drivers (i.e.\n     * Arduino and C2000 USB based serial drivers). When the send operation\n     * times out for these drivers, they return that 0 bytes were sent.\n     * However, we know this is not true (i.e. we know they have actually\n     * sent non-zero bytes). The workaround is to limit the max size that\n     * one can send so it can be successfully sent with the\n     * WRITE_FILE_TIMEOUT of 2 seconds. The client code (PIL/ExtMode)\n     * is responsible to loop to send the whole amount of data.\n     */\n    const size_t maxAllowedTransferSize = 512; /* in bytes */\n    const size_t transferAmount = MIN(maxAllowedTransferSize, size);\n    \n    ssize_t sizeSentTemp = 0;\n    *sizeSent = 0;\n    \n    if (size == 0) {\n        /* return immediately if caller requested to write 0 bytes */\n        return retVal;\n    }\n    \n    sizeSentTemp = write(sd->serialHandle, src, transferAmount);\n    \n    /*G807280 Check the error number. If resource is \"Temporarily Unavailable\"\n     * don't error, but let caller application deal with zero data*/\n    if ((sizeSentTemp < 0) && ((errno == EAGAIN) || (errno == EWOULDBLOCK))) {\n        sizeSentTemp = 0;\n    }\n    \n    if (sizeSentTemp < 0) {\n        printf(\"%s WriteFile returned ERROR\\n\", fnName);\n        retVal = RTIOSTREAM_ERROR;\n    }\n    \n    *sizeSent = (size_t)sizeSentTemp;\n    \n    return retVal;\n}\n\n/* Function: serialDataFlush =================================================\n * Abstract:\n *  Utility function to flush a port\n */\nstatic int serialDataFlush(SerialCommsData* sd) {\n    char tmpBuf[TMP_BUF_SIZ];\n    size_t numRecvd = 0;\n    int pending = 0;\n    int error;\n    static const char* fnName = \"serialDataFlush:\";\n    \n    do {\n        error = serialDataPending(sd, &pending);\n        if ((pending > 0) && (error == RTIOSTREAM_NO_ERROR)) {\n            if (sd->verbosity) {\n                printf(\"serialDataFlush: pending = %d\\n\", pending);\n            }\n            error = serialDataGet(sd, tmpBuf, sizeof(tmpBuf), &numRecvd);\n            if (sd->verbosity) {\n                size_t currElement;\n                printf(\"serialDataFlush: sizeRecvd = %lu: \", (unsigned long)numRecvd);\n                for (currElement = 0; currElement < numRecvd; currElement++) {\n                    printf(\"%u \", (unsigned char)tmpBuf[currElement]);\n                }\n                putchar('\\n'); // printf(\"\\n\");\n            }\n        }\n    } while ((pending > 0) && (error == RTIOSTREAM_NO_ERROR) && numRecvd > 0);\n    if (error == RTIOSTREAM_ERROR) {\n        printf(\"%s Flushing returned RTIOSTREAM_ERROR\\n\", fnName);\n    }\n    return error;\n}\n\nstatic int serialPortOpenInitialize(SerialCommsData* sd,\n        const int streamID,\n        int argc,\n        void* argv[]) {\n    int errorCode = RTIOSTREAM_NO_ERROR;\n    int serialHandle = -1;\n    int closeFile = false;\n    int result;\n    char fullPortName[MAX_COM_LEN] = \"\";\n    \n    /* Setting PX4 baud rate and port */\n    sd->baud = (uint32_T)MW_PX4_EXTMODE_BAUD_RATE;\n    strcat(fullPortName, MW_PX4_EXTMODE_HWPORT);\n    strcpy(sd->port, fullPortName);\n    sd->verbosity = DEFAULT_VERBOSITY;\n    sd->rtsDtrEnable = RTS_DTR_ENABLE_DEFAULT_VAL;\n    printf(\"External mode : Serial port baud rate: %d\\n\", sd->baud);\n    printf(\"External mode : Serial port Number: %s\\n\", sd->port);\n    fflush(stdout);\n    \n    if (sd->verbosity) {\n        printf(\"rtIOStreamOpen (connection id %d): port %s, baud %lu\\n\", streamID, sd->port,\n                (unsigned long)sd->baud);\n    }\n    \n    PX4_INFO(\"Opening serial port '%s' at baud %lu \\n\", sd->port, (unsigned long)sd->baud);\n    int retries = 0;\n    while (retries < 15) {\n        \n        serialHandle = open(sd->port, O_RDWR             /*Enable Read and Write Operations*/\n                | O_NOCTTY     /*Not controlling flag specified*/\n                | O_NONBLOCK); /*Make the port non -blocking*/\n        \n        if (serialHandle != -1) {\n            break;\n        }\n        // sleep a bit and retry. There seems to be a NuttX bug\n        // that can cause ttyACM0 to not be available immediately,\n        // but a small delay can fix it\n        usleep(50000);\n        retries++;\n    }\n    PX4_INFO(\"Opened serial port '%s' RETURN:  %d \\n\", sd->port, serialHandle);\n    if (serialHandle == -1) { /*-1 returned on error by OPEN*/\n        printf(\"Failed to open serial port '%s'. The reported error is %d: %s. \", sd->port, errno,\n                strerror(errno));\n        \n        printf(\n                \"Possible causes \"\n                \"are:\\n    a) The target is not powered on. \\n    \"\n                \"b) The specified port number is not correct. \\n    \"\n                \"c) The specified bit rate is not \"\n                \"supported by the host machine.\\n    d) The previous \"\n                \"connection was not closed correctly. \"\n                \"If this is the case, you may need to re-start MATLAB.\\n\");\n        fflush(stdout);\n        \n        errorCode = RTIOSTREAM_ERROR;\n        goto EXIT_POINT;\n    }\n    \n    sd->serialHandle = serialHandle;\n    \n    errorCode = initTermios(sd->serialHandle, sd->baud);\n    if (errorCode == RTIOSTREAM_ERROR) {\n        closeFile = true;\n        goto EXIT_POINT;\n    }\n    /*UNIX has this done with setting of termios data\n     * structure in initTermios*/\n    \n    /* g2099552 - to avoid PIL start packet getting flushed\n     * when MAVLink is enabled in start up and disabled in px4_simulink_app\n     * the serial open is blocked till a response from host (this need to be investigated) and hence the\n     * PIL start packet([ 1 5 0 0 0 0 0]) is getting flushed with the following code.\n     * The external mode takes more time to send the connect packet, hence not impacted */\n#ifndef PIL\n    result = serialDataFlush(sd); /* clear out old data on the port */\n#endif\n    \n    if (result == RTIOSTREAM_ERROR) {\n        printf(\"serialDataFlush failed\\n\");\n        errorCode = RTIOSTREAM_ERROR;\n        closeFile = true;\n        goto EXIT_POINT;\n    }\n    \n    EXIT_POINT:\n        if (closeFile) {\n            close(serialHandle);\n        }\n        return errorCode;\n}\n\n/* Function: getSerialData =================================================\n * Abstract:\n *  Retrieves a SerialCommsData instance given its streamID.\n *\n * NOTE: An invalid streamID will lead to a NULL pointer being returned\n */\nstatic SerialCommsData* getSerialData(int streamID) {\n    /* return NULL for invalid or uninitialized streamIDs */\n    SerialCommsData* sd = NULL;\n    if ((streamID >= 0) && (streamID < N_SERIAL_PORTS)) {\n        if (SerialData[streamID].isInUse) {\n            sd = &SerialData[streamID];\n        }\n    }\n    return sd;\n}\n\n/***************** VISIBLE FUNCTIONS ******************************************/\n\n/* Function: rtIOStreamOpen =================================================\n * Abstract:\n *  Open the connection with the target.\n */\nint rtIOStreamOpen(int argc, void* argv[]) {\n    int streamID;\n    int errorCode;\n    SerialCommsData* sd;\n    \n    initSerialCommsDataStructure();\n    \n    /* Find any free ports */\n    for (streamID = 0; streamID < N_SERIAL_PORTS; streamID++) {\n        if (!SerialData[streamID].isInUse) {\n            break;\n        }\n    }\n    if (streamID == N_SERIAL_PORTS) {\n        printf(\"All %d elements of the SerialCommsData structure are already in use.\",\n                N_SERIAL_PORTS);\n        return RTIOSTREAM_ERROR;\n    }\n    \n    sd = &SerialData[streamID];\n    \n    errorCode = serialPortOpenInitialize(sd, streamID, argc, argv);\n    \n    if (errorCode == RTIOSTREAM_NO_ERROR) {\n        /* flag instance as in use */\n        SerialData[streamID].isInUse = 1;\n        return streamID;\n    } else {\n        /* flag error */\n        return RTIOSTREAM_ERROR;\n    }\n}\n\n\n\n/* Function: rtIOStreamSend =====================================================\n * Abstract:\n *  Sends the specified number of bytes on the comm line. Returns the number of\n *  bytes sent (if successful) or a negative value if an error occurred. As long\n *  as an error does not occur, this function is guaranteed to set the requested\n *  number of bytes; the function blocks if the TCP/IP send buffer doesn't have\n *  room for all of the data to be sent\n */\nint rtIOStreamSend(int streamID, const void* const src, size_t size, size_t* sizeSent) {\n    int retVal;\n    SerialCommsData* sd = getSerialData(streamID);\n    if (sd == NULL) {\n        retVal = RTIOSTREAM_ERROR;\n        return retVal;\n    }\n    retVal = serialDataSet(sd, src, size, sizeSent);\n    if (sd->verbosity) {\n        printf(\"rtIOStreamSend (connection id %d): size = %lu, sizeSent = %lu\", streamID,\n                (unsigned long)size, (unsigned long)*sizeSent);\n        if (sd->verbosity >= VERBOSITY_LEVEL_2) {\n            size_t currElement;\n            printf(\": \");\n            for (currElement = 0; currElement < *sizeSent; currElement++) {\n                printf(\"%u \", ((const unsigned char*)src)[currElement]);\n            }\n        }\n        putchar('\\n'); // printf(\"\\n\");\n    }\n    return retVal;\n}\n\n\n/* Function: rtIOStreamRecv ================================================\n * Abstract: receive data\n *\n */\nint rtIOStreamRecv(int streamID, void* const dst, size_t size, size_t* sizeRecvd) {\n    int retVal = RTIOSTREAM_NO_ERROR;\n    SerialCommsData* sd = getSerialData(streamID);\n    if (sd == NULL) {\n        retVal = RTIOSTREAM_ERROR;\n        return retVal;\n    }\n    retVal = serialDataGet(sd, (char*)dst, size, sizeRecvd);\n#ifdef CLASSICAL_EXT_MODE\n    if (firsttime)\n    {\n        if(((char*)dst)[0]!='e')/* clear out old data on the port till 'e' of 'ext-mode' is received */\n        {\n            *sizeRecvd=0;\n        }\n        else\n        {\n            firsttime = false;\n        }\n    }\n#endif\n    if (sd->verbosity) {\n        printf(\"rtIOStreamRecv (connection id %d): size = %lu, sizeRecvd = %lu\", streamID,\n                (unsigned long)size, (unsigned long)*sizeRecvd);\n        if (sd->verbosity >= VERBOSITY_LEVEL_2) {\n            size_t currElement;\n            printf(\": \");\n            for (currElement = 0; currElement < *sizeRecvd; currElement++) {\n                printf(\"%u \", ((unsigned char*)dst)[currElement]);\n            }\n        }\n        putchar('\\n'); // printf(\"\\n\");\n    }\n    return retVal;\n}\n\n\n/* Function: rtIOStreamClose ================================================\n * Abstract: close the connection.\n *\n */\nint rtIOStreamClose(int streamID) {\n    int retVal = RTIOSTREAM_NO_ERROR;\n    SerialCommsData* sd = getSerialData(streamID);\n    if (sd == NULL) {\n        retVal = RTIOSTREAM_ERROR;\n        return retVal;\n    }\n    retVal = serialDataFlush(sd);\n    close(sd->serialHandle);\n    sd->serialHandle = -1;\n    /*because unlike Windows which uses a pointer it uses an\n     * int File descriptor which can be 0*/\n    /* clear in use flag */\n    sd->isInUse = 0;\n    \n    if (sd->verbosity) {\n        printf(\"rtIOStreamClose (connection id %d)\\n\", streamID);\n    }\n    \n    PX4_INFO(\"rtIOStreamClose (connection id %d)\\n\", streamID);\n    \n    \n    return retVal;\n}\n"},{"name":"MW_SCI.cpp","type":"source","group":"legacy","path":"C:\\ProgramData\\MATLAB\\SupportPackages\\R2022a\\toolbox\\target\\supportpackages\\px4\\src","tag":"","groupDisplay":"Other files","code":"/* Copyright 2020-2021 The MathWorks, Inc. */\n\n#include \"MW_PX4_SCI.h\"\n#include \"MW_target_hardware_resources.h\"\n\n#if ( defined(MATLAB_MEX_FILE) || defined(RSIM_PARAMETER_LOADING) ||  defined(RSIM_WITH_SL_SOLVER) )\n\nMW_Handle_Type MW_SCI_Open(void * SCIModule, uint8_T isString, uint32_T RxPin, uint32_T TxPin)\n{\n    return 0;\n}\n\nMW_SCI_Status_Type MW_SCI_ConfigureHardwareFlowControl(MW_Handle_Type SCIModuleHandle, MW_SCI_HardwareFlowControl_Type HardwareFlowControl, uint32_T RtsDtrPin, uint32_T CtsDtsPin)\n{\n    return MW_SCI_SUCCESS;\n}\n\nMW_SCI_Status_Type MW_SCI_SetBaudrate(MW_Handle_Type SCIModuleHandle, uint32_T Baudrate)\n{\n    return MW_SCI_SUCCESS;\n}\n\nMW_SCI_Status_Type MW_SCI_SetFrameFormat(MW_Handle_Type SCIModuleHandle, uint8_T DataBitsLength, MW_SCI_Parity_Type Parity, MW_SCI_StopBits_Type StopBits)\n{\n    return MW_SCI_SUCCESS;\n}\n\nMW_SCI_Status_Type MW_SCI_Receive(MW_Handle_Type SCIModuleHandle, uint8_T * RxDataPtr, uint32_T RxDataLength)\n{\n    return MW_SCI_SUCCESS;\n}\n\nMW_SCI_Status_Type MW_SCI_Transmit(MW_Handle_Type SCIModuleHandle, uint8_T * TxDataPtr, uint32_T TxDataLength)\n{\n    return MW_SCI_SUCCESS;\n}\n\nMW_SCI_Status_Type MW_SCI_GetStatus(MW_Handle_Type SCIModuleHandle)\n{\n    return MW_SCI_SUCCESS;\n}\n\nMW_SCI_Status_Type MW_SCI_SendBreak(MW_Handle_Type SCIModuleHandle)\n{\n    return MW_SCI_SUCCESS;\n}\n\nvoid MW_SCI_Close(MW_Handle_Type SCIModuleHandle)\n{\n    \n}\n\nMW_SCI_Status_Type MW_SCI_GetDataBytesAvailable(MW_Handle_Type SCIModuleHandle, bool blockingMode, void * size, int32_T timeout)\n{\n    return 0;\n}\n#else\n\n#include <stdio.h>   /* Standard input/output definitions */\n#include <string.h>  /* String function definitions */\n#include <unistd.h>  /* UNIX standard function definitions */\n#include <fcntl.h>   /* File control definitions */\n#include <errno.h>   /* Error number definitions */\n#include <termios.h> /* POSIX terminal control definitions */\n#include <stdbool.h>\n#include <stdlib.h>\n#include <time.h>\n\n//time-out using select( )\n#include <sys/types.h>\n#include <sys/stat.h>\n#include <sys/select.h>\n#include <sys/ioctl.h>\n#include <sys/time.h>\n\n#ifndef MW_TTYACM0_BAUDRATE\n#define MW_TTYACM0_BAUDRATE 0\n#endif\n\n#ifndef MW_TTYS0_BAUDRATE\n#define MW_TTYS0_BAUDRATE 0\n#endif\n\n#ifndef MW_TTYS1_BAUDRATE\n#define MW_TTYS1_BAUDRATE 0\n#endif\n\n#ifndef MW_TTYS2_BAUDRATE\n#define MW_TTYS2_BAUDRATE 0\n#endif\n\n#ifndef MW_TTYS3_BAUDRATE\n#define MW_TTYS3_BAUDRATE 0\n#endif\n\n#ifndef MW_TTYS4_BAUDRATE\n#define MW_TTYS4_BAUDRATE 0\n#endif\n\n#ifndef MW_TTYS5_BAUDRATE\n#define MW_TTYS5_BAUDRATE 0\n#endif\n\n#ifndef MW_TTYS6_BAUDRATE\n#define MW_TTYS6_BAUDRATE 0\n#endif\n\n#ifndef MW_TTYACM0_PARITY\n#define MW_TTYACM0_PARITY 0\n#endif\n\n#ifndef MW_TTYS0_PARITY\n#define MW_TTYS0_PARITY 0\n#endif\n\n#ifndef MW_TTYS1_PARITY\n#define MW_TTYS1_PARITY 0\n#endif\n\n#ifndef MW_TTYS2_PARITY\n#define MW_TTYS2_PARITY 0\n#endif\n\n#ifndef MW_TTYS3_PARITY\n#define MW_TTYS3_PARITY 0\n#endif\n\n#ifndef MW_TTYS4_PARITY\n#define MW_TTYS4_PARITY 0\n#endif\n\n#ifndef MW_TTYS5_PARITY\n#define MW_TTYS5_PARITY 0\n#endif\n\n#ifndef MW_TTYS6_PARITY\n#define MW_TTYS6_PARITY 0\n#endif\n\n#ifndef MW_TTYACM0_STOPBIT\n#define MW_TTYACM0_STOPBIT 0\n#endif\n\n#ifndef MW_TTYS0_STOPBIT\n#define MW_TTYS0_STOPBIT 0\n#endif\n\n#ifndef MW_TTYS1_STOPBIT\n#define MW_TTYS1_STOPBIT 0\n#endif\n\n#ifndef MW_TTYS2_STOPBIT\n#define MW_TTYS2_STOPBIT 0\n#endif\n\n#ifndef MW_TTYS3_STOPBIT\n#define MW_TTYS3_STOPBIT 0\n#endif\n\n#ifndef MW_TTYS4_STOPBIT\n#define MW_TTYS4_STOPBIT 0\n#endif\n\n#ifndef MW_TTYS5_STOPBIT\n#define MW_TTYS5_STOPBIT 0\n#endif\n\n#ifndef MW_TTYS6_STOPBIT\n#define MW_TTYS6_STOPBIT 0\n#endif\n\n#ifndef MW_TTYACM0HWFLOWCONTROL_CHECKBOX\n#define MW_TTYACM0HWFLOWCONTROL_CHECKBOX 0\n#endif\n\n#ifndef MW_TTYS0HWFLOWCONTROL_CHECKBOX\n#define MW_TTYS0HWFLOWCONTROL_CHECKBOX 0\n#endif\n\n#ifndef MW_TTYS1HWFLOWCONTROL_CHECKBOX\n#define MW_TTYS1HWFLOWCONTROL_CHECKBOX 0\n#endif\n\n#ifndef MW_TTYS2HWFLOWCONTROL_CHECKBOX\n#define MW_TTYS2HWFLOWCONTROL_CHECKBOX 0\n#endif\n\n#ifndef MW_TTYS3HWFLOWCONTROL_CHECKBOX\n#define MW_TTYS3HWFLOWCONTROL_CHECKBOX 0\n#endif\n\n#ifndef MW_TTYS4HWFLOWCONTROL_CHECKBOX\n#define MW_TTYS4HWFLOWCONTROL_CHECKBOX 0\n#endif\n\n#ifndef MW_TTYS5HWFLOWCONTROL_CHECKBOX\n#define MW_TTYS5HWFLOWCONTROL_CHECKBOX 0\n#endif\n\n#ifndef MW_TTYS6HWFLOWCONTROL_CHECKBOX\n#define MW_TTYS6HWFLOWCONTROL_CHECKBOX 0\n#endif\n\n\n/* Local defines */\n#define NUM_MAX_SCI_DEV      (10) /*a random choice - no limit on serial devices*/\n#define MAX_DEV_NAME         (64)\n#define MICROS 1000000L\n#define NANOS 1000000000L\n\n#define DEBUG 0\nstruct SCI_dev_t{\n    int fd;\n    char* portname;\n    uint32_T baudrate;\n    uint8_T databits;\n    MW_SCI_Parity_Type parity;\n    MW_SCI_StopBits_Type stopbits;\n    uint8_T busy;\n\tSCI_dev_t():fd(-1), \n\t\t\t\tportname(NULL),\n\t\t\t\tbaudrate(9600),\n\t\t\t\tdatabits(8),\n\t\t\t\tparity(MW_SCI_PARITY_NONE),\n\t\t\t\tstopbits(MW_SCI_STOPBITS_1),\n\t\t\t\tbusy(0)\n\t{}\n};\n\nstatic SCI_dev_t sciDev[NUM_MAX_SCI_DEV];\n\nstatic uint32_T AllBaudrates[] = {50,75,110,134,150,200,300,600,1200,1800,2400,4800,9600,19200,38400,57600,115200,128000,230400,256000,460800,500000,576000,921600,1000000,1152000,1500000,2000000,2500000,3000000};\n\n/* Open SERIAL channel*/\nstatic int SERIAL_open(const char *port)\n{\n    int fd;\n    int retries = 0;\n    /* O_NDELAY: disregard DCD signal line state\n     * O_NOCTTY: we don't want to be the controlling terminal */\n    fflush(stdout);\n    while (retries < 15)\n    {\n        fd = open(port, O_RDWR | O_NOCTTY | O_NONBLOCK);\n        if (fd != -1) \n        {\n            break;\n        }\n        // sleep a bit and retry. There seems to be a NuttX bug\n        // that can cause ttyACM0 to not be available immediately,\n        // but a small delay can fix it\n        usleep(50000);\n        retries++;\n    }\n    if (fd == -1)\n    {\n        perror(\"SERIAL_open/open\");\n    }\n    \n    /*flush both data received but not read, and data written but not transmitted.*/\n    tcflush(fd, TCIOFLUSH);\n    return fd;\n}\n\n/* Return device ID given serial port name */\nint getCurrSciDev(const char *name)\n{\n    int i;\n    \n    for (i = NUM_MAX_SCI_DEV - 1; i > -1; i--) {\n        if ((name != NULL) && (sciDev[i].portname != NULL) &&\n                (strncmp(name, sciDev[i].portname, MAX_DEV_NAME) == 0)) {\n            break;\n        }\n    }\n    \n    return i;\n}\n/* Allocate device*/\nint Serial_alloc(const char *name)\n{\n    int i;\n    \n    for (i = 0; i < NUM_MAX_SCI_DEV; i++)\n    {\n        if (sciDev[i].portname == NULL)\n        {\n            break;\n        }\n    }\n    if (i >= NUM_MAX_SCI_DEV)\n    {\n        fprintf(stderr, \"Cannot allocate a new device for %s: [%d]\\n\",\n                name, i);\n        return -1;\n    }\n    sciDev[i].portname = strndup(name, MAX_DEV_NAME);\n    \n    return i;\n}\n\n/* Initialize a SCI */\nMW_Handle_Type MW_SCI_Open(void * SCIModule,\n        uint8_T isString,\n        uint32_T RxPin, /* Not used */\n        uint32_T TxPin)/*Not Used*/\n{\n    MW_Handle_Type SCIHandle = (MW_Handle_Type)NULL;\n    char * port;\n    int currSciDev;\n    \n    /* Check parameters */\n    if (0 == isString)\n    {\n        fprintf(stderr,\"Only string as SCI Module name is supported.\\n\");\n        exit(-1);\n    }\n    else\n    {\n        /* Initialize the SCI Module*/\n        port = (char*)SCIModule;\n#ifdef PX4_CONNECTEDIO\n        /* For IO, the port name will be sent from host PC. IO wrapper does not use the length of port name\n         * and pass it as the last part in the packet. While reading port name in target, everything remaining \n         * in the buffer is read as port name. Because of this, sometimes extra junk bytes get added to the port name.\n         * Since all the supported serial ports are of length 10 (eg: /dev/ttyS1,/dev/ttyS6)\n         * manually ending the port name after 10 characters. note: /dev/ttyACM0 is not supported\n         * for serial blocks as it is conflicting with Connected I/O.\n         */\n        port[10] ='\\0';\n#endif\n#if DEBUG\n        printf(\"In MW_SCI_Open. Port = %s\\n\", port);\n#endif\n        currSciDev = getCurrSciDev(port);\n        fprintf(stdout, \"INIT: sciDevNo = %d\\n\", currSciDev);\n        if (currSciDev == -1)\n        {\n            currSciDev = Serial_alloc(port);\n            fprintf(stdout, \"ALLOC: devNo = %d\\n\", currSciDev);\n            if (currSciDev == -1)\n            {\n                fprintf(stderr,\"Error opening Serial bus (SERIAL_init/Alloc).\\n\");\n                exit(-1);\n            }\n        }\n        \n        if (sciDev[currSciDev].fd < 0)\n        {\n            sciDev[currSciDev].fd = SERIAL_open(port);\n            if (sciDev[currSciDev].fd < 0)\n            {\n                fprintf(stderr,\"Error opening Serial bus (SERIAL_init/Open).\\n\");\n                exit(-1);\n            }\n        }\n        SCIHandle = (MW_Handle_Type)&sciDev[currSciDev];\n    }\n    return SCIHandle;\n}\n\n/* Set the SCI bus speed */\nMW_SCI_Status_Type MW_SCI_SetBaudrate(MW_Handle_Type SCIModuleHandle, uint32_T Baudrate)\n{\n    SCI_dev_t *sci;\n    struct termios options;\n    speed_t optBaud;\n    \n    if (NULL != (void *)SCIModuleHandle)\n    {\n        sci = (SCI_dev_t *)SCIModuleHandle;\n        \n#ifndef PX4_CONNECTEDIO        \n        if (strcmp(sci->portname,\"/dev/ttyACM0\") == 0)\n        {\n            Baudrate = AllBaudrates[MW_TTYACM0_BAUDRATE];\n#if DEBUG\n            PX4_INFO(\"Inside MW_SCI_SetBaudrate strcmp. Portname = %s.Baudrate = %u\\n.\",sci->portname,Baudrate);\n#endif\n        }\n        else if (strcmp(sci->portname,\"/dev/ttyS0\") == 0)\n        {\n            Baudrate = AllBaudrates[MW_TTYS0_BAUDRATE];\n        }\n        else if (strcmp(sci->portname,\"/dev/ttyS1\") == 0)\n        {\n            Baudrate = AllBaudrates[MW_TTYS1_BAUDRATE];\n        }\n        else if (strcmp(sci->portname,\"/dev/ttyS2\") == 0)\n        {\n            Baudrate = AllBaudrates[MW_TTYS2_BAUDRATE];\n#if DEBUG\n            PX4_INFO(\"Inside MW_SCI_SetBaudrate strcmp. Portname = %s.Baudrate = %u\\n.\",sci->portname,Baudrate);\n#endif\n        }\n        else if (strcmp(sci->portname,\"/dev/ttyS3\") == 0)\n        {\n            Baudrate = AllBaudrates[MW_TTYS3_BAUDRATE];\n        }\n        else if (strcmp(sci->portname,\"/dev/ttyS4\") == 0)\n        {\n            Baudrate = AllBaudrates[MW_TTYS4_BAUDRATE];\n        }\n        else if (strcmp(sci->portname,\"/dev/ttyS5\") == 0)\n        {\n            Baudrate = AllBaudrates[MW_TTYS5_BAUDRATE];\n        }\n        else if (strcmp(sci->portname,\"/dev/ttyS6\") == 0)\n        {\n            Baudrate = AllBaudrates[MW_TTYS6_BAUDRATE];\n#if DEBUG\n            PX4_INFO(\"Inside MW_SCI_SetBaudrate strcmp. Portname = %s.Baudrate = %u\\n.\",sci->portname,Baudrate);\n#endif\n        }\n        else\n        {\n            perror(\"SERIAL_SetBaudrate\");\n            return MW_SCI_BUS_ERROR;\n        }\n#endif       \n        \n#if DEBUG\n        printf(\"Inside MW_SCI_SetBaudrate. Portname = %s. Baudrate = %u\\n.\",sci->portname,Baudrate);\n#endif\n        /* Set parameters of the serial connection*/\n//         optBaud = Baudrate;\n        switch (Baudrate)\n        {\n            case      50: optBaud =       B50; break;\n            case      75: optBaud =       B75; break;\n            case     110: optBaud =      B110; break;\n            case     134: optBaud =      B134; break;\n            case     150: optBaud =      B150; break;\n            case     200: optBaud =      B200; break;\n            case     300: optBaud =      B300; break;\n            case     600: optBaud =      B600; break;\n            case    1200: optBaud =     B1200; break;\n            case    1800: optBaud =     B1800; break;\n            case    2400: optBaud =     B2400; break;\n            case    4800: optBaud =     B4800; break;\n            case    9600: optBaud =     B9600; break;\n            case   19200: optBaud =    B19200; break;\n            case   38400: optBaud =    B38400; break;\n            case   57600: optBaud =    B57600; break;\n            case  115200: optBaud =   B115200; break;\n            case  128000: optBaud =   B128000; break;\n            case  230400: optBaud =   B230400; break;\n            case  256000: optBaud =   B256000; break;\n            case  460800: optBaud =   B460800; break;\n            case  500000: optBaud =   B500000; break;\n            case  576000: optBaud =   B576000; break;\n            case  921600: optBaud =   B921600; break;\n            case 1000000: optBaud =  B1000000; break;\n            case 1152000: optBaud =  B1152000; break;\n            case 1500000: optBaud =  B1500000; break;\n            case 2000000: optBaud =  B2000000; break;\n            case 2500000: optBaud =  B2500000; break;\n            case 3000000: optBaud =  B3000000; break;\n            default:\n                perror(\"SERIAL_SetBaudrate\");\n                return MW_SCI_BUS_ERROR;\n        }\n        \n        if (tcgetattr(sci->fd, &options) < 0)\n        {\n            perror(\"SERIAL_GetAttribute\");\n            return MW_SCI_BUS_ERROR;\n        }\n               \n        /* Enable the receiver and set local mode*/\n        options.c_cflag |= (CLOCAL     /*To not become port 'owner'*/\n                | CREAD);  /*Allow reading of incoming data*/\n        options.c_iflag &= ~(IXON /*Disable Software Flow Control*/\n                          | IXOFF | IXANY);\n        \n        options.c_lflag &= ~(ICANON   /*To have raw output*/\n                          | ECHO   /*Disable input character echo*/\n                          | ECHOE  /*Disable echo character erase*/\n                          | ISIG); /*Disable SIGINTR, SIGSUSP, SIGDSUSP,\n                                    * and SIGQUIT signals*/\n                \n        /* Set character read options*/\n        options.c_cc[VMIN]  = 0;\n        options.c_cc[VTIME] = 0;  /*This is a completely non-blocking read -*/\n        /* Local options. Configure for RAW input*/\n        \n        options.c_oflag &= ~OPOST; /*Disable Post processing of output*/\n        \n        /* Set baud rate*/\n        if (cfsetispeed(&options, optBaud) < 0)\n        {\n            perror(\"SERIAL_Set_ip_Speed\");\n            return MW_SCI_BUS_ERROR;\n        }\n        if (cfsetospeed(&options, optBaud) < 0)\n        {\n            perror(\"SERIAL_Set_op_Speed\");\n            return MW_SCI_BUS_ERROR;\n        }\n        \n        /* Set attributes*/\n        if (tcsetattr(sci->fd, TCSANOW, &options) < 0)\n        {\n            perror(\"SERIAL_SetAttribute\");\n            return MW_SCI_BUS_ERROR;\n        }\n        else\n        {\n            printf(\"Serial Port Opened. fd = %d. BaudRate = %u\\n\", sci->fd,optBaud);\n        }\n        /*flush both data received but not read, and data written but not transmitted.*/\n        tcflush(sci->fd, TCIOFLUSH);\n    }\n    \n    return MW_SCI_SUCCESS;\n}\n\n/* Set SCI frame format */\nMW_SCI_Status_Type MW_SCI_SetFrameFormat(MW_Handle_Type SCIModuleHandle, uint8_T DataBitsLength, MW_SCI_Parity_Type Parity, MW_SCI_StopBits_Type StopBits)\n{\n    SCI_dev_t *sci;\n    struct termios options;\n    \n    if (NULL != (void *)SCIModuleHandle)\n    {\n        \n        sci = (SCI_dev_t *)SCIModuleHandle;\n        if (tcgetattr(sci->fd, &options) < 0)\n        {\n            perror(\"SERIAL_GetAttribute\");\n            return MW_SCI_BUS_ERROR;\n        }\n        \n        /* Set data bits*/\n        options.c_cflag &= ~CSIZE;\n        \n        switch (DataBitsLength)\n        {\n            case 5:\n                options.c_cflag |= CS5;\n                break;\n            case 6:\n                options.c_cflag |= CS6;\n                break;\n            case 7:\n                options.c_cflag |= CS7;\n                break;\n            case 8:\n                options.c_cflag |= CS8;\n                break;\n            default:\n                perror(\"SERIAL_SetFrameFormat/DataBitsLength\");\n                return MW_SCI_BUS_ERROR;\n        }\n\n#ifndef PX4_CONNECTEDIO               \n        if (strcmp(sci->portname,\"/dev/ttyACM0\") == 0)\n        {\n            Parity = static_cast<MW_SCI_Parity_Type> (MW_TTYACM0_PARITY);\n            StopBits = static_cast<MW_SCI_StopBits_Type>((2 * MW_TTYACM0_STOPBIT) + 1);\n#if DEBUG\n            PX4_INFO(\"Inside MW_SCI_SetFrameFormat strcmp. Portname = %s.Parity = %u. StopBits = %u\\n.\",sci->portname,Parity,StopBits);\n#endif\n        }\n        else if (strcmp(sci->portname,\"/dev/ttyS0\") == 0)\n        {\n            Parity = static_cast<MW_SCI_Parity_Type> (MW_TTYS0_PARITY);\n            StopBits = static_cast<MW_SCI_StopBits_Type>((2 * MW_TTYS0_STOPBIT) + 1);\n        }\n        else if (strcmp(sci->portname,\"/dev/ttyS1\") == 0)\n        {\n            Parity = static_cast<MW_SCI_Parity_Type> (MW_TTYS1_PARITY);\n            StopBits = static_cast<MW_SCI_StopBits_Type>((2 * MW_TTYS1_STOPBIT) + 1);\n        }\n        else if (strcmp(sci->portname,\"/dev/ttyS2\") == 0)\n        {\n            Parity = static_cast<MW_SCI_Parity_Type> (MW_TTYS2_PARITY);\n            StopBits = static_cast<MW_SCI_StopBits_Type>((2 * MW_TTYS2_STOPBIT) + 1);\n#if DEBUG\n            PX4_INFO(\"Inside MW_SCI_SetFrameFormat strcmp. Portname = %s.Parity = %u. StopBits = %u\\n.\",sci->portname,Parity,StopBits);\n#endif\n        }\n        else if (strcmp(sci->portname,\"/dev/ttyS3\") == 0)\n        {\n            Parity = static_cast<MW_SCI_Parity_Type> (MW_TTYS3_PARITY);\n            StopBits = static_cast<MW_SCI_StopBits_Type>((2 * MW_TTYS3_STOPBIT) + 1);\n        }\n        else if (strcmp(sci->portname,\"/dev/ttyS4\") == 0)\n        {\n            Parity = static_cast<MW_SCI_Parity_Type> (MW_TTYS4_PARITY);\n            StopBits = static_cast<MW_SCI_StopBits_Type>((2 * MW_TTYS4_STOPBIT) + 1);\n        }\n        else if (strcmp(sci->portname,\"/dev/ttyS5\") == 0)\n        {\n            Parity = static_cast<MW_SCI_Parity_Type> (MW_TTYS5_PARITY);\n            StopBits = static_cast<MW_SCI_StopBits_Type>((2 * MW_TTYS5_STOPBIT) + 1);\n        }\n        else if (strcmp(sci->portname,\"/dev/ttyS6\") == 0)\n        {\n            Parity = static_cast<MW_SCI_Parity_Type> (MW_TTYS6_PARITY);\n            StopBits = static_cast<MW_SCI_StopBits_Type> ((2 * MW_TTYS6_STOPBIT) + 1);\n#if DEBUG\n            PX4_INFO(\"Inside MW_SCI_SetFrameFormat strcmp. Portname = %s.Parity = %u. StopBits = %u\\n.\",sci->portname,Parity,StopBits);\n#endif\n        }\n        else\n        {\n            perror(\"SERIAL_SetFrameFormat/Parity\");\n            return MW_SCI_BUS_ERROR;\n        }\n #endif       \n        \n#if DEBUG\n        printf(\"Inside MW_SCI_SetFrameFormat. Portname = %s. Parity = %u. StopBits = %u\\n.\",sci->portname,Parity,StopBits);\n#endif\n        /* Set parity*/\n        switch (Parity)\n        {\n            case MW_SCI_PARITY_NONE:\n                options.c_cflag &= ~PARENB;\n                break;\n            case MW_SCI_PARITY_EVEN:\n                options.c_cflag |= PARENB;\n                options.c_cflag &= ~PARODD;\n                break;\n            case MW_SCI_PARITY_ODD:\n                options.c_cflag |= PARENB;\n                options.c_cflag |= PARODD;\n                break;\n            default:\n                perror(\"SERIAL_SetFrameFormat/Parity\");\n                return MW_SCI_BUS_ERROR;\n        }\n        \n        /* Set stop bits (1 or 2)*/\n        switch (StopBits)\n        {\n            case MW_SCI_STOPBITS_1:\n                options.c_cflag &= ~CSTOPB;\n                break;\n            case MW_SCI_STOPBITS_2:\n                options.c_cflag |= CSTOPB;\n                break;\n            default:\n                perror(\"SERIAL_SetFrameFormat/StopBits\");\n                return MW_SCI_BUS_ERROR;\n        }\n               \n        /* Set attributes*/\n        if (tcsetattr(sci->fd, TCSANOW, &options) < 0)\n        {\n            perror(\"SERIAL_SetAttribute\");\n            return MW_SCI_BUS_ERROR;\n        }\n        /*flush both data received but not read, and data written but not transmitted.*/\n        tcflush(sci->fd, TCIOFLUSH);\n    }\n    \n    return MW_SCI_SUCCESS;\n}\n\nMW_SCI_Status_Type MW_SCI_GetDataBytesAvailable(MW_Handle_Type SCIModuleHandle, bool blockingMode, void * size, int32_T timeout)\n{\n    int out;\n    SCI_dev_t *sci;\n    int* databytesAvailable = (int*)size;\n    int error_counter = 0;\n    if (NULL != (void *)SCIModuleHandle)\n    {\n        sci = (SCI_dev_t *)SCIModuleHandle;\n#if DEBUG\n        int currSciDev;\n        currSciDev = getCurrSciDev(sci->portname);\n        printf(\"Inside GetDataBytesAvailable. SCIModule = %d. | \",currSciDev);\n        printf( \"port name = %s | fd = %d \\n\", sci->portname, sci->fd);\n#endif\n        \n        if (blockingMode)\n        {\n            //Blocking mode\n\t\t\tpx4_pollfd_struct_t fds[1];\n\t\t\tfds[0].fd = sci->fd;\n\t\t\tfds[0].events = POLLIN;\n\n#if DEBUG\n            printf(\"Inside MW_SCI_GetDataBytesAvailable. Before Poll \\n\");\n#endif\n            timeout = timeout * 1000;\n            int poll_ret = px4_poll(fds, 1, timeout);\n#if DEBUG\n            printf(\"Inside MW_SCI_GetDataBytesAvailable. After Poll \\n\");\n#endif\n            /* handle the poll result */\n            if (poll_ret == 0)\n            {\n                /* this means none of our providers is giving us data */\n                PX4_ERR(\"Got no data within the timeout specified\");\n                return MW_SCI_DATA_NOT_AVAILABLE;\n            }\n            else if (poll_ret < 0)\n            {\n                /* this is seriously bad - should be an emergency */\n                if (error_counter < 10 || error_counter % 50 == 0)\n                {\n                    /* use a counter to prevent flooding (and slowing us down) */\n                    PX4_ERR(\"ERROR return value from poll(): %d\", poll_ret);\n                    return MW_SCI_BUS_ERROR;\n                }\n            }\n            else\n            {\n                if (fds[0].revents & POLLIN)\n                {\n                    sci->busy = 1; /*Set the busy flag*/\n                    out = ioctl (sci->fd, FIONREAD, (unsigned long)databytesAvailable);\n                    sci->busy = 0; /*Reset the busy flag*/\n                    if(out < 0)\n                    {\n                        perror(\"MW_SCI_GetDataBytesAvailable\");\n                        return MW_SCI_BUS_ERROR;\n                    }\n                }\n            }\n        }//End of Blocking mode\n        else\n            //Non-Blocking mode\n        {\n#if DEBUG\n            printf(\"Inside MW_SCI_GetDataBytesAvailable. Non-blocking mode \\n\");\n#endif\n            sci->busy = 1; /*Set the busy flag*/\n            out = ioctl (sci->fd, FIONREAD, (unsigned long)databytesAvailable);\n            sci->busy = 0; /*Reset the busy flag*/\n            if(out < 0)\n            {\n                perror(\"MW_SCI_GetDataBytesAvailable\");\n                return MW_SCI_BUS_ERROR;\n            }\n        } //End of Non-Blocking mode\n//         ptr_size = (uint8_T*)&databytesAvailable;\n#if DEBUG\n        printf(\"Debug Print in MW_SCI_GetDataBytesAvailable: available %lu bytes : %u bytes.\\n \", *databytesAvailable,*(char*)size);\n#endif\n    }\n    return MW_SCI_SUCCESS;\n}\n\n/* Receive the data over SCI */\nMW_SCI_Status_Type MW_SCI_Receive(MW_Handle_Type SCIModuleHandle, uint8_T * RxDataPtr, uint32_T RxDataLength)\n{\n    SCI_dev_t *sci;\n    ssize_t bytes_read = 0;\n       \n    if (NULL != (void *)SCIModuleHandle)\n    {\n        sci = (SCI_dev_t *)SCIModuleHandle;\n#if DEBUG\n        int currSciDev;\n        currSciDev = getCurrSciDev(sci->portname);\n        printf(\"Inside Receive. SCIModule = %d. | \",currSciDev);\n        printf( \"port name = %s | fd = %d \\n\", sci->portname, sci->fd);\n#endif\n        if(0 == sci->busy)\n        {\n            sci->busy = 1; /*Set the busy flag*/\n            bytes_read = read(sci->fd, RxDataPtr, RxDataLength);\n            sci->busy = 0; /*Reset the busy flag*/\n        }\n        else\n        {\n            printf(\"Serial Port busy. Unable to perform read operation.\\n\");\n            return MW_SCI_RX_BUSY;\n        }\n        usleep(1000);\n//---------------(For Debug)-----------Working----------------------------------------\n        if ( bytes_read > 0 ) //for debugging only.. remove as needed\n        {\n#if DEBUG\n            uint32_T i;\n            printf(\"Debug Print: received %d bytes. return = %u \\n \", bytes_read,MW_SCI_SUCCESS);\n            for (i= 0;i<RxDataLength;i++)\n            {\n                printf(\"[%d]\",RxDataPtr[i]);\n            }\n            printf(\"\\n\");\n            fflush(stdout);\n#endif\n        }\n        else\n        {\n#if DEBUG\n            printf(\"received %d bytes. errno : %d : %s.\\n\",bytes_read,errno,strerror(errno));\n            fflush(stdout);\n#endif\n            return MW_SCI_DATA_NOT_AVAILABLE;\n        }\n//--------------------------Working----------------------------------------\n        \n    }\n    return MW_SCI_SUCCESS;\n}\n\n/* Transmit the data over SCI */\nMW_SCI_Status_Type MW_SCI_Transmit(MW_Handle_Type SCIModuleHandle, uint8_T * TxDataPtr, uint32_T TxDataLength)\n{\n    SCI_dev_t *sci;\n    int ret;\n    if (NULL != (void *)SCIModuleHandle)\n    {\n\n        sci = (SCI_dev_t *)SCIModuleHandle;\n#if DEBUG\n        int currSciDev;\n        currSciDev = getCurrSciDev(sci->portname);\n        printf(\"Inside Transmit. SCIModule = %d. | \",currSciDev);\n        printf( \"port name = %s | fd = %d | \", sci->portname, sci->fd);\n        printf( \"data : \");\n        uint32_T i;\n        for (i= 0;i<TxDataLength;i++)\n            {\n                printf(\"[%d]\",TxDataPtr[i]);\n            }\n        printf( \"\\n\");\n#endif\n        if(0 == sci->busy)\n        {\n            sci->busy = 2; /*Set the busy flag*/\n            ret = write(sci->fd, TxDataPtr, TxDataLength);\n            sci->busy = 0; /*Reset the busy flag*/\n        }\n        else\n        {\n            printf(\"Serial Port busy. Unable to perform write operation.\\n\");\n            return MW_SCI_TX_BUSY;\n        }\n        if (ret < 0)\n        {\n            perror(\"SERIAL_write/write\");\n            return MW_SCI_BUS_ERROR;\n        }\n    }\n    return MW_SCI_SUCCESS;\n}\n\nstruct timespec diff(struct timespec start,struct timespec end)\n{\n    struct timespec temp;\n    if ((end.tv_nsec-start.tv_nsec)<0) {\n        temp.tv_sec = end.tv_sec-start.tv_sec-1;\n        temp.tv_nsec = 1000000000+end.tv_nsec-start.tv_nsec;\n    } else {\n        temp.tv_sec = end.tv_sec-start.tv_sec;\n        temp.tv_nsec = end.tv_nsec-start.tv_nsec;\n    }\n    return temp;\n}\n\n/* Close SERIAL channel*/\nstatic void SERIAL_close(int fd)\n{\n    int ret;\n    \n    ret = close(fd);\n    if (ret < 0)\n    {\n        /* EBADF, EINTR, EIO: In all cases, descriptor is torn down*/\n        perror(\"SERIAL_close/close\");\n    }\n}\n\n/* Release SCI module */\nvoid MW_SCI_Close(MW_Handle_Type SCIModuleHandle)\n{\n    SCI_dev_t *sci;\n    if (NULL != (void *)SCIModuleHandle)\n    {\n        sci = (SCI_dev_t *)SCIModuleHandle;\n        if (sci->fd > 0)\n        {\n#if DEBUG\n            printf(\"Inside SCI_Close. port name = %s | fd = %d \\n\", sci->portname, sci->fd );\n#endif\n            SERIAL_close(sci->fd);\n            sci->fd = -1;\n        }\n    }\n}\n\nMW_SCI_Status_Type MW_SCI_ConfigureHardwareFlowControl(MW_Handle_Type SCIModuleHandle, MW_SCI_HardwareFlowControl_Type HardwareFlowControl, uint32_T RtsDtrPin, uint32_T CtsDtsPin)\n{\n    uint8_T hardwareFCEnable = 0;\n    SCI_dev_t *sci;\n    struct termios options;\n    if (NULL != (void *)SCIModuleHandle)\n    {\n        sci = (SCI_dev_t *)SCIModuleHandle;\n#if DEBUG\n        int currSciDev;\n        currSciDev = getCurrSciDev(sci->portname);\n        printf(\"Inside ConfigureHardwareFlowControl. SCIModule = %d. | \",currSciDev);\n        printf( \"port name = %s | fd = %d \\n\", sci->portname, sci->fd);\n#endif\n        if (tcgetattr(sci->fd, &options) < 0)\n        {\n            perror(\"SERIAL_GetAttribute\");\n            return MW_SCI_BUS_ERROR;\n        }\n        \n#ifndef PX4_CONNECTEDIO        \n        if (strcmp(sci->portname,\"/dev/ttyACM0\") == 0)\n        {\n            hardwareFCEnable = MW_TTYACM0HWFLOWCONTROL_CHECKBOX;\n#if DEBUG\n            PX4_INFO(\"Inside MW_SCI_SetFrameFormat strcmp. Portname = %s.hardwareFCEnable = %u. \\n.\",sci->portname,hardwareFCEnable);\n#endif\n        }\n        else if (strcmp(sci->portname,\"/dev/ttyS0\") == 0)\n        {\n            hardwareFCEnable = MW_TTYS0HWFLOWCONTROL_CHECKBOX;\n        }\n        else if (strcmp(sci->portname,\"/dev/ttyS1\") == 0)\n        {\n            hardwareFCEnable = MW_TTYS1HWFLOWCONTROL_CHECKBOX;\n        }\n        else if (strcmp(sci->portname,\"/dev/ttyS2\") == 0)\n        {\n            hardwareFCEnable = MW_TTYS2HWFLOWCONTROL_CHECKBOX;\n#if DEBUG\n            PX4_INFO(\"Inside MW_SCI_SetFrameFormat strcmp. Portname = %s.hardwareFCEnable = %u. \\n.\",sci->portname,hardwareFCEnable);\n#endif\n        }\n        else if (strcmp(sci->portname,\"/dev/ttyS3\") == 0)\n        {\n            hardwareFCEnable = MW_TTYS3HWFLOWCONTROL_CHECKBOX;\n        }\n        else if (strcmp(sci->portname,\"/dev/ttyS4\") == 0)\n        {\n            hardwareFCEnable = MW_TTYS4HWFLOWCONTROL_CHECKBOX;\n        }\n        else if (strcmp(sci->portname,\"/dev/ttyS5\") == 0)\n        {\n            hardwareFCEnable = MW_TTYS5HWFLOWCONTROL_CHECKBOX;\n        }\n        else if (strcmp(sci->portname,\"/dev/ttyS6\") == 0)\n        {\n            hardwareFCEnable = MW_TTYS6HWFLOWCONTROL_CHECKBOX;\n#if DEBUG\n            PX4_INFO(\"Inside MW_SCI_SetFrameFormat strcmp. Portname = %s.hardwareFCEnable = %u.\",sci->portname,hardwareFCEnable);\n#endif\n        }\n        else\n        {\n            perror(\"SERIAL_SetFrameFormat/Parity\");\n            return MW_SCI_BUS_ERROR;\n        }\n#endif        \n        \n        /* Set data bits for Hardware Flow Control*/\n        if (1 == hardwareFCEnable)\n        {\n            options.c_cflag |= CRTSCTS;\n        }\n        else if (0 == hardwareFCEnable)\n        {\n            options.c_cflag &= ~CRTSCTS;\n        }\n        \n    }\n    return MW_SCI_SUCCESS;\n}\n\nMW_SCI_Status_Type MW_SCI_GetStatus(MW_Handle_Type SCIModuleHandle)\n{\n    return MW_SCI_SUCCESS;\n}\n\nMW_SCI_Status_Type MW_SCI_SendBreak(MW_Handle_Type SCIModuleHandle)\n{\n    return MW_SCI_SUCCESS;\n}\n\n#endif"},{"name":"MW_custom_RTOS_header.h","type":"header","group":"other","path":"D:\\simulink\\PX4QGCGPSCtrl\\work\\code\\px42LoopCtrQGC20220313_ert_rtw","tag":"","groupDisplay":"Other files","code":"#ifndef _MW_CUSTOM_RTOS_HEADER_H_\r\n#define _MW_CUSTOM_RTOS_HEADER_H_\r\n#define MW_BASERATE_PRIORITY           250\r\n#define MW_BASERATE_PERIOD             0.005\r\n#define MW_NUMBER_SUBRATES             1\r\n#define MW_NUMBER_APERIODIC_TASKS      0\r\n#define MW_IS_CONCURRENT               0\r\n#define MW_NUMBER_TIMER_DRIVEN_TASKS   0\r\n#define MW_HAS_MULTIPLE_RATES\r\n\r\nextern void exitFcn(int sig);\r\nextern void *terminateTask(void *arg);\r\nextern void *baseRateTask(void *arg);\r\nextern void *subrateTask(void *arg);\r\n\r\n#define MW_NEEDS_BACKGROUND_TASK\r\n#define MW_BACKGROUNDTASK_PRIORITY     248\r\n\r\nextern void *backgroundTask(void *arg);\r\nextern pthread_t backgroundThread;\r\nextern pthread_t schedulerThread;\r\nextern pthread_t baseRateThread;\r\nextern pthread_t subRateThread[];\r\nextern sem_t stopSem;\r\nextern sem_t baserateTaskSem;\r\nextern sem_t subrateTaskSem[];\r\nextern int taskId[];\r\nextern int subratePriority[];\r\n\r\n#endif\r\n\r\n#define MW_MAX_TASKNAME                16\r\n"},{"name":"MW_target_hardware_resources.h","type":"header","group":"other","path":"D:\\simulink\\PX4QGCGPSCtrl\\work\\code\\px42LoopCtrQGC20220313_ert_rtw","tag":"","groupDisplay":"Other files","code":"#ifndef PORTABLE_WORDSIZES\n#ifdef __MW_TARGET_USE_HARDWARE_RESOURCES_H__\n#ifndef __MW_TARGET_HARDWARE_RESOURCES_H__\n#define __MW_TARGET_HARDWARE_RESOURCES_H__\n\n#define MW_MULTI_TASKING_MODE 1\n#include \"MW_PX4_TaskControl.h\"\n\n#define MW_USECODERTARGET 1\n#define MW_TARGETHARDWARE PX4 Pixhawk 1\n#define MW_CONNECTIONINFO_SERIAL_IPADDRESS codertarget.pixhawk.registry.getLoopbackIP;\n#define MW_CONNECTIONINFO_SERIAL_PORT 17725\n#define MW_CONNECTIONINFO_SERIAL_VERBOSE 1\n#define MW_CONNECTIONINFO_XCPONSERIAL_BAUDRATE codertarget.pixhawk.internal.getExternalModeBaudrate(hCS);\n#define MW_CONNECTIONINFO_XCPONSERIAL_COMPORT codertarget.pixhawk.internal.getExternalSerialPortName(hCS);\n#define MW_CONNECTIONINFO_XCPONSERIAL_VERBOSE 1\n#define MW_EXTMODE_CONFIGURATION Serial\n#define MW_EXTMODE_RUNNING on\n#define MW_RTOS NuttX\n#define MW_RTOSBASERATETASKPRIORITY 250\n#define MW_SCHEDULER_INTERRUPT_SOURCE 0\n#define MW_RUNTIME_BUILDACTION 1\n#define MW_CMAKECONFIG px4_fmu-v3_default\n#define MW_CHANGECMAKECONFIG 48\n#define MW_AUTOMATIC_SERIAL_SCAN 1\n#define MW_COM_UPLOAD_STORAGE \n#define MW_NUTTX_SERIAL_PORT \n#define MW_FORCEUPLOAD_CHECKBOX 0\n#define MW_CLOCKING_CPUCLOCKRATEMHZ 168\n#define MW_EXTSERIALPORT 5\n#define MW_EXTMODESERIALPORT_CHECKBOX 1\n#define MW_EXTMODEHOSTCOMPORT COM6\n#define MW_PILHARDWARESERIALPORT_CHECKBOX 1.000000\n#define MW_PILSERIALPORT /dev/ttyACM0\n#define MW_PILSERIALPORT_CHECKBOX 0\n#define MW_PILHOSTCOMPORT COM6\n#define MW_ENABLEMAVLINKCHECKBOX 1\n#define MW_TTYACM0_BAUDRATE 29\n#define MW_TTYACM0_PARITY 0\n#define MW_TTYACM0_STOPBIT 0\n#define MW_TTYACM0_PORTMAP 48\n#define MW_TTYACM0HWFLOWCONTROL_CHECKBOX 0\n#define MW_TTYS1_BAUDRATE 15\n#define MW_TTYS1_PARITY 0\n#define MW_TTYS1_STOPBIT 0\n#define MW_TTYS1_PORTMAP 48\n#define MW_TTYS1HWFLOWCONTROL_CHECKBOX 0\n#define MW_TTYS2_BAUDRATE 29\n#define MW_TTYS2_PARITY 0\n#define MW_TTYS2_STOPBIT 0\n#define MW_TTYS2_PORTMAP 48\n#define MW_TTYS2HWFLOWCONTROL_CHECKBOX 0\n#define MW_TTYS3_BAUDRATE 29\n#define MW_TTYS3_PARITY 0\n#define MW_TTYS3_STOPBIT 0\n#define MW_TTYS3_PORTMAP 48\n#define MW_TTYS5_BAUDRATE 29\n#define MW_TTYS5_PARITY 0\n#define MW_TTYS5_STOPBIT 0\n#define MW_TTYS5_PORTMAP 48\n#define MW_TTYS6_BAUDRATE 16\n#define MW_TTYS6_PARITY 0\n#define MW_TTYS6_STOPBIT 0\n#define MW_TTYS6_PORTMAP 48\n#define MW_PWM_MAIN_ONESHOT 0\n#define MW_PWM_MAIN_FREQUENCY 400\n#define MW_PWM_AUX_ONESHOT 0\n#define MW_PWM_AUX_FREQUENCY 200\n#define MW_PWM_CH1_FAILSAFE 900\n#define MW_PWM_CH1_DISARMED 900\n#define MW_PWM_CH2_FAILSAFE 900\n#define MW_PWM_CH2_DISARMED 900\n#define MW_PWM_CH3_FAILSAFE 900\n#define MW_PWM_CH3_DISARMED 900\n#define MW_PWM_CH4_FAILSAFE 900\n#define MW_PWM_CH4_DISARMED 900\n#define MW_PWM_CH5_FAILSAFE 900\n#define MW_PWM_CH5_DISARMED 900\n#define MW_PWM_CH6_FAILSAFE 900\n#define MW_PWM_CH6_DISARMED 900\n#define MW_PWM_CH7_FAILSAFE 900\n#define MW_PWM_CH7_DISARMED 900\n#define MW_PWM_CH8_FAILSAFE 900\n#define MW_PWM_CH8_DISARMED 900\n#define MW_PWM_AUX_CH1_FAILSAFE 900\n#define MW_PWM_AUX_CH1_DISARMED 900\n#define MW_PWM_AUX_CH2_FAILSAFE 900\n#define MW_PWM_AUX_CH2_DISARMED 900\n#define MW_PWM_AUX_CH3_FAILSAFE 900\n#define MW_PWM_AUX_CH3_DISARMED 900\n#define MW_PWM_AUX_CH4_FAILSAFE 900\n#define MW_PWM_AUX_CH4_DISARMED 900\n#define MW_PWM_AUX_CH5_FAILSAFE 900\n#define MW_PWM_AUX_CH5_DISARMED 900\n#define MW_PWM_AUX_CH6_FAILSAFE 900\n#define MW_PWM_AUX_CH6_DISARMED 900\n#define MW_HRT_CONSTRAINT 0\n#define MW_SEM_WATERMARK 20\n#define MW_DATAVERSION 2016.02\n#define MW_EXTMODEPROTOCOLINFO_XCPONSERIAL_HOSTINTERFACE Simulink\n#define MW_EXTMODEPROTOCOLINFO_XCPONSERIAL_LOGGINGBUFFERAUTO 1\n#define MW_EXTMODEPROTOCOLINFO_XCPONSERIAL_LOGGINGBUFFERSIZE 1024\n#define MW_EXTMODEPROTOCOLINFO_XCPONSERIAL_LOGGINGBUFFERNUM 3\n#define MW_EXTMODEPROTOCOLINFO_XCPONSERIAL_MAXCONTIGSAMPLES 10\n#define MW_ENABLE_HITL 0\n#define MW_SIMULATOR 0\n#define MW_CONNECTEDIOSERIALPORT /dev/ttyACM0\n#define MW_CONNECTEDIOSERIALPORT_CHECKBOX 0\n#define MW_CONNECTEDIOHOSTCOMPORT COM6\n#define MW_SIMULINKIO_MODELTRANSPORTDATAFCN px4.internal.ConnectedIO.getConfigsetInfo\n#define MW_SIMULINKIO_SERVERDEPLOYFCN px4.internal.ConnectedIO.buildAndDeployPX4IOServer\n#define MW_I2C_BUS1SPEEDKHZ_INDEX 0\n#define MW_I2C_BUS1SPEEDKHZ 100\n#define MW_IOBLOCKSMODE deployed\n\n#endif /* __MW_TARGET_HARDWARE_RESOURCES_H__ */\n\n#endif\n\n#endif\n"},{"name":"MW_uORB_Read.cpp","type":"source","group":"legacy","path":"C:\\ProgramData\\MATLAB\\SupportPackages\\R2022a\\toolbox\\target\\supportpackages\\px4\\src","tag":"","groupDisplay":"Other files","code":"/* Copyright 2018-2020 The MathWorks, Inc. */\n\n#include \"nuttxinitialize.h\"\n#include \"MW_PX4_TaskControl.h\"\n#include \"MW_uORB_Read.h\"\n\n#define DEBUG 0\n\nvoid uORB_read_initialize(orb_metadata_t* orbData, pollfd_t* eventStructObj) {\n    int fd = orb_subscribe(orbData);\n    eventStructObj->fd = fd;\n    eventStructObj->events = POLLIN;\n#if DEBUG\n    PX4_INFO(\"* Subscribed to topic: %s (fd = %d)*\\n\", orbData->o_name, fd);\n#endif\n}\n\nboolean_T uORB_read_step(orb_metadata_t* orbData,\n                         pollfd_t* eventStructObj,\n                         void* busData,\n                         boolean_T blockingMode,\n                         double blockingTimeout) {\n    boolean_T updated = 0;\n    bool isUpdated = false;\n    if (blockingMode) {\n#if defined(MW_PX4_NUTTX_BUILD)\n        int poll_ret = px4_poll(eventStructObj, 1, blockingTimeout);\n        static int error_counter = 0;\n        if (poll_ret == 0) {\n#if DEBUG\n            PX4_ERR(\"Got no data within %.9lf second\", blockingTimeout / 1000.0);\n#endif\n        } else if (poll_ret < 0) {\n            if (error_counter < 10 || error_counter % 500 == 0) {\n                /* use a counter to prevent flooding and slowing the system down */\n#if DEBUG\n                PX4_ERR(\"ERROR return value from poll(): %d\", poll_ret);\n#endif\n            }\n            error_counter++;\n\n        } else {\n            if (eventStructObj->revents & POLLIN) {\n                orb_copy(orbData, eventStructObj->fd, busData);\n                updated = 1;\n            }\n        }\n#elif defined(MW_PX4_POSIX_BUILD)\n        double count = 0;\n        /* The blocking timeout mentioned in the block mask is seconds but\n         * system object converts it to milliseconds*/\n        while (count < blockingTimeout) {\n            // Sleep for 1 ms and then again check if\n            // uORB topic is updated\n            usleep(1000);\n            orb_check(eventStructObj->fd, &isUpdated);\n            if (isUpdated) {\n                orb_copy(orbData, eventStructObj->fd, busData);\n                break;\n            }\n            count++;\n        }\n\n        updated = isUpdated ? 1 : 0;\n#endif\n    } else {\n        orb_check(eventStructObj->fd, &isUpdated);\n        if (isUpdated) {\n            orb_copy(orbData, eventStructObj->fd, busData);\n        }\n        updated = isUpdated ? 1 : 0;\n    }\n\n    return updated;\n}\n\nvoid uORB_read_terminate(const pollfd_t* eventStructObj) {\n    orb_unsubscribe(eventStructObj->fd);\n}\n"},{"name":"MW_uORB_busstruct_conversion.h","type":"header","group":"other","path":"D:\\simulink\\PX4QGCGPSCtrl\\work\\code\\px42LoopCtrQGC20220313_ert_rtw","tag":"","groupDisplay":"Other files","code":"#ifndef _MW_UORB_BUSSTRUCT_CONVERSION_H_\r\n#define _MW_UORB_BUSSTRUCT_CONVERSION_H_\r\n\r\n#include <uORB/topics/actuator_outputs.h>\r\n#include <uORB/topics/input_rc.h>\r\n#include <uORB/topics/vehicle_odometry.h>\r\n\r\ntypedef struct actuator_outputs_s  px4_Bus_actuator_outputs ;\r\ntypedef struct input_rc_s  px4_Bus_input_rc ;\r\ntypedef struct vehicle_odometry_s  px4_Bus_vehicle_odometry ;\r\n\r\n#endif\r\n"},{"name":"daemon_checksum.c","type":"source","group":"legacy","path":"C:\\ProgramData\\MATLAB\\SupportPackages\\R2022a\\toolbox\\target\\shared\\externalmode_daemon\\src","tag":"","groupDisplay":"Other files","code":"#include<daemon_checksum_prereq.h>\n#include<daemon_checksum.h>\n\nconst uint8_T CRC_TABLE[] FLASH_QUALIFIER =\n{\n0x00, 0x1D, 0x3A, 0x27, 0x74, 0x69, 0x4E, 0x53, 0xE8, 0xF5, 0xD2, 0xCF, 0x9C, 0x81, 0xA6, 0xBB,\n0xCD, 0xD0, 0xF7, 0xEA, 0xB9, 0xA4, 0x83, 0x9E, 0x25, 0x38, 0x1F, 0x02, 0x51, 0x4C, 0x6B, 0x76,\n0x87, 0x9A, 0xBD, 0xA0, 0xF3, 0xEE, 0xC9, 0xD4, 0x6F, 0x72, 0x55, 0x48, 0x1B, 0x06, 0x21, 0x3C,\n0x4A, 0x57, 0x70, 0x6D, 0x3E, 0x23, 0x04, 0x19, 0xA2, 0xBF, 0x98, 0x85, 0xD6, 0xCB, 0xEC, 0xF1,\n0x13, 0x0E, 0x29, 0x34, 0x67, 0x7A, 0x5D, 0x40, 0xFB, 0xE6, 0xC1, 0xDC, 0x8F, 0x92, 0xB5, 0xA8,\n0xDE, 0xC3, 0xE4, 0xF9, 0xAA, 0xB7, 0x90, 0x8D, 0x36, 0x2B, 0x0C, 0x11, 0x42, 0x5F, 0x78, 0x65,\n0x94, 0x89, 0xAE, 0xB3, 0xE0, 0xFD, 0xDA, 0xC7, 0x7C, 0x61, 0x46, 0x5B, 0x08, 0x15, 0x32, 0x2F,\n0x59, 0x44, 0x63, 0x7E, 0x2D, 0x30, 0x17, 0x0A, 0xB1, 0xAC, 0x8B, 0x96, 0xC5, 0xD8, 0xFF, 0xE2,\n0x26, 0x3B, 0x1C, 0x01, 0x52, 0x4F, 0x68, 0x75, 0xCE, 0xD3, 0xF4, 0xE9, 0xBA, 0xA7, 0x80, 0x9D,\n0xEB, 0xF6, 0xD1, 0xCC, 0x9F, 0x82, 0xA5, 0xB8, 0x03, 0x1E, 0x39, 0x24, 0x77, 0x6A, 0x4D, 0x50,\n0xA1, 0xBC, 0x9B, 0x86, 0xD5, 0xC8, 0xEF, 0xF2, 0x49, 0x54, 0x73, 0x6E, 0x3D, 0x20, 0x07, 0x1A,\n0x6C, 0x71, 0x56, 0x4B, 0x18, 0x05, 0x22, 0x3F, 0x84, 0x99, 0xBE, 0xA3, 0xF0, 0xED, 0xCA, 0xD7,\n0x35, 0x28, 0x0F, 0x12, 0x41, 0x5C, 0x7B, 0x66, 0xDD, 0xC0, 0xE7, 0xFA, 0xA9, 0xB4, 0x93, 0x8E,\n0xF8, 0xE5, 0xC2, 0xDF, 0x8C, 0x91, 0xB6, 0xAB, 0x10, 0x0D, 0x2A, 0x37, 0x64, 0x79, 0x5E, 0x43,\n0xB2, 0xAF, 0x88, 0x95, 0xC6, 0xDB, 0xFC, 0xE1, 0x5A, 0x47, 0x60, 0x7D, 0x2E, 0x33, 0x14, 0x09,\n0x7F, 0x62, 0x45, 0x58, 0x0B, 0x16, 0x31, 0x2C, 0x97, 0x8A, 0xAD, 0xB0, 0xE3, 0xFE, 0xD9, 0xC4\n};\n\n/* Function: verify_crc8_j1850\n * Abstract:\n *  Validate data using the crc8 checksum.\n *  Checksum is located at the last byte +1 in the sequence.\n *  \tverify_crc8_j1850(buffer, 8, 8), means the checksum for\n *  \t\tbuffer[8]-buffer[15] is at buffer[16]\n * CRC Word is 8bit.\n */\nboolean_T verify_crc8_j1850(const uint8_T *p, uint16_T offset, uint16_T length)\n{   \n\tif ( p[offset+length] == calculate_crc8_j1850(p, offset, length) )\n\t\treturn TRUE;\n\telse\n\t\treturn FALSE;\n}\n\n/* Function: calculate_crc8_j1850\n * Abstract: calculate the crc for a contigous block of data\n *  \n * CRC Word is 8bit.\n */\nuint8_T calculate_crc8_j1850(const uint8_T *p, uint16_T offset, uint16_T length)\n{\n\treturn calculate_crc8_j1850_withInit(p, (uint8_T)0xFF, offset, length) ;\n}\n\n/* Function: calculate_crc8_j1850_withInit\n * Abstract: Use this when you want to combine crcs of multiple discrete\n * buffers.\n *  \n * CRC Word is 8bit.\n */\nuint8_T calculate_crc8_j1850_withInit(const uint8_T *p, uint8_T initVal, uint16_T offset, uint16_T length)\n{\n\tuint8_T crc = initVal;\n\tunsigned int i;\n\n    for (i=offset; i < (offset + length); i++)\n\t\tcrc = CRC8_TABLE_J1850(crc ^ p[i]);\n    \n\treturn crc ;\n}\n\n/* Function: calculate_crc8_j1850_bytePacked\n * Abstract: calculate the crc for a contigous block of data\n * \n * CRC Word is 8bit.\n */\nuint8_T calculate_crc8_j1850_bytePacked(const uint8_T *p, uint16_T offset, uint16_T length)\n{\n\treturn calculate_crc8_j1850_withInit_bytePacked(p, (uint8_T)0xFF, offset, length) ;\n}\n\n/* Function: calculate_crc8_j1850_withInit_bytePacked\n * Abstract: Same as calculate_crc8_j1850, but, is intended for targets with 16bit words\n *           AND packed data.\n * Parameters:\n *  offset - offset from base in 8bit increments.\n *  length - each unit length is 8bit\n *  \n * CRC Word is 8bit.\n */\nuint8_T calculate_crc8_j1850_withInit_bytePacked(const uint8_T *p, uint8_T initVal, uint16_T offset, uint16_T length)\n{\n\tuint8_T crc = initVal;\n\tunsigned int i;\n\t\n\tfor (i = offset; i < offset+length; i++)\n\t\tcrc = CRC8_TABLE_J1850( (crc ^ (p[i>>1] >> 8*(i&0x1))) & 0x0FF );   //equivalent to p[index/2] >> 8*(index%2)\n    \n\treturn crc ;\n}\n"},{"name":"ext_svr_daemon.c","type":"source","group":"legacy","path":"C:\\ProgramData\\MATLAB\\SupportPackages\\R2022a\\toolbox\\target\\shared\\externalmode_daemon\\src","tag":"","groupDisplay":"Other files","code":"/*\n * Copyright 1994-2021 The MathWorks, Inc.\n *\n * File: ext_svr.c     \n *\n * Abstract:\n *  External mode server interface (TCPIP example).  Provides functions\n *  that get called by main routine (model-name.c):\n *    o ExtParseArgsAndInitUD:  parse args and create UserData\n *    o ExtWaitForStartPkt:     return true if waiting for host to start\n *    o rt_ExtModeInit:         external mode initialization\n *    o rt_ExtModeSleep:        pause the process\n *    o rt_PktServerWork:       server for setting/getting packets from host\n *    o rt_PktServer:           server dispatcher - for multi-tasking targets\n *    o rt_UploadServerWork:    server for setting data upload packets on host\n *    o rt_UploadServer:        server dispatcher - for multi-tasking targets\n *    o rt_ExtModeShutdown:     external mode termination\n *\n *  Parameter downloading and data uploading supported for single and\n *  multi-tasking targets.\n */\n\n/*****************\n * Include files *\n *****************/\n\n/*ANSI C headers*/\n#ifndef EXTMODE_DISABLEPRINTF  \n#include <stdio.h>\n#endif\n\n#include <stdlib.h>\n#include <string.h>\n\n#if defined(VXWORKS)\n /*VxWorks headers*/\n# include <selectLib.h>\n# include <sockLib.h>\n# include <inetLib.h>\n# include <ioLib.h>\n# include <taskLib.h>\n#endif\n\n/*Real Time Workshop headers*/\n#include \"rtwtypes.h\"\n#include \"multiword_types.h\"\n#include \"rtw_extmode.h\"\n\n#include \"ext_types.h\"\n#include \"ext_share.h\"\n#include \"ext_test.h\"\n#include \"ext_svr_transport.h\"\n#include \"updown.h\"\n#include \"updown_util.h\"\n#include \"dt_info.h\"\n#include \"daemon_checksum.h\"\n\n/*Uncomment to test 4 byte reals*/\n/*#define real_T float*/\n\n/***********************\n * Logical definitions *\n ***********************/\n#if (!defined(__cplusplus))\n#  ifndef false\n#   define false                       (0U)\n#  endif\n#  ifndef true\n#   define true                        (1U)\n#  endif\n#endif\n\n/**********************\n * External Variables *\n **********************/\nextern int_T           volatile startModel;\nextern TargetSimStatus volatile modelStatus;\n#ifdef VXWORKS\nextern SEM_ID uploadSem;\nextern SEM_ID pktSem;\n#endif\nextern boolean_T host_upstatus_is_uploading;\n\n/********************\n * Global Variables *\n ********************/\n\n/*\n * This defines the size of each data chunk (in bytes) that the\n * daemon acknowledgement scheme uses for large data.\n * In short, the target waits for these many bytes. Once it\n * receives these, it sends back an ack. The daemon detects this\n * ack and sends the next chunk.\n */\n#ifndef CHUNK_SIZE\n\t#define CHUNK_SIZE 8\n#endif\n#ifndef MAX_RETRIES\n\t#define MAX_RETRIES 90000\n#endif\n\n/*\n *  This is a 8bit ID associated with each chunk for identification\n *  The host generates this number and adds it to each chunk to be\n * transmitted.\n *  The target can now use this number to keep track of the chunks\n * it receives and add it to the ack it sends back to the target\n */\nint seqId = 0;\n\n/*\n * Serves as a buffer to hold the daemon protocol chunks\n * 2 extra bytes are added to accomodate the seqId and\n * the checksum.\n */ \nstatic char_T chunkBuffer[CHUNK_SIZE+2];\n\n/*\n * Flags.\n */\nPRIVATE boolean_T   connected       = false;\nPRIVATE boolean_T   commInitialized = false;\nboolean_T gblSetParamPktReceived = false;\n\n/*\n * Pointer to opaque user data (defined by ext_svr_transport.c).\n */\nPRIVATE ExtUserData *extUD          = NULL;\n\n/*\n * Buffer used to receive packets.\n */\nPRIVATE int_T pktBufSize = 0;\nPRIVATE char  *pktBuf    = NULL;\n\n\n#ifndef EXTMODE_DISABLESIGNALMONITORING\n#ifndef EXTMODE_DISABLEPRINTF \nPRIVATE char ERRMSG_PROCESSSELECTSIGNAL[] = \n            \"\\nError in UploadLogInfoInit(). Most likely a memory\\n\"\n            \"allocation error or an attempt to re-initialize the\\n\"\n            \"signal selection during the data logging process\\n\"\n            \"(i.e., multiple EXT_SELECT_SIGNAL packets were received\\n\"\n            \"before the logging session terminated or an\\n\"\n            \"EXT_CANCEL_LOGGING packet was received)\\n\";\n\nPRIVATE char ERRMSG_PROCESSSELECTTRIGGER[] = \n            \"\\nError in UploadInitTrigger(). Most likely a memory\\n\"\n            \"allocation error or an attempt to re-initialize the\\n\"\n            \"trigger selection during the data logging process\\n\"\n            \"(i.e., multiple EXT_SELECT_TRIGGER packets were received\\n\"\n            \"before the logging session terminated or an\\n\"\n            \"EXT_CANCEL_LOGGING packet was received)\\n\";\n#else\nPRIVATE char ERRMSG_PROCESSSELECTSIGNAL[] = \"\";\nPRIVATE char ERRMSG_PROCESSSELECTTRIGGER[] = \"\";\n#endif\n#endif\n\nPRIVATE boolean_T SendPktHdrToHost(\n    const ExtModeAction action,\n    const int           size);\n\n\n/*******************\n * Local Functions *\n *******************/\n\n/* Function: GrowRecvBufIfNeeded ===============================================\n * Abstract:\n *  Allocate or increase the size of buffer for receiving packets from target.\n */\nPRIVATE boolean_T GrowRecvBufIfNeeded(const int pktSize)\n{\n    if (pktSize > pktBufSize) {\n        if (pktBuf != NULL) {\n            free(pktBuf);\n            pktBufSize = 0;\n        }\n\n        pktBuf = (char *)malloc(pktSize);\n        if (pktBuf == NULL) return(EXT_ERROR);\n\n        pktBufSize = pktSize;\n    }\n    return(EXT_NO_ERROR);\n} /* end GrowRecvBufIfNeeded */\n\n\n/* Function: GetPktHdr =========================================================\n * Abstract:\n *  Attempts to retrieve a packet header from the host.  If a header is in \n *  fact retrieved, the reference arg, 'hdrAvail' will be returned as true.\n *\n *  EXT_NO_ERROR is returned on success, EXT_ERROR is returned on failure.\n *\n * NOTES:\n *  o It is not necessarily an error for 'hdrAvail' to be returned as false.\n *    It typically means that we were polling for packets and none were\n *    available.\n */\nPRIVATE boolean_T GetPktHdr(PktHeader *pktHdr, boolean_T *hdrAvail)\n{\n    int_T     nGot      = 0; /* assume */\n    int_T     nGotTotal = 0;\n    int_T     pktSize   = sizeof(PktHeader);\n    boolean_T error     = EXT_NO_ERROR;\n    \n    /* Get the header. */\n    while(nGotTotal < pktSize) {\n        error = ExtGetHostPkt(extUD,\n            pktSize - nGotTotal, &nGot, (char_T *)((char_T *)pktHdr + nGotTotal));\n        if (error) goto EXIT_POINT;\n\n\t\tnGotTotal += nGot;\n\n        if (nGotTotal == 0) break;\n    }\n    assert((nGot == 0) || (nGotTotal == pktSize));\n\nEXIT_POINT:\n    *hdrAvail = (boolean_T)(nGot > 0);\n    return(error);\n} /* end GetPktHdr */\n\n/* Function: GetPktHdrUsingChecksum =========================================================\n * Abstract:\n *  Attempts to retrieve a packet header from the host.  If a header is in \n *  fact retrieved, the reference arg, 'hdrAvail' will be returned as true.\n *\n *  EXT_NO_ERROR is returned on success, EXT_ERROR is returned on failure.\n *\n * NOTES:\n *  o It is not necessarily an error for 'hdrAvail' to be returned as false.\n *    It typically means that we were polling for packets and none were\n *    available.\n */\nPRIVATE boolean_T GetPktHdrUsingChecksum(PktHeader *pktHdr, boolean_T *hdrAvail)\n{\n    int_T     nGot      = 0; /* assume */\n    int_T     nGotTotal = 0;\n    int_T     pktSize   = sizeof(PktHeader);\n    boolean_T error     = EXT_NO_ERROR;\n\t\n\tint32_T retries = 0;\n\t\n\tint_T bufferSize = pktSize + 2;\n\tstatic char bufr[10];\n    \n    /* Get the header. */\n    while(nGotTotal < bufferSize) {\n        error = ExtGetHostPkt(extUD,\n            1, &nGot, (char_T*)((char_T*)bufr + nGotTotal));\n        if (error) goto EXIT_POINT;\n\n\t\tnGotTotal += nGot;\n\t\tif(nGotTotal == 0)\n\t\t\tbreak;\n\t\t\n\t\tretries += 1;\n\t\t\n\t\tif(retries >= MAX_RETRIES){\n\t\t\tSendPktHdrToHost((ExtModeAction)0x000000ED, seqId);\n\t\t\tnGot = 0;\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tif(nGotTotal == bufferSize){\n\t\t\tif(verify_crc8_j1850((uint8_T *)bufr, 0, 9)){\n\t\t\t\tif( seqId == (uint8_T)bufr[pktSize] ){\n\t\t\t\t\tSendPktHdrToHost((ExtModeAction)0x000000EE, seqId);\n\t\t\t\t\t(void)memcpy(pktHdr, bufr, pktSize);\n\t\t\t\t\tseqId+=1;\n\t\t\t\t\tseqId&=0x00FF;\n\t\t\t\t} else {\n\t\t\t\t\t//nGotTotal = 0;\n\t\t\t\t\tnGot = 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tSendPktHdrToHost((ExtModeAction)0x000000EF, seqId);\n\t\t\t\tnGot = 0;\n\t\t\t}\n\t\t}\n\t}\n\t\n    //assert((nGot == 0) || (nGotTotal == pktSize));\n\nEXIT_POINT:\n    *hdrAvail = (boolean_T)(nGot > 0);\n    return(error);\n} /* end GetPktHdrUsingChecksum */\n\n\n/* Function: ClearPkt ==========================================================\n * Abstract:\n *  Remove the data from the communication line one byte at a time.  This\n *  function is called when there was not enough memory to receive an entire\n *  packet.  Since the data was never received, it must be discarded so that\n *  other packets can be sent.\n */\nPRIVATE void ClearPkt(const int pktSize)\n{\n    int_T     nGot;\n    boolean_T error     = EXT_NO_ERROR;\n    int_T     nGotTotal = 0;\n    static    char buffer;\n\n    /* Get and discard the data one char at a time. */\n    while(nGotTotal < pktSize) {\n        error = ExtGetHostPkt(extUD, 1, &nGot, (char_T *)&buffer);\n        if (error) {\n#ifndef EXTMODE_DISABLEPRINTF            \n\t    fprintf(stderr,\"ExtGetHostPkt() failed.\\n\");\n#endif\n            goto EXIT_POINT;\n\t}\n\n\tnGotTotal += nGot;\n    }\n\nEXIT_POINT:\n    return;\n\n} /* end ClearPkt */\n\n\n/* Function: GetPkt ============================================================\n * Abstract:\n *  Receive nBytes from the host.  Return a buffer containing the bytes or\n *  NULL if an error occurs.  Note that the pointer returned is that of the\n *  global pktBuf.  If the buf needs to be grown to accommodate the package,\n *  it is realloc'd.  This function will try to get the requested number\n *  of bytes indefinitely - it is assumed that the data is either already there,\n *  or will show up in a \"reasonable\" amount of time.\n */\nPRIVATE const char *GetPkt(const int pktSize)\n{\n    int_T     nGot;\n    boolean_T error     = EXT_NO_ERROR;\n    int_T     nGotTotal = 0;\n\n    error = GrowRecvBufIfNeeded(pktSize);\n    if (error != EXT_NO_ERROR) {\n#ifndef EXTMODE_DISABLEPRINTF            \n        fprintf(stderr,\"Previous pkt from host thrown away due to lack of memory.\\n\");\n#endif\n        ClearPkt(pktSize);\n        goto EXIT_POINT;\n    }\n    \n    /* Get the data. */\n    while(nGotTotal < pktSize) {\n        error = ExtGetHostPkt(extUD,\n            pktSize - nGotTotal, &nGot, (char_T *)(pktBuf + nGotTotal));\n        if (error) {\n#ifndef EXTMODE_DISABLEPRINTF                \n\t    fprintf(stderr,\"ExtGetHostPkt() failed.\\n\");\n#endif\n            goto EXIT_POINT;\n\t}\n\n\tnGotTotal += nGot;\n    }\n\nEXIT_POINT:\n    return((error == EXT_NO_ERROR) ? pktBuf : NULL);\n} /* end GetPkt */\n\n\n#ifndef EXTMODE_DISABLESIGNALMONITORING\n/* Forward declaration */\nvoid UploadServerWork(int32_T, int_T numSampTimes);\n#endif\n\n/* Function: DisconnectFromHost ================================================\n * Abstract:\n *  Disconnect from the host.\n */\nPRIVATE void DisconnectFromHost(int_T numSampTimes)\n{\n    int i;\n\n    for (i=0; i<NUM_UPINFOS; i++) {\n        UploadPrepareForFinalFlush(i);\n\n#if defined(VXWORKS)\n        /*\n         * UploadPrepareForFinalFlush() has already called semGive(uploadSem)\n         * two times.  Now the server thread will wait until the upload thread\n         * has processed all of the data in the buffers for the final upload\n         * and exhausted the uploadSem semaphores.  If the server thread\n         * attempts to call UploadServerWork() while the upload thread is in\n         * the middle of processing the buffers, the target code may crash\n         * with a NULL pointer exception (the buffers are destroyed after\n         * calling UploadLogInfoTerm).\n         */\n        while(semTake(uploadSem, NO_WAIT) != ERROR) {\n            semGive(uploadSem);\n            taskDelay(1000);\n        }\n#else\n#ifndef EXTMODE_DISABLESIGNALMONITORING\n        if (host_upstatus_is_uploading) {\n            UploadServerWork(i, numSampTimes);\n        }\n#endif\n#endif\n\n        UploadLogInfoTerm(i, numSampTimes);\n    }\n    \n    connected       = false;\n    commInitialized = false;\n\tseqId\t\t\t= 0;\n    \n    ExtCloseConnection(extUD);\n} /* end DisconnectFromHost */\n\n\n/* Function: ForceDisconnectFromHost ===========================================\n * Abstract:\n *  Force a disconnect from the host.  This is not a graceful shutdown and\n *  should only be used when the integrity of the external mode connection\n *  is in question.  To shutdown the connection gracefully, use\n *  DisconnectFromHost().\n */\nPRIVATE void ForceDisconnectFromHost(int_T numSampTimes)\n{\n    int i;\n    connected       = false;\n    commInitialized = false;\n\tseqId \t\t\t= 0;\n\n    for (i=0; i<NUM_UPINFOS; i++) {\n        UploadEndLoggingSession(i, numSampTimes);\n    }\n\n    ExtForceDisconnect(extUD);\n} /* end ForceDisconnectFromHost */\n\n\n/* Function: ProcessConnectPkt =================================================\n * Abstract:\n *  Process the EXT_CONNECT packet and send response to host.\n */\nPRIVATE boolean_T ProcessConnectPkt(RTWExtModeInfo *ei)\n{\n    int_T                   nSet;\n    PktHeader               pktHdr;\n    int_T                   tmpBufSize;\n    uint32_T                *tmpBuf = NULL;\n    boolean_T               error   = EXT_NO_ERROR;\n    \n    const DataTypeTransInfo *dtInfo    = rteiGetModelMappingInfo(ei);\n    uint_T                  *dtSizes   = dtGetDataTypeSizes(dtInfo);\n    int_T                   nDataTypes = dtGetNumDataTypes(dtInfo);\n\t\n\tuint8_T checksum;\n\n    assert(connected);\n    assert(!commInitialized);\n\n    /*\n     * Send the 1st of two EXT_CONNECT_RESPONSE packets to the host. \n     * The packet consists purely of the pktHeader.  In this special\n     * case the pktSize actually contains the number of bits per byte\n     * (not always 8 - see TI compiler for C30 and C40).\n     */\n    pktHdr.type = (uint32_T)EXT_CONNECT_RESPONSE;\n    pktHdr.size = (uint32_T)8; /* 8 bits per byte */\n\n    error = ExtSetHostPkt(extUD,sizeof(pktHdr),(char_T *)&pktHdr,&nSet);\n    if (error || (nSet != sizeof(pktHdr))) {\n#ifndef EXTMODE_DISABLEPRINTF            \n        fprintf(stderr,\n            \"ExtSetHostPkt() failed for 1st EXT_CONNECT_RESPONSE.\\n\");\n#endif\n        goto EXIT_POINT;\n    }\n\t\n    /* Send 2nd EXT_CONNECT_RESPONSE packet containing the following \n     * fields:\n     *\n     * CS1 - checksum 1 (uint32_T)\n     * CS2 - checksum 2 (uint32_T)\n     * CS3 - checksum 3 (uint32_T)\n     * CS4 - checksum 4 (uint32_T)\n     *\n     * intCodeOnly   - flag indicating if target is integer only (uint32_T)\n     * \n     * MWChunkSize   - multiword data type chunk size on target (uint32_T)\n     * \n     * targetStatus  - the status of the target (uint32_T)\n     *\n     * nDataTypes    - # of data types        (uint32_T)\n     * dataTypeSizes - 1 per nDataTypes       (uint32_T[])\n     */\n\n    {\n        int nPktEls    = 4 +                        /* checkSums       */\n                         1 +                        /* intCodeOnly     */\n                         1 +                        /* MW chunk size   */\n                         1 +                        /* targetStatus    */\n                         1 +                        /* nDataTypes      */\n                         dtGetNumDataTypes(dtInfo); /* data type sizes */\n\n        tmpBufSize = nPktEls * sizeof(uint32_T);\n        tmpBuf     = (uint32_T *)malloc(tmpBufSize);\n        if (tmpBuf == NULL) {\n            error = EXT_ERROR; goto EXIT_POINT;\n        }\n    }\n    \n    /* Send packet header. */\n    pktHdr.type = EXT_CONNECT_RESPONSE;\n    pktHdr.size = tmpBufSize;\n\n    error = ExtSetHostPkt(extUD,sizeof(pktHdr),(char_T *)&pktHdr,&nSet);\n    if (error || (nSet != sizeof(pktHdr))) {\n#ifndef EXTMODE_DISABLEPRINTF            \n        fprintf(stderr,\n            \"ExtSetHostPkt() failed for 2nd EXT_CONNECT_RESPONSE.\\n\");\n#endif\n        goto EXIT_POINT;\n    }\n   \n    /* Checksums, target status & SL_DOUBLESize. */\n    tmpBuf[0] = rteiGetChecksum0(ei);\n    tmpBuf[1] = rteiGetChecksum1(ei);\n    tmpBuf[2] = rteiGetChecksum2(ei);\n    tmpBuf[3] = rteiGetChecksum3(ei);\n\n#if INTEGER_CODE == 0\n    tmpBuf[4] = (uint32_T)0;\n#else\n    tmpBuf[4] = (uint32_T)1;\n#endif\n\n    tmpBuf[5] = (uint32_T)sizeof(uchunk_T);\n    \n    tmpBuf[6] = (uint32_T)modelStatus;\n\n    /* nDataTypes and dataTypeSizes */\n    {        \n        int i;\n        tmpBuf[7] = (uint32_T)nDataTypes;\n        for (i=0; i<nDataTypes; i++) {\n            tmpBuf[8+i] = (uint32_T)dtSizes[i];\n        }\n    }\n    \n    /* Send the packet. */\n    error = ExtSetHostPkt(extUD,tmpBufSize,(char_T *)tmpBuf,&nSet);\n    if (error || (nSet != tmpBufSize)) {\n#ifndef EXTMODE_DISABLEPRINTF            \n        fprintf(stderr,\n            \"ExtSetHostPkt() failed.\\n\");\n#endif\n        goto EXIT_POINT;\n    }\n\t\n\t/* Send the checksum. */\n\tchecksum = calculate_crc8_j1850(tmpBuf, 0, tmpBufSize);\n\terror = ExtSetHostPkt(extUD,sizeof(uint8_T),(char_T *)&checksum,&nSet);\n\n    commInitialized = true;\n\nEXIT_POINT:\n    free(tmpBuf);\n    return(error);\n} /* end ProcessConnectPkt */\n\n\n/* Function: SendPktHdrToHost ==================================================\n * Abstract:\n *  Send a packet header to the host.\n */\nPRIVATE boolean_T SendPktHdrToHost(\n    const ExtModeAction action,\n    const int           size)  /* # of bytes to follow pkt header */\n{\n    int_T     nSet;\n    PktHeader pktHdr;\n    boolean_T error = EXT_NO_ERROR;\n\n    pktHdr.type = (uint32_T)action;\n    pktHdr.size = size;\n\n    error = ExtSetHostPkt(extUD,sizeof(pktHdr),(char_T *)&pktHdr,&nSet);\n    if (error || (nSet != sizeof(pktHdr))) {\n        error = EXT_ERROR;\n#ifndef EXTMODE_DISABLEPRINTF            \n        fprintf(stderr,\"ExtSetHostPkt() failed.\\n\");\n#endif\n        goto EXIT_POINT;\n    }\n\nEXIT_POINT:\n    return(error);\n} /* end SendPktHdrToHost */\n\n\n/* Function: SendPktDataToHost =================================================\n * Abstract:\n *  Send packet data to host. You are responsible for sending a header\n *  prior to sending the header.\n */\nPRIVATE boolean_T SendPktDataToHost(const char *data, const int size)\n{\n    int_T     nSet;\n    boolean_T error = EXT_NO_ERROR;\n\n    error = ExtSetHostPkt(extUD,size,data,&nSet);\n    if (error || (nSet != size)) {\n        error = EXT_ERROR;\n#ifndef EXTMODE_DISABLEPRINTF            \n        fprintf(stderr,\"ExtSetHostPkt() failed.\\n\");\n#endif\n        goto EXIT_POINT;\n    }\n\nEXIT_POINT:\n    return(error);\n} /* end SendPktDataToHost */\n\n\n/* Function: SendPktToHost =====================================================\n * Abstract:\n *  Send a packet to the host.  Packets can be of two forms:\n *      o packet header only\n *          the type is used as a flag to notify Simulink of an event\n *          that has taken place on the target (event == action == type)\n *      o pkt header, followed by data\n */\nPUBLIC boolean_T SendPktToHost(\n    const ExtModeAction action,\n    const int           size,  /* # of bytes to follow pkt header */\n    const char          *data)\n{\n    boolean_T error = EXT_NO_ERROR;\n\t\n\tuint8_T checksum;\n\tif(data != NULL)\n\t\tchecksum = calculate_crc8_j1850( (uint8_T *)data, 0, size );\n    \n#ifdef VXWORKS\n    semTake(pktSem, WAIT_FOREVER);\n#endif\n\n    error = SendPktHdrToHost(action,size);\n    if (error != EXT_NO_ERROR) goto EXIT_POINT;\n\n    if (data != NULL) {\n        error = SendPktDataToHost(data, size);\n        if (error != EXT_NO_ERROR) goto EXIT_POINT;\n\t\terror = SendPktDataToHost((char *)&checksum, sizeof(uint8_T));\n\t\tif (error != EXT_NO_ERROR) goto EXIT_POINT;\n    } else {\n        assert(size == 0);\n    }\n\nEXIT_POINT:\n#ifdef VXWORKS\n    semGive(pktSem);\n#endif\n    return(error);\n} /* end SendPktToHost */\n\n\n/* Function: ClearPktUsingAck ==================================================\n * Abstract:\n *  Remove the data from the communication line one byte at a time.  This\n *  function is called when there was not enough memory to receive an entire\n *  packet.  Since the data was never received, it must be discarded so that\n *  other packets can be sent.\n */\nPRIVATE void ClearPktUsingAck(const int pktSize)\n{\n    int_T     nGot;\n    boolean_T error     = EXT_NO_ERROR;\n    int_T     nGotTotal = 0;\n\t\n\tint_T     i;\n\tint_T     nChunks   = pktSize/CHUNK_SIZE;\n\tint_T     bytesLeft = pktSize%CHUNK_SIZE;\n\n\tint32_T retries = 0;\n\t\n    /* Get and discard the data one char at a time. */\n\t// Receive chunks here, and reply with ack after receiving each chunk\n    for(i=0; i<nChunks;){\n\t\tretries = 0;\n\t\tnGotTotal = 0;\n\t\twhile(nGotTotal < (CHUNK_SIZE+2)){\n\t\t\terror = ExtGetHostPkt(extUD,\n\t\t\t\t\t\t1,\n\t\t\t\t\t\t&nGot,\n\t\t\t\t\t\t(char_T *)(chunkBuffer + nGotTotal));\n\t\t\tif (error) {\n#ifndef EXTMODE_DISABLEPRINTF                \n\t\t\t\tfprintf(stderr,\"ExtGetHostPkt() failed.\\n\");\n#endif\n            goto EXIT_POINT;\n\t\t\t}\n\t\t\tnGotTotal += nGot;\n\t\t\t\n\t\t\tretries++;\n\t\t\tif(retries >= MAX_RETRIES){\n\t\t\t\tSendPktHdrToHost((ExtModeAction)0x000000ED, seqId);\n\t\t\t\tretries = 0;\tnGotTotal = 0;\n\t\t\t}\n\t\t\t\n\t\t\tif(nGotTotal == (CHUNK_SIZE+2)){\n\t\t\t\tif(verify_crc8_j1850((uint8_T *)chunkBuffer, 0, CHUNK_SIZE+1)){\n\t\t\t\t\tif(seqId ==(uint8_T)chunkBuffer[CHUNK_SIZE]){\n\t\t\t\t\t\tSendPktHdrToHost((ExtModeAction)0x000000EE, seqId);\n\t\t\t\t\t\tseqId++; seqId &= 0x00FF;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tSendPktHdrToHost((ExtModeAction)0x000000EF, seqId);\n\t\t\t\t\tretries = 0;\n\t\t\t\t\tnGotTotal = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t//Receive the bytes left over and reply with an ack after you receive all\n\tnGotTotal=0;\n\tretries = 0;\n\tif(bytesLeft != 0){\n\t\twhile(nGotTotal<(CHUNK_SIZE+2)){\n\t\t\terror = ExtGetHostPkt(extUD,\n\t\t\t\t\t\t1,\n\t\t\t\t\t\t&nGot,\n\t\t\t\t\t\t(char_T *)(chunkBuffer + nGotTotal));\n\t\t\tif (error) {\n#ifndef EXTMODE_DISABLEPRINTF                \n\t\t\t\tfprintf(stderr,\"ExtGetHostPkt() failed.\\n\");\n#endif\n\t\t\t\tgoto EXIT_POINT;\n\t\t\t}\n\t\t\tnGotTotal += nGot;\n\t\t\n\t\t\tretries++;\n\t\t\tif(retries >= MAX_RETRIES){\n\t\t\t\tSendPktHdrToHost(0x000000ED, seqId);\n\t\t\t\tretries = 0;\tnGotTotal = 0;\n\t\t\t}\n\t\t\t\n\t\t\tif(nGotTotal == (CHUNK_SIZE+2)){\n\t\t\t\tif(verify_crc8_j1850((uint8_T *)chunkBuffer, 0, CHUNK_SIZE+1)){\n\t\t\t\t\tif(seqId == (uint8_T)chunkBuffer[CHUNK_SIZE]){\t\t\t\t\t\t\n\t\t\t\t\t\tSendPktHdrToHost((ExtModeAction)0x000000EE, seqId);\n\t\t\t\t\t\tseqId++;\tseqId &= 0x00FF;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tSendPktHdrToHost((ExtModeAction)0x000000EF, seqId);\n\t\t\t\t\tretries = 0;\n\t\t\t\t\tnGotTotal = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\nEXIT_POINT:\n    return;\n\n} /* end ClearPktUsingAck */\n\n\n/* Function: GetPktUsingAck ============================================================\n * Abstract:\n *  Receive nBytes from the host.  Return a buffer containing the bytes or\n *  NULL if an error occurs.  Note that the pointer returned is that of the\n *  global pktBuf.  If the buf needs to be grown to accommodate the package,\n *  it is realloc'd.  This function will try to get the requested number\n *  of bytes indefinitely - it is assumed that the data is either already there,\n *  or will show up in a \"reasonable\" amount of time.\n */\nPRIVATE const char *GetPktUsingAck(const int pktSize)\n{\n    int_T     nGot;\n    boolean_T error     = EXT_NO_ERROR;\n    int_T     nGotTotal = 0;\n\t\n\tint_T     i;\n\tint_T     nChunks   = pktSize/CHUNK_SIZE;\n\tint_T     bytesLeft = pktSize%CHUNK_SIZE;\n\t\n\tint32_T retries = 0;\n\t\n    error = GrowRecvBufIfNeeded(pktSize + 2);\t\t// +2, checksum and seqID\n    if (error != EXT_NO_ERROR) {\n#ifndef EXTMODE_DISABLEPRINTF            \n        fprintf(stderr,\"Previous pkt from host thrown away due to lack of memory.\\n\");\n#endif\n        ClearPktUsingAck(pktSize);\n        goto EXIT_POINT;\n    }\n\t\n\t// Receive chunks here, and reply with ack after receiving each chunk\n\tfor(i=0; i<nChunks; ){\n\t\tnGotTotal = 0;\n\t\tretries = 0;\n\t\twhile(nGotTotal < (CHUNK_SIZE+2) ){\t\t\t// 1 byte checksum per chunk\n\t\t\terror = ExtGetHostPkt(extUD,\n\t\t\t\t\t\t1,\n\t\t\t\t\t\t&nGot,\n\t\t\t\t\t\t(char_T *)(pktBuf + i*CHUNK_SIZE + nGotTotal));\n\t\t\tif (error) {\n#ifndef EXTMODE_DISABLEPRINTF                \n\t\t\t\tfprintf(stderr,\"ExtGetHostPkt() failed.\\n\");\n#endif\n\t\t\t\tgoto EXIT_POINT;\n\t\t\t}\n\t\t\tnGotTotal += nGot;\n\t\t\t\n\t\t\tretries++;\n\t\t\tif(retries >= MAX_RETRIES){\n\t\t\t\tSendPktHdrToHost((ExtModeAction)0x000000ED, seqId);\n\t\t\t\tretries = 0;\n\t\t\t\tnGotTotal = 0;\n\t\t\t}\n\t\t\t\n\t\t\tif(nGotTotal == (CHUNK_SIZE+2)){\n\t\t\t\t if(verify_crc8_j1850((uint8_T *)pktBuf, i*CHUNK_SIZE, CHUNK_SIZE+1)){\n\t\t\t\t\tif(seqId == (uint8_T)pktBuf[i*CHUNK_SIZE+CHUNK_SIZE]){\t\t\t\t\t\t\n\t\t\t\t\t\tSendPktHdrToHost((ExtModeAction)0x000000EE, seqId);\n\t\t\t\t\t\tseqId++;\tseqId &= 0x00FF;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tSendPktHdrToHost((ExtModeAction)0x000000EF, seqId);\n\t\t\t\t\tretries = 0;\n\t\t\t\t\tnGotTotal = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t//Receive the bytes left over and reply with an ack after you receive all\n\tnGotTotal = 0;\n\tretries = 0;\n\tif(bytesLeft != 0){\n\t\twhile(nGotTotal<(CHUNK_SIZE+2)){\n\t\t\terror = ExtGetHostPkt(extUD,\n\t\t\t\t\t\t1,\n\t\t\t\t\t\t&nGot,\n\t\t\t\t\t\t(char_T *)(chunkBuffer + nGotTotal));\n\t\t\tif (error) {\n#ifndef EXTMODE_DISABLEPRINTF                \n\t\t\t\tfprintf(stderr,\"ExtGetHostPkt() failed.\\n\");\n#endif\n\t\t\t\tgoto EXIT_POINT;\n\t\t\t}\n\t\t\tnGotTotal += nGot;\n\t\t\t\n\t\t\tretries++;\n\t\t\tif(retries >= MAX_RETRIES){\n\t\t\t\tSendPktHdrToHost((ExtModeAction)0x000000ED, seqId);\n\t\t\t\tretries = 0;\n\t\t\t\tnGotTotal = 0;\n\t\t\t}\n\t\t\t\n\t\t\tif(nGotTotal == (CHUNK_SIZE+2)){\n\t\t\t\tif(verify_crc8_j1850((uint8_T *)chunkBuffer, 0, CHUNK_SIZE+1)){\n\t\t\t\t\tif(seqId == (uint8_T)chunkBuffer[CHUNK_SIZE]){\t\t\t\t\t\t\n\t\t\t\t\t\tSendPktHdrToHost((ExtModeAction)0x000000EE, seqId);\n\t\t\t\t\t\tmemcpy(pktBuf + i*CHUNK_SIZE, chunkBuffer, bytesLeft);\n\t\t\t\t\t\tseqId++;\tseqId &= 0x00FF;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tSendPktHdrToHost((ExtModeAction)0x000000EF, seqId);\n\t\t\t\t\tretries = 0;\n\t\t\t\t\tnGotTotal = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\nEXIT_POINT:\n    return((error == EXT_NO_ERROR) ? pktBuf : NULL);\n} /* end GetPktUsingAck */\n\n\n/* Function:  SendResponseStatus ===============================================\n *  \n */\nPRIVATE boolean_T SendResponseStatus(const ExtModeAction  response,\n                                     const ResponseStatus status,\n                                     int32_T upInfoIdx)\n{\n    int32_T   msg[2];\n    boolean_T error = EXT_NO_ERROR;\n\n    msg[0] = (int32_T)status;\n    msg[1] = upInfoIdx;\n\n    error = SendPktToHost(response,2*sizeof(int32_T),(char_T *)&msg);\n    return(error);\n\n} /* end SendResponseStatus */\n\n\n#ifndef EXTMODE_DISABLEPARAMETERTUNING\n/* Function: ProcessSetParamPkt ================================================\n * Receive and process the EXT_SETPARAM packet.\n */\nPRIVATE boolean_T ProcessSetParamPkt(RTWExtModeInfo *ei,\n                                     const int pktSize)\n{\n    int32_T    msg;\n    const char *pkt;\n    boolean_T  error = EXT_NO_ERROR;\n\n    /*\n     * Receive packet and set parameters.\n     */\n    pkt = GetPktUsingAck(pktSize);\n    if (pkt == NULL) {\n        msg = (int32_T)NOT_ENOUGH_MEMORY;\n        SendPktToHost(EXT_SETPARAM_RESPONSE,sizeof(int32_T),(char_T *)&msg);\n        error = EXT_ERROR; \n        goto EXIT_POINT;\n    }\n    SetParam(ei, pkt);\n\n    msg = (int32_T)STATUS_OK;\n    error = SendPktToHost(EXT_SETPARAM_RESPONSE,sizeof(int32_T),(char_T *)&msg);\n    if (error != EXT_NO_ERROR) goto EXIT_POINT;\n\nEXIT_POINT:\n    return(error);\n} /* end ProcessSetParamPkt */\n#endif /* ifndef EXTMODE_DISABLEPARAMETERTUNING */\n\n#ifndef EXTMODE_DISABLEPARAMETERTUNING \n/* Function: ProcessGetParamsPkt ===============================================\n *  Respond to the hosts request for the parameters by gathering up all the\n *  params and sending them to the host.\n */\nPRIVATE boolean_T ProcessGetParamsPkt(RTWExtModeInfo *ei)\n{\n    int_T                         i;\n    int_T                         nBytesTotal;\n    boolean_T                     error    = EXT_NO_ERROR;\n    const DataTypeTransInfo       *dtInfo  = rteiGetModelMappingInfo(ei);\n    const DataTypeTransitionTable *dtTable = dtGetParamDataTypeTrans(dtInfo);\n    char checksum = 0xFF;\n\n    if (dtTable != NULL) {\n        /*\n         * We've got some params in the model.  Send their values to the\n         * host.\n         */\n        int_T        nTrans   = dtGetNumTransitions(dtTable);\n        const uint_T *dtSizes = dtGetDataTypeSizes(dtInfo);\n\n #ifdef VERBOSE\n    #ifndef EXTMODE_DISABLEPRINTF             \n        printf(\"\\nUploading initial parameters....\\n\");\n #endif\n#endif \n\n        /*\n         * Take pass 1 through the transitions to figure out how many\n         * bytes we're going to send.\n         */\n        nBytesTotal = 0;\n        for (i=0; i<nTrans; i++) {\n            int_T dt     = dtTransGetDataType(dtTable, i);\n            int_T dtSize = dtSizes[dt];\n            int_T nEls   = dtTransNEls(dtTable, i); /* complexity accounted for in trans tbl num of els */\n            int_T nBytes = dtSize * nEls;\n\n            nBytesTotal += nBytes;\n        }\n\n        /*\n         * Send the packet header.\n         */\n        error = SendPktHdrToHost(EXT_GETPARAMS_RESPONSE,nBytesTotal);\n        if (error != EXT_NO_ERROR) goto EXIT_POINT;\n\n        /*\n         * Take pass 2 through the transitions and send the parameters.\n         */\n        for (i=0; i<nTrans; i++) {\n            char_T *tranAddress  = dtTransGetAddress(dtTable, i);\n            int_T  dt            = dtTransGetDataType(dtTable, i);\n            int_T  dtSize        = dtSizes[dt];\n            int_T  nEls          = dtTransNEls(dtTable, i); /* complexity accounted for in trans tbl num of els */\n            int_T  nBytes        = dtSize * nEls;\n\n            error = SendPktDataToHost(tranAddress, nBytes);\n            checksum = calculate_crc8_j1850_withInit( (uint8_T *)tranAddress, checksum, 0, nBytes );\n            if (error != EXT_NO_ERROR) goto EXIT_POINT;\n        }\n        error = SendPktDataToHost(&checksum, sizeof(uint8_T));\n    } else {\n        /*\n         * We've got no params in the model.\n         */\n        error = SendPktHdrToHost(EXT_GETPARAMS_RESPONSE,0);\n        if (error != EXT_NO_ERROR) goto EXIT_POINT;\n    }\n\nEXIT_POINT:\n    return(error);\n} /* end ProcessGetParamsPkt */\n#endif /* ifndef EXTMODE_DISABLEPARAMETERTUNING */\n\n\n#ifndef EXTMODE_DISABLESIGNALMONITORING\n/* Function: ProcessSelectTriggerSignalPkt ===========================================\n * Receive and process the EXT_SELECT_TRIGGER or EXT_SELECT_SIGNALS packet.\n */\nPRIVATE boolean_T ProcessSelectTriggerSignalPkt(const ExtModeAction ACTION_ID, \n                                                RTWExtModeInfo *ei,\n                                                const int pktSize,\n                                                int_T numSampTimes,\n                                                char* errMsg)\n{\n    const char *pkt;\n    int32_T    upInfoIdx;\n    boolean_T  error = EXT_NO_ERROR;\n\n    pkt = GetPktUsingAck(pktSize);\n    if (pkt == NULL) {\n        SendResponseStatus(ACTION_ID, NOT_ENOUGH_MEMORY, -1);\n        return(EXT_ERROR);\n    }\n\n    (void)memcpy(&upInfoIdx, pkt, sizeof(int32_T)); /* Extract upInfoIdx */\n    switch(ACTION_ID) {\n    case EXT_SELECT_TRIGGER_RESPONSE:\n#ifndef EXTMODE_DISABLEPRINTF  \n        PRINT_VERBOSE(\n                    (\"got EXT_SELECT_TRIGGER packet for upInfoIdx : %d\\n\", upInfoIdx));\n#endif\n        error = UploadInitTrigger(ei, pkt+sizeof(int32_T), upInfoIdx);\n        break;\n    case EXT_SELECT_SIGNALS_RESPONSE:\n#ifndef EXTMODE_DISABLEPRINTF  \n        PRINT_VERBOSE(\n                    (\"got EXT_SELECT_SIGNALS packet for upInfoIdx : %d\\n\", upInfoIdx));\n#endif\n        error = UploadLogInfoInit(ei, numSampTimes, pkt+sizeof(int32_T), upInfoIdx);\n        break;\n    default:\n        break;\n    }\n\n    if (error != EXT_NO_ERROR) {\n        SendResponseStatus(ACTION_ID, NOT_ENOUGH_MEMORY, upInfoIdx);\n#ifndef EXTMODE_DISABLEPRINTF            \n        printf(\"%s\\n\", errMsg);\n#endif\n        return(error);\n    }\n\n    error = SendResponseStatus(ACTION_ID, STATUS_OK, upInfoIdx);\n    return(error); /* Can be EXT_NO_ERROR */\n} /* end ProcessSelectTriggerSignalPkt */\n#endif /* ifndef EXTMODE_DISABLESIGNALMONITORING */\n\n\n#ifndef EXTMODE_DISABLESIGNALMONITORING\n/* Function: ProcessCancelLoggingArmTriggerPkt ===========================================\n * Receive and process the EXT_CANCEL_LOGGING or EXT_ARM_TRIGGER packet.\n */\nPRIVATE boolean_T ProcessCancelLoggingArmTriggerPkt(const ExtModeAction ACTION_ID, \n\t\t\t\t\t\tconst int pktSize, \n\t\t\t\t\t\tint_T numSampTimes)\n{\n    const char *pkt;\n    int32_T    upInfoIdx;\n    boolean_T  error = EXT_NO_ERROR;\n\n    pkt = GetPktUsingAck(pktSize);\n    if (pkt == NULL) {\n        SendResponseStatus(ACTION_ID, NOT_ENOUGH_MEMORY, -1);\n        return(EXT_ERROR);\n    }\n            \n    (void)memcpy(&upInfoIdx, pkt, sizeof(int32_T)); /* Extract upInfoIdx */\n        \n    switch(ACTION_ID) {\n    case EXT_CANCEL_LOGGING_RESPONSE:\n#ifndef EXTMODE_DISABLEPRINTF   \n        PRINT_VERBOSE(\n                (\"got EXT_CANCEL_LOGGING packet for upInfoIdx : %d\\n\", upInfoIdx));\n#endif\n        UploadCancelLogging(upInfoIdx);\n        break;\n    case EXT_ARM_TRIGGER_RESPONSE:\n#ifndef EXTMODE_DISABLEPRINTF\n        PRINT_VERBOSE(\n                (\"got EXT_ARM_TRIGGER packet for upInfoIdx : %d\\n\", upInfoIdx));\n#endif\n        UploadArmTrigger(upInfoIdx, numSampTimes);\n        break;\n    default:\n        break;\n    }\n\n    error = SendResponseStatus(ACTION_ID, STATUS_OK, upInfoIdx);\n    return(error); /* Can be EXT_NO_ERROR */\n} /* end ProcessCancelLoggingArmTriggerPkt */\n#endif /* ifndef EXTMODE_DISABLESIGNALMONITORING */\n\n\n#ifdef EXTMODE_DISABLEPARAMETERTUNING\nPRIVATE boolean_T AcknowledgeSetParamPkt(const int pktSize)\n{\n    int32_T    msg;\n    const char *pkt;\n    boolean_T  error = EXT_NO_ERROR;\n\n    pkt = GetPkt(pktSize);\n    msg = (int32_T)STATUS_OK;\n    error = SendPktToHost(EXT_SETPARAM_RESPONSE, sizeof(int32_T), (char_T *)&msg);\n    return(error);\n}\n#endif /* ifdef EXTMODE_DISABLEPARAMETERTUNING */\n\n#ifdef EXTMODE_DISABLESIGNALMONITORING\nPRIVATE boolean_T AcknowledgeSignalActionPkt(const int pktSize, const ExtModeAction ACTION_ID)\n{\n    const char *pkt;\n    int32_T    upInfoIdx;\n    boolean_T  error = EXT_NO_ERROR;\n\n    pkt = GetPkt(pktSize);\n    (void)memcpy(&upInfoIdx, pkt, sizeof(int32_T));\n    error = SendResponseStatus(ACTION_ID, STATUS_OK, upInfoIdx);\n    return(error);\n} \n#endif /* ifdef EXTMODE_DISABLESIGNALMONITORING */\n\n/*********************\n * Visible Functions *\n *********************/\n\n\n/* Function: ExtParseArgsAndInitUD =============================================\n * Abstract:\n *  Pass remaining arguments (main program should have NULL'ed out any args\n *  that it processed) to external mode.\n *  \n *  The actual, transport-specific parsing routine (implemented in\n *  ext_svr_transport.c) MUST NULL out all entries of argv that it processes.\n *  The main program depends on this in order to determine if any unhandled\n *  command line options were specified (i.e., if the main program detects\n *  any non-null fields after the parse, it throws an error).\n *\n *  Returns an error string on failure, NULL on success.\n *\n * NOTES:\n *  The external mode UserData is created here so that the specified command-\n *  line options can be stored.\n */\nPUBLIC const char_T *ExtParseArgsAndInitUD(const int_T  argc,\n                                           const char_T *argv[])\n{\n    const char_T *error = NULL;\n    \n    /*\n     * Create the user data.\n     */\n    extUD = ExtUserDataCreate();\n    if (extUD == NULL) {\n        error = \"Could not create external mode user data.  Out of memory.\\n\";\n        goto EXIT_POINT;\n    }\n\n    /*\n     * Parse the transport-specific args.\n     */\n    error = ExtProcessArgs(extUD,argc,argv);\n    if (error != NULL) goto EXIT_POINT;\n        \nEXIT_POINT:\n    if (error != NULL) {\n        ExtUserDataDestroy(extUD);\n        extUD = NULL;\n    }\n    return(error);\n} /* end ExtParseArgsAndInitUD */\n\n\n/* Function: ExtWaitForStartPkt ================================================\n * Abstract:\n *  Return true if waiting for host to tell us when to start.\n */\nPUBLIC boolean_T ExtWaitForStartPkt(void)\n{\n    return(ExtWaitForStartPktFromHost(extUD));\n} /* end ExtWaitForStartPkt */\n\n/* returns a pointer to the memory location at an offset from bufMem->section1*/\n#define LOC(x) (uint8_T *)(((x) < bytes1) ? (sec1 + x) : (sec2 + x - bytes1))\n\n#ifndef EXTMODE_DISABLESIGNALMONITORING\n/* Function: UploadServerWork =================================================\n * Abstract:\n *  Upload model signals to host for a single upInfo.\n */\n void UploadServerWork(int32_T upInfoIdx, int_T numSampTimes)\n{\n    int_T         i;\n    ExtBufMemList upList;\n    boolean_T     error = EXT_NO_ERROR;\n\t\n\tconst int8_T headerLength = 8;\n\tuint8_T checksum;\n\t//char_T *buffer;\n\tuint32_T pktHdrSize, bytesSent, bytesInUploadBuffer;\n\t\n\tstatic int_T bytes1, bytes2;\n\tstatic char_T *sec1, *sec2;\n\n#ifdef VXWORKS\n    /*\n     * Don't spin the CPU unless we've got data to upload.\n     * The upload.c/UploadBufAddTimePoint function gives the sem\n     * each time that data is added.\n     */\ntaskUnsafe();\n    semTake(uploadSem, WAIT_FOREVER);\ntaskSafe();\n#endif\n\n    if (!connected) goto EXIT_POINT;\n    \n    UploadBufGetData(&upList, upInfoIdx, numSampTimes);\n    while(upList.nActiveBufs > 0) {\n        for (i=0; i<upList.nActiveBufs; i++) {\n            const BufMem *bufMem = &upList.bufs[i];\n\t\t\t\n\t\t\tbytes1 = bufMem->nBytes1;\n\t\t\tbytes2 = bufMem->nBytes2;\n\t\t\tsec1 = bufMem->section1;\n\t\t\tsec2 = bufMem->section2;\n\t\t\tbytesInUploadBuffer = bytes1 + bytes2;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tbytesSent = 0;\n\t\t\twhile(bytesSent < bytesInUploadBuffer){\n\t\t\t\t//pktHdrSize = (uint32_T)buffer[bytesSent+4];\n\t\t\t\tpktHdrSize = 0;\n\t\t\t\tchecksum = 0;\n\t\t\t\tpktHdrSize |= (uint32_T)(*LOC(bytesSent+4));\n\t\t\t\tpktHdrSize |= (uint32_T)(*LOC(bytesSent+5))<<8;\n\t\t\t\tpktHdrSize |= (uint32_T)(*LOC(bytesSent+6))<<16;\n\t\t\t\tpktHdrSize |= (uint32_T)(*LOC(bytesSent+7))<<24;\n\t\t\t\t\n\t\t\t\tif( (bytesSent + headerLength) <= bytes1 ){ \t\t\t\t\t/* true if header is not split */\n\t\t\t\t\t/* Since the header is contigous, sent it in one go */\n\t\t\t\t\terror = SendPktDataToHost(LOC(bytesSent), headerLength);\n\t\t\t\t\tif( (bytesSent + headerLength + pktHdrSize) <= bytes1 ){\t/* true if the payload is not split */\n\t\t\t\t\t\t\t/* entire packet is in section1 */\n\t\t\t\t\t\t\t\t/* Header already sent. Send the payload */\n\t\t\t\t\t\terror = SendPktDataToHost(LOC(bytesSent+headerLength), pktHdrSize);\n\t\t\t\t\t\t\t\t/*calcualte checksum in one go and send it off as well*/\n\t\t\t\t\t\tchecksum = calculate_crc8_j1850(LOC(bytesSent+headerLength), 0, (uint16_T)(pktHdrSize));\n\t\t\t\t\t} else {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/* land here if the payload is split */\n\t\t\t\t\t\t\t/* send the payload of this packet in section1 */\n\t\t\t\t\t\terror = SendPktDataToHost(LOC(bytesSent+headerLength), bytes1 - bytesSent - headerLength);\n\t\t\t\t\t\t\t/* send the remaining payload in section2 */\n\t\t\t\t\t\terror = SendPktDataToHost(sec2, (uint16_T)(bytesSent + headerLength + pktHdrSize - bytes1));\n\t\t\t\t\t\t\t/* calculate the checksum for the payload in section1 */\n\t\t\t\t\t\tchecksum = calculate_crc8_j1850(LOC(bytesSent+headerLength), 0, (uint16_T)(bytes1 - bytesSent - headerLength));\n\t\t\t\t\t\t\t/* calculate the checksum for the payload in section2 */\n\t\t\t\t\t\tchecksum = calculate_crc8_j1850_withInit(sec2, checksum, 0, (uint16_T)(pktHdrSize - (bytes1 - bytesSent - headerLength)));\n\t\t\t\t\t}\n\t\t\t\t} else {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/* land here if header is split OR is in section2.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t * also guarantees that the entire payload for this\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t * header is in section2.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t */\n\t\t\t\t\tif(bytesSent < bytes1){\t\t/* land here if header is split. true if header is split */\n\t\t\t\t\t\terror = SendPktDataToHost(LOC(bytesSent), (bytes1 - bytesSent));\n\t\t\t\t\t\terror = SendPktDataToHost(sec2, (headerLength + pktHdrSize - (bytes1 - bytesSent)));\n\t\t\t\t\t} else {\t\t\t\t\t\t\t\t/* the entire packet is in section2 */\n\t\t\t\t\t\terror = SendPktDataToHost(LOC(bytesSent), headerLength + pktHdrSize);\n\t\t\t\t\t}\n\t\t\t\t\tchecksum = calculate_crc8_j1850(LOC(bytesSent + headerLength), 0, (uint16_T)(pktHdrSize));\n\t\t\t\t}\n\t\t\t\t/* finally send the checksum */\n\t\t\t\terror = SendPktDataToHost((const char *)&checksum, 1);\n\t\t\t\tbytesSent += (headerLength + pktHdrSize);\n\t\t\t}\n\t\t\t\n            /* confirm that the data was sent */\n            UploadBufDataSent(upList.tids[i], upInfoIdx);\n\t\t\t\n        }\n        UploadBufGetData(&upList, upInfoIdx, numSampTimes);\n    }\n    \nEXIT_POINT:\n    if (error != EXT_NO_ERROR) {\n        /* An error in this function is caused by a physical failure in the\n         * external mode connection.  We assume this failure caused the host\n         * to disconnect.  The target must be disconnected and returned to a\n         * state where it is running and can be re-connected to by the host.\n         */\n        ForceDisconnectFromHost(numSampTimes);\n    }\n}\n/* end UploadServerWork */\n#endif /* ifndef EXTMODE_DISABLESIGNALMONITORING */\n\n#ifndef EXTMODE_DISABLESIGNALMONITORING\n/* Function: rt_UploadServerWork ===============================================\n * Abstract:\n *  Wrapper function that calls UploadServerWork once for each upInfo\n */\nPUBLIC void rt_UploadServerWork(int_T numSampTimes)\n{\n    int i;\n    \n    for (i=0; i<NUM_UPINFOS; i++) {\n        UploadServerWork(i, numSampTimes);\n    }\n} /* end rt_UploadServerWork */\n#endif /* ifndef EXTMODE_DISABLESIGNALMONITORING */\n\n/* Function: rt_ExtModeInit ====================================================\n * Abstract:\n *  Called once at program startup to do any initialization related to external\n *  mode. \n */\nPUBLIC boolean_T rt_ExtModeInit(void)\n{\n    int i;\n    boolean_T error = EXT_NO_ERROR;\n\n#ifdef TMW_EXTMODE_TESTING_REQ\n#  ifndef TMW_EXTMODE_TESTING\n#ifndef EXTMODE_DISABLEPRINTF \n    fprintf(stderr,\"Error: External mode tests should use the external mode test harness.\\n\");\n#endif\n    error = EXT_ERROR;\n#  endif\n#endif\n    if (error != EXT_NO_ERROR) goto EXIT_POINT;\n\n    error = ExtInit(extUD);\n    if (error != EXT_NO_ERROR) goto EXIT_POINT;\n\n    for (i=0; i<NUM_UPINFOS; i++) {\n        UploadLogInfoReset(i);\n    }\n\n    rtExtModeTestingInit();\n\nEXIT_POINT:\n    return(error);\n} /* end rt_ExtModeInit */\n\n\n/* Function: rt_ExtModeSleep ===================================================\n * Abstract:\n *  Called by grt_main, ert_main, and grt_malloc_main  to \"pause\".  It attempts\n *  to do this in a way that does not hog the processor.\n */\n#ifndef VXWORKS\nPUBLIC void rt_ExtModeSleep(\n    long sec,  /* number of seconds to wait       */\n    long usec) /* number of micro seconds to wait */\n{\n    ExtModeSleep(extUD,sec,usec);\n} /* end rt_ExtModeSleep */\n#endif\n\n\n/* Function: rt_PktServerWork ==================================================\n * Abstract:\n *  If not connected, establish communication of the packet line and the\n *  data upload line.  If connected, send/receive packets and parameters\n *  on the packet line.\n */\nPUBLIC void rt_PktServerWork(RTWExtModeInfo *ei,\n                             int_T          numSampTimes,\n                             boolean_T      *stopReq)\n{\n    PktHeader  pktHdr;\n    boolean_T  hdrAvail;\n    boolean_T  error             = EXT_NO_ERROR;\n    boolean_T  disconnectOnError = false;\n    \n\n    /*\n     * If not connected, attempt to make connection to host.\n     */\n    if (!connected) {\n        rtExtModeTestingKillIfOrphaned(false);\n\n        error = ExtOpenConnection(extUD,&connected);\n        if (error != EXT_NO_ERROR) goto EXIT_POINT;\n    }\n\n    /*\n     * If ExtOpenConnection is not blocking and there are no pending\n     * requests to open a connection, we'll still be unconnected.\n     */\n    if (!connected) goto EXIT_POINT; /* nothing to do */\n    \n    /*\n     * Process packets.\n     */\n\n    /* Wait for a packet. */\n\tif (commInitialized)\n\t\terror = GetPktHdrUsingChecksum(&pktHdr, &hdrAvail);\n\telse\n\t\terror = GetPktHdr(&pktHdr, &hdrAvail);\n\t\n    if (error != EXT_NO_ERROR) {\n#ifndef EXTMODE_DISABLEPRINTF            \n        fprintf(stderr, \"\\nError occurred getting packet header.\\n\");\n#endif\n        disconnectOnError = true;\n        goto EXIT_POINT;\n    }\n    rtExtModeTestingKillIfOrphaned(hdrAvail);\n    \n    if (!hdrAvail) goto EXIT_POINT; /* nothing to do */\n\n    /*\n     * This is the first packet.  Should contain the string:\n     * 'ext-mode'.  Its contents are not important to us.\n     * It is used as a flag to start the handshaking process.\n     */\n    if (!commInitialized) {\n        pktHdr.type = EXT_CONNECT;\n    }\n\n    /* \n     * At this point we know that we have a packet: process it.\n     */\n#ifdef VXWORKS\n    taskSafe();\n#endif\n    switch(pktHdr.type) {\n\n    case EXT_GET_TIME:\n    {\n        /* Skip verbosity print out - we get too many of these */\n        /*PRINT_VERBOSE((\"got EXT_GET_TIME packet.\\n\"));*/\n        time_T t = rteiGetT(ei);\n        \n        error = SendPktToHost(\tEXT_GET_TIME_RESPONSE,\n\t\t\t\t\t\t\t\tsizeof(time_T),\n\t\t\t\t\t\t\t\t(char_T *)&t);\n        if (error != EXT_NO_ERROR) goto EXIT_POINT;\n        break;\n    }\n\n    case EXT_ARM_TRIGGER:\n    {\n#ifndef EXTMODE_DISABLESIGNALMONITORING\n        error = ProcessCancelLoggingArmTriggerPkt(EXT_ARM_TRIGGER_RESPONSE, pktHdr.size, numSampTimes);\n\tif (error != EXT_NO_ERROR) goto EXIT_POINT;\n#else\n        error = AcknowledgeSignalActionPkt(pktHdr.size, EXT_ARM_TRIGGER_RESPONSE);\n        if (error != EXT_NO_ERROR) goto EXIT_POINT;\n#endif\n        break;\n    }\n\n    case EXT_SELECT_SIGNALS:\n    {\n#ifndef EXTMODE_DISABLESIGNALMONITORING\n        error = ProcessSelectTriggerSignalPkt(EXT_SELECT_SIGNALS_RESPONSE, ei, pktHdr.size, numSampTimes, ERRMSG_PROCESSSELECTSIGNAL);\n        if (error != EXT_NO_ERROR) goto EXIT_POINT;\n#else\n        error = AcknowledgeSignalActionPkt(pktHdr.size, EXT_SELECT_SIGNALS_RESPONSE);\n        if (error != EXT_NO_ERROR) goto EXIT_POINT;\n#endif\n        break;\n    }\n\n    case EXT_SELECT_TRIGGER: \n    {\n#ifndef EXTMODE_DISABLESIGNALMONITORING\n        error = ProcessSelectTriggerSignalPkt(EXT_SELECT_TRIGGER_RESPONSE, ei, pktHdr.size, -1, ERRMSG_PROCESSSELECTTRIGGER);\n        if (error != EXT_NO_ERROR) goto EXIT_POINT;\n#else\n        error = AcknowledgeSignalActionPkt(pktHdr.size, EXT_SELECT_TRIGGER_RESPONSE);\n        if (error != EXT_NO_ERROR) goto EXIT_POINT;\n#endif\n        break;\n    }\n\n    case EXT_CONNECT:\n    {\n        PRINT_VERBOSE((\"got EXT_CONNECT packet.\\n\"));\n        error = ProcessConnectPkt(ei);\n        if (error != EXT_NO_ERROR) goto EXIT_POINT;\n        break;\n    }\n\n    case EXT_SETPARAM:\n    {\n#ifndef EXTMODE_DISABLEPARAMETERTUNING\n        PRINT_VERBOSE((\"got EXT_SETPARAM packet.\\n\"));\n        if (pktHdr.size == 0) {\n            gblSetParamPktReceived = true;\n        } else {\n            error = ProcessSetParamPkt(ei, pktHdr.size);\n            if (error != EXT_NO_ERROR) {\n                goto EXIT_POINT;\n            }\n            else {\n                gblSetParamPktReceived = true;\n            }\n        }\n#else\n        PRINT_VERBOSE((\"discard EXT_SETPARAM packet.\\n\"));\n        error = AcknowledgeSetParamPkt(pktHdr.size);\n        if (error != EXT_NO_ERROR) goto EXIT_POINT;\n#endif\n        break;\n    }\n\n    case EXT_GETPARAMS:\n    {\n#ifndef EXTMODE_DISABLEPARAMETERTUNING\n        PRINT_VERBOSE((\"got EXT_GETPARAMS packet.\\n\"));\n        error = ProcessGetParamsPkt(ei);\n        if (error != EXT_NO_ERROR) goto EXIT_POINT;\n#endif\n        break;\n    }\n\n    case EXT_DISCONNECT_REQUEST:\n    {\n        PRINT_VERBOSE((\"got EXT_DISCONNECT_REQUEST packet.\\n\"));\n        \n        /*\n         * Note that from the target's point of view this is\n         * more a \"notify\" than a \"request\".  The host needs to\n         * have this acknowledged before it can begin closing\n         * the connection.\n         */\n        error = SendPktToHost(EXT_DISCONNECT_REQUEST_RESPONSE, 0, NULL);\n        if (error != EXT_NO_ERROR) goto EXIT_POINT;\n\n        DisconnectFromHost(numSampTimes);\n\n        break;\n    }\n\n    case EXT_DISCONNECT_REQUEST_NO_FINAL_UPLOAD:\n    {\n        PRINT_VERBOSE((\"got EXT_DISCONNECT_REQUEST_NO_FINAL_UPLOAD packet.\\n\"));\n        \n        /*\n         * The target receives this packet when the host is\n         * immediately terminating the extmode communication due\n         * to some error.  The target should not send back a\n         * response or a final upload of data because the host is\n         * expecting neither.  The target must be disconnected and\n         * returned to a state where it is running and can be\n         * re-connected to by the host.\n         */\n        ForceDisconnectFromHost(numSampTimes);\n\n        break;\n    }\n\n    case EXT_MODEL_START:\n        PRINT_VERBOSE((\"got EXT_MODEL_START packet.\\n\"));\n#ifdef VXWORKS\n        {\n            extern SEM_ID startStopSem;\n            semGive(startStopSem);\n        }\n#endif\n        startModel = true;\n        error = SendPktToHost(EXT_MODEL_START_RESPONSE, 0, NULL);\n        if (error != EXT_NO_ERROR) goto EXIT_POINT;\n        break;\n\n    case EXT_MODEL_STOP:\n        PRINT_VERBOSE((\"got EXT_MODEL_STOP packet.\\n\"));\n        *stopReq = true;\n        break;\n#ifndef EXTMODE_DISABLETESTING\n    case EXT_MODEL_PAUSE:\n        PRINT_VERBOSE((\"got EXT_MODEL_PAUSE packet.\\n\"));\n        modelStatus = TARGET_STATUS_PAUSED;\n        startModel  = false;\n\n        error = SendPktToHost(EXT_MODEL_PAUSE_RESPONSE, 0, NULL);\n        if (error != EXT_NO_ERROR) goto EXIT_POINT;\n        break;\n    case EXT_MODEL_STEP:\n        PRINT_VERBOSE((\"got EXT_MODEL_STEP packet.\\n\"));\n        if ((modelStatus == TARGET_STATUS_PAUSED) && !startModel) {\n            startModel = true;\n        }\n        \n        error = SendPktToHost(EXT_MODEL_STEP_RESPONSE, 0, NULL);\n        if (error != EXT_NO_ERROR) goto EXIT_POINT;\n        break;\n    case EXT_MODEL_CONTINUE:\n        PRINT_VERBOSE((\"got EXT_MODEL_CONTINUE packet.\\n\"));\n        if (modelStatus == TARGET_STATUS_PAUSED) {\n            modelStatus = TARGET_STATUS_RUNNING;\n            startModel  = false;\n        }\n        \n        error = SendPktToHost(EXT_MODEL_CONTINUE_RESPONSE, 0, NULL);\n        if (error != EXT_NO_ERROR) goto EXIT_POINT;\n#endif\n        break;\n\n    case EXT_CANCEL_LOGGING:\n    {\n#ifndef EXTMODE_DISABLESIGNALMONITORING\n        error = ProcessCancelLoggingArmTriggerPkt(EXT_CANCEL_LOGGING_RESPONSE, pktHdr.size, numSampTimes);\n        if (error != EXT_NO_ERROR) goto EXIT_POINT;\n#else\n        error = AcknowledgeSignalActionPkt(pktHdr.size, EXT_CANCEL_LOGGING_RESPONSE);\n        if (error != EXT_NO_ERROR) goto EXIT_POINT;\n#endif\n        break;\n    }\n\n    default:\n#ifndef EXTMODE_DISABLEPRINTF            \n        fprintf(stderr,\"received invalid packet.\\n\");\n#endif\n        break;\n    } /* end switch */\n\nEXIT_POINT:\n    if (error != EXT_NO_ERROR) {\n        if (disconnectOnError) {\n#ifndef EXTMODE_DISABLEPRINTF                \n            fprintf(stderr,\n                \"Error occurred in rt_PktServerWork.\\n\"\n                \"Disconnecting from host!\\n\");\n#endif\n            /* An error in this function which causes disconnectOnError to be\n             * set to true is caused by a physical failure in the external mode\n             * connection.  We assume this failure caused the host to disconnect.\n             * The target must be disconnected and returned to a state\n             * where it is running and can be re-connected to by the host.\n             */\n            ForceDisconnectFromHost(numSampTimes);\n        }\n    }\n#ifdef VXWORKS\n    taskUnsafe();\n#endif\n} /* end rt_PktServerWork */\n\n\n/* Function: rt_PktServer ======================================================\n * Abstract:\n *  Call rt_PktServerWork forever.   Used only for RTOS (e.g., Tornado/VxWorks\n *  when running as a low priority task.\n */\n#ifdef VXWORKS\nPUBLIC void rt_PktServer(RTWExtModeInfo *ei,\n                         int_T          numSampTimes,\n                         boolean_T      *stopReq)\n{\n    for(;;) {\n        rt_PktServerWork(ei,numSampTimes,stopReq); \n    }\n}\n#endif\n\n\n/* Function: rt_UploadServer ===================================================\n * Abstract:\n *  Call rt_UploadServerWork forever.   Used only for RTOS (e.g.,\n *  Tornado/VxWorks when running as a low priority task.\n */\n#ifdef VXWORKS\n#ifndef EXTMODE_DISABLESIGNALMONITORING\nPUBLIC void rt_UploadServer(int_T numSampTimes)\n{\n    for(;;) {\n        rt_UploadServerWork(numSampTimes);\n    }\n} /* end rt_UploadServer */\n#endif /* ifndef EXTMODE_DISABLESIGNALMONITORING */\n#endif\n\n\n/* Function: rt_SetPortInExtUD =================================================\n * Abstract:\n *  Set the port in the external mode user data structure.\n */\n#ifdef VXWORKS\nPUBLIC void rt_SetPortInExtUD(const int_T port)\n{\n    ExtUserDataSetPort(extUD, port);\n} /* end rt_SetPortInExtUD */\n#endif\n\n/* Function: ExtModeShutdown ==================================================\n * Abstract:\n *  Called when target program terminates to enable cleanup of external \n *  mode for a given upInfo.\n */\nPRIVATE void ExtModeShutdown(int32_T upInfoIdx, int_T numSampTimes)\n{\n    /*\n     * Make sure buffers are flushed so that the final points get to\n     * host (this is important for the case of the target reaching tfinal\n     * while data uploading is in progress).\n     */\n    UploadPrepareForFinalFlush(upInfoIdx);\n#ifndef EXTMODE_DISABLESIGNALMONITORING\n    UploadServerWork(upInfoIdx, numSampTimes);\n#endif\n\n    UploadLogInfoTerm(upInfoIdx, numSampTimes);\n\n    if (pktBuf != NULL) {\n        free(pktBuf);\n        pktBuf = NULL;\n    }\n\n} /* end ExtModeShutdown */\n\n/* Function: rt_ExtModeShutdown ================================================\n * Abstract:\n *  Called when target program terminates to enable cleanup of external \n *  mode.\n */\nPUBLIC boolean_T rt_ExtModeShutdown(int_T numSampTimes)\n{\n    int i;\n    boolean_T error = EXT_NO_ERROR;\n\n    for (i=0; i<NUM_UPINFOS; i++) {\n        ExtModeShutdown(i, numSampTimes);\n    }\n\n    if (commInitialized) {\n        error = SendPktToHost(EXT_MODEL_SHUTDOWN, 0, NULL);\n        if (error != EXT_NO_ERROR) {\n#ifndef EXTMODE_DISABLEPRINTF                \n            fprintf(stderr,\n                \"\\nError sending EXT_MODEL_SHUTDOWN packet to host.\\n\");\n#endif\n        }\n        commInitialized = false;\n    }\n    if (connected) {\n        connected = false;\n        modelStatus = TARGET_STATUS_WAITING_TO_START;        \n    }\n\n    ExtShutDown(extUD);\n    ExtUserDataDestroy(extUD);\n    \n    rtExtModeTestingRemoveBatMarker();\n    \n    return(error);\n} /* end rt_ExtModeShutdown */\n\n#ifndef EXTMODE_DISABLESIGNALMONITORING\n/* Function: rt_UploadCheckTrigger =============================================\n * Abstract:\n *  Wrapper function that calls UploadCheckTrigger once for each upInfo\n */\nPUBLIC void rt_UploadCheckTrigger(int_T numSampTimes)\n{\n    int i;\n    for (i=0; i<NUM_UPINFOS; i++) {\n        UploadCheckTrigger(i, numSampTimes);\n    }\n} /* end rt_UploadCheckTrigger */\n\n/* Function: rt_UploadCheckEndTrigger ==========================================\n * Abstract:\n *  Wrapper function that calls UploadCheckTrigger once for each upInfo\n */\nPUBLIC void rt_UploadCheckEndTrigger(void)\n{\n    int i;\n    \n    for (i=0; i<NUM_UPINFOS; i++) {\n        UploadCheckEndTrigger(i);\n    }\n} /* end rt_UploadCheckEndTrigger */\n\n/* Function: rt_UploadBufAddTimePoint ==========================================\n * Abstract:\n *  Wrapper function that calls UploadBufAddTimePoint once for each upInfo\n */\nPUBLIC void rt_UploadBufAddTimePoint(int_T tid, real_T taskTime)\n{\n    int i;\n    \n    for (i=0; i<NUM_UPINFOS; i++) {\n        UploadBufAddTimePoint(tid, taskTime, i);\n    }\n} /* end rt_UploadBufAddTimePoint */\n#endif /* ifndef EXTMODE_DISABLESIGNALMONITORING */\n\n/* [EOF] ext_svr.c */\n"},{"name":"ext_work.c","type":"source","group":"legacy","path":"D:\\MATLAB2022a\\rtw\\c\\src\\ext_mode\\common","tag":"","groupDisplay":"Other files","code":"/*\n * Copyright 1994-2021 The MathWorks, Inc.\n *\n * File: ext_work.c     \n *\n * Abstract:\n *   \n */\n\n#if !defined(EXTMODE_DISABLEPRINTF) || !defined(EXTMODE_DISABLE_ARGS_PROCESSING)\n#include <stdio.h>\n#endif\n\n#include <stdlib.h>        /* for exit() */\n#include <string.h>        /* optional for strcmp */\n\n#include \"rtwtypes.h\"\n#include \"rtw_extmode.h\"\n\n#include \"ext_types.h\"\n#include \"ext_share.h\"\n#include \"updown.h\"\n#include \"ext_svr.h\"\n#include \"ext_svr_transport.h\"\n#include \"ext_work.h\" /* includes all VxWorks headers */\n\n/* Logical definitions */\n#if (!defined(__cplusplus))\n#  ifndef false\n#   define false                       (0U)\n#  endif\n#  ifndef true\n#   define true                        (1U)\n#  endif\n#endif\n\nint_T           volatile startModel  = false;\nTargetSimStatus volatile modelStatus = TARGET_STATUS_WAITING_TO_START;\n\n#ifdef VXWORKS\nSEM_ID volatile uploadSem = NULL;\nSEM_ID volatile commSem   = NULL;\nSEM_ID volatile pktSem    = NULL;\nint_T           extern_pkt_tid;\nint_T           extern_upload_tid;\n\nvoid rtExtModeTornadoStartup(RTWExtModeInfo *ei,\n                             int_T          numSampTimes,\n                             boolean_T      *stopReqPtr,\n                             int_T          priority,\n                             int32_T        stack_size,\n                             SEM_ID         startStopSem)\n{\n    uploadSem = semBCreate(SEM_Q_PRIORITY, SEM_EMPTY);\n    commSem   = semBCreate(SEM_Q_PRIORITY, SEM_FULL);\n    pktSem    = semBCreate(SEM_Q_PRIORITY, SEM_FULL);\n\n    rt_ExtModeInit();\n\n    extern_pkt_tid = taskSpawn(\"tExternPkt\",\n        priority+(numSampTimes), VX_FP_TASK, stack_size, (FUNCPTR)rt_PktServer, \n        (int_T) ei, (int_T) numSampTimes, (int_T) stopReqPtr, 0, 0, 0, 0, 0, 0, 0);\n    if (extern_pkt_tid == ERROR) {\n#ifndef EXTMODE_DISABLEPRINTF\n        printf(\"handle taskpawn error\");\n#endif\n    }\n\n    extern_upload_tid = taskSpawn(\"tExternUpload\",\n        priority+(numSampTimes)+1,VX_FP_TASK, stack_size,(FUNCPTR)rt_UploadServer,\n        (int_T) numSampTimes, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    if (extern_upload_tid == ERROR) {\n#ifndef EXTMODE_DISABLEPRINTF\n        printf(\"handle taskpawn error\");\n#endif\n    }\n\n    /*\n     * Pause until receive model start packet - if external mode.\n     * Make sure the external mode tasks are running so that \n     * we are listening for commands from the host.\n     */\n    if (ExtWaitForStartPkt()) {\n#ifndef EXTMODE_DISABLEPRINTF\n        printf(\"\\nWaiting for start packet from host.\\n\");\n#endif\n        semTake(startStopSem, WAIT_FOREVER);\n    }\n    modelStatus = TARGET_STATUS_RUNNING;\n}\n\nvoid rtExtModeTornadoCleanup(int_T numSampTimes)\n{\n    taskDelete(extern_upload_tid);\n    taskDelete(extern_pkt_tid);\n    rt_ExtModeShutdown(numSampTimes);\n    semDelete(uploadSem);\n    semDelete(commSem);\n    semDelete(pktSem);\n}\n\n/* Function ====================================================================\n *  Used by Tornado/VxWorks to set the port number used by external mode.\n *  Tornado does not parse the port number the same way as the other code\n *  formats.  Instead, the port number is specified as an argument to the\n *  spawn command which passes it into rt_main().  This function is called\n *  by rt_main() to set the port number in the external mode user data\n *  structure.\n */\nvoid rtExtModeTornadoSetPortInExtUD(const int_T port)\n{\n    rt_SetPortInExtUD(port);\n}\n\n#else /* VXWORKS == 0 */\n\n/* Function ====================================================================\n * Pause the process (w/o hogging the cpu) until receive step packet (which\n * means the startModel flag moves to true) or until we are no longer\n * in the paused state.  The packet/upload server must continue to process\n * events (otherwise the host would not be able to communicate with the target).\n */\nvoid rtExtModePauseIfNeeded(RTWExtModeInfo *ei,\n                            int_T          numSampTimes,\n                            boolean_T      *stopReqPtr)\n{\n    while((modelStatus == TARGET_STATUS_PAUSED) && \n          !startModel && !(*stopReqPtr)) {\n        rt_ExtModeSleep(0L, 375000L);\n        rt_PktServerWork(ei,numSampTimes,stopReqPtr);\n#ifndef EXTMODE_DISABLESIGNALMONITORING\n        rt_UploadServerWork(numSampTimes);\n#endif\n    }\n    startModel = false; /* reset to false - if we were stepped we want to\n                         *                  stop again next time we get\n                         *                  back here.\n                         */\n} /* end rtExtModePauseIfNeeded */\n\n/* Function ====================================================================\n * Pause the process (w/o hogging the cpu) until receive start packet\n * from the host.  The packet/upload server must continue to process\n * events (otherwise the host would not be able to communicate with the target).\n */\nvoid rtExtModeWaitForStartPkt(RTWExtModeInfo *ei,\n                              int_T          numSampTimes,\n                              boolean_T      *stopReqPtr)\n{\n    /*\n     * Pause until receive model start packet.\n     */\n    if (ExtWaitForStartPkt()) {\n        while(!startModel && !(*stopReqPtr)) {\n            rt_ExtModeSleep(0L, 375000L);\n            rt_PktServerWork(ei,numSampTimes,stopReqPtr);\n#ifndef EXTMODE_DISABLESIGNALMONITORING\n            rt_UploadServerWork(numSampTimes);\n#endif\n        }\n    }\n    if (modelStatus != TARGET_STATUS_PAUSED) {\n        modelStatus = TARGET_STATUS_RUNNING;\n    } else {\n        /* leave in pause mode */\n    }\n}\n#endif\n\nvoid rtExtModeOneStep(RTWExtModeInfo *ei,\n                      int_T          numSampTimes,\n                      boolean_T      *stopReqPtr)\n{\n    /*\n     * In a multi-tasking environment, this would be removed from the base rate\n     * and called as a \"background\" task.\n     */\n    if (modelStatus != TARGET_STATUS_PAUSED) {\n        rt_PktServerWork(ei,numSampTimes,stopReqPtr);\n#ifndef EXTMODE_DISABLESIGNALMONITORING\n        rt_UploadServerWork(numSampTimes);\n#endif\n    }\n}\n\nvoid rtExtModeUpload(int_T tid, real_T taskTime)\n{\n#ifndef EXTMODE_DISABLESIGNALMONITORING\n    rt_UploadBufAddTimePoint(tid, taskTime);\n#endif\n}\n\nvoid rtExtModeCheckEndTrigger(void)\n{\n#ifndef EXTMODE_DISABLESIGNALMONITORING\n    rt_UploadCheckEndTrigger();\n#endif\n}\n\nvoid rtExtModeUploadCheckTrigger(int_T numSampTimes)\n{\n#ifndef EXTMODE_DISABLESIGNALMONITORING\n    rt_UploadCheckTrigger(numSampTimes);\n#endif\n}\n\nvoid rtExtModeCheckInit(int_T numSampTimes)\n{\n    UNUSED_PARAMETER(numSampTimes);\n    if (rt_ExtModeInit() != EXT_NO_ERROR){\n#ifndef EXTMODE_DISABLEPRINTF            \n            printf(\"Error calling rt_ExtModeInit!\\n\");\n            exit(EXIT_FAILURE);         /*Error out if rt_ExtModeInit() returns EXT_ERROR. */\n#endif\n    }\n}\n\nvoid rtExtModeShutdown(int_T numSampTimes)\n{\n    rt_ExtModeShutdown(numSampTimes);\n}\n\nvoid rtExtModeParseArgs(int_T        argc, \n                        const char_T *argv[],\n                        real_T       *unused)\n{\n    UNUSED_PARAMETER(unused);\n\n#ifdef  EXTMODE_DISABLE_ARGS_PROCESSING\n    /* Some targets do not support command line args, so bypass the args \n     * processing and directly call into ExtParseArgsAndInitUD.\n     */\n\n    /* initialize external mode */\n    ExtParseArgsAndInitUD(0, NULL);\n\n#else   \n\n    /*\n     * Parse the external mode arguments.\n     */\n    {\n        const char_T *extParseErrorPkt = ExtParseArgsAndInitUD(argc, argv);\n        if (extParseErrorPkt != NULL) {\n#ifndef EXTMODE_DISABLEPRINTF            \n            printf(\n                \"\\nError processing External Mode command line arguments:\\n\");\n            printf(\"\\t%s\",extParseErrorPkt);\n#endif\n            exit(EXIT_FAILURE);\n        }\n    }\n#endif  /* EXTMODE_DISABLE_ARGS_PROCESSING */\n}\n\n/* Start of ERT specific functions and data */\n\n#ifndef EXTMODE_DISABLE_ARGS_PROCESSING\nstatic void displayUsage(void)\n{\n#ifndef EXTMODE_DISABLEPRINTF    \n    (void) printf(\"usage: model_name -tf <finaltime> -w -port <TCPport>\\n\");\n    (void) printf(\"arguments:\\n\");\n    (void) printf(\"  -tf <finaltime> - overrides final time specified in \"\n                  \"Simulink (inf for no limit).\\n\");\n    (void) printf(\"  -w              - waits for Simulink to start model \"\n                  \"in External Mode.\\n\");\n    (void) printf(\"  -port <TCPport> - overrides 17725 default port in \"\n                  \"External Mode, valid range 256 to 65535.\\n\");\n#endif    \n}\n#endif\n\nstatic const real_T RUN_FOREVER = (real_T)-1;\n#if INTEGER_CODE == 0\nstatic real_T finaltime = (real_T)-2; /* default to stop time in Sim Params. */\n#else\nstatic real_T finaltime = (real_T)-1; /* default to stop time inf */\n#endif\n\nvoid rtERTExtModeSetTFinal(real_T *rtmTFinal)\n{\n    if (finaltime >= (real_T)0 || finaltime == RUN_FOREVER) {\n        *rtmTFinal = finaltime;\n    }\n}\n\nvoid rtSetTFinalForExtMode(real_T *rtmTFinal)\n{\n    rtERTExtModeSetTFinal(rtmTFinal);\n}\n\nvoid rtParseArgsForExtMode(int_T        argc, \n                           const char_T *argv[])\n{\n\n#ifdef  EXTMODE_DISABLE_ARGS_PROCESSING\n    /* Some targets do not support command line args, so bypass the args \n     * processing and directly call into ExtParseArgsAndInitUD.\n     */\n\n    /* initialize external mode */\n    ExtParseArgsAndInitUD(0, NULL);\n\n#else    \n    /* parse command line args */\n\n    int_T  oldStyle_argc;\n    const char_T *oldStyle_argv[5];\n\n    if ((argc > 1) && (argv[1][0] != '-')) {\n        /* at least one command line argument has been provided without\n           specifying an option with '-', using the old style */\n        if ( argc > 3 ) {\n            displayUsage();\n            exit(EXIT_FAILURE);\n        }\n\n        /* using the old style the first argument is always the final time */\n        oldStyle_argc = 3;\n        oldStyle_argv[0] = argv[0];\n        oldStyle_argv[1] = \"-tf\";\n        oldStyle_argv[2] = argv[1];\n\n        if (argc == 3) {\n            oldStyle_argc = 5;\n\n            oldStyle_argv[3] = \"-port\";\n            oldStyle_argv[4] = argv[2];\n\n        }\n\n        argc = oldStyle_argc;\n        argv = oldStyle_argv;\n\n    }\n\n    {\n        /* new style: */\n        double    tmpDouble;\n        char_T tmpStr2[200];\n        int_T  count      = 1;\n        int_T  parseError = false;\n\n        /*\n         * Parse the standard RTW parameters.  Let all unrecognized parameters\n         * pass through to external mode for parsing.  NULL out all args handled\n         * so that the external mode parsing can ignore them.\n         */\n        while(count < argc) {\n            const char_T *option = argv[count++];\n            \n            /* final time */\n            if ((strcmp(option, \"-tf\") == 0) && (count != argc)) {\n                const char_T *tfStr = argv[count++];\n                \n                sscanf(tfStr, \"%200s\", tmpStr2);\n                if (strcmp(tmpStr2, \"inf\") == 0) {\n                    tmpDouble = RUN_FOREVER;\n                } else {\n                    char_T tmpstr[2];\n\n#if INTEGER_CODE == 0\n                    if ( (sscanf(tmpStr2,\"%lf%1s\", &tmpDouble, tmpstr) != 1) ||\n                         (tmpDouble < (real_T)0) ) {\n    #ifndef EXTMODE_DISABLEPRINTF\n                        (void)printf(\"finaltime must be a positive, real value or inf\\n\");\n    #endif\n                        parseError = true;\n                        break;\n                    }\n#else\n                    if ( (sscanf(tmpStr2,\"%d%1s\", &tmpDouble, tmpstr) != 1) ||\n                         (tmpDouble < (real_T)0) ) {\n    #ifndef EXTMODE_DISABLEPRINTF\n                        (void)printf(\"tmpDouble = %d\\n\", tmpDouble);\n                        (void)printf(\"finaltime must be a positive, integer value or inf\\n\");\n    #endif\n                        parseError = true;\n                        break;\n                    }\n#endif\n                }\n                finaltime = (real_T) tmpDouble;\n\n                argv[count-2] = NULL;\n                argv[count-1] = NULL;\n            }\n        }\n\n        if (parseError) {\n    #ifndef EXTMODE_DISABLEPRINTF        \n            (void)printf(\"\\nUsage: model_name -option1 val1 -option2 val2 -option3 \"\n                         \"...\\n\\n\");\n            (void)printf(\"\\t-tf 20 - sets final time to 20 seconds\\n\");\n    #endif        \n\n            exit(EXIT_FAILURE);\n        }\n\n        /*\n         * Parse the external mode arguments.\n         */\n        {\n            const char_T *extParseErrorPkt = ExtParseArgsAndInitUD(argc, argv);\n            if (extParseErrorPkt != NULL) {\n    #ifndef EXTMODE_DISABLEPRINTF           \n                printf(\n                    \"\\nError processing External Mode command line arguments:\\n\");\n                printf(\"\\t%s\",extParseErrorPkt);\n    #endif\n                exit(EXIT_FAILURE);\n            }\n        }\n\n        /*\n         * Check for unprocessed (\"unhandled\") args.\n         */\n        {\n            int i;\n            for (i=1; i<argc; i++) {\n                if (argv[i] != NULL) {\n    #ifndef EXTMODE_DISABLEPRINTF                \n                    printf(\"Unexpected command line argument: %s\\n\",argv[i]);\n    #endif\n                    exit(EXIT_FAILURE);\n                }\n            }\n        }\n    }\n\n    if (finaltime == RUN_FOREVER) {\n        #ifndef EXTMODE_DISABLEPRINTF\n                printf (\"\\n**warning: the simulation will run with no stop time due \"\n                \"to external mode with '-tf inf' argument.\\n\");\n        #endif\n    }\n\n#endif /* EXTMODE_DISABLE_ARGS_PROCESSING */\n}\n\nvoid rtERTExtModeStartMsg(void)\n{\n#ifndef EXTMODE_DISABLEPRINTF    \n    (void)printf(\"\\n** starting the model **\\n\");\n#endif\n}\n\n/* End of ERT specific functions and data */\n\n/* [EOF] ext_work.c */\n"},{"name":"nuttxinitialize.cpp","type":"source","group":"legacy","path":"C:\\ProgramData\\MATLAB\\SupportPackages\\R2022a\\toolbox\\target\\supportpackages\\px4\\src","tag":"","groupDisplay":"Other files","code":"/*\n * Copyright 2018-2020 The MathWorks, Inc.\n *\n * File: nuttxinitialize.c\n *\n * Abstract:\n *  This file contains RTOS thread creation functions\n *\n */\n\n#include \"nuttxinitialize.h\"\n#include \"MW_PX4_TaskControl.h\"\n\n/***********************************************\n * Added for Simulink Threads\n ************************************************/\npthread_attr_t attr;\nstatic baseRateInfo_t g_info;\nstruct sched_param g_sp;\n// extern volatile boolean_T runModel ;\n\n/***********************************************\n * Added for HRT\n ************************************************/\nstruct hrt_call BaseRate_HRT;\nint baserate_sem_copy;\n\n\n#define MW_RTOS_DEBUG 0\n\nbaseRateInfo_t EXT_sig_info;\nbaseRateInfo_t SDCard_sig_info;\nextern pthread_t backgroundThread;\nextern pthread_t loggingThread;\nextern void exitFcn(int sig);\n\nvoid setTaskPeriod(double periodInSeconds, int sigNo) {\n    timer_t timerId;\n    struct sigevent sev;\n    struct itimerspec its;\n    long stNanoSec;\n    int status;\n\n    /* Create a timer */\n    sev.sigev_notify = SIGEV_SIGNAL;\n    sev.sigev_signo = sigNo;\n    sev.sigev_value.sival_ptr = &timerId;\n    status = timer_create(CLOCK_REALTIME, &sev, &timerId);\n    CHECK_STATUS(status, 0, \"timer_create\");\n\n    /* Arm real-time scheduling timer */\n    stNanoSec = (long)(periodInSeconds * 1e9);\n    its.it_value.tv_sec = stNanoSec / 1000000000;\n    its.it_value.tv_nsec = stNanoSec % 1000000000;\n    its.it_interval.tv_sec = its.it_value.tv_sec;\n    its.it_interval.tv_nsec = its.it_value.tv_nsec;\n    status = timer_settime(timerId, 0, &its, NULL);\n    CHECK_STATUS(status, 0, \"timer_settime\");\n}\n\nvoid print_sem_value() {\n    PX4_WARN(\"Sem value = %d\", baserate_sem_copy);\n}\n\nstatic void Base_HRT_Callback(void* arg) {\n#ifndef PX4_CONNECTEDIO\n    int sem_value_check;\n\n    sem_getvalue(&baserateTaskSem, &sem_value_check);\n    sem_post(&baserateTaskSem);\n    baserate_sem_copy = sem_value_check;\n    /*if (sem_value_check > 1) {\n#if defined(MW_HRT_CONSTRAINT) && (1 == MW_HRT_CONSTRAINT)\n        if (sem_value_check > MW_SEM_WATERMARK) {\n            PX4_WARN(\"Exiting because of Hard real time constraint violation\");\n            exitFcn(1); // terminate the base-rate and sub-rate threads\n        }\n#else\n        fflush(stdout);\n        sem_init(&baserateTaskSem, 0, 0);\n#endif\n    }*/\n#endif\n}\n\n/* ---------------------------- */\n/* Externally visible functions */\n/* ---------------------------- */\nvoid myWaitForThisEvent(int sigNo) {\n    sigset_t sigMask;\n\n    sigemptyset(&sigMask);\n    sigaddset(&sigMask, sigNo);\n    sigwaitinfo(&sigMask, NULL);\n    //\tCHECK_STATUS_NOT(status, -1, \"sigwaitinfo\");\n}\n\nvoid MW_PX4_WaitForThisEvent(void* arg) {\n#ifdef EXT_MODE\n    /*pace External mode thread at 10 Hz*/\n    usleep(100000);\n\n    /*Signaling is causing issue when sample time is greater than 0.1\n     and model runs for more than 60 seconds. In this case model stop is not\n     stopping External mode. Using usleep for now to sleep the External Mode thread.*/\n\n    // baseRateInfo_t ext_info = *((baseRateInfo_t *)arg);\n    // static boolean_T isTaskPeriodSet = false;\n    // boolean_T rtmStopReq = rtmGetStopRequested(MW_StringifyDefineFunction(MODEL, _M));\n\n    // if (!isTaskPeriodSet) {\n    //     setTaskPeriod(ext_info.period, ext_info.sigNo);\n    //     isTaskPeriodSet = true;\n    // }\n\n    // if (!rtmStopReq) {\n    //     myWaitForThisEvent(ext_info.sigNo);\n    // }\n\n#endif\n}\n\nvoid myAddBlockForThisEvent(int sigNo) {\n    int status;\n    sigset_t sigMask;\n\n    sigemptyset(&sigMask);\n    sigaddset(&sigMask, sigNo);\n    status = pthread_sigmask(SIG_BLOCK, &sigMask, NULL);\n    CHECK_STATUS(status, 0, \"pthread_sigmask\");\n}\n\nvoid nuttxRTOSInit(double baseRatePeriod, int numSubrates) {\n    /* This is because in Daren's original Task callback ,a sleep was added before creating the\n     * threads*/\n    sleep(1);\n\n    int status;\n\n#if defined(MW_PX4_NUTTX_BUILD)\n    size_t stackSize;\n    int baseRatePriority = MW_BASERATE_PRIORITY;\n#endif\n\n#ifdef MW_HAS_MULTIPLE_RATES\n    int i;\n    // char taskName[20];\n#endif\n#if defined(MW_PX4_NUTTX_BUILD)\n    sched_lock();\n#endif\n    // status = sem_init(&termSem, 0, 0); PX4 PSP Dev: termSem no longer needed\n    // CHECK_STATUS(status, 0,\"sem_init:termSem\");\n    status = sem_init(&stopSem, 0, 0);\n    CHECK_STATUS(status, 0, \"sem_init:stopSem\");\n    status = sem_init(&baserateTaskSem, 0, 0);\n    CHECK_STATUS(status, 0, \"sem_init:baserateTaskSem\");\n\n    // or you can use/check: _POSIX_PRIORITY_SCHEDULING\n    // _POSIX_THREAD_PRIORITY_SCHEDULING\n#if !defined(_POSIX_PRIORITY_SCHEDULING)\n    PX4_INFO(\"Priority scheduling is NOT supported by your system.\");\n    PX4_INFO(\"The generated code will not run correctly because your\");\n    PX4_INFO(\"model contains multiple rates and uses multi-tasking\");\n    PX4_INFO(\"code generation mode. You can only run the generated code\");\n    PX4_INFO(\"in single-tasking mode in your system. Open\");\n    PX4_INFO(\"Simulation -> Configuration Parameters -> Solver dialog\");\n    PX4_INFO(\"and set \\\"Tasking mode for periodic sample times\\\" parameter to SingleTasking.\");\n    PX4_INFO(\n        \"Re-build the Simulink model with the new settings and try executing the generated code \"\n        \"again.\");\n    fflush(stdout);\n    exit(-1);\n#endif\n\n#if defined(MW_PX4_NUTTX_BUILD)\n    /* Set scheduling policy of the main thread to SCHED_FIFO */\n    g_sp.sched_priority = sched_get_priority_max(SCHED_FIFO) - 50;\n    status = sched_setscheduler(0, SCHED_FIFO, &g_sp);\n    CHECK_STATUS(status, 0, \"sched_setscheduler\");\n\n    /*Added init attribute and scheduler policy */\n    pthread_attr_init(&attr);\n    status = pthread_attr_setinheritsched(&attr, PTHREAD_EXPLICIT_SCHED);\n    CHECK_STATUS(status, 0, \"pthread_attr_setinheritsched\");\n    status = pthread_attr_setschedpolicy(&attr, SCHED_FIFO);\n    CHECK_STATUS(status, 0, \"pthread_attr_setschedpolicy\");\n    // status = pthread_attr_setdetachstate(&attr, PTHREAD_CREATE_JOINABLE);\n    // CHECK_STATUS(status, 0, \"pthread_attr_setdetachstate\");\n\n    /* PTHREAD_STACK_MIN is the minimum stack size required to start a thread */\n    stackSize = 8192 + PTHREAD_STACK_MIN;\n\n    /*added stack attribute back in */\n    status = pthread_attr_setstacksize(&attr, stackSize);\n    CHECK_STATUS(status, 0, \"pthread_attr_setstacksize\");\n#endif\n    /* set up info structure */\n    g_info.period = baseRatePeriod;\n    g_info.sigNo = BASERATE_TIMER_SIGNAL; // SIGRTMIN;\n\n#if MW_RTOS_DEBUG\n    PX4_INFO(\"   stackSize = %d sched_priority = %d\", stackSize, g_sp.sched_priority);\n    PX4_INFO(\"   MW_BASERATE_PERIOD = %8.5f MW_BASERATE_PRIORITY = %d SIGRTMIN = 0x%08X\",\n             (double)baseRatePeriod, (int)baseRatePriority, SIGRTMIN);\n    PX4_INFO(\"   Init info.period = %8.5f sigNo = 0x%04X\", g_info.period, g_info.sigNo);\n    PX4_INFO(\"**creating the Base Rate thread before calling pthread_create**\");\n    fflush(stdout);\n#endif\n\n    /* Create the Base Rate Task here */\n#if defined(MW_PX4_NUTTX_BUILD)\n    g_sp.sched_priority = baseRatePriority;\n    status = pthread_attr_setschedparam(&attr, &g_sp);\n    status = pthread_create(&baseRateThread, &attr, &baseRateTask, (void*)&g_info);\n#elif defined(MW_PX4_POSIX_BUILD)\n    status = pthread_create(&baseRateThread, nullptr, &baseRateTask, (void*)&g_info);\n#endif\n#if MW_RTOS_DEBUG\n    PX4_INFO(\"** Base Rate Task ID = %d with Priority = %d\\n\", baseRateThread, g_sp.sched_priority);\n    fflush(stdout);\n#endif\n\n/* Create sub-rate Tasks here */\n#ifdef MW_HAS_MULTIPLE_RATES\n#if MW_RTOS_DEBUG\n    PX4_INFO(\"Creating sub-rate task threads\\n\");\n    PX4_INFO(\"Number of sub rate tasks: %d \\n\", MW_NUMBER_SUBRATES);\n    fflush(stdout);\n#endif\n\n    for (i = 0; i < MW_NUMBER_SUBRATES; i++) {\n        taskId[i] = i;\n        status = sem_init(&subrateTaskSem[i], 0, 0);\n        CHECK_STATUS(status, 0, \"sem_init: subrateTaskSem\");\n        // g_sp.sched_priority = MW_BASERATE_PRIORITY -40 + subratePriority[i] - 1;\n        g_sp.sched_priority = subratePriority[i];\n#if MW_RTOS_DEBUG\n        PX4_INFO(\"MW_SUBRATE_PRIORITY = %d \", (int)g_sp.sched_priority);\n#endif\n\n#if defined(MW_PX4_NUTTX_BUILD)\n        status = pthread_attr_setschedparam(&attr, &g_sp);\n        CHECK_STATUS(status, 0, \"pthread_attr_setschedparam\");\n        status = pthread_create(&subRateThread[i], &attr, &subrateTask, (void*)&taskId[i]);\n#elif defined(MW_PX4_POSIX_BUILD)\n        status = pthread_create(&subRateThread[i], nullptr, &subrateTask, (void*)&taskId[i]);\n#endif\n        CHECK_STATUS(status, 0, \"pthread_create\");\n\n#if MW_RTOS_DEBUG\n        PX4_INFO(\"** Sub Rate Task ID = %d \", subRateThread[i]);\n        fflush(stdout);\n#endif\n    }\n#endif // End of \"If Multiple Rates\" check\n\n#if defined(MW_PX4_NUTTX_BUILD)\n    g_sp.sched_priority = baseRatePriority;\n    status = pthread_attr_setschedparam(&attr, &g_sp);\n#endif\n\n    /* Create the Scheduler Task here */\n    long stMicroSec;\n    stMicroSec = (long)(g_info.period * 1e6);\n    hrt_call_every(&BaseRate_HRT, stMicroSec, stMicroSec, Base_HRT_Callback,\n                   NULL); // timing callback to post base-rate semaphore\n\n/* Create the External Mode Task here */\n#ifdef EXT_MODE\n    /*---------- Creating EXT-mode Background Task ------------------*/\n    /* Setup signal info to block for EXT Mode */\n    EXT_sig_info.period = 0.1; // Sample rate at which we want Simulink to update w/ ext mode\n    EXT_sig_info.sigNo = SIGRTMIN;\n    /* Signaling the thread not working for low sample frequency*/\n    // sigemptyset(&EXT_sig_info.sigMask);\n    // sigaddset(&EXT_sig_info.sigMask, EXT_sig_info.sigNo);\n    // myAddBlockForThisEvent(EXT_sig_info.sigNo);\n\n    /* Setup thread for Custom Task */\n    fflush(stdout);\n#if defined(MW_PX4_NUTTX_BUILD)\n    g_sp.sched_priority = 40; // default is 100\n    status = pthread_attr_setschedparam(&attr, &g_sp);\n    status = pthread_create(&backgroundThread, &attr, &backgroundTask, (void*)&EXT_sig_info);\n#elif defined(MW_PX4_POSIX_BUILD)\n    status = pthread_create(&backgroundThread, nullptr, &backgroundTask, (void*)&EXT_sig_info);\n#endif\n    CHECK_STATUS(status, 0, \"EXT Mode Background pthread_create\");\n/*---------------------------------------------------------*/\n#endif\n\n/* Create the SD Card Task here */\n#if MAT_FILE\n    /*---------- Creating SD Card Background Task ------------------*/\n    fflush(stdout);\n#if defined(MW_PX4_NUTTX_BUILD)\n    g_sp.sched_priority = 40; // default is 100\n    status = pthread_attr_setschedparam(&attr, &g_sp);\n    status = pthread_create(&loggingThread, &attr, &loggingThreadFcn, NULL);\n#elif defined(MW_PX4_POSIX_BUILD)\n    status = pthread_create(&loggingThread, nullptr, &loggingThreadFcn, NULL);\n#endif\n    CHECK_STATUS(status, 0, \"SD Card Background pthread_create\");\n#if MW_RTOS_DEBUG\n    PX4_INFO(\"** SD Card Background ID = %d \", loggingThread);\n    fflush(stdout);\n#endif\n\n/*---------------------------------------------------------*/\n#endif\n\n\n#if MW_RTOS_DEBUG\n    PX4_INFO(\"px4_simulink_app : Created Simulink task threads successfully\\n\");\n    fflush(stdout);\n#endif\n#if defined(MW_PX4_NUTTX_BUILD)\n    sched_unlock();\n#endif\n}\n"},{"name":"rtiostream_interface.c","type":"source","group":"legacy","path":"D:\\MATLAB2022a\\rtw\\c\\src\\ext_mode\\common","tag":"","groupDisplay":"Other files","code":"/*\n * Copyright 1994-2018 The MathWorks, Inc.\n *\n * File: rtiostream_interface.c     \n *\n * Abstract: \n * Provide a target-side communications driver interface for Simulink external\n * mode.\n */\n\n\n/***************** TRANSPORT-INDEPENDENT INCLUDES *****************************/\n\n#ifndef EXTMODE_DISABLEPRINTF  \n#include <stdio.h>\n#endif\n\n#include <stdlib.h>\n#include <string.h>\n\n#include \"updown_util.h\"\n#include \"rtwtypes.h\"\n#include \"rtw_extmode.h\"\n\n/* include rtIOStream interface to use */\n#include \"rtiostream.h\"\n\n/* include Target-side rtIOStream utility APIs */\n#include \"rtiostream_utils.h\"\n\n#ifdef VXWORKS\n# include <sockLib.h>\n# include <inetLib.h>\n# include <selectLib.h>\nextern SEM_ID commSem;\n#endif\n\n#ifdef LEGO\n#include \"ecrobot_interface.h\"\n#endif\n\n#include \"ext_types.h\"\n#include \"ext_share.h\"\n\n/* Logical definitions */\n#if (!defined(__cplusplus))\n#  ifndef false\n#   define false                       (0U)\n#  endif\n#  ifndef true\n#   define true                        (1U)\n#  endif\n#endif\n\n/* \n * ExtCloseConnection() sets this to FALSE (to signal the low layer rtiostream)\n * on an external mode disconnection.\n * \n * rtIOStreamRecv() reads a few spurious bytes before receiving valid data on its\n * first call during external mode start or connect. Setting receivedSyncByteE\n * to FALSE forces rtIOStreamRecv() to look for the first character 'e' in 'ext-mode',\n * which is the first valid external mode packet. All preceding bytes are rejected and\n * subsequent bytes including the string 'ext-mode' are forwarded.\n * \n * For a more detailed description refer to the\n * comments in the associated rtiostream_serial_daemon.c/cpp file.\n */\n#if (defined(ARDUINO_ARCH_AVR) || defined(ARDUINO_SAM_DUE)) && !defined(_ROTH_LEONARDO_)\nextern volatile boolean_T receivedSyncByteE;\n#endif\n\ntypedef struct ExtUserData_tag {\n    boolean_T waitForStartPkt;\n    int streamID;\n#ifdef VXWORKS \n    int_T processArgsArgc;\n    const char_T ** processArgsArgv;\n#endif\n} ExtUserData;\n\n\n/* Function: ExtProcessArgs ====================================================\n * Abstract:\n *  Process the arguments specified by the user when invoking the target\n *  program.  In the case of this TCPIP example the args handled by external\n *  mode are:\n *      o -port #\n *          specify tcpip port number\n *      \n *      o -w\n *          wait for a start packet from the target before starting to execute\n *          the real-time model code\n *\n *  If any unrecognized options are encountered, ignore them.\n *\n * NOTES:\n *  o An error string is returned on failure, NULL is returned on success.\n *\n *  o IMPORTANT!!!\n *    As the arguments are processed, their strings must be NULL'd out in\n *    the argv array.  ext_svr will search argv when this function returns,\n *    and if any non-NULL entries are encountered an \"unrecognized option\" \n *    packet will be displayed.\n */\nPUBLIC const char_T *ExtProcessArgs(\n    ExtUserData   *UD,\n    const int_T   argc,\n    const char_T  *argv[])\n{\n    const char_T *error          = NULL;\n    int_T        count           = 1;\n\n#if defined(ON_TARGET_WAIT_FOR_START) && ON_TARGET_WAIT_FOR_START == 1\n    boolean_T    waitForStartPkt = true;\n#else\n    boolean_T    waitForStartPkt = false;\n#endif\n\n    while(count < argc) {\n        const char_T *option = argv[count++];\n        \n        if (option == NULL) continue;\n\n        if (strcmp(option, \"-w\") == 0) {\n            /* \n             * -w (wait for packet from host) option\n             */\n            waitForStartPkt = true;\n            \n            argv[count-1] = NULL;\n        } else if (strcmp(option, \"-ignore-arg\") == 0 && (count != argc)) {\n            /*\n             * Special argument used by sbruntests to mark an executable\n             * with a particular ID allowing the executable to be killed\n             * when the sbruntests session is killed.\n             *\n             * -ignore-arg SBRUNTESTS_SESSION_ID#\n             */\n            count++;     \n            argv[count-2] = NULL;\n            argv[count-1] = NULL;\n        }\n    }\n\n    assert(UD != NULL);\n    UD->waitForStartPkt = waitForStartPkt;\n\n#ifdef VXWORKS\n    /* Store argv and argc for processing in ExtUserDataSetPort. \n     * rtIOStreamOpen will be called in ExtUserDataSetPort */\n    UD->processArgsArgc = argc;\n    UD->processArgsArgv = (const char_T **) argv;\n#else\n    /* rtIOStreamOpen combines argument processing and opening the stream */\n    UD->streamID = rtIOStreamOpen(argc, (void **) (void *) argv);\n#endif    \n    return(error);\n} /* end ExtProcessArgs */\n\n\n/* Function: ExtUserDataCreate =================================================\n * Abstract:\n *  Create the user data.\n */\nPUBLIC ExtUserData *ExtUserDataCreate(void)\n{\n    static ExtUserData UD;\n\n    return &UD;\n} /* end ExtUserDataCreate */\n\n\n/* Function: ExtInit ===========================================================\n * Abstract:\n *  Called once at program startup to do any initialization related to external\n *  mode.  For the TCPIP, example, a socket is created to listen for\n *  connection requests from the host.  EXT_NO_ERROR is returned on success,\n *  EXT_ERROR on failure.\n *\n * NOTES:\n *  o This function should not block.\n */\nPUBLIC boolean_T ExtInit(ExtUserData *UD)\n{\n    boolean_T error      = EXT_NO_ERROR;\n\n    UNUSED_PARAMETER(UD);\n\n\n    /* rtIOStreamOpen has already been called so no further\n     * action required here */\n\n    return(error);\n} /* end ExtInit */\n\n/* Function: ExtSetHostPkt =====================================================\n * Abstract:\n *  Sets (sends) the specified number of bytes on the comm line.  As long as\n *  an error does not occur, this function is guaranteed to set the requested\n *  number of bytes.  The number of bytes set is returned via the 'nBytesSet'\n *  parameter.  EXT_NO_ERROR is returned on success, EXT_ERROR is returned on\n *  failure.\n *\n * NOTES:\n *  o it is always o.k. for this function to block if no room is available\n */\nPUBLIC boolean_T ExtSetHostPkt(\n    const ExtUserData *UD,\n    const int         nBytesToSet,\n    const char        *src,\n    int               *nBytesSet)\n{\n    boolean_T errorCode = EXT_NO_ERROR;\n\tint_T rtIOStreamErrorStatus;\n\t*nBytesSet = 0;\t/* assume */\n\n    #ifdef VXWORKS\n        semTake(commSem, WAIT_FOREVER);\n    #endif\n\n    /* Blocks until all requested outgoing data is sent */\n    rtIOStreamErrorStatus = rtIOStreamBlockingSend(UD->streamID,\n                                                   (const void *) src,\n                                                   (uint32_T) nBytesToSet);\n    \n    if (rtIOStreamErrorStatus == RTIOSTREAM_ERROR) {\n        errorCode = EXT_ERROR;\n    } else { \n        *nBytesSet = nBytesToSet;\n    }\n    \n    #ifdef VXWORKS\n        semGive(commSem);\n    #endif\n\n    return errorCode;\n\n} /* end ExtSetHostPkt */\n\n/* Function: ExtGetHostPkt =====================================================\n * Abstract:\n *  Attempts to get the specified number of bytes from the comm line.  The\n *  number of bytes read is returned via the 'nBytesGot' parameter.\n *  EXT_NO_ERROR is returned on success, EXT_ERROR is returned on failure.\n *\n * NOTES:\n *  o it is not an error for 'nBytesGot' to be returned as 0\n *  o not guaranteed to read total requested number of bytes\n */\nPUBLIC boolean_T ExtGetHostPkt(\n    const ExtUserData *UD,\n    const int         nBytesToGet,\n    int               *nBytesGot, /* out */\n    char              *dst)       /* out */\n{\n    boolean_T error = EXT_NO_ERROR;\n    int_T result;\n    size_t stNBytesGot;\n\n    result = rtIOStreamRecv(UD->streamID, dst, (size_t) nBytesToGet, &stNBytesGot);\n\n    if (result == RTIOSTREAM_ERROR) {\n        error = EXT_ERROR;\n    } else {\n        *nBytesGot = (int) stNBytesGot;\n    }\n\n    return(error);\n} /* end ExtGetHostPkt */\n\n\n/* Function: ExtWaitForStartPktFromHost ========================================\n * Abstract:\n *  Return true if the model should not start executing until told to do so\n *  by the host.\n */\nPUBLIC boolean_T ExtWaitForStartPktFromHost(ExtUserData *UD)\n{\n    return(UD->waitForStartPkt);\n} /* end ExtWaitForStartPktFromHost */\n\n\n/* Function: ExtUserDataDestroy ================================================\n * Abstract:\n *  Destroy the user data.\n */\nPUBLIC void ExtUserDataDestroy(ExtUserData *UD)\n{\n    UNUSED_PARAMETER(UD);\n} /* end ExtUserDataDestroy */\n\n/* Function: ExtUserDataSetPort ================================================\n * Abstract:\n *  Set the port in the external mode user data structure.\n */\n#ifdef VXWORKS\nPUBLIC void ExtUserDataSetPort(ExtUserData *UD, const int_T port)\n{\n#define PORT_NUM_STR_DEFAULT \"00255\\0\"\n#define PORT_NUM_STR_LEN 6 /* allocates extra space for sprintf below */\n#define PORT_ARG_STR \"-port\"\n    /* create an extended argc and argv that includes -port */    \n    const int_T argc = UD->processArgsArgc + 2;\n    const char_T * portArgStr = PORT_ARG_STR;\n    char_T portNumStr[PORT_NUM_STR_LEN] = PORT_NUM_STR_DEFAULT;\n    const char_T ** argv = (const char_T **) calloc(argc, sizeof(char_T *));\n    int_T count;\n    if (argv == NULL) {\n#ifndef EXTMODE_DISABLEPRINTF        \n       (void)fprintf(stderr,\n                \"ExtUserDataSetPort: Memory allocation error.\\n\");\n#endif\n       /* any unprocessed args in the original argv will be caught by caller */\n       return;\n    }\n    /* set a non-default port if valid */ \n    if ( (port >=255) && (port <= 65535)) {\n        sprintf(portNumStr, \"%5d\", port);\n    }\n    /* copy original argv */\n    for (count = 0; count < UD->processArgsArgc; count++) {\n      argv[count] = UD->processArgsArgv[count];\n    }\n    /* add port */\n    argv[argc-2] = portArgStr;\n    argv[argc-1] = (const char_T *) portNumStr;\n        \n    /* rtIOStreamOpen combines argument processing and opening the stream */\n    UD->streamID = rtIOStreamOpen(argc, (void *) argv);\n\n    /* We assume -port argument has been processed by rtIOStream.\n     * Copy back other elements of processed argv which should have been set to NULL. */\n    for (count = 0; count < UD->processArgsArgc; count++) {\n       UD->processArgsArgv[count] = argv[count];\n    }\n    free(argv);\n} /* end ExtUserDataSetPort */\n#endif\n\n\n/* Function: ExtModeSleep =====================================================\n * Abstract:\n *  This function is used if the target is in pause mode or waiting for a\n *  start packet from the host. By calling ExtModeSleep prior to checking \n *  the receive buffer, we can prevent excessive CPU loading.\n */\n#ifndef VXWORKS\nPUBLIC void ExtModeSleep(\n    const ExtUserData *UD,\n    const long        sec,  /* # of secs to wait        */\n    const long        usec) /* # of micros secs to wait */\n{\n\n    UNUSED_PARAMETER(UD);\n    UNUSED_PARAMETER(sec);\n    UNUSED_PARAMETER(usec);\n\n    /* This function is intentionally left empty */\n\n} /* end ExtModeSleep */\n#endif\n\n\n/* Function: ExtOpenConnection =================================================\n * Abstract:\n *  The rtIOStream driver must open a connection implicitly as required. Hence\n *  the implementation of this function is empty.\n */\nPUBLIC boolean_T ExtOpenConnection(\n    ExtUserData *UD,\n    boolean_T   *outConnectionMade)\n{\n    boolean_T          error          = EXT_NO_ERROR;\n    UNUSED_PARAMETER(UD);\n\n    *outConnectionMade = 1;\n    return error;\n\n} /* end ExtOpenConnection */\n\n\n/* Function: ExtForceDisconnect ================================================\n * Abstract:\n *  Called by rt_UploadServerWork() in ext_svr.c when there is an extmode\n *  communication error (e.g. a tcp/ip disconnection between the host and target\n *  caused by a cable problem or extremely high network traffic).  In this case,\n *  we want the target to disconnect from the host even if it can't communicate\n *  with the host because we assume that the communication problem caused the\n *  host to disconnect.  This function will perform all steps necessary to\n *  shutdown the communication and leave the target in a state ready to be\n *  reconnected.\n */\nPUBLIC void ExtForceDisconnect(ExtUserData *UD)\n{\n\n    UNUSED_PARAMETER(UD);\n\n} /* end ExtForceDisconnect */\n\n/* Function: ExtCloseConnection ================================================\n * Abstract:\n *  Called when the target needs to disconnect from the host (disconnect\n *  procedure is initiated by the host).\n */\nPUBLIC void ExtCloseConnection(ExtUserData *UD)\n{\n    UNUSED_PARAMETER(UD);\n    \n    #ifdef LEGO\n    ecrobot_term_bt_connection();\n    #endif\n    \n    #if (defined(ARDUINO_ARCH_AVR) || defined(ARDUINO_SAM_DUE)) && !defined(_ROTH_LEONARDO_)\n    receivedSyncByteE = false;\n    #endif\n            \n} /* end ExtCloseConnection */\n\n\n/* Function: ExtShutDown =======================================================\n * Abstract:\n *  Called when the target program is terminating.\n */\nPUBLIC void ExtShutDown(ExtUserData *UD)\n{\n    rtIOStreamClose(UD->streamID);\n} /* end ExtShutDown */\n\n/* LocalWords:  NULL'd svr extmode tcp ip\n */\n"},{"name":"rtiostream_utils.c","type":"source","group":"legacy","path":"D:\\MATLAB2022a\\toolbox\\coder\\rtiostream\\src\\utils","tag":"","groupDisplay":"Other files","code":"/* Copyright 2012-2013 The MathWorks, Inc. */\n\n#include \"rtiostream_utils.h\"\n\n/* include rtIOStream interface to use */\n#include \"rtiostream.h\" \n\n/* TARGET_CONNECTIVITY_TESTING might be defined by some MathWorks tests for\n * testing purposes only. In this case, we force SIZE_MAX to be 4 so we \n * could test the pointer arithmetic in rtIOStreamBlockingSend and\n * rtIOStreamBlockingRecv.\n */ \n#ifdef TARGET_CONNECTIVITY_TESTING\n    #define SIZE_MAX 4\n#else\n    /* define SIZE_MAX if not already defined (e.g. by a C99 compiler) */\n    #ifndef SIZE_MAX\n        #define SIZE_MAX ((size_t)-1)\n    #endif\n#endif\n\n#ifndef MemUnit_T\n   /* External Mode */\n   typedef unsigned char IOUnit_T; \n#else\n   /* SIL/PIL */\n   #ifdef HOST_WORD_ADDRESSABLE_TESTING\n      /* rtIOStream will handle data in single byte chunks \n       *\n       * uint8_T can be > 8-bits for certain portable word sizes \n       * cases (e.g. C2000) so use native type instead */\n      typedef unsigned char IOUnit_T;\n   #else\n      /* rtIOStream will handle data in MemUnit_T size chunks */\n      typedef MemUnit_T IOUnit_T;\n   #endif\n#endif\n\n/* Blocks until all requested outgoing data is sent */\nint rtIOStreamBlockingSend(const int streamID, \n                           const void * const src, \n                           uint32_T size) {\n\n    size_t transferAmount;\n    size_t sizeSent;\n    int errorCode      = RTIOSTREAM_NO_ERROR;   \n    const IOUnit_T * srcPtr = (const IOUnit_T *) src;\n    \n    /* use a variable to avoid SIZE_MAX being treated as a constant\n     * which leads to compiler warnings for \"MIN\" on platforms where\n     * SIZE_MAX > UINT32_MAX */\n    size_t sizeMax = SIZE_MAX;\n    while (size > 0) {\n        /* support full uint32 size */\n        transferAmount = (size_t) MIN(sizeMax, size);        \n        errorCode = rtIOStreamSend(streamID,\n                                   (const void *) srcPtr,\n                                   transferAmount,\n                                   &sizeSent);\n        if (errorCode == RTIOSTREAM_ERROR) {\n            return errorCode;\n        }\n        else {            \n            size -= (uint32_T) sizeSent;\n            srcPtr += sizeSent;\n        }\n    }\n    return errorCode;\n}\n\n/* Blocks until all requested incoming data is received */\nint rtIOStreamBlockingRecv(const int streamID,\n                           void * const dst,\n                           uint32_T size) {\n\n   size_t transferAmount;\n   size_t sizeRecvd;\n   int errorCode      = RTIOSTREAM_NO_ERROR;\n   IOUnit_T * dstPtr = (IOUnit_T *) dst;\n   \n   /* use a variable to avoid SIZE_MAX being treated as a constant\n    * which leads to compiler warnings for \"MIN\" on platforms where \n    * SIZE_MAX > UINT32_MAX */\n   size_t sizeMax = SIZE_MAX;\n   while (size > 0) {\n      /* support full uint32 size */\n      transferAmount = (size_t) MIN(sizeMax, size);      \n      errorCode = rtIOStreamRecv(streamID, \n                                 (void *) dstPtr, \n                                 transferAmount, \n                                 &sizeRecvd);\n      if (errorCode == RTIOSTREAM_ERROR) {\n            return errorCode;\n      }\n      else {          \n         size -= (uint32_T) sizeRecvd;\n         dstPtr += sizeRecvd;\n      }\n   }\n   return errorCode;\n}\n\n\n"},{"name":"updown.c","type":"source","group":"legacy","path":"D:\\MATLAB2022a\\rtw\\c\\src\\ext_mode\\common","tag":"","groupDisplay":"Other files","code":"/*\n * Copyright 1994-2020 The MathWorks, Inc.\n */\n#include <stdlib.h>\n#include <string.h>\n\n/*Real Time Workshop headers*/\n#include \"rtwtypes.h\"\n#include \"rtw_extmode.h\"\n#include \"sysran_types.h\"\n\n/* \n * String is dynamic in the following cases\n * - Rapid Accelerator mode\n */\n#ifdef IS_RAPID_ACCEL\n#define MW_DYNAMIC_STRING_SUPPORT\n#endif\n\n#ifdef MW_DYNAMIC_STRING_SUPPORT\n#include \"mwstringutil.h\"\n/* \"assert\" is defined in updown_util.h below */ \n#undef assert\n#endif\n\n/* \n * Note: Local headers should be after external headers\n *       Otherwise, some macros may be re-defined\n *       One example is \"assert\" in updown_util.h\n *       mwstringutil.h inderectly re-define it\n */\n#include \"ext_types.h\"\n#include \"ext_share.h\"\n#include \"ext_svr.h\"\n#include \"ext_work.h\"\n#include \"updown_util.h\"\n#include \"dt_info.h\"\n\n/* DUMP_PKT is defined to be (0) below - why? See g2176068. */\n#if defined(VERBOSE) || (defined(DUMP_PKT) && DUMP_PKT)\n#include <stdio.h>\n#endif\n\n/* \n * Depending on the target's native word size and pointer size, interrupts\n * might need to be disabled around critical regions when accessing the \n * the external mode circular buffer. If, for example, reading a pointer \n * is not guaranteed to be an atomic operation on your target, then you  \n * need to define the preprocessor defines below to prevent interrupts  \n * around the critical regions.\n * \n * Here is a description of each of these preprocessor defines:\n * EXTMODE_PROTECT_CRITICAL_REGIONS: this should be defined if interrupts \n *      should be disabled around critical regions\n * EXTMODE_INTERRUPT_INC_HDR: this defines the include header file \n *      containing the declarations for the enabled/disable interrupts \n *      functions\n * EXTMODE_ENABLE_INTERRUPTS:  this defines the enable interrupts function\n * EXTMODE_DISABLE_INTERRUPTS: this defines the disable interrupts function\n *\n * If you define EXTMODE_PROTECT_CRITICAL_REGIONS, you need to define the \n * other above preprocessor defines, otherwise they are not required.\n */\n#ifdef EXTMODE_PROTECT_CRITICAL_REGIONS\n    #if !defined (EXTMODE_INTERRUPT_INC_HDR) || \\\n        !defined (EXTMODE_ENABLE_INTERRUPTS) || \\\n        !defined (EXTMODE_DISABLE_INTERRUPTS)\n        #error EXTMODE_INTERRUPT_INC_HDR, EXTMODE_ENABLE_INTERRUPTS and \\\n               EXTMODE_DISABLE_INTERRUPTS should be defined\n    #endif\n    /* \n     * include header file containing declarations for interrupt \n     * enable/disable functions \n     */    \n    #include EXTMODE_INTERRUPT_INC_HDR\n#endif\n\n/**********************\n * External Variables *\n **********************/\n#ifdef VXWORKS\n# include <sockLib.h>\n# include <inetLib.h>\n# include <selectLib.h>\nextern SEM_ID uploadSem;\n\n#endif\n\n/* Logical definitions */\n#if (!defined(__cplusplus))\n#  ifndef false\n#   define false                       (0U)\n#  endif\n#  ifndef true\n#   define true                        (1U)\n#  endif\n#endif\n\nboolean_T host_upstatus_is_uploading = false;\n\n/******************************************************************************\n * Parameter Download                                                         *\n ******************************************************************************/\n\n#ifdef VERBOSE\n/* Function: DType2Real_T ======================================================\n * Convert a built-in data type to a real_T value.  Return the real_T value\n * as well as a string (by reference) corresponding to the original data type.\n * If the data type is not recognized as a Simulink built-in data type, then\n * NULL is returned for the dTypeName and 0 is returned for the dTypeValue.\n */\nPRIVATE double DType2Double(\n    const char              *vPtr,\n    const int               dTypeIdx,\n    const DataTypeTransInfo *dtInfo,\n    const char              **dTypeName)\n{\n    real_T     outVal;\n    char * const *dTypeNames = (char * const *)dtGetDataTypeNames(dtInfo);\n    const char *thisName     = dTypeNames[dTypeIdx];\n\n    *dTypeName = thisName;\n\n    if (strcmp(thisName, \"real_T\") == 0) {\n        outVal = (real_T) (((const real_T*)vPtr)[0]);\n    } else if (strcmp(thisName, \"real32_T\") == 0) {\n        outVal = (real_T) (((const real32_T*)vPtr)[0]);\n    } else if (strcmp(thisName, \"int8_T\") == 0) {\n        outVal = (real_T) (((const int8_T*)vPtr)[0]);\n    } else if (strcmp(thisName, \"uint8_T\") == 0) {\n        outVal = (real_T) (((const uint8_T*)vPtr)[0]);\n    } else if (strcmp(thisName, \"int16_T\") == 0) {\n        outVal = (real_T) (((const int16_T*)vPtr)[0]);\n    } else if (strcmp(thisName, \"uint16_T\") == 0) {\n        outVal = (real_T) (((const uint16_T*)vPtr)[0]);\n    } else if (strcmp(thisName, \"int32_T\") == 0) {\n        outVal = (real_T) (((const int32_T*)vPtr)[0]);\n    } else if (strcmp(thisName, \"uint32_T\") == 0) {\n        outVal = (real_T) (((const uint32_T*)vPtr)[0]);\n    } else if (strcmp(thisName, \"boolean_T\") == 0) {\n        outVal = (real_T) (((const boolean_T*)vPtr)[0]);\n    } else {\n        outVal    = 0;\n        dTypeName = NULL;\n    }\n    return(outVal);\n} /* end DType2Double */\n#endif\n\n\n/* Function: SetParam ==========================================================\n * Install new parameters.\n *\n * NOTE: pbuf looks like:\n *  [NPARAMS\n *   B S W DI DATA   % pVal 0\n *   B S W DI DATA   % pVal 1\n *   B S W DI DATA   % pVal N\n *  ]\n *\n *  No assumptions about the alignment of pbuf may be made.\n *\n *  where,\n *      B   : Data type transition index.  Note that on the target the data\n *            type transition index provides both the base address (B)\n *              of the transition as well as whether or not\n *              that section of the array contains complex elements.\n *      S   : starting offset of the data from the DT_TRANS_IDX\n *      W   : number of elements for this param\n *      DI  : index into rtw data type table (inUse idx)\n *      DATA: the param values (in target format).\n *\n *  and,\n *      All values, excluding DATA, are int32_T.\n */\n#ifndef EXTMODE_DISABLEPARAMETERTUNING\nPUBLIC void SetParam(RTWExtModeInfo  *ei, const char *pbuf)\n{\n    int        i;\n    int32_T    nParams;\n    const char *bufPtr    = pbuf;\n    const int  B          = 0; /* index into dtype tran table (base address)  */\n    const int  SI         = 1; /* starting index - wrt to base address        */\n    const int  W          = 2; /* width of section (number of elements)       */\n    const int  DI         = 3; /* index into data type tables                 */\n    const int  tmpBufSize = sizeof(int32_T) * 4;\n    int32_T    tmpBuf[4];\n\n    const DataTypeTransInfo *dtInfo = (const DataTypeTransInfo *) rteiGetModelMappingInfo(ei);\n    const DataTypeTransitionTable *dtTable = dtGetParamDataTypeTrans(dtInfo);\n    const uint_T *dtSizes = dtGetDataTypeSizes(dtInfo);\n    \n#ifdef MW_DYNAMIC_STRING_SUPPORT\n    const char_T* *dtNames = dtGetDataTypeNames(dtInfo);\n#endif\n\n    /* unpack NPARAMS */\n    (void)memcpy(&nParams, bufPtr, sizeof(int32_T));\n    bufPtr += sizeof(int32_T);\n    \n#ifdef VERBOSE\n    printf(\"\\nUpdating %d parameters....\\n\", nParams);\n#endif\n\n    /*\n     * Unpack the data and install the new parameters.\n     */\n    for (i=0; i<nParams; i++) {\n        int_T   elSize;\n        int_T   nBytes;\n        char_T  *start;\n        char_T  *tranAddress;\n        int_T   tranIsComplex;\n\n        /* unpack B SI W DI */\n        (void)memcpy(tmpBuf, bufPtr, tmpBufSize);\n        bufPtr += tmpBufSize;\n\n        /* \n         * Find starting address and size (nBytes) for this parameters \n         * section of memory.\n         */\n        tranAddress   = dtTransGetAddress(dtTable, tmpBuf[B]);\n        tranIsComplex = dtTransGetComplexFlag(dtTable, tmpBuf[B]);\n\n        elSize = dtSizes[tmpBuf[DI]] * (tranIsComplex ? 2 : 1);\n        nBytes = tmpBuf[W] * elSize;\n\n        /*\n         * String in rapid accelerator is:\n         *   - transferred as character stream, element size is sizeof(char_T)\n         *   - stored/operated as void *, element size is sizeof(void*)\n         * We need to use the later one to calculate \"start\" address\n         */\n#ifdef MW_DYNAMIC_STRING_SUPPORT\n        if (strcmp(dtNames[tmpBuf[DI]], \"string\") == 0) {\n            elSize = sizeof(void*);\n        }\n#endif\n        start = tranAddress + (tmpBuf[SI] * elSize);\n\n        /* Install the params. */\n#ifdef MW_DYNAMIC_STRING_SUPPORT\n        if (strcmp(dtNames[tmpBuf[DI]], \"string\") == 0) {\n            suInitializeString(start, bufPtr);\n            bufPtr += nBytes;\n        } else\n#endif\n        {\n            (void)memcpy(start, bufPtr, nBytes);\n            bufPtr += nBytes;\n        }\n\n#ifdef VERBOSE\n        /*\n         * It is safe to assume that once the params are installed into\n         * the param vector that they are properly aligned.  So we\n         * do our verbosity print-out here.\n         */\n        {\n            double     val;\n            const char *dTypeName;\n            const char *vPtr = (const char *)start;\n\n            val = DType2Double(start, tmpBuf[DI], dtInfo, &dTypeName);\n            printf(\"\\n\\tParam| \"\n                   \"DT_Trans: %d, index: %d, nEls: %d, data type: [%s, %d]\\n\",\n                   tmpBuf[B], tmpBuf[SI], tmpBuf[W],\n                   (dTypeName != NULL) ? dTypeName : \"\",tmpBuf[DI]);\n\n            if (!tranIsComplex) {\n                int j;\n                for (j=0; j<tmpBuf[W]; j++) {\n                    val = DType2Double(vPtr, tmpBuf[DI], dtInfo, &dTypeName);\n                    printf(\"\\t\\t%f\\n\", val);\n                    vPtr += dtSizes[tmpBuf[DI]];\n                }\n            } else {\n                int j;\n                for (j=0; j<tmpBuf[W]; j++) {\n                    val = DType2Double(vPtr, tmpBuf[DI], dtInfo, &dTypeName);\n                    printf(\"\\t\\t%f + \", val);\n                    vPtr += dtSizes[tmpBuf[DI]];\n\n                    val = DType2Double(vPtr, tmpBuf[DI], dtInfo, &dTypeName);\n                    printf(\"\\t\\t%fi\\n\", val);\n                    vPtr += dtSizes[tmpBuf[DI]];\n                }\n            }\n        }\n#endif\n    }\n} /* end SetParam */\n#endif /* ifndef EXTMODE_DISABLEPARAMETERTUNING */\n\n\n/******************************************************************************\n * Parameter Upload                                                           *\n ******************************************************************************/\n#include \"upsup_public.h\"\n#define DUMP_PKT (0)\n\n\n/*=============================================================================\n * Circular buffer stuff.\n *============================================================================*/\ntypedef struct BufMemList_tag {\n\n#if ASSERTS_ON\n    int_T  maxBufs;     /* for debugging                       */\n#endif\n    int_T  nActiveBufs; /* num non-empty bufs                  */\n    int_T  *tids;       /* tid associated with each active buf */\n    BufMem *bufs;       /* sections of each buffer to upload   */\n} BufMemList;\n\n\ntypedef struct CircularBuf_tag {\n    volatile int_T    empty;\n\n    int_T    bufSize;\n    char_T   *buf;\n    \n    char_T* volatile head;\n    char_T* volatile tail;\n\n    char_T   *newTail;\n\n    struct {\n        int_T count;\n    } preTrig;\n} CircularBuf;\n\n\n/*==============================================================================\n * Trigger stuff.\n *============================================================================*/\ntypedef enum {\n    TRIGGER_UNARMED,\n    TRIGGER_HOLDING_OFF,\n    TRIGGER_ARMED,\n    TRIGGER_DELAYED,\n    TRIGGER_FIRED,\n    TRIGGER_TERMINATING\n} TriggerState;\n\n\n/*==============================================================================\n * General stuff.\n *============================================================================*/\n\n/*\n * An UploadSection defines a contiguous section of the blockio or dwork\n * structure.  Each section consists of elements of the same data type and same\n * complexity.\n * 'start' should be a const pointer\n */\ntypedef struct UploadSection_tag {\n    void   *start;\n    int_T  nBytes;\n#ifdef MW_DYNAMIC_STRING_SUPPORT\n    boolean_T isString;\n#endif\n} UploadSection;\n\n/*\n * An UploadMap is an array of UploadSections.  Typically a map consists of all\n * of the sections of the blockio or dwork structure that are relevant to a\n * given task.\n */\ntypedef struct UploadMap_tag {\n    int32_T    nSections;\n    UploadSection *sections;\n\n    int_T nBytes;  /* total number of bytes in this map */\n} UploadMap;\n\n\n/*\n * Each system contains a table of UploadMap's (one for each tid).  If no data\n * uploading is being done for a given tid, the uploadMap pointer is NULL.\n * The enableState field indicates whether the system in question is active.\n *\n * For a model with 5 total tids, the table looks like:\n *\n *               tid 0    tid 1    tid 2   tid 3   tid 4\n * uploadMap   -------------------------------------------\n *             |  ptr  |  NULL  |  NULL  |  ptr  |  NULL |\n *             ----|-------------------------|------------\n *                 |                         |\n *                 v                         v\n *              UploadMap                 UploadMap\n *              for tid 0                 for tid 3\n */\ntypedef struct SysUploadTable_tag {\n    int8_T    *enableState;\n    UploadMap **uploadMap;\n} SysUploadTable;\n\n\ntypedef struct TriggerInfo_tag {\n    TriggerState            state;\n    int_T                   tid;\n    int32_T                 duration;\n    int32_T                 holdOff;\n    int32_T                 delay;\n    int_T                   lookForRising;\n    int_T                   lookForFalling;\n    real_T                  level;\n    int_T                   count;\n    int_T                   overFlow;\n\n    UploadMap               trigSignals;\n    real_T                  *oldTrigSigVals;\n    int_T                   haveOldTrigSigVal;\n\n    struct {\n        int32_T    duration;\n        int32_T    count;\n\n        int_T      checkUnderFlow; /* ??? */\n    } preTrig;\n} TriggerInfo;\n\n\n/*\n * The BdUploadInfo contains all information regarding data logging.\n */\nstruct BdUploadInfo_tag {\n    int32_T        upInfoIdx;  /* index of upInfo in the array                 */\n    int32_T        nSys;       /* # of sys's for which data logging is active  */\n    SysUploadTable *sysTables; /* array of SysUploadTables                     */\n    CircularBuf    *circBufs;  /* circular buffers to store upload data        */\n    BufMemList     bufMemList; /* list of buffer memory holding data to upload */\n\n    TriggerInfo  trigInfo;\n};\n\n\n/*==============================================================================\n * Global upload data.\n */\n\n/*\n * Definitions that must match Simulink definitions.\n */\n\n#define UPLOAD_RISING_TRIGGER                   ((int32_T)  0)\n#define UPLOAD_FALLING_TRIGGER                  ((int32_T)  1)\n#define UPLOAD_EITHER_RISING_OR_FALLING_TRIGGER ((int32_T)  2)\n\n/*\n * Definitions.\n */\n#define TRIGMODE_ONESHOT (-1)\n\n#define NUM_UPINFOS   2\nstatic  BdUploadInfo  uploadInfoArray[NUM_UPINFOS];\n\n\n/* Function ====================================================================\n * Dump the signal selection packet (EXT_SELECT_SIGNALS).  The packet looks\n * like:\n *\n * upInfoIdx - Index of the UploadInfo. \n *\n * nSys - the number of systems that contain upload blocks (length of the\n *        (BdUploadInfo list)\n *\n * enableIdx - the index into the \"mode vector\" that tells whether or not\n *             a given system is active\n *\n * nTids - the number of tids in a system that contain upload blocks (number\n *         of non NULL entries in a SysUploadTable)\n *\n * nSections - the number of contiguous blockio or dwork sections that\n *             correspond to all blocks within a tid (number of sections in\n *             an UploadMap)\n *\n * B  - Index into data type transition table       - gives base address\n * S  - the starting index of a blockio section     - with respect to B\n * W  - the number of elements in a blockio section\n * DI - data type index - index into the rtw data type table\n *\n * target buf size - size of the upload buffer (to be allocated by target) for\n *                   a given tid\n *\n * Here's the packet format:\n *\n * [upInfoIdx\n *  \n *  nSys\n *\n *  enableIdx                           ---\n *  nTids                                 |\n *  tid nSections B S W DI B S W DI ...   | system\n *  tid nSections B S W DI B S W DI ...   |\n *                                      ---\n *  enableIdx                           ---\n *  nTids                                 |\n *  tid nSections B S W DI B S W DI ...   | system\n *  tid nSections B S W DI B S W DI ...   |\n *                                      ---\n *  target buf size for tid 0\n *  target buf size for tid 1\n *            .\n *            .\n *  target buf size for tid n\n * ]\n *\n * All elements are int32_T.\n */\n#if DUMP_PKT\nPRIVATE void DumpSelectSignalPkt(const char *pkt, int nRootTids)\n{\n    int32_T    i,j,k;\n    int32_T    upInfoIdx;\n    int32_T    nSys;\n    const char *bufPtr = pkt;\n\n    printf(\"Signal Select Pkt-----------\\n\");\n\n    /* upInfoIdx */\n    (void)memcpy(&upInfoIdx, bufPtr, sizeof(int32_T));\n    bufPtr += sizeof(int32_T);\n\n    printf(\"\\nupInfoIdx: %d\\n\",upInfoIdx);\n\n    /* nSys */\n    (void)memcpy(&nSys, bufPtr, sizeof(int32_T));\n    bufPtr += sizeof(int32_T);\n\n    printf(\"\\nnSys: %d\\n\",nSys);\n\n    for (i=0; i<nSys; i++) {\n        int32_T enableIdx, nTids;\n        \n        /* [enableIdx, nTids] */\n        (void)memcpy(&enableIdx, bufPtr, sizeof(int32_T));\n        bufPtr += sizeof(int32_T);\n\n        (void)memcpy(&nTids, bufPtr, sizeof(int32_T));\n        bufPtr += sizeof(int32_T);\n\n        printf(\"[enableIdx, nTids]: %d %d\\n\", enableIdx, nTids);\n\n        for (j=0; j<nTids; j++) {\n            int32_T tid;\n            int32_T nSections;\n\n            /* [tid nSections] */\n            (void)memcpy(&tid, bufPtr, sizeof(int32_T));\n            bufPtr += sizeof(int32_T);\n\n            (void)memcpy(&nSections, bufPtr, sizeof(int32_T));\n            bufPtr += sizeof(int32_T);\n\n            printf(\"[tid nSects]: %d %d\\n\", tid, nSections);\n\n            for (k=0; k<nSections; k++) {\n                const int B  = 0;\n                const int S  = 1;\n                const int W  = 2;\n                const int DI = 3;\n                int32_T   tmpBuf[4];\n\n                /* [B S W DI] */\n                (void)memcpy(&tmpBuf, bufPtr, sizeof(int32_T)*4);\n                bufPtr += (sizeof(int32_T) * 4);\n                \n                printf(\"%d %d %d %d\\n\",\n                    tmpBuf[B], tmpBuf[S], tmpBuf[W], tmpBuf[DI]);\n            }\n            printf(\"\\n\");\n        }\n        printf(\"\\n\");\n    }\n\n    /*\n     * Now the buffer sizes.\n     */\n    printf(\"bufSizes: \");\n    for (i=0; i<nRootTids; i++) {\n        int32_T bufSize;\n\n        printf(\"\\nbufSize[%d] of %d: \",i, nRootTids);\n\n        (void)memcpy(&bufSize, bufPtr, sizeof(int32_T));\n        bufPtr += sizeof(int32_T);\n\n        printf(\"%d\", bufSize);\n    }\n    printf(\"\\nEnd of select sigs pkt----\\n\");\n} /* end DumpSelectSignalPkt */\n#else\n#define DumpSelectSignalPkt(buf, nRootTids) /* do nothing */\n#endif\n\n\n/* Function ====================================================================\n * Dump the trigger selection packet (EXT_SELECT_TRIGGER).  The packet looks\n * like:\n *\n * upInfoIdx - Index of the UploadInfo. \n *\n * tid       - tid of the trigger signal\n *\n * duration  - The number of base rate steps for which the data logging event\n *             occurs.\n *\n * holdOff   - (-1), signifies that this trigger event is a one_shot, else we \n *             are in normal mode.  For normal mode the value indicates\n *             the number of base rate steps to wait between the end a data\n *             logging event and the re-arming of the trigger for the next data\n *             logging event.  The end of a data logging event is defined as\n *             when the last bit of data has been sent to the host (i.e.,\n *             immediately after the termination flag has been sent).\n *\n * delay     - The number of base rate steps to wait after the trigger event\n *             occurs and the before starting the data collection.  This can\n *             be either positive or negative (pre-trigger).  This field is\n *             ignored if the trigger source is manual.\n *\n * nsections - The sections of the blockio array to monitor for a trigger event.\n *             If the trigger event is not based on a signal, this is set to\n *             0 (e.g., the signal source is manual).\n *\n * sections  - \"B, S, W, DI\" description of a signal (see Signal Selection Pkt).\n *             These are the elements of the blockio vector that are monitored\n *             for trigger events when the trigger is based on a signal.  It is\n *             ignored if the trigger event is not based on a signal\n *             (nsections == 0).\n *\n * direction - If the triggering source is a signal, then this specifies the\n *             direction of the crossing (rising, falling or either).  If we\n *             are not triggering on a signal (nsections == 0), then this field\n *             is ignored.\n *\n * level     - If the triggering source is a signal, then this field specifies\n *             the level (value) of the crossing (0 by default).  If we are not\n *             triggering on a signal (nsections == 0), then this field is\n *             ignored.\n *\n * The packet looks like:\n * [tid duration holdOff delay nsections B S W DI B S W DI ... direction level]\n *\n * All fields are int32_T except for level, which is an SL_DOUBLE (real_T\n * on target).\n */\n#if DUMP_PKT\nPRIVATE void DumpSelectTriggerPkt(const char *pkt)\n{\n    int32_T    i;\n    int32_T    upInfoIdx, tid, duration, holdOff, delay, nSections;\n    int32_T    direction;\n    real_T     level;\n    const char *bufPtr = pkt;\n\n    printf(\"Trigger Select Pkt-----------\\n\");\n\n    /* upInfoIdx */\n    (void)memcpy(&upInfoIdx, bufPtr, sizeof(int32_T));\n    bufPtr += sizeof(int32_T);\n\n    printf(\"\\nupInfoIdx: %d\\n\",upInfoIdx);\n    \n    /* tid */\n    (void)memcpy(&tid, bufPtr, sizeof(int32_T));\n    bufPtr += sizeof(int32_T);\n\n    printf(\"\\ntid: %d\\n\",tid);\n    \n    /* duration */\n    (void)memcpy(&duration, bufPtr, sizeof(int32_T));\n    bufPtr += sizeof(int32_T);\n\n    printf(\"\\nduration: %d\\n\",duration);\n\n    /* holdOff */\n    (void)memcpy(&holdOff, bufPtr, sizeof(int32_T));\n    bufPtr += sizeof(int32_T);\n\n    printf(\"\\nholdOff: %d\\n\",holdOff);\n\n    /* delay */\n    (void)memcpy(&delay, bufPtr, sizeof(int32_T));\n    bufPtr += sizeof(int32_T);\n\n    printf(\"\\ndelay: %d\\n\",delay);\n\n    /* nsections */\n    (void)memcpy(&nSections, bufPtr, sizeof(int32_T));\n    bufPtr += sizeof(int32_T);\n\n    printf(\"nSects: %d\\n\", nSections);\n\n    /* each section */\n    for (i=0; i<nSections; i++) {\n        const int B  = 0;\n        const int S  = 1;\n        const int W  = 2;\n        const int DI = 3;\n        int32_T   tmpBuf[4];\n\n        (void)memcpy(&tmpBuf, bufPtr, sizeof(int32_T)*4);\n        bufPtr += (sizeof(int32_T) * 4);\n        \n        printf(\"%d %d %d %d\\n\", tmpBuf[B], tmpBuf[S], tmpBuf[W], tmpBuf[DI]);\n    }\n    printf(\"\\n\");\n\n    /* direction */\n    (void)memcpy(&direction, bufPtr, sizeof(int32_T));\n    bufPtr += sizeof(int32_T);\n\n    printf(\"direction: %d\\n\",direction);\n\n    /* level */\n    (void)memcpy(&level, bufPtr, sizeof(real_T));\n    bufPtr += sizeof(real_T);\n\n    printf(\"level: %f\\n\",level);\n} /* end DumpSelectTriggerPkt */\n#else\n#define DumpSelectTriggerPkt(buf) /* do nothing */\n#endif\n\n\n/* Function ====================================================================\n * Initialize a UploadSection.\n */\n#ifndef EXTMODE_DISABLESIGNALMONITORING\nPRIVATE void InitUploadSection(\n    RTWExtModeInfo *ei,\n    const int32_T  *buf,\n    UploadSection  *section)   /* out */\n{\n    int_T                         elSize;\n    int_T                         offset;\n    int_T                         nBytes;\n    char_T                        *tranAddress;\n    int_T                         tranIsComplex;\n    \n    const DataTypeTransInfo       *dtInfo  = (const DataTypeTransInfo *) rteiGetModelMappingInfo(ei);\n    const DataTypeTransitionTable *dtTable = dtGetBIODataTypeTrans(dtInfo);\n    const uint_T *dtSizes = dtGetDataTypeSizes(dtInfo);\n\n    const int BI = 0;  /* index into dtype tran table (base address)  */\n    const int SI = 1;  /* starting index - wrt to base address        */\n    const int W  = 2;  /* width of section (number of elements)       */\n    const int DI = 3;  /* index into data type tables                 */\n\n#ifdef MW_DYNAMIC_STRING_SUPPORT\n    const char_T* *dtNames;\n#endif\n    \n    tranAddress   = dtTransGetAddress(dtTable, buf[BI]);\n    tranIsComplex = dtTransGetComplexFlag(dtTable, buf[BI]);\n\n    elSize = dtSizes[buf[DI]] * (tranIsComplex ? 2 : 1);\n    nBytes = buf[W] * elSize;\n    offset = buf[SI] * elSize;\n\n    section->start  = tranAddress + offset;\n    section->nBytes = nBytes;\n    \n#ifdef MW_DYNAMIC_STRING_SUPPORT\n    dtNames = dtGetDataTypeNames(dtInfo);\n    section->isString = strcmp(dtNames[buf[DI]], \"string\") == 0;\n#endif\n    \n} /* end InitUploadSection */\n\n\n/* Function ====================================================================\n * Initialize a SysUploadTable.  The callerBufPtr points to the current place in\n * the EXT_SELECT_SIGNALS pkt which should be the enableIdx field.  This\n * function moves the callerBufPtr to the next unread field of the packet.\n */\nPRIVATE boolean_T InitSysUploadTable(\n    RTWExtModeInfo *ei,\n    int_T          numSampTimes,\n    SysUploadTable *sysTable,\n    const char     **callerBufPtr) /* in/out */\n{\n    int_T        i;\n    int32_T      nTids;\n    const char_T *bufPtr = *callerBufPtr;\n    boolean_T    error   = EXT_NO_ERROR;\n\n    /*\n     * Set pointer to enable mode.\n     */\n    {\n        int32_T sysIdx;\n\n        /* read sysIdx */\n        (void)memcpy(&sysIdx, bufPtr, sizeof(int32_T));\n        bufPtr += sizeof(int32_T);\n\n        sysTable->enableState = rteiGetAddrOfSubSystemActiveVector(ei,sysIdx);\n    }\n\n    /*\n     * Allocate/initialize each tid's uploadMap.\n     */\n\n    /* ...read [nTids] */\n    (void)memcpy(&nTids, bufPtr, sizeof(int32_T));\n    bufPtr += sizeof(int32_T);\n\n    /* Allocate the array of pointers to UploadMaps. */\n    sysTable->uploadMap = (UploadMap **)calloc(numSampTimes, sizeof(UploadMap *));\n    if (sysTable->uploadMap == NULL) {\n        error = EXT_ERROR; goto EXIT_POINT;       \n    }\n\n    for (i=0; i<nTids; i++) {\n        int32_T   tid;\n        int32_T   section;\n        UploadMap *map;\n        \n        /* read tid */\n        (void)memcpy(&tid, bufPtr, sizeof(int32_T));\n        bufPtr += sizeof(int32_T);\n        \n        /* allocate UploadMap */\n        assert(sysTable->uploadMap[tid] == NULL);\n        sysTable->uploadMap[tid] = (UploadMap *)calloc(1, sizeof(UploadMap));\n        if (sysTable->uploadMap[tid] == NULL) {\n            error = EXT_ERROR; goto EXIT_POINT;       \n        }\n        map = sysTable->uploadMap[tid];\n        \n        /* read nSections */\n        (void)memcpy(&map->nSections, bufPtr, sizeof(int32_T));\n        bufPtr += sizeof(int32_T);\n\n        /* Allocate the blockio sections. */\n        assert(map->sections == NULL);\n        if (map->nSections > 0) {\n           map->sections = (UploadSection *)calloc(map->nSections,sizeof(UploadSection));\n           if (map->sections == NULL) {\n               error = EXT_ERROR; goto EXIT_POINT;\n           }\n        }\n\n        /*\n         * Init the UploadSections.\n         */\n        for (section=0; section<map->nSections; section++) {\n            int32_T    tmpBuf[4];\n            UploadSection *uploadSection = &map->sections[section];\n\n            /* read [B S W DI] */\n            (void)memcpy(&tmpBuf, bufPtr, sizeof(int32_T)*4);\n            bufPtr += (sizeof(int32_T) * 4);\n\n            InitUploadSection(ei, tmpBuf, uploadSection);\n\n            /* keep track of total number of bytes in this map */\n            map->nBytes += uploadSection->nBytes;\n        }\n    }\n    \nEXIT_POINT:\n    *callerBufPtr = bufPtr;\n    return(error);\n} /* end InitSysUploadTable */\n\n/* Function ====================================================================\n * Initialize circular buffer fields and allocate required memory.\n */\nPRIVATE boolean_T UploadBufInit(CircularBuf *circBuf, int32_T size)\n{\n    boolean_T error = NO_ERR;\n\n    assert(circBuf->buf == NULL);\n\n    /*\n     * Size will be negative to indicate an error if host determines too much\n     * memory is needed (i.e. the size will not fit in an int32).\n     */\n    if (size < 0) {\n        error = EXT_ERROR; goto EXIT_POINT;\n    }\n\n    circBuf->empty = true;\n    if (size > 0) {\n        assert(circBuf->buf == NULL);\n        circBuf->buf = (char_T *)malloc(size);\n        if (circBuf->buf == NULL) {\n            error = EXT_ERROR; goto EXIT_POINT;\n        }\n    } else {\n        circBuf->buf = NULL;\n    }\n    circBuf->bufSize = size;\n    \n    circBuf->head = circBuf->buf;\n    circBuf->tail = circBuf->buf;\n\n    circBuf->newTail = NULL;\n\nEXIT_POINT:\n    return(error);\n} /* end UploadBufInit */\n#endif /* ifndef EXTMODE_DISABLESIGNALMONITORING */\n\n\n/* Function ====================================================================\n * Free all dynamically allocated fields of the trigInfo structure.\n */\nPRIVATE void UploadDestroyTrigger(int32_T upInfoIdx)\n{\n    BdUploadInfo *uploadInfo = &uploadInfoArray[upInfoIdx];\n    TriggerInfo *trigInfo    = &uploadInfo->trigInfo;\n    UploadMap   *map         = &trigInfo->trigSignals;\n\n    if (map->sections != NULL) {\n        free(map->sections);\n        map->sections = NULL;\n    }\n\n    if (trigInfo->oldTrigSigVals != NULL) {\n        free(trigInfo->oldTrigSigVals);\n        trigInfo->oldTrigSigVals = NULL;\n    }\n\n    /*\n     * Reset trigger info.\n     */\n    trigInfo->state          = TRIGGER_UNARMED;\n    trigInfo->duration       = 0;\n    trigInfo->holdOff        = 0;\n    trigInfo->delay          = 0;\n    trigInfo->lookForRising  = true;\n    trigInfo->lookForFalling = false;\n    trigInfo->level          = (real_T)0;\n    trigInfo->count          = 0;\n    trigInfo->overFlow       = false;\n\n    trigInfo->trigSignals.nSections = 0;\n    trigInfo->trigSignals.sections  = NULL;\n    trigInfo->trigSignals.nBytes    = 0;\n\n    trigInfo->oldTrigSigVals    = NULL;\n    trigInfo->haveOldTrigSigVal = false;\n\n    trigInfo->preTrig.duration       = 0;\n    trigInfo->preTrig.count          = 0;\n    trigInfo->preTrig.checkUnderFlow = false;\n} /* end UploadDestroyTrigger */\n\n\n/* Function ====================================================================\n * Reset fields of the uploadinfo struct.\n */\nPUBLIC void UploadLogInfoReset(int32_T upInfoIdx)\n{\n    static boolean_T firstTime[NUM_UPINFOS] = {true, true};\n    BdUploadInfo     *uploadInfo = &uploadInfoArray[upInfoIdx];\n    \n    /*\n     * uploadInfoArray is declared as global static, so most compilers will\n     * initialize the memory to zero.  However, the tic6000 assigns this\n     * variable into uninitialized memory.  When this function is called for\n     * the first time, we attempt to free garbage pointers and crash.  By\n     * clearing unloadInfoArray explicitly the first time this function is\n     * called, we can ensure that this function will work for all compilers.\n     */\n    if (firstTime[upInfoIdx]) {\n        memset(uploadInfo, 0, sizeof(BdUploadInfo));\n        firstTime[upInfoIdx] = false;\n    }\n   \n    /* sysUploadTable */\n    uploadInfo->nSys      = 0;\n    uploadInfo->sysTables = NULL;\n\n    uploadInfo->circBufs = NULL;\n\n    uploadInfo->bufMemList.bufs = NULL;\n    uploadInfo->bufMemList.tids = NULL;\n\n    /* Reset trigger info */\n    UploadDestroyTrigger(upInfoIdx);\n\n} /* end UploadLogInfoReset */\n\n\n/* Function ====================================================================\n * Destroy all data associated with data logging.  Fields are re-initialized\n * and pointers NULL'ed out by UploadLogInfoReset().\n */\nPUBLIC void UploadLogInfoTerm(int32_T upInfoIdx, int_T numSampTimes)\n{\n    int_T i;\n    BdUploadInfo *uploadInfo = &uploadInfoArray[upInfoIdx];\n\n    if (uploadInfo->nSys == 0) return; /* Nothing to terminate */\n\n    /*\n     * Free fields of the sysUpload tables and then the table itself.\n     */\n    for (i=0; i<uploadInfo->nSys; i++) {\n        int_T     tid;\n        UploadMap **uploadMap = uploadInfo->sysTables[i].uploadMap;\n        \n        for (tid=0; tid<numSampTimes; tid++) {\n            if (uploadMap[tid] != NULL) {\n                /* Free fields of uploadMap. */\n                free(uploadMap[tid]->sections);\n\n                /* Free the uploadMap. */\n                free(uploadMap[tid]);\n            }\n        }\n\n        free(uploadMap);\n    }\n\n    free(uploadInfo->sysTables);\n\n    /* Free circular buf fields and bufMemLists. */\n    if (uploadInfo->circBufs) {\n        for (i=0; i<numSampTimes; i++) {\n            free(uploadInfo->circBufs[i].buf);\n        }\n        free(uploadInfo->circBufs);\n    }\n\n    free(uploadInfo->bufMemList.bufs);\n    free(uploadInfo->bufMemList.tids);\n    \n    /*\n     * Free trigger info.\n     */\n    UploadDestroyTrigger(upInfoIdx);\n\n    /*\n     * Reset all vals to initial value and NULL out pointers.\n     */\n    UploadLogInfoReset(upInfoIdx);\n} /* end UploadLogInfoTerm */\n\n\n/* Function ====================================================================\n * Prepare for final flush of buffers.  This involves setting the trigger\n * state to appropriate values.\n */\nPUBLIC void UploadPrepareForFinalFlush(int32_T upInfoIdx)\n{\n    BdUploadInfo *uploadInfo = &uploadInfoArray[upInfoIdx];\n\n    switch(uploadInfo->trigInfo.state) {\n    case TRIGGER_FIRED:\n    case TRIGGER_TERMINATING:\n        /*\n         * 1) set trig state to \"terminating\" so that the eventual call to\n         *    UploadBufGetData knows to add the terminator flag to\n         *    the data stream.\n         * 2) set trig state to \"oneshot\" to prevent re-arming\n         */\n        uploadInfo->trigInfo.state   = TRIGGER_TERMINATING; /* 1 */\n        uploadInfo->trigInfo.holdOff = TRIGMODE_ONESHOT;    /* 2 */\n        break;\n\n    case TRIGGER_UNARMED:\n    case TRIGGER_HOLDING_OFF:\n    case TRIGGER_ARMED:\n    case TRIGGER_DELAYED:\n        /* do nothing */\n        break;\n    }\n\n#ifdef VXWORKS\n    /* Let upload server run to ensure that term pkt is sent to host. One\n       semGive() is for the background task and the other is for the explicit\n       call to rt_UploadServerWork() in DisconnectFromHost(). */\n    semGive(uploadSem);\n    semGive(uploadSem);\n#endif\n\t\n} /* end UploadPrepareForFinalFlush */\n\n\n/* Function ====================================================================\n * Initialize data uploading by processing the EXT_SELECT_SIGNALS packet\n * (which is passed in).  Return the error status.  See DumpSelectSignalPkt()\n * for a detailed description of the packet.\n */\n#ifndef EXTMODE_DISABLESIGNALMONITORING\nPUBLIC boolean_T UploadLogInfoInit(RTWExtModeInfo *ei,\n                                   int_T          numSampTimes,\n                                   const char     *pkt,\n                                   int32_T        upInfoIdx)\n{\n    int          nActiveTids;\n    int_T        i;\n    boolean_T    error   = EXT_NO_ERROR;\n    const char   *bufPtr = pkt;\n    BdUploadInfo *uploadInfo;\n\n    DumpSelectSignalPkt(pkt, numSampTimes);\n\n    /* Point to the correct uploadInfo */\n    uploadInfo           = &uploadInfoArray[upInfoIdx];\n    uploadInfo->upInfoIdx = upInfoIdx;\n\n    /* Free upInfo if fields are already allocated */\n    UploadLogInfoTerm(upInfoIdx, numSampTimes);\n\n    /* nSys */\n    (void)memcpy(&uploadInfo->nSys, bufPtr, sizeof(int32_T));\n    bufPtr += sizeof(int32_T);\n    assert(uploadInfo->sysTables == NULL);\n    uploadInfo->sysTables = (SysUploadTable *)\n        calloc(uploadInfo->nSys, sizeof(SysUploadTable));\n    if (uploadInfo->sysTables == NULL) {\n        error = EXT_ERROR; goto EXIT_POINT;\n    }\n\n    /*\n     * Init each system table.\n     */\n    for (i=0; i<uploadInfo->nSys; i++) {\n        error = InitSysUploadTable(ei, numSampTimes,\n                                   &uploadInfo->sysTables[i], &bufPtr);\n        if (error != EXT_NO_ERROR) goto EXIT_POINT;\n    }\n\n    assert(uploadInfo->circBufs == NULL);\n    uploadInfo->circBufs = (CircularBuf *) calloc(numSampTimes,\n                                                  sizeof(CircularBuf));\n\n    /*\n     * Allocate the circular buffers.\n     */\n    nActiveTids = 0;\n    for (i=0; i<numSampTimes; i++) {\n        int32_T size;\n        \n        (void)memcpy(&size, bufPtr, sizeof(int32_T));\n        bufPtr += sizeof(int32_T);\n        \n        error = UploadBufInit(&uploadInfo->circBufs[i], size);\n        if (error != EXT_NO_ERROR) goto EXIT_POINT;\n\n        nActiveTids += (size != 0);\n    }\n\n    /*\n     * Initialize/Allocate the bufMemLists - these are used by\n     * ext_svr to pull the appropriate data out of the buffers and send it\n     * to the host.\n     */\n#if ASSERTS_ON\n    uploadInfo->bufMemList.maxBufs = nActiveTids;\n#endif\n    uploadInfo->bufMemList.nActiveBufs = 0;\n\n    assert(uploadInfo->bufMemList.bufs == NULL);\n    uploadInfo->bufMemList.bufs = (BufMem *)malloc(nActiveTids*sizeof(BufMem));\n    if (uploadInfo->bufMemList.bufs == NULL) {\n        error = EXT_ERROR; goto EXIT_POINT;\n    }\n\n    assert(uploadInfo->bufMemList.tids == NULL);\n    uploadInfo->bufMemList.tids = (int_T *)malloc(nActiveTids*sizeof(int_T));\n    if (uploadInfo->bufMemList.tids == NULL) {\n        error = EXT_ERROR; goto EXIT_POINT;\n    }\n\nEXIT_POINT:\n    if (error != EXT_NO_ERROR) {\n        UploadLogInfoTerm(upInfoIdx, numSampTimes);\n    }\n    return(error);\n} /* end UploadLogInfoInit */\n\n\n/* Function ====================================================================\n * Initialize and configure the trigger attributes.  See DumpSelectTriggerPkt()\n * for a detailed description of the packet.\n */\nPUBLIC boolean_T UploadInitTrigger(RTWExtModeInfo *ei,\n                                   const char     *pkt,\n                                   int32_T         upInfoIdx)\n{\n    int_T       nSections;\n    int32_T     i32_tid;\n    int32_T     direction;\n    TriggerInfo *trigInfo;\n    boolean_T   error     = EXT_NO_ERROR;\n    const char  *bufPtr   = pkt;\n    \n    DumpSelectTriggerPkt(pkt);\n    \n    /* Select the trig Info */\n    trigInfo = &uploadInfoArray[upInfoIdx].trigInfo;\n\n    /* tid, duration, holdOff, delay and nsections */\n    (void)memcpy(&i32_tid, bufPtr, sizeof(int32_T));\n    bufPtr += sizeof(int32_T);\n    trigInfo->tid = (int_T)i32_tid;\n\n    (void)memcpy(&trigInfo->duration, bufPtr, sizeof(int32_T));\n    bufPtr += sizeof(int32_T);\n\n    (void)memcpy(&trigInfo->holdOff, bufPtr, sizeof(int32_T));\n    bufPtr += sizeof(int32_T);\n\n    (void)memcpy(&trigInfo->delay, bufPtr, sizeof(int32_T));\n    bufPtr += sizeof(int32_T);\n\n    (void)memcpy(&trigInfo->trigSignals.nSections, bufPtr, sizeof(int32_T));\n    bufPtr += sizeof(int32_T);\n    \n    nSections = trigInfo->trigSignals.nSections;\n\n    /*\n     * Init the UploadSections - if the trigger is signal based.\n     */\n    if (nSections > 0) {\n        /* trigger is signal based */\n        int       section;\n        UploadMap *map = &trigInfo->trigSignals;\n\n        assert(map->nBytes == 0);\n        assert(map->sections == NULL);\n        map->sections = (UploadSection *)malloc(nSections * sizeof(UploadSection));\n        if (map->sections == NULL) {\n            error = EXT_ERROR; goto EXIT_POINT;\n        }\n            \n        for (section=0; section<map->nSections; section++) {\n            int32_T       tmpBuf[4];\n            UploadSection *uploadSection = &map->sections[section];\n\n            /* read [B S W DI] */\n            (void)memcpy(&tmpBuf, bufPtr, sizeof(int32_T)*4);\n            bufPtr += (sizeof(int32_T) * 4);\n            \n            InitUploadSection(ei, tmpBuf, uploadSection);\n\n            /* keep track of total number of bytes in this map */\n            map->nBytes += uploadSection->nBytes;\n        }\n\n        /*\n         * Allocate space to hold the old values of the trigger signals.  Note\n         * that trigger signals are guaranteed to be of type SL_DOUBLE (real_T)\n         * and non-complex.\n         */\n        assert(trigInfo->oldTrigSigVals == NULL);\n        assert(trigInfo->oldTrigSigVals == NULL);\n        trigInfo->oldTrigSigVals = (real_T *)malloc(map->nBytes);\n        if (trigInfo->oldTrigSigVals == NULL) {\n            error = EXT_ERROR; goto EXIT_POINT;\n        }\n    }\n            \n    /* Direction. */\n    (void)memcpy(&direction, bufPtr, sizeof(int32_T));\n    bufPtr += sizeof(int32_T);\n\n    trigInfo->lookForRising  = \n        ((direction == UPLOAD_RISING_TRIGGER)  || \n         (direction == UPLOAD_EITHER_RISING_OR_FALLING_TRIGGER));\n\n    trigInfo->lookForFalling = \n        ((direction == UPLOAD_FALLING_TRIGGER) || \n         (direction == UPLOAD_EITHER_RISING_OR_FALLING_TRIGGER));\n    \n    /* level */\n    (void)memcpy(&trigInfo->level, bufPtr, sizeof(real_T));\n    bufPtr += sizeof(real_T);\n\n    /*\n     * Convert delay to pre-trigger duration.\n     */\n    if (trigInfo->delay < 0) {\n        trigInfo->preTrig.duration = -trigInfo->delay;\n        trigInfo->delay            = 0;\n    } else {\n        trigInfo->preTrig.duration = 0;\n    }\n\nEXIT_POINT:\n    if (error != EXT_NO_ERROR) {\n        UploadDestroyTrigger(upInfoIdx);\n    }\n    return(error);\n} /* end UploadInitTrigger */\n\n\n/* Function ====================================================================\n * Arm the trigger.\n */\nPUBLIC void UploadArmTrigger(int32_T upInfoIdx, int_T numSampTimes)\n{\n    int_T   tid;\n    BdUploadInfo *uploadInfo = &uploadInfoArray[upInfoIdx];\n\n    assert((uploadInfo->trigInfo.state == TRIGGER_UNARMED) ||\n           (uploadInfo->trigInfo.state == TRIGGER_HOLDING_OFF));\n\n    host_upstatus_is_uploading = false;\n\n    /*\n     * Re-initialize.\n     */\n    uploadInfo->trigInfo.overFlow = false;\n    for (tid=0; tid<numSampTimes; tid++) {\n        CircularBuf *circBuf = &uploadInfo->circBufs[tid];\n        if (circBuf->bufSize > 0) {\n            circBuf->head = circBuf->buf;\n            circBuf->tail = circBuf->buf;\n\n            circBuf->newTail = NULL;\n            circBuf->empty   = true;\n        }\n    }\n\n    /* \n     * Re-initialize trigger fields.\n     */\n    uploadInfo->trigInfo.count             = 0;\n    uploadInfo->trigInfo.haveOldTrigSigVal = false;\n\n    /* \n     * Reset pre-trig counts for normal mode.\n     */\n    uploadInfo->trigInfo.preTrig.count = 0;\n\n    /* \n     * Re-arm after all initialization.  Make sure that trigInfo.state is\n     * set last since this routine may be interrupted.\n     */\n    uploadInfo->trigInfo.state = TRIGGER_ARMED;\n\n} /* end UploadArmTrigger */\n#endif /* ifndef EXTMODE_DISABLESIGNALMONITORING */\n\n/* Function ====================================================================\n * Terminate this data logging session by destroying the uploadInfo and\n * setting the trigger backed to the unarmed state.\n */\nPUBLIC void UploadEndLoggingSession(int32_T upInfoIdx, int_T numSampTimes)\n{\n    BdUploadInfo *uploadInfo = &uploadInfoArray[upInfoIdx];\n\n    uploadInfo->trigInfo.state = TRIGGER_UNARMED;\n    UploadLogInfoTerm(upInfoIdx, numSampTimes);\n} /* end UploadEndLoggingSession */\n\n\n/* Function ====================================================================\n * Cancel this data logging session.\n */\nPUBLIC void UploadCancelLogging(int32_T upInfoIdx)\n{\n    BdUploadInfo *uploadInfo = &uploadInfoArray[upInfoIdx];\n\n    switch(uploadInfo->trigInfo.state) {\n\n    case TRIGGER_UNARMED:\n        break;\n\n    case TRIGGER_HOLDING_OFF:\n    case TRIGGER_ARMED:\n    case TRIGGER_DELAYED:\n    case TRIGGER_FIRED:\n        /*\n         * Move to TRIGGER_TERMINATING and ensure that we are no longer in\n         * \"normal\" mode (TRIGMODE_NORMAL) so that the trigger does not get\n         * re-armed.\n         */\n        uploadInfo->trigInfo.holdOff = TRIGMODE_ONESHOT;\n        uploadInfo->trigInfo.state   = TRIGGER_TERMINATING;\n#ifdef VXWORKS\n        /*\n         * Let upload server run to ensure that term pkt is sent to host (needed\n         * for all but the TRIGGERED_FIRED case since the upload server is\n         * inactive).\n         */\n        semGive(uploadSem);\n#endif\n        break;\n    \n    case TRIGGER_TERMINATING:\n        /*\n         * Ensure that we are no longer in \"normal\" mode (TRIGMODE_NORMAL) so\n         * that the trigger does not get re-armed.\n         */\n        uploadInfo->trigInfo.holdOff = TRIGMODE_ONESHOT;\n        break;\n    }\n} /* end UploadCancelLogEvent */\n\n\n/* Function ====================================================================\n * Called by ext_svr (background task), in order to perform tasks that need\n * to be done after each time that data has been sent to the host.  This\n * includes:\n *\n * o move the tail for the specified buffer forward\n * o detect the end of a data logging event so that the trigger state can\n *   be either set to unarmed (for one shot) or backed to armed (for normal\n *   mode).\n * \n * NOTE:  UploadBufGetData and UploadBufMoveTail must be called in pairs where the\n *        UploadBufGetData call precedes the UploadBufMoveTail call.\n */\n#ifndef EXTMODE_DISABLESIGNALMONITORING\nPUBLIC void UploadBufDataSent(const int_T tid, int32_T upInfoIdx)\n{   \n    BdUploadInfo *uploadInfo = &uploadInfoArray[upInfoIdx];\n    CircularBuf  *circBuf    = &uploadInfo->circBufs[tid];            \n\n    host_upstatus_is_uploading = true;\n    \n    /* Move the tail forward. */\n    circBuf->tail = circBuf->newTail;\n        \n#ifdef EXTMODE_PROTECT_CRITICAL_REGIONS\n    /* \n     * disable interrupts around this critical region. We need to \n     * guarantee that reading the head pointer is an atomic \n     * operation.\n     */\n    EXTMODE_DISABLE_INTERRUPTS;\n#endif\n    \n    /* \n     * Since we are moving the tail forward, we know that head == tail\n     * represents an empty buffer and not a full buffer.\n     */\n    circBuf->empty = (circBuf->tail == circBuf->head);\n    \n#ifdef EXTMODE_PROTECT_CRITICAL_REGIONS\n    /* re-enable interrupts */\n    EXTMODE_ENABLE_INTERRUPTS;\n#endif\n\n} /* end UploadBufDataSent */\n#endif /* ifndef EXTMODE_DISABLESIGNALMONITORING */\n\n/*\n * Macro =======================================================================\n * Move the tail of a circular buffer forward by one time step - accounting for\n * wrapping.\n */\n#define MOVE_TAIL_ONESTEP(circBuf, end)                            \\\n{                                                                  \\\n    int     nBytesPassedEnd;                                       \\\n    int     nBytesInStep;                                          \\\n    int32_T *nBytesPtr = (int32_T *)((circBuf)->tail)+1;           \\\n                                                                   \\\n    (void)memcpy(&nBytesInStep, nBytesPtr, sizeof(int32_T));       \\\n    nBytesInStep += (2*sizeof(int32_T));                           \\\n    assert(nBytesInStep > 0);                                      \\\n    (circBuf)->tail += (nBytesInStep);                             \\\n    nBytesPassedEnd = (int)((circBuf)->tail - (end));              \\\n    if (nBytesPassedEnd >= 0) {                                    \\\n        (circBuf)->tail = (circBuf)->buf + nBytesPassedEnd;        \\\n    }                                                              \\\n} /* end MOVE_TAIL_ONESTEP */\n\n\n/*\n * Macro =======================================================================\n * Copy data into the circular buffer.\n */\n#define CIRCBUF_COPY_DATA(bufMem, data)                         \\\n{                                                               \\\n    (void)memcpy((bufMem).section1, (data), (bufMem).nBytes1);  \\\n    if ((bufMem).section2 != NULL) {                            \\\n        char *tmp = ((char *)(data)) + (bufMem).nBytes1;        \\\n        (void)memcpy((bufMem).section2, tmp, (bufMem).nBytes2); \\\n    }                                                           \\\n} /* end CIRCBUF_COPY_DATA */\n\n\n/* Function ====================================================================\n * Assign sections in the circular buffer for the requested number of bytes\n * (i.e., fill in the bufMem struct).  If there is no room in the circular\n * buffer return an overflow error.\n *\n * NOTE: Do not move the CircularBuffers head forward in this function!  \n *       Only move the tmpHead forward.  The actual head is not advanced\n *       until the entire time point is successfully copied into the buffer.\n *\n *       This function modifies tmpHead to point at the next available \n *       location.\n *\n *       It is possible for tmpHead to equal the tail upon entry to this\n *       function.  This does not necessarily mean that the buffer is\n *       empty (unwrapped).  It could also mean that the buffer is exactly\n *       full (this is considered as wrapped).\n */\n#ifndef EXTMODE_DISABLESIGNALMONITORING\nPRIVATE boolean_T UploadBufAssignMem(\n    CircularBuf  *circBuf,\n    int_T        nBytesToAdd,\n    char         **tmpHead,   /* in-out */\n    BufMem       *bufMem)     /* out */\n{\n    int_T       nBytesLeft;\n    boolean_T   overFlow  = false;\n    char        *end      = circBuf->buf + circBuf->bufSize; /* 1 passed end */\n\n    if ((*tmpHead > circBuf->tail) || circBuf->empty) {\n        /* buffer not wrapped */\n        nBytesLeft = (int_T)((end - *tmpHead) + (circBuf->tail - circBuf->buf));\n\n        if (nBytesLeft < nBytesToAdd) {\n            overFlow = true;\n            goto EXIT_POINT;\n        }\n\n        if ((*tmpHead + nBytesToAdd) < end) {\n            /* still not wrapped */\n            bufMem->nBytes1  = nBytesToAdd;\n            bufMem->section1 = *tmpHead;\n\n            bufMem->nBytes2  = 0;\n            bufMem->section2 = NULL;\n\n            *tmpHead += nBytesToAdd;\n        } else {\n            /* now we're wrapped */\n            bufMem->nBytes1  = (int_T)(end - *tmpHead);\n            bufMem->section1 = *tmpHead;\n\n            bufMem->nBytes2  = nBytesToAdd - bufMem->nBytes1;\n            bufMem->section2 = (bufMem->nBytes2 > 0) ? circBuf->buf : NULL;\n\n            *tmpHead = circBuf->buf + bufMem->nBytes2;\n        }  \n    } else {\n        /* wrapped */\n        nBytesLeft = (int_T)(circBuf->tail - *tmpHead);\n        if (nBytesLeft < nBytesToAdd) {\n            overFlow = true;\n            goto EXIT_POINT;\n        }\n\n        bufMem->nBytes1  = nBytesToAdd;\n        bufMem->section1 = *tmpHead;\n\n        bufMem->nBytes2  = 0;\n        bufMem->section2 = NULL;\n\n        *tmpHead += nBytesToAdd;\n    }\n    \nEXIT_POINT:\n    return(overFlow);\n} /* end UploadBufAssignMem */\n#endif /* ifndef EXTMODE_DISABLESIGNALMONITORING */\n\n/* Function ====================================================================\n * Check the trigger signals for crossings.  Return true if a trigger event is\n * encountered.  It is assumed that the trigger signals are real_T.\n */\n#ifndef EXTMODE_DISABLESIGNALMONITORING\nPRIVATE boolean_T UploadCheckTriggerSignals(int32_T upInfoIdx)\n{\n    int          i;\n    BdUploadInfo *uploadInfo      = &uploadInfoArray[upInfoIdx];\n    TriggerInfo  *trigInfo        = &uploadInfo->trigInfo;\n    real_T       *oldTrigSigVals  = trigInfo->oldTrigSigVals;\n    real_T       *oldSigPtr       = oldTrigSigVals;\n       \n    for (i=0; i<trigInfo->trigSignals.nSections; i++) {\n        UploadSection *section = &trigInfo->trigSignals.sections[i];\n        int_T         nEls     = section->nBytes / sizeof(real_T);\n\n        /*\n         * If we have a previous signal value to check, then see if we had\n         * a crossing.\n         */\n        if (trigInfo->haveOldTrigSigVal) {\n            int_T   j;\n            real_T  level   = trigInfo->level;\n            real_T  *rStart = (real_T *)section->start; /* guaranteed by host */\n            \n            for (j=0; j<nEls; j++) {\n                if (trigInfo->lookForRising && \n                    (((rStart[j] >= level) && (oldSigPtr[j] <  level)) ||\n                     ((rStart[j] >  level) && (oldSigPtr[j] == level)))) {\n                    return(true);\n                }\n                if (trigInfo->lookForFalling &&\n                    (((rStart[j] < level)  && (oldSigPtr[j] >= level)) ||\n                     ((rStart[j] == level) && (oldSigPtr[j] >  level)))) {\n                    return(true);\n                }\n            }\n        }\n\n        /*\n         * Update old signal values.\n         */\n        (void)memcpy(oldSigPtr, section->start, section->nBytes);\n        oldSigPtr += nEls;\n    }\n    assert(((unsigned char *)oldTrigSigVals) + trigInfo->trigSignals.nBytes == oldSigPtr);\n    trigInfo->haveOldTrigSigVal = true;\n    return(false);\n} /* end UploadCheckTriggerSignals */\n#endif /* ifndef EXTMODE_DISABLESIGNALMONITORING */\n\n\n/* Function ====================================================================\n * If the trigger is in the TRIGGER_FIRED state or we are collecting data for\n * pre-triggering, add data, for each tid with a hit, to the upload buffers.  \n * This function is called from within the appropriate task, once per sample\n * hit.\n *\n * The format of the packet that is sent to the host is as follows:\n *\n * definitions:\n *      pktType - A qualifier indicating any special action that needs to be\n *                taken (e.g., a termination flag following the last data point,\n *                or a flag indicating that it is the first data point after\n *                a trigger event).\n *\n *      nBytes - total number of target bytes for this packet (including the\n *               nBytes field).  nBytes worth of data represents 1 full time\n *               step of the target simulation.\n *\n *      nSys - The number of systems for which this packet contains data.\n *\n *      tid - The tid with which this data is associated.\n *\n *      upInfoIdx - upInfo index\n *\n *      t - simulation time\n *\n *      sysId - The index into the BdUploadInfo.sysTables array so that we can\n *              map the target data back to the appropriate system.  This is\n *              NOT the descendant system index!\n *\n *      data - the target simulation data (in target format)\n *\n * The packet looks like:\n * [nBytes pktType nSys tid upInfoIdx t sysId [data] sysId [data]...]\n *     |                            | |         | |          |\n *     ----------------------------- ----------- ------------\n *          pkt header          sys data     sys data\n *\n * Ints are int32_T.\n */\n#ifndef EXTMODE_DISABLESIGNALMONITORING\nPUBLIC void UploadBufAddTimePoint(int_T tid, real_T taskTime,\n                                  int32_T upInfoIdx)\n{\n    int_T        preTrig;\n    int_T        overFlow;\n    TriggerInfo  *trigInfo;\n    CircularBuf  *circBuf;\n    BdUploadInfo *uploadInfo = &uploadInfoArray[upInfoIdx];\n\n    overFlow   = false;\n    trigInfo   = &uploadInfo->trigInfo;\n    circBuf    = &uploadInfo->circBufs[tid];\n    \n    /*\n     * Check for transitions from the TRIGGER_ARMED state to either the\n     * TRIGGER_FIRED_STATE or the TRIGGER_DELAYED state.  We only do this\n     * if it is a sample hit for the trigger signal.  Note that this\n     * is the only place in the whole world that the trigger state can\n     * move from TRIGGER_ARMED_STATE to TRIGGER_DELAYED or TRIGGER_FIRED.\n     */\n    if (trigInfo->state == TRIGGER_ARMED) {\n        if (trigInfo->trigSignals.nSections == 0) {\n            /* short-circuit for manual trigger */\n            trigInfo->state = TRIGGER_FIRED;\n        } else\n            if ((tid == trigInfo->tid) &&\n                (UploadCheckTriggerSignals(upInfoIdx))) {\n                /* trig signal crossing */\n                if (trigInfo->delay == 0) {\n                    trigInfo->state = TRIGGER_FIRED;\n                    /* 0 unless pre-trig */\n                    trigInfo->count = trigInfo->preTrig.count;\n                } else {\n                    trigInfo->state = TRIGGER_DELAYED;\n                    assert(trigInfo->count == 0);\n                    \n                    /* We will be skipping this step, so the delay count is 1. */\n                    trigInfo->count = 1;\n                }\n            }\n    }\n    \n    preTrig = (trigInfo->state == TRIGGER_ARMED) &&\n        (trigInfo->preTrig.duration > 0);\n    \n    /*\n     * Handle adding data to the collection buffers - if needed.\n     */\n    if (((trigInfo->state == TRIGGER_FIRED) || preTrig) &&\n        /* bufSize == 0 means no signals in this tid */\n        circBuf->bufSize != 0) {\n        \n        int32_T     i;\n        BufMem      bufMem;\n        BufMem      pktStart;\n        int_T       size;\n        char_T *tmpHead    = circBuf->head;\n        const int_T PKT_TYPE_IDX = 0;\n        const int_T NBYTES_IDX   = 1;\n        const int_T NSYS_IDX     = 2;\n        const int_T TID_IDX      = 3;\n        const int_T UPINFO_IDX   = 4;\n\n        int32_T intHdr[5] = {0, 0, 0, 0, 0};\n        intHdr[UPINFO_IDX] = upInfoIdx;\n        \n        if (preTrig && (trigInfo->preTrig.count==trigInfo->preTrig.duration)) {\n            /* Advance the tail (we don't need the oldest point anymore). */\n            char *end = circBuf->buf + circBuf->bufSize;\n            MOVE_TAIL_ONESTEP(circBuf, end);\n            trigInfo->preTrig.count--;\n        }\n        \n        /*\n         * Save some space for the 5 integer values that make up the packet\n         * header: [pktType nBytes nSys tid upInfoIdx].\n         * The values are filled in later.\n         */\n        size = 5*sizeof(int32_T);\n        overFlow = UploadBufAssignMem(circBuf, size, &tmpHead, &pktStart);\n        if (overFlow) goto EXIT_POINT;\n\n        /*\n         * We do not want to include the packet type and number of bytes\n         * in the size calculation.  Size should represent the payload of\n         * this packet.  The packet type and number of bytes represent the\n         * packet header and are not included in the payload size.\n         */\n        size -= 2*sizeof(int32_T);\n        intHdr[NBYTES_IDX] += size;\n        \n        /* time */\n        overFlow =\n            UploadBufAssignMem(circBuf, sizeof(real_T), &tmpHead, &bufMem);\n        if (overFlow) goto EXIT_POINT;\n        intHdr[NBYTES_IDX] += sizeof(real_T);\n        \n        CIRCBUF_COPY_DATA(bufMem, &taskTime);\n\n        /*\n         * Check each system for an UploadMap. \n         */\n        for (i=0; i<uploadInfo->nSys; i++) {\n            const SysUploadTable *sysTable =\n                (const SysUploadTable *)&uploadInfo->sysTables[i];\n            \n            if ( (*sysTable->enableState != SUBSYS_RAN_BC_DISABLE) && \n                 (*sysTable->enableState != SUBSYS_RAN_BC_ENABLE_TO_DISABLE) ) {\n                UploadMap *map = sysTable->uploadMap[tid];\n\n                if (map != NULL) {\n                    int_T section;\n                    intHdr[NSYS_IDX]++;\n                    \n                    /* Add system index */\n                    size = sizeof(int32_T);\n                    overFlow =\n                        UploadBufAssignMem(circBuf, size, &tmpHead, &bufMem);\n                    if (overFlow) goto EXIT_POINT;\n                    intHdr[NBYTES_IDX] += size;\n                    \n                    CIRCBUF_COPY_DATA(bufMem, &i);\n                    \n                    /* Add data values */\n                    for (section=0; section<map->nSections; section++) {\n                        UploadSection *sect = &map->sections[section];\n                        \n#ifdef MW_DYNAMIC_STRING_SUPPORT\n                        if (sect->isString) {\n                            /* String data is [nBytes \"abc...\\0\"] */\n                            const void* strPtr = *(void**)sect->start;\n                            /* Add number of bytes of the string, including null-terminator */\n                            int32_T strNBytes = suStrlen(strPtr) + 1;\n                            char *tmpStr;\n                            \n                            overFlow = UploadBufAssignMem(circBuf, size, &tmpHead, &bufMem);\n                            if (overFlow) goto EXIT_POINT;\n                            intHdr[NBYTES_IDX] += size;\n                            CIRCBUF_COPY_DATA(bufMem, &strNBytes);\n\n                            /* Add character bytes */\n                            overFlow = UploadBufAssignMem(circBuf, strNBytes, &tmpHead, &bufMem);\n                            if (overFlow) goto EXIT_POINT;\n                            intHdr[NBYTES_IDX] += strNBytes;\n                            \n                            tmpStr = suToCStr(strPtr);\n                            CIRCBUF_COPY_DATA(bufMem, tmpStr);\n                            free(tmpStr);\n                        } else\n#endif\n                        \n                        {\n                            /* Regular cases */\n                            overFlow = UploadBufAssignMem(\n                                circBuf, sect->nBytes, &tmpHead, &bufMem);\n                            if (overFlow) goto EXIT_POINT;\n                            intHdr[NBYTES_IDX] += sect->nBytes;\n                            \n                            CIRCBUF_COPY_DATA(bufMem, sect->start);\n                        }\n                    }\n                }\n            }\n        }\n\n        /* If no systems were active then, do nothing. */\n        if (intHdr[NSYS_IDX] == 0) goto EXIT_POINT;\n        \n        /*\n         * Go back and finish the header: [nBytes pktType nSys tid]\n         */\n        \n        /* ...pktType */\n        intHdr[PKT_TYPE_IDX] = EXT_UPLOAD_LOGGING_DATA;\n\n        /* ...tid */\n        intHdr[TID_IDX] = tid;\n        CIRCBUF_COPY_DATA(pktStart, intHdr);\n\n        /*\n         * Time point successfully added to queue.\n         */\n        circBuf->head  = tmpHead;\n        circBuf->empty = false;\n        \n        if (preTrig) {\n            trigInfo->preTrig.count++;\n        }\n    }\n\nEXIT_POINT:\n    if (!preTrig) {\n        if (overFlow) {\n            trigInfo->overFlow = true;\n            trigInfo->state    = TRIGGER_TERMINATING;\n        }\n#ifdef VXWORKS\n        else if (trigInfo->state == TRIGGER_FIRED) {\n            /* allow upload server to run - if data needs to be uploaded */\n            semGive(uploadSem);\n        }\n#endif\n    } \n} /* end UploadBufAddTimePoint */\n\n\n/* Function ====================================================================\n * Called at the base rate, controls the state of data logging including:\n *   - monitoring the trigger signal for a trigger event\n *   - managing transition of most trigger states\n *      o a separate function (UploadCheckEndTrigger manages the duration\n *        count and the transition from fired to terminating at the end\n *        of the data collection event).\n *\n * NOTE:\n *  o This function should be called after mdlOutputs for the base rate\n */\nPUBLIC void UploadCheckTrigger(int32_T upInfoIdx, int_T numSampTimes)\n{\n    BdUploadInfo *uploadInfo = &uploadInfoArray[upInfoIdx];\n    TriggerInfo  *trigInfo   = &uploadInfo->trigInfo;\n\n    if (trigInfo->state == TRIGGER_UNARMED) return;\n\n    if (trigInfo->state == TRIGGER_HOLDING_OFF) {\n        if (trigInfo->count++ == trigInfo->holdOff) {\n            UploadArmTrigger(upInfoIdx, numSampTimes);\n        } else {\n            return;\n        }\n    }\n\n    /*\n     * Transitions from the TRIGGER_ARMED_STATE to the TRIGGER_DELAYED\n     * state or to the TRIGGER_FIRED_STATE are checked for and realized\n     * within the task (tid) associated with the trigger signal.\n     * See UploadBufAddTimePoint().\n     */ \n    \n    /*\n     * Look for transitions from the TRIGGER_DELAYED state.  The TRIGGER_FIRED\n     * state always follows the TRIGGER_DELAYED state.\n     *\n     * NOTE: the trigInfo count field is first used to count the trigger delay\n     *       and then used to count the trigger duration\n     */\n    if (trigInfo->state == TRIGGER_DELAYED) {\n        if (trigInfo->count++ >= trigInfo->delay) {\n            trigInfo->count = trigInfo->preTrig.count; /* 0 unless pre-trig */\n            trigInfo->state = TRIGGER_FIRED;\n            if (trigInfo->preTrig.duration > 0) {\n                trigInfo->preTrig.checkUnderFlow = true;\n            }\n#ifdef VERBOSE\n            printf(\"\\nTrigger fired!\\n\");\n#endif\n        }\n    }\n} /* end UploadCheckTrigger */\n\n\n/* Function ====================================================================\n * Called at the base rate, controls the state of data logging wrt\n *  o incrementing the duration count\n *  o managing the transition to the trigger terminating state\n *\n * NOTES:\n *  o Call this function at the very end of a step.\n *  o Also see UploadCheckTrigger()\n */\nPUBLIC void UploadCheckEndTrigger(int32_T upInfoIdx)\n{\n    BdUploadInfo *uploadInfo = &uploadInfoArray[upInfoIdx];\n    TriggerInfo *trigInfo    = &uploadInfo->trigInfo;\n\n    if (trigInfo->state == TRIGGER_UNARMED) return;\n\n    /*\n     * Increment duration count and terminate the data logging event if\n     * the duration has been met.\n     */\n    if (trigInfo->state == TRIGGER_FIRED) {\n        trigInfo->count++;\n        if (trigInfo->count == trigInfo->duration) {\n            trigInfo->state = TRIGGER_TERMINATING;\n        }\n    }\n\n#ifdef VXWORKS\n    if (trigInfo->state == TRIGGER_TERMINATING) {\n        /* Let upload server run to ensure that term pkt is sent to host. */\n        semGive(uploadSem);\n    }\n#endif\n} /* end UploadCheckEndTrigger */\n\n\n/* Function ===================================================================\n * Search through the upload buffers and fill out the internal copy of the\n * buffer list.  It contains a list of all buffer memory (1 entry per non-empty\n * tid buffer) that needs to be sent to the host.  Fill out the fields of the\n * specified ExtBufMemList (passed in by ext_svr) to provide public, read-only\n * access.\n */\nPRIVATE void SetExtBufListFields(ExtBufMemList *extBufList,\n                                 int32_T       upInfoIdx,\n                                 int_T         numSampTimes)\n{\n    int_T       tid;\n    BdUploadInfo *uploadInfo = &uploadInfoArray[upInfoIdx];\n    BufMemList   *bufList    = &uploadInfo->bufMemList;\n\n    bufList->nActiveBufs = 0;\n\n    for (tid=0; tid<numSampTimes; tid++) {\n        CircularBuf *circBuf = &uploadInfo->circBufs[tid];\n\n        if (!circBuf->empty) {\n            BufMem  *bufMem;\n            char_T  *head;\n            char_T  *tail   = circBuf->tail;\n            int_T   size    = circBuf->bufSize;\n\n            \n#ifdef EXTMODE_PROTECT_CRITICAL_REGIONS\n            /* \n             * disable interrupts around this critical region. We need to \n             * guarantee that reading the head pointer is an atomic \n             * operation.\n             */\n            EXTMODE_DISABLE_INTERRUPTS;\n#endif\n\n            head = circBuf->head;\n\n            \n#ifdef EXTMODE_PROTECT_CRITICAL_REGIONS\n            /* re-enable interrupts */\n            EXTMODE_ENABLE_INTERRUPTS;\n#endif\n\n            /* Validate that head/tail ptrs are within allocated range. */\n            assert((head >= circBuf->buf) && (tail >= circBuf->buf));\n            assert((head < circBuf->buf + circBuf->bufSize) &&\n                   (tail < circBuf->buf + circBuf->bufSize));\n\n            bufMem = &bufList->bufs[bufList->nActiveBufs];\n            bufList->tids[bufList->nActiveBufs] = tid;\n            assert(bufList->nActiveBufs < bufList->maxBufs);\n            bufList->nActiveBufs++;\n\n            bufMem->section1 = tail;\n            circBuf->newTail = head;\n\n            if (head > tail) {\n                /* not wrapped - only one section required */\n                bufMem->nBytes1  = (int_T)(head - tail);\n\n                bufMem->nBytes2  = 0;\n                bufMem->section2 = NULL;\n            } else {\n                /* wrapped - 2 sections required */\n                bufMem->nBytes1 = (int_T)(circBuf->buf + size - tail);\n\n                bufMem->nBytes2  = (int_T)(head - circBuf->buf);\n                bufMem->section2 = circBuf->buf;\n            }\n        }\n    }\n\n    /*\n     * Provide ext_svr with readonly access to the bufMemList.\n     */\n    extBufList->nActiveBufs = bufList->nActiveBufs;\n    extBufList->bufs        = (const BufMem *)bufList->bufs;\n    extBufList->tids        = (const int_T *)bufList->tids;\n} /* end SetExtBufListFields */\n\n\n/* Function ===================================================================\n * Set the internal copy of the buffer list to \"empty\" & fill out the fields\n * of the specified ExtBufMemList (passed in by ext_svr) to provide public,\n * read only access.\n */\nPRIVATE void SetExtBufListFieldsForEmptyList(ExtBufMemList *extBufList,\n                                             int32_T       upInfoIdx)\n{\n    BdUploadInfo *uploadInfo = &uploadInfoArray[upInfoIdx];\n    BufMemList   *bufList    = &uploadInfo->bufMemList;\n\n    bufList->nActiveBufs = 0;\n\n    extBufList->nActiveBufs = bufList->nActiveBufs;\n    extBufList->bufs        = (const BufMem *)NULL;\n} /* end SetExtBufListFieldsForEmptyList */\n\n\n/* Function ====================================================================\n * Called by ext_svr (background task), this function checks all buffers for\n * data and returns a list of buffer memory to be sent to the host.\n */\nPUBLIC void UploadBufGetData(ExtBufMemList *extBufList,\n                             int32_T       upInfoIdx,\n                             int_T         numSampTimes)\n{\n    BdUploadInfo *uploadInfo = &uploadInfoArray[upInfoIdx];\n    TriggerInfo  *trigInfo   = &uploadInfo->trigInfo;\n    TriggerState trigState = trigInfo->state;\n \n    if ((trigState == TRIGGER_FIRED) ||\n        (trigState == TRIGGER_TERMINATING)) {\n\n        /* Make sure we start with an empty list */\n        SetExtBufListFieldsForEmptyList(extBufList, upInfoIdx);\n        SetExtBufListFields(extBufList, upInfoIdx, numSampTimes);\n\n        /*\n         * If all bufs are empty and we are terminating then we're now done!\n         */\n        if ((extBufList->nActiveBufs == 0) &&\n            (trigState == TRIGGER_TERMINATING)) {\n\n            host_upstatus_is_uploading = false;\n\n            if (trigInfo->holdOff == TRIGMODE_ONESHOT) {\n                SendPktToHost(EXT_TERMINATE_LOG_SESSION, sizeof(int32_T),\n                              (char *)&upInfoIdx);\n                UploadEndLoggingSession(upInfoIdx, numSampTimes);\n            } else {\n                SendPktToHost(EXT_TERMINATE_LOG_EVENT, sizeof(int32_T),\n                              (char *)&upInfoIdx);\n                trigInfo->count = 0;\n                trigInfo->state = TRIGGER_HOLDING_OFF;\n            }\n        }\n    } else {\n        SetExtBufListFieldsForEmptyList(extBufList, upInfoIdx);\n    }\n} /* end UploadBufGetData */\n#endif /* ifndef EXTMODE_DISABLESIGNALMONITORING */\n\n\n/* [EOF] updown.c */\n\n/* LocalWords:  DType pbuf NPARAMS dtype tran Els EXTMODE HDR abc\n * LocalWords:  DISABLEPARAMETERTUNING bufs buf blockio tids sys's nbuf sigs\n * LocalWords:  tid's DISABLESIGNALMONITORING uploadinfo NULL'ed vals oneshot\n * LocalWords:  sem svr TRIGMODE ONESTEP CIRCBUF tmp\n */\n"}],"trace":"{\"model\":\"px42LoopCtrQGC20220313\",\"sources\":[\"px42LoopCtrQGC20220313.cpp\",\"px42LoopCtrQGC20220313.h\"],\"categoricalProps\":[\"ModelElemCategory\",\"StorageClass\",\"BlockName\"],\"categoricalValues\":[\"InternalData\",\"Default\",\"\\u003cRoot\\u003e/BusConversion_InsertedFor_Bus Selector_at_inport_0\",\"Outports\",\"LocalParameters\"],\"sidPrefixes\":[\"px42LoopCtrQGC20220313\"],\"fileRecords\":{\"1\":{\"records\":[{\"tk\":[97,3,97,27],\"els\":[\"1:34:0\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[97,28,97,31],\"els\":[\"1:34:0\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[97,31,97,32],\"els\":[\"1:34:0\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[98,3,98,27],\"ct\":{\"1\":1}},{\"tk\":[98,28,98,41],\"ct\":{\"1\":1}},{\"tk\":[98,41,98,42],\"ct\":{\"1\":1}},{\"tk\":[99,3,99,27],\"els\":[\"1:6:0\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[99,28,99,33],\"els\":[\"1:6:0\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[99,33,99,34],\"els\":[\"1:6:0\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[100,3,100,27],\"ct\":{\"1\":1}},{\"tk\":[100,28,100,43],\"ct\":{\"1\":1}},{\"tk\":[100,43,100,44],\"ct\":{\"1\":1}},{\"tk\":[101,3,101,19],\"els\":[\"1:3718:43:0\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[101,20,101,25],\"els\":[\"1:3718:43:0\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[101,25,101,26],\"els\":[\"1:3718:43:0\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[102,3,102,19],\"ct\":{\"1\":1}},{\"tk\":[102,20,102,35],\"ct\":{\"1\":1}},{\"tk\":[102,35,102,36],\"ct\":{\"1\":1}},{\"tk\":[103,3,103,10],\"ct\":{\"1\":1}},{\"tk\":[103,11,103,24],\"ct\":{\"1\":1}},{\"tk\":[103,24,103,25],\"ct\":{\"1\":1}},{\"tk\":[103,25,103,27],\"ct\":{\"1\":1}},{\"tk\":[103,27,103,28],\"ct\":{\"1\":1}},{\"tk\":[103,28,103,29],\"ct\":{\"1\":1}},{\"tk\":[104,3,104,9],\"ct\":{\"1\":1}},{\"tk\":[104,10,104,37],\"ct\":{\"1\":1}},{\"tk\":[104,37,104,38],\"ct\":{\"1\":1}},{\"tk\":[104,38,104,39],\"ct\":{\"1\":1}},{\"tk\":[104,39,104,40],\"ct\":{\"1\":1}},{\"tk\":[104,40,104,41],\"ct\":{\"1\":1}},{\"tk\":[105,3,105,11],\"ct\":{\"1\":1}},{\"tk\":[105,12,105,20],\"ct\":{\"1\":1}},{\"tk\":[105,20,105,21],\"ct\":{\"1\":1}},{\"tk\":[105,21,105,22],\"ct\":{\"1\":1}},{\"tk\":[105,22,105,23],\"ct\":{\"1\":1}},{\"tk\":[105,23,105,24],\"ct\":{\"1\":1}},{\"tk\":[106,3,106,9],\"els\":[\"1:2810\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[106,10,106,15],\"els\":[\"1:2810\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[106,15,106,16],\"els\":[\"1:2810\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[107,3,107,9],\"els\":[\"1:3112\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[107,10,107,11],\"els\":[\"1:3112\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[107,11,107,12],\"els\":[\"1:3112\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[108,3,108,9],\"els\":[\"1:2728\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[108,10,108,24],\"els\":[\"1:2728\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[108,24,108,25],\"els\":[\"1:2728\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[109,3,109,9],\"els\":[\"1:2478\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[109,10,109,26],\"els\":[\"1:2478\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[109,26,109,27],\"els\":[\"1:2478\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[110,3,110,9],\"els\":[\"1:2645\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[110,10,110,26],\"els\":[\"1:2645\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[110,26,110,27],\"els\":[\"1:2645\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[111,3,111,9],\"els\":[\"1:3291\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[111,10,111,20],\"els\":[\"1:3291\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[111,20,111,21],\"els\":[\"1:3291\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[112,3,112,9],\"els\":[\"1:3643\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[112,10,112,22],\"els\":[\"1:3643\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[112,22,112,23],\"els\":[\"1:3643\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[113,3,113,9],\"els\":[\"1:3532\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[113,10,113,22],\"els\":[\"1:3532\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[113,22,113,23],\"els\":[\"1:3532\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[114,3,114,9],\"els\":[\"1:412\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[114,10,114,15],\"els\":[\"1:412\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[114,15,114,16],\"els\":[\"1:412\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[115,3,115,9],\"els\":[\"1:3706\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[115,10,115,17],\"els\":[\"1:3706\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[115,17,115,18],\"els\":[\"1:3706\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[116,3,116,9],\"els\":[\"1:418\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[116,10,116,14],\"els\":[\"1:418\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[116,14,116,15],\"els\":[\"1:418\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[117,3,117,9],\"els\":[\"1:3707\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[117,10,117,17],\"els\":[\"1:3707\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[117,17,117,18],\"els\":[\"1:3707\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[118,3,118,9],\"els\":[\"1:422\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[118,10,118,13],\"els\":[\"1:422\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[118,13,118,14],\"els\":[\"1:422\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[119,3,119,9],\"els\":[\"1:345\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[119,10,119,15],\"els\":[\"1:345\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[119,15,119,16],\"els\":[\"1:345\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[120,3,120,9],\"els\":[\"1:344\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[120,10,120,15],\"els\":[\"1:344\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[120,15,120,16],\"els\":[\"1:344\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[121,3,121,9],\"els\":[\"1:329\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[121,10,121,25],\"els\":[\"1:329\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[121,25,121,26],\"els\":[\"1:329\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[122,3,122,9],\"els\":[\"1:314\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[122,10,122,25],\"els\":[\"1:314\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[122,25,122,26],\"els\":[\"1:314\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[123,3,123,9],\"els\":[\"1:315\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[123,10,123,25],\"els\":[\"1:315\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[123,25,123,26],\"els\":[\"1:315\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[124,3,124,9],\"els\":[\"1:316\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[124,10,124,25],\"els\":[\"1:316\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[124,25,124,26],\"els\":[\"1:316\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[125,3,125,9],\"els\":[\"1:318\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[125,10,125,25],\"els\":[\"1:318\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[125,25,125,26],\"els\":[\"1:318\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[126,3,126,9],\"els\":[\"1:390\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[126,10,126,15],\"els\":[\"1:390\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[126,15,126,16],\"els\":[\"1:390\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[127,3,127,9],\"els\":[\"1:392\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[127,10,127,25],\"els\":[\"1:392\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[127,25,127,26],\"els\":[\"1:392\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[128,3,128,9],\"els\":[\"1:394\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[128,10,128,25],\"els\":[\"1:394\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[128,25,128,26],\"els\":[\"1:394\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[129,3,129,9],\"els\":[\"1:396\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[129,10,129,25],\"els\":[\"1:396\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[129,25,129,26],\"els\":[\"1:396\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[130,3,130,9],\"els\":[\"1:399\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[130,10,130,22],\"els\":[\"1:399\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[130,22,130,23],\"els\":[\"1:399\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[131,3,131,9],\"els\":[\"1:416\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[131,10,131,21],\"els\":[\"1:416\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[131,21,131,22],\"els\":[\"1:416\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[132,3,132,9],\"els\":[\"1:420\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[132,10,132,20],\"els\":[\"1:420\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[132,20,132,21],\"els\":[\"1:420\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[133,3,133,9],\"els\":[\"1:2232\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[133,10,133,25],\"els\":[\"1:2232\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[133,25,133,26],\"els\":[\"1:2232\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[134,3,134,9],\"els\":[\"1:498\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[134,10,134,25],\"els\":[\"1:498\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[134,25,134,26],\"els\":[\"1:498\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[135,3,135,9],\"els\":[\"1:500\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[135,10,135,25],\"els\":[\"1:500\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[135,25,135,26],\"els\":[\"1:500\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[136,3,136,9],\"els\":[\"1:502\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[136,10,136,25],\"els\":[\"1:502\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[136,25,136,26],\"els\":[\"1:502\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[137,3,137,9],\"els\":[\"1:504\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[137,10,137,25],\"els\":[\"1:504\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[137,25,137,26],\"els\":[\"1:504\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[138,3,138,9],\"els\":[\"1:505\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[138,10,138,25],\"els\":[\"1:505\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[138,25,138,26],\"els\":[\"1:505\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[139,3,139,9],\"els\":[\"1:506\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[139,10,139,25],\"els\":[\"1:506\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[139,25,139,26],\"els\":[\"1:506\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[140,3,140,9],\"els\":[\"1:1984\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[140,10,140,25],\"els\":[\"1:1984\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[140,25,140,26],\"els\":[\"1:1984\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[141,3,141,9],\"els\":[\"1:1985\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[141,10,141,25],\"els\":[\"1:1985\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[141,25,141,26],\"els\":[\"1:1985\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[142,3,142,9],\"els\":[\"1:2325\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[142,10,142,25],\"els\":[\"1:2325\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[142,25,142,26],\"els\":[\"1:2325\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[143,3,143,9],\"els\":[\"1:298\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[143,10,143,24],\"els\":[\"1:298\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[143,24,143,25],\"els\":[\"1:298\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[144,3,144,9],\"els\":[\"1:300\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[144,10,144,24],\"els\":[\"1:300\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[144,24,144,25],\"els\":[\"1:300\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[145,3,145,9],\"els\":[\"1:2731\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[145,10,145,11],\"els\":[\"1:2731\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[145,11,145,12],\"els\":[\"1:2731\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[146,3,146,9],\"els\":[\"1:2648\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[146,10,146,13],\"els\":[\"1:2648\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[146,13,146,14],\"els\":[\"1:2648\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[147,3,147,9],\"els\":[\"1:2571\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[147,10,147,13],\"els\":[\"1:2571\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[147,13,147,14],\"els\":[\"1:2571\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[148,3,148,11],\"ct\":{\"1\":1,\"0\":0,\"2\":2}},{\"tk\":[148,12,148,18],\"ct\":{\"1\":1,\"0\":0,\"2\":2}},{\"tk\":[148,18,148,19],\"ct\":{\"1\":1,\"0\":0,\"2\":2}},{\"tk\":[148,19,148,21],\"ct\":{\"1\":1,\"0\":0,\"2\":2}},{\"tk\":[148,21,148,22],\"ct\":{\"1\":1,\"0\":0,\"2\":2}},{\"tk\":[148,22,148,23],\"ct\":{\"1\":1,\"0\":0,\"2\":2}},{\"tk\":[150,3,150,11],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[150,12,150,18],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[150,18,150,19],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[150,19,150,21],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[150,21,150,22],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[150,22,150,23],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[151,3,151,9],\"els\":[\"1:3705\"],\"ct\":{\"1\":1}},{\"tk\":[151,10,151,24],\"els\":[\"1:3705\"],\"ct\":{\"1\":1}},{\"tk\":[151,24,151,25],\"els\":[\"1:3705\"],\"ct\":{\"1\":1}},{\"tk\":[152,3,152,9],\"els\":[\"1:3280\"],\"ct\":{\"1\":1}},{\"tk\":[152,10,152,12],\"els\":[\"1:3280\"],\"ct\":{\"1\":1}},{\"tk\":[152,12,152,13],\"els\":[\"1:3280\"],\"ct\":{\"1\":1}},{\"tk\":[153,3,153,9],\"els\":[\"1:2700:4\"],\"ct\":{\"1\":1}},{\"tk\":[153,10,153,15],\"els\":[\"1:2700:4\"],\"ct\":{\"1\":1}},{\"tk\":[153,15,153,16],\"els\":[\"1:2700:4\"],\"ct\":{\"1\":1}},{\"tk\":[154,3,154,9],\"els\":[\"1:3464\"],\"ct\":{\"1\":1}},{\"tk\":[154,10,154,14],\"els\":[\"1:3464\"],\"ct\":{\"1\":1}},{\"tk\":[154,14,154,15],\"els\":[\"1:3464\"],\"ct\":{\"1\":1}},{\"tk\":[155,3,155,9],\"els\":[\"1:3278\"],\"ct\":{\"1\":1}},{\"tk\":[155,10,155,18],\"els\":[\"1:3278\"],\"ct\":{\"1\":1}},{\"tk\":[155,18,155,19],\"els\":[\"1:3278\"],\"ct\":{\"1\":1}},{\"tk\":[156,3,156,9],\"els\":[\"1:3632\"],\"ct\":{\"1\":1}},{\"tk\":[156,10,156,14],\"els\":[\"1:3632\"],\"ct\":{\"1\":1}},{\"tk\":[156,14,156,15],\"els\":[\"1:3632\"],\"ct\":{\"1\":1}},{\"tk\":[157,3,157,9],\"els\":[\"1:3521\"],\"ct\":{\"1\":1}},{\"tk\":[157,10,157,14],\"els\":[\"1:3521\"],\"ct\":{\"1\":1}},{\"tk\":[157,14,157,15],\"els\":[\"1:3521\"],\"ct\":{\"1\":1}},{\"tk\":[158,3,158,9],\"els\":[\"1:3483\"],\"ct\":{\"1\":1}},{\"tk\":[158,10,158,14],\"els\":[\"1:3483\"],\"ct\":{\"1\":1}},{\"tk\":[158,14,158,15],\"els\":[\"1:3483\"],\"ct\":{\"1\":1}},{\"tk\":[159,3,159,9],\"els\":[\"1:35:13:62\"],\"ct\":{\"1\":1}},{\"tk\":[159,10,159,20],\"els\":[\"1:35:13:62\"],\"ct\":{\"1\":1}},{\"tk\":[159,20,159,21],\"els\":[\"1:35:13:62\"],\"ct\":{\"1\":1}},{\"tk\":[160,3,160,9],\"els\":[\"1:3630\"],\"ct\":{\"1\":1}},{\"tk\":[160,10,160,20],\"els\":[\"1:3630\"],\"ct\":{\"1\":1}},{\"tk\":[160,20,160,21],\"els\":[\"1:3630\"],\"ct\":{\"1\":1}},{\"tk\":[161,3,161,9],\"els\":[\"1:3300\"],\"ct\":{\"1\":1}},{\"tk\":[161,10,161,18],\"els\":[\"1:3300\"],\"ct\":{\"1\":1}},{\"tk\":[161,18,161,19],\"els\":[\"1:3300\"],\"ct\":{\"1\":1}},{\"tk\":[162,3,162,9],\"els\":[\"1:3302\"],\"ct\":{\"1\":1}},{\"tk\":[162,10,162,18],\"els\":[\"1:3302\"],\"ct\":{\"1\":1}},{\"tk\":[162,18,162,19],\"els\":[\"1:3302\"],\"ct\":{\"1\":1}},{\"tk\":[163,3,163,9],\"els\":[\"1:3683\"],\"ct\":{\"1\":1}},{\"tk\":[163,10,163,19],\"els\":[\"1:3683\"],\"ct\":{\"1\":1}},{\"tk\":[163,19,163,20],\"els\":[\"1:3683\"],\"ct\":{\"1\":1}},{\"tk\":[164,3,164,9],\"els\":[\"1:35:13:61\"],\"ct\":{\"1\":1}},{\"tk\":[164,10,164,20],\"els\":[\"1:35:13:61\"],\"ct\":{\"1\":1}},{\"tk\":[164,20,164,21],\"els\":[\"1:35:13:61\"],\"ct\":{\"1\":1}},{\"tk\":[165,3,165,9],\"els\":[\"1:3519\"],\"ct\":{\"1\":1}},{\"tk\":[165,10,165,20],\"els\":[\"1:3519\"],\"ct\":{\"1\":1}},{\"tk\":[165,20,165,21],\"els\":[\"1:3519\"],\"ct\":{\"1\":1}},{\"tk\":[166,3,166,9],\"els\":[\"1:3652\"],\"ct\":{\"1\":1}},{\"tk\":[166,10,166,20],\"els\":[\"1:3652\"],\"ct\":{\"1\":1}},{\"tk\":[166,20,166,21],\"els\":[\"1:3652\"],\"ct\":{\"1\":1}},{\"tk\":[167,3,167,9],\"els\":[\"1:3653\"],\"ct\":{\"1\":1}},{\"tk\":[167,10,167,20],\"els\":[\"1:3653\"],\"ct\":{\"1\":1}},{\"tk\":[167,20,167,21],\"els\":[\"1:3653\"],\"ct\":{\"1\":1}},{\"tk\":[168,3,168,9],\"els\":[\"1:3655\"],\"ct\":{\"1\":1}},{\"tk\":[168,10,168,20],\"els\":[\"1:3655\"],\"ct\":{\"1\":1}},{\"tk\":[168,20,168,21],\"els\":[\"1:3655\"],\"ct\":{\"1\":1}},{\"tk\":[169,3,169,9],\"els\":[\"1:3654\"],\"ct\":{\"1\":1}},{\"tk\":[169,10,169,20],\"els\":[\"1:3654\"],\"ct\":{\"1\":1}},{\"tk\":[169,20,169,21],\"els\":[\"1:3654\"],\"ct\":{\"1\":1}},{\"tk\":[170,3,170,9],\"els\":[\"1:3607\"],\"ct\":{\"1\":1}},{\"tk\":[170,10,170,16],\"els\":[\"1:3607\"],\"ct\":{\"1\":1}},{\"tk\":[170,16,170,17],\"els\":[\"1:3607\"],\"ct\":{\"1\":1}},{\"tk\":[171,3,171,9],\"els\":[\"1:3685\"],\"ct\":{\"1\":1}},{\"tk\":[171,10,171,19],\"els\":[\"1:3685\"],\"ct\":{\"1\":1}},{\"tk\":[171,19,171,20],\"els\":[\"1:3685\"],\"ct\":{\"1\":1}},{\"tk\":[172,3,172,9],\"els\":[\"1:3572\"],\"ct\":{\"1\":1}},{\"tk\":[172,10,172,19],\"els\":[\"1:3572\"],\"ct\":{\"1\":1}},{\"tk\":[172,19,172,20],\"els\":[\"1:3572\"],\"ct\":{\"1\":1}},{\"tk\":[173,3,173,9],\"els\":[\"1:35:10\"],\"ct\":{\"1\":1}},{\"tk\":[173,10,173,14],\"els\":[\"1:35:10\"],\"ct\":{\"1\":1}},{\"tk\":[173,14,173,15],\"els\":[\"1:35:10\"],\"ct\":{\"1\":1}},{\"tk\":[174,3,174,9],\"els\":[\"1:35:13:63\"],\"ct\":{\"1\":1}},{\"tk\":[174,10,174,20],\"els\":[\"1:35:13:63\"],\"ct\":{\"1\":1}},{\"tk\":[174,20,174,21],\"els\":[\"1:35:13:63\"],\"ct\":{\"1\":1}},{\"tk\":[175,3,175,9],\"els\":[\"1:3541\"],\"ct\":{\"1\":1}},{\"tk\":[175,10,175,20],\"els\":[\"1:3541\"],\"ct\":{\"1\":1}},{\"tk\":[175,20,175,21],\"els\":[\"1:3541\"],\"ct\":{\"1\":1}},{\"tk\":[176,3,176,9],\"els\":[\"1:3542\"],\"ct\":{\"1\":1}},{\"tk\":[176,10,176,20],\"els\":[\"1:3542\"],\"ct\":{\"1\":1}},{\"tk\":[176,20,176,21],\"els\":[\"1:3542\"],\"ct\":{\"1\":1}},{\"tk\":[177,3,177,9],\"els\":[\"1:3544\"],\"ct\":{\"1\":1}},{\"tk\":[177,10,177,20],\"els\":[\"1:3544\"],\"ct\":{\"1\":1}},{\"tk\":[177,20,177,21],\"els\":[\"1:3544\"],\"ct\":{\"1\":1}},{\"tk\":[178,3,178,9],\"els\":[\"1:3543\"],\"ct\":{\"1\":1}},{\"tk\":[178,10,178,20],\"els\":[\"1:3543\"],\"ct\":{\"1\":1}},{\"tk\":[178,20,178,21],\"els\":[\"1:3543\"],\"ct\":{\"1\":1}},{\"tk\":[179,3,179,9],\"els\":[\"1:3574\"],\"ct\":{\"1\":1}},{\"tk\":[179,10,179,19],\"els\":[\"1:3574\"],\"ct\":{\"1\":1}},{\"tk\":[179,19,179,20],\"els\":[\"1:3574\"],\"ct\":{\"1\":1}},{\"tk\":[180,3,180,9],\"els\":[\"1:35:8\"],\"ct\":{\"1\":1}},{\"tk\":[180,10,180,14],\"els\":[\"1:35:8\"],\"ct\":{\"1\":1}},{\"tk\":[180,14,180,15],\"els\":[\"1:35:8\"],\"ct\":{\"1\":1}},{\"tk\":[181,3,181,9],\"ct\":{\"1\":1}},{\"tk\":[181,10,181,21],\"ct\":{\"1\":1}},{\"tk\":[181,21,181,22],\"ct\":{\"1\":1}},{\"tk\":[182,3,182,9],\"ct\":{\"1\":1}},{\"tk\":[182,10,182,21],\"ct\":{\"1\":1}},{\"tk\":[182,21,182,22],\"ct\":{\"1\":1}},{\"tk\":[183,3,183,9],\"ct\":{\"1\":1}},{\"tk\":[183,10,183,20],\"ct\":{\"1\":1}},{\"tk\":[183,20,183,21],\"ct\":{\"1\":1}},{\"tk\":[184,3,184,9],\"ct\":{\"1\":1}},{\"tk\":[184,10,184,39],\"ct\":{\"1\":1}},{\"tk\":[184,39,184,40],\"ct\":{\"1\":1}},{\"tk\":[185,3,185,9],\"ct\":{\"1\":1}},{\"tk\":[185,10,185,39],\"ct\":{\"1\":1}},{\"tk\":[185,39,185,40],\"ct\":{\"1\":1}},{\"tk\":[186,3,186,9],\"ct\":{\"1\":1}},{\"tk\":[186,10,186,39],\"ct\":{\"1\":1}},{\"tk\":[186,39,186,40],\"ct\":{\"1\":1}},{\"tk\":[187,3,187,9],\"ct\":{\"1\":1}},{\"tk\":[187,10,187,26],\"ct\":{\"1\":1}},{\"tk\":[187,26,187,27],\"ct\":{\"1\":1}},{\"tk\":[188,3,188,11],\"els\":[\"1:332\"],\"ct\":{\"1\":1}},{\"tk\":[188,12,188,17],\"els\":[\"1:332\"],\"ct\":{\"1\":1}},{\"tk\":[188,17,188,18],\"els\":[\"1:332\"],\"ct\":{\"1\":1}},{\"tk\":[188,18,188,19],\"els\":[\"1:332\"],\"ct\":{\"1\":1}},{\"tk\":[188,19,188,20],\"els\":[\"1:332\"],\"ct\":{\"1\":1}},{\"tk\":[188,20,188,21],\"els\":[\"1:332\"],\"ct\":{\"1\":1}},{\"tk\":[189,3,189,12],\"els\":[\"1:3740\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[189,13,189,20],\"els\":[\"1:3740\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[189,20,189,21],\"els\":[\"1:3740\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[190,3,190,12],\"els\":[\"1:34:19\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[190,13,190,16],\"els\":[\"1:34:19\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[190,16,190,17],\"els\":[\"1:34:19\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[191,3,191,12],\"els\":[\"1:308\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[191,13,191,28],\"els\":[\"1:308\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[191,28,191,29],\"els\":[\"1:308\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[196,3,196,34],\"els\":[\"1:26\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[196,35,196,38],\"els\":[\"1:26\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[196,38,196,39],\"els\":[\"1:26\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[197,3,197,34],\"els\":[\"1:3718:43:9\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[197,35,197,40],\"els\":[\"1:3718:43:9\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[197,40,197,41],\"els\":[\"1:3718:43:9\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[198,3,198,34],\"els\":[\"1:34:9\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[198,35,198,40],\"els\":[\"1:34:9\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[198,40,198,41],\"els\":[\"1:34:9\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[199,3,199,34],\"els\":[\"1:6:9\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[199,35,199,40],\"els\":[\"1:6:9\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[199,40,199,41],\"els\":[\"1:6:9\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[200,3,200,34],\"els\":[\"1:3761\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[200,35,200,40],\"els\":[\"1:3761\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[200,40,200,41],\"els\":[\"1:3761\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[201,3,201,9],\"els\":[\"1:2700:5\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[201,10,201,19],\"els\":[\"1:2700:5\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[201,19,201,20],\"els\":[\"1:2700:5\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[202,3,202,9],\"els\":[\"1:3280\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[202,10,202,40],\"els\":[\"1:3280\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[202,40,202,41],\"els\":[\"1:3280\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[203,3,203,9],\"els\":[\"1:2255:5\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[203,10,203,21],\"els\":[\"1:2255:5\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[203,21,203,22],\"els\":[\"1:2255:5\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[204,3,204,9],\"els\":[\"1:3632\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[204,10,204,41],\"els\":[\"1:3632\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[204,41,204,42],\"els\":[\"1:3632\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[205,3,205,9],\"els\":[\"1:2617:5\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[205,10,205,21],\"els\":[\"1:2617:5\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[205,21,205,22],\"els\":[\"1:2617:5\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[206,3,206,9],\"els\":[\"1:3521\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[206,10,206,41],\"els\":[\"1:3521\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[206,41,206,42],\"els\":[\"1:3521\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[207,3,207,9],\"els\":[\"1:3278\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[207,10,207,39],\"els\":[\"1:3278\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[207,39,207,40],\"els\":[\"1:3278\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[208,3,208,9],\"els\":[\"1:3279\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[208,10,208,40],\"els\":[\"1:3279\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[208,40,208,41],\"els\":[\"1:3279\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[209,3,209,9],\"els\":[\"1:3630\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[209,10,209,41],\"els\":[\"1:3630\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[209,41,209,42],\"els\":[\"1:3630\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[210,3,210,9],\"els\":[\"1:3631\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[210,10,210,41],\"els\":[\"1:3631\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[210,41,210,42],\"els\":[\"1:3631\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[211,3,211,9],\"els\":[\"1:3519\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[211,10,211,41],\"els\":[\"1:3519\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[211,41,211,42],\"els\":[\"1:3519\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[212,3,212,9],\"els\":[\"1:3520\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[212,10,212,41],\"els\":[\"1:3520\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[212,41,212,42],\"els\":[\"1:3520\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[213,3,213,9],\"els\":[\"1:2241\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[213,10,213,41],\"els\":[\"1:2241\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[213,41,213,42],\"els\":[\"1:2241\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[214,3,214,9],\"els\":[\"1:3704\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[214,10,214,17],\"els\":[\"1:3704\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[214,17,214,18],\"els\":[\"1:3704\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[215,3,215,9],\"els\":[\"1:3704\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[215,10,215,17],\"els\":[\"1:3704\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[215,17,215,18],\"els\":[\"1:3704\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[216,3,216,9],\"els\":[\"1:2724\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[216,10,216,24],\"els\":[\"1:2724\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[216,24,216,25],\"els\":[\"1:2724\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[217,3,217,9],\"els\":[\"1:2436\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[217,10,217,20],\"els\":[\"1:2436\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[217,20,217,21],\"els\":[\"1:2436\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[218,3,218,9],\"els\":[\"1:2641\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[218,10,218,25],\"els\":[\"1:2641\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[218,25,218,26],\"els\":[\"1:2641\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[219,3,219,9],\"els\":[\"1:2430\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[219,10,219,17],\"els\":[\"1:2430\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[219,17,219,18],\"els\":[\"1:2430\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[220,3,220,9],\"els\":[\"1:2688\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[220,10,220,22],\"els\":[\"1:2688\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[220,22,220,23],\"els\":[\"1:2688\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[221,3,221,9],\"els\":[\"1:2770\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[221,10,221,21],\"els\":[\"1:2770\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[221,21,221,22],\"els\":[\"1:2770\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[222,3,222,9],\"els\":[\"1:267\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[222,10,222,17],\"els\":[\"1:267\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[222,17,222,18],\"els\":[\"1:267\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[223,3,223,9],\"els\":[\"1:268\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[223,10,223,15],\"els\":[\"1:268\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[223,15,223,16],\"els\":[\"1:268\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[224,3,224,9],\"els\":[\"1:269\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[224,10,224,15],\"els\":[\"1:269\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[224,15,224,16],\"els\":[\"1:269\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[225,3,225,9],\"els\":[\"1:516\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[225,10,225,19],\"els\":[\"1:516\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[225,19,225,20],\"els\":[\"1:516\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[226,3,226,9],\"els\":[\"1:517\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[226,10,226,20],\"els\":[\"1:517\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[226,20,226,21],\"els\":[\"1:517\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[227,3,227,9],\"els\":[\"1:518\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[227,10,227,21],\"els\":[\"1:518\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[227,21,227,22],\"els\":[\"1:518\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[228,3,228,9],\"els\":[\"1:519\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[228,10,228,19],\"els\":[\"1:519\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[228,19,228,20],\"els\":[\"1:519\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[229,3,229,9],\"els\":[\"1:146\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[229,10,229,14],\"els\":[\"1:146\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[229,14,229,15],\"els\":[\"1:146\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[230,3,230,9],\"els\":[\"1:520\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[230,10,230,18],\"els\":[\"1:520\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[230,18,230,19],\"els\":[\"1:520\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[231,3,231,9],\"els\":[\"1:521\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[231,10,231,17],\"els\":[\"1:521\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[231,17,231,18],\"els\":[\"1:521\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[232,3,232,9],\"els\":[\"1:2227\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[232,10,232,12],\"els\":[\"1:2227\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[232,12,232,13],\"els\":[\"1:2227\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[233,3,233,9],\"els\":[\"1:2243\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[233,10,233,11],\"els\":[\"1:2243\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[233,11,233,12],\"els\":[\"1:2243\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[234,3,234,9],\"els\":[\"1:154\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[234,10,234,14],\"els\":[\"1:154\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[234,14,234,15],\"els\":[\"1:154\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[235,3,235,9],\"els\":[\"1:157\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[235,10,235,15],\"els\":[\"1:157\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[235,15,235,16],\"els\":[\"1:157\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[236,3,236,9],\"els\":[\"1:158\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[236,10,236,14],\"els\":[\"1:158\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[236,14,236,15],\"els\":[\"1:158\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[237,3,237,9],\"els\":[\"1:372\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[237,10,237,13],\"els\":[\"1:372\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[237,13,237,14],\"els\":[\"1:372\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[238,3,238,9],\"els\":[\"1:266\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[238,10,238,17],\"els\":[\"1:266\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[238,17,238,18],\"els\":[\"1:266\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[239,3,239,9],\"els\":[\"1:2733\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[239,10,239,11],\"els\":[\"1:2733\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[240,5,240,9],\"els\":[\"1:2733\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[240,10,240,11],\"els\":[\"1:2733\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[240,11,240,21],\"els\":[\"1:2733\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[240,21,240,22],\"els\":[\"1:2733\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[241,3,241,4],\"els\":[\"1:2733\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[241,5,241,16],\"els\":[\"1:2733\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[241,16,241,17],\"els\":[\"1:2733\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[243,3,243,9],\"els\":[\"1:2273\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[243,10,243,11],\"els\":[\"1:2273\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[244,5,244,9],\"els\":[\"1:2273\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[244,10,244,11],\"els\":[\"1:2273\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[244,11,244,21],\"els\":[\"1:2273\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[244,21,244,22],\"els\":[\"1:2273\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[245,3,245,4],\"els\":[\"1:2273\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[245,5,245,18],\"els\":[\"1:2273\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[245,18,245,19],\"els\":[\"1:2273\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[247,3,247,9],\"els\":[\"1:2650\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[247,10,247,11],\"els\":[\"1:2650\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[248,5,248,9],\"els\":[\"1:2650\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[248,10,248,11],\"els\":[\"1:2650\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[248,11,248,21],\"els\":[\"1:2650\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[248,21,248,22],\"els\":[\"1:2650\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[249,3,249,4],\"els\":[\"1:2650\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[249,5,249,18],\"els\":[\"1:2650\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[249,18,249,19],\"els\":[\"1:2650\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[251,3,251,9],\"els\":[\"1:3321\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[251,10,251,11],\"els\":[\"1:3321\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[252,5,252,9],\"els\":[\"1:3321\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[252,10,252,11],\"els\":[\"1:3321\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[252,11,252,21],\"els\":[\"1:3321\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[252,21,252,22],\"els\":[\"1:3321\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[253,3,253,4],\"els\":[\"1:3321\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[253,5,253,19],\"els\":[\"1:3321\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[253,19,253,20],\"els\":[\"1:3321\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[255,3,255,9],\"els\":[\"1:2849\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[255,10,255,11],\"els\":[\"1:2849\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[256,5,256,9],\"els\":[\"1:2849\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[256,10,256,11],\"els\":[\"1:2849\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[256,11,256,21],\"els\":[\"1:2849\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[256,21,256,22],\"els\":[\"1:2849\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[256,22,256,23],\"els\":[\"1:2849\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[256,23,256,24],\"els\":[\"1:2849\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[256,24,256,25],\"els\":[\"1:2849\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[257,3,257,4],\"els\":[\"1:2849\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[257,5,257,18],\"els\":[\"1:2849\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[257,18,257,19],\"els\":[\"1:2849\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[259,3,259,9],\"els\":[\"1:3674\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[259,10,259,11],\"els\":[\"1:3674\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[260,5,260,9],\"els\":[\"1:3674\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[260,10,260,11],\"els\":[\"1:3674\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[260,11,260,21],\"els\":[\"1:3674\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[260,21,260,22],\"els\":[\"1:3674\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[261,3,261,4],\"els\":[\"1:3674\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[261,5,261,18],\"els\":[\"1:3674\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[261,18,261,19],\"els\":[\"1:3674\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[263,3,263,9],\"els\":[\"1:3563\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[263,10,263,11],\"els\":[\"1:3563\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[264,5,264,9],\"els\":[\"1:3563\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[264,10,264,11],\"els\":[\"1:3563\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[264,11,264,21],\"els\":[\"1:3563\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[264,21,264,22],\"els\":[\"1:3563\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[265,3,265,4],\"els\":[\"1:3563\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[265,5,265,18],\"els\":[\"1:3563\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[265,18,265,19],\"els\":[\"1:3563\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[267,3,267,9],\"els\":[\"1:425\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[267,10,267,11],\"els\":[\"1:425\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[268,5,268,9],\"els\":[\"1:425\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[268,10,268,11],\"els\":[\"1:425\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[268,11,268,21],\"els\":[\"1:425\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[268,21,268,22],\"els\":[\"1:425\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[268,22,268,23],\"els\":[\"1:425\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[268,23,268,24],\"els\":[\"1:425\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[268,24,268,25],\"els\":[\"1:425\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[269,3,269,4],\"els\":[\"1:425\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[269,5,269,18],\"els\":[\"1:425\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[269,18,269,19],\"els\":[\"1:425\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[271,3,271,9],\"els\":[\"1:1663\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[271,10,271,11],\"els\":[\"1:1663\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[272,5,272,9],\"els\":[\"1:1663\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[272,10,272,11],\"els\":[\"1:1663\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[272,11,272,21],\"els\":[\"1:1663\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[272,21,272,22],\"els\":[\"1:1663\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[272,22,272,23],\"els\":[\"1:1663\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[272,23,272,24],\"els\":[\"1:1663\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[272,24,272,25],\"els\":[\"1:1663\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[273,3,273,4],\"els\":[\"1:1663\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[273,5,273,17],\"els\":[\"1:1663\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[273,17,273,18],\"els\":[\"1:1663\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[275,3,275,9],\"els\":[\"1:1987\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[275,10,275,11],\"els\":[\"1:1987\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[276,5,276,9],\"els\":[\"1:1987\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[276,10,276,11],\"els\":[\"1:1987\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[276,11,276,21],\"els\":[\"1:1987\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[276,21,276,22],\"els\":[\"1:1987\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[276,22,276,23],\"els\":[\"1:1987\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[276,23,276,24],\"els\":[\"1:1987\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[276,24,276,25],\"els\":[\"1:1987\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[277,3,277,4],\"els\":[\"1:1987\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[277,5,277,17],\"els\":[\"1:1987\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[277,17,277,18],\"els\":[\"1:1987\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[279,3,279,10],\"els\":[\"1:3704\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[279,11,279,23],\"els\":[\"1:3704\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[279,23,279,24],\"els\":[\"1:3704\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[280,3,280,9],\"els\":[\"1:2245\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[280,10,280,32],\"els\":[\"1:2245\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[280,32,280,33],\"els\":[\"1:2245\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[281,3,281,9],\"els\":[\"1:3718:43:3\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[281,10,281,38],\"els\":[\"1:3718:43:3\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[281,38,281,39],\"els\":[\"1:3718:43:3\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[282,3,282,9],\"els\":[\"1:35:14:46:107\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[282,10,282,40],\"els\":[\"1:35:14:46:107\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[282,40,282,41],\"els\":[\"1:35:14:46:107\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[283,3,283,9],\"els\":[\"1:35:14:46:103\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[283,10,283,40],\"els\":[\"1:35:14:46:103\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[283,40,283,41],\"els\":[\"1:35:14:46:103\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[284,3,284,9],\"els\":[\"1:35:14:46:99\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[284,10,284,39],\"els\":[\"1:35:14:46:99\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[284,39,284,40],\"els\":[\"1:35:14:46:99\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[285,3,285,9],\"els\":[\"1:34:3\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[285,10,285,40],\"els\":[\"1:34:3\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[285,40,285,41],\"els\":[\"1:34:3\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[286,3,286,9],\"els\":[\"1:6:3\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[286,10,286,40],\"els\":[\"1:6:3\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[286,40,286,41],\"els\":[\"1:6:3\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[287,3,287,9],\"els\":[\"1:2754\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[287,10,287,31],\"els\":[\"1:2754\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[287,31,287,32],\"els\":[\"1:2754\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[288,3,288,9],\"els\":[\"1:2671\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[288,10,288,33],\"els\":[\"1:2671\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[288,33,288,34],\"els\":[\"1:2671\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[289,3,289,9],\"els\":[\"1:2441\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[289,10,289,33],\"els\":[\"1:2441\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[289,33,289,34],\"els\":[\"1:2441\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[290,3,290,12],\"els\":[\"1:1638\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[290,13,290,26],\"els\":[\"1:1638\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[290,26,290,27],\"els\":[\"1:1638\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[291,3,291,12],\"els\":[\"1:2872\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[291,13,291,26],\"els\":[\"1:2872\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[291,26,291,27],\"els\":[\"1:2872\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[296,3,296,13],\"els\":[\"1:2754\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[296,14,296,32],\"els\":[\"1:2754\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[296,32,296,33],\"els\":[\"1:2754\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[297,3,297,13],\"els\":[\"1:2671\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[297,14,297,34],\"els\":[\"1:2671\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[297,34,297,35],\"els\":[\"1:2671\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[298,3,298,13],\"els\":[\"1:2441\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[298,14,298,34],\"els\":[\"1:2441\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[298,34,298,35],\"els\":[\"1:2441\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[303,3,303,9],\"els\":[\"1:296\"],\"ct\":{\"1\":1,\"0\":3}},{\"tk\":[303,10,303,11],\"els\":[\"1:296\"],\"ct\":{\"1\":1,\"0\":3}},{\"tk\":[303,11,303,12],\"els\":[\"1:296\"],\"ct\":{\"1\":1,\"0\":3}},{\"tk\":[308,3,308,9],\"els\":[\"1:2700:5\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[308,10,308,41],\"els\":[\"1:2700:5\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[308,41,308,42],\"els\":[\"1:2700:5\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[312,3,312,9],\"els\":[\"1:2255:5\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[312,10,312,41],\"els\":[\"1:2255:5\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[312,41,312,42],\"els\":[\"1:2255:5\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[316,3,316,9],\"els\":[\"1:2617:5\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[316,10,316,41],\"els\":[\"1:2617:5\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[316,41,316,42],\"els\":[\"1:2617:5\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[320,3,320,9],\"els\":[\"1:2723:3\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[320,10,320,34],\"els\":[\"1:2723:3\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[320,34,320,35],\"els\":[\"1:2723:3\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[323,3,323,9],\"els\":[\"1:2434:3\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[323,10,323,36],\"els\":[\"1:2434:3\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[323,36,323,37],\"els\":[\"1:2434:3\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[327,3,327,9],\"els\":[\"1:2640:3\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[327,10,327,36],\"els\":[\"1:2640:3\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[327,36,327,37],\"els\":[\"1:2640:3\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[331,3,331,9],\"els\":[\"1:2743:3\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[331,10,331,34],\"els\":[\"1:2743:3\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[331,34,331,35],\"els\":[\"1:2743:3\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[334,3,334,9],\"els\":[\"1:2742:3\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[334,10,334,37],\"els\":[\"1:2742:3\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[334,37,334,38],\"els\":[\"1:2742:3\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[338,3,338,9],\"els\":[\"1:2444:3\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[338,10,338,36],\"els\":[\"1:2444:3\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[338,36,338,37],\"els\":[\"1:2444:3\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[342,3,342,9],\"els\":[\"1:2579:3\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[342,10,342,36],\"els\":[\"1:2579:3\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[342,36,342,37],\"els\":[\"1:2579:3\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[346,3,346,9],\"els\":[\"1:2660:3\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[346,10,346,36],\"els\":[\"1:2660:3\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[346,36,346,37],\"els\":[\"1:2660:3\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[350,3,350,9],\"els\":[\"1:2659:3\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[350,10,350,36],\"els\":[\"1:2659:3\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[350,36,350,37],\"els\":[\"1:2659:3\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[354,3,354,27],\"els\":[\"1:34:6\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[354,28,354,35],\"els\":[\"1:34:6\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[354,35,354,36],\"els\":[\"1:34:6\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[357,3,357,27],\"els\":[\"1:34:2\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[357,28,357,42],\"els\":[\"1:34:2\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[357,42,357,43],\"els\":[\"1:34:2\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[360,3,360,27],\"els\":[\"1:6:6\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[360,28,360,37],\"els\":[\"1:6:6\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[360,37,360,38],\"els\":[\"1:6:6\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[363,3,363,27],\"els\":[\"1:6:2\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[363,28,363,44],\"els\":[\"1:6:2\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[363,44,363,45],\"els\":[\"1:6:2\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[366,3,366,19],\"els\":[\"1:3718:43:6\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[366,20,366,29],\"els\":[\"1:3718:43:6\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[366,29,366,30],\"els\":[\"1:3718:43:6\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[369,3,369,19],\"els\":[\"1:3718:43:2\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[369,20,369,36],\"els\":[\"1:3718:43:2\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[369,36,369,37],\"els\":[\"1:3718:43:2\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[372,3,372,9],\"els\":[\"1:2382\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[372,10,372,25],\"els\":[\"1:2382\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[372,25,372,26],\"els\":[\"1:2382\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[375,3,375,9],\"els\":[\"1:2612\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[375,10,375,27],\"els\":[\"1:2612\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[375,27,375,28],\"els\":[\"1:2612\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[378,3,378,9],\"els\":[\"1:2695\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[378,10,378,27],\"els\":[\"1:2695\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[378,27,378,28],\"els\":[\"1:2695\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[381,3,381,9],\"els\":[\"1:1664\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[381,10,381,29],\"els\":[\"1:1664\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[381,29,381,30],\"els\":[\"1:1664\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[384,3,384,9],\"els\":[\"1:1664\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[384,10,384,29],\"els\":[\"1:1664\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[384,29,384,30],\"els\":[\"1:1664\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[387,3,387,9],\"els\":[\"1:1738\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[387,10,387,26],\"els\":[\"1:1738\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[387,26,387,27],\"els\":[\"1:1738\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[390,3,390,9],\"els\":[\"1:3689\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[390,10,390,25],\"els\":[\"1:3689\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[390,25,390,26],\"els\":[\"1:3689\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[393,3,393,9],\"els\":[\"1:3578\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[393,10,393,27],\"els\":[\"1:3578\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[393,27,393,28],\"els\":[\"1:3578\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[396,3,396,9],\"els\":[\"1:3467\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[396,10,396,27],\"els\":[\"1:3467\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[396,27,396,28],\"els\":[\"1:3467\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[399,3,399,9],\"els\":[\"1:35:14:46:101\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[399,10,399,26],\"els\":[\"1:35:14:46:101\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[399,26,399,27],\"els\":[\"1:35:14:46:101\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[402,3,402,9],\"els\":[\"1:35:14:46:105\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[402,10,402,27],\"els\":[\"1:35:14:46:105\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[402,27,402,28],\"els\":[\"1:35:14:46:105\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[405,3,405,9],\"els\":[\"1:2241\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[405,10,405,40],\"els\":[\"1:2241\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[405,40,405,41],\"els\":[\"1:2241\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[409,3,409,9],\"els\":[\"1:2241\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[409,10,409,35],\"els\":[\"1:2241\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[409,35,409,36],\"els\":[\"1:2241\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[412,3,412,9],\"els\":[\"1:2242\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[412,10,412,25],\"els\":[\"1:2242\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[412,25,412,26],\"els\":[\"1:2242\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[415,3,415,9],\"els\":[\"1:701\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[415,10,415,40],\"els\":[\"1:701\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[415,40,415,41],\"els\":[\"1:701\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[418,3,418,9],\"els\":[\"1:702\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[418,10,418,40],\"els\":[\"1:702\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[418,40,418,41],\"els\":[\"1:702\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[421,3,421,9],\"els\":[\"1:722\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[421,10,421,40],\"els\":[\"1:722\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[421,40,421,41],\"els\":[\"1:722\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[424,3,424,9],\"els\":[\"1:723\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[424,10,424,40],\"els\":[\"1:723\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[424,40,424,41],\"els\":[\"1:723\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[427,3,427,9],\"els\":[\"1:724\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[427,10,427,40],\"els\":[\"1:724\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[427,40,427,41],\"els\":[\"1:724\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[430,3,430,9],\"els\":[\"1:252\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[430,10,430,39],\"els\":[\"1:252\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[430,39,430,40],\"els\":[\"1:252\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[433,3,433,9],\"els\":[\"1:369\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[433,10,433,27],\"els\":[\"1:369\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[433,27,433,28],\"els\":[\"1:369\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[436,3,436,9],\"els\":[\"1:2736\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[436,10,436,17],\"els\":[\"1:2736\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[436,17,436,18],\"els\":[\"1:2736\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[439,3,439,9],\"els\":[\"1:2735\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[439,10,439,18],\"els\":[\"1:2735\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[439,18,439,19],\"els\":[\"1:2735\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[442,3,442,9],\"els\":[\"1:2734\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[442,10,442,17],\"els\":[\"1:2734\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[442,17,442,18],\"els\":[\"1:2734\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[445,3,445,9],\"els\":[\"1:2762\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[445,10,445,17],\"els\":[\"1:2762\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[445,17,445,18],\"els\":[\"1:2762\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[448,3,448,9],\"els\":[\"1:2767\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[448,10,448,17],\"els\":[\"1:2767\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[448,17,448,18],\"els\":[\"1:2767\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[451,3,451,9],\"els\":[\"1:2717\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[451,10,451,20],\"els\":[\"1:2717\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[451,20,451,21],\"els\":[\"1:2717\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[454,3,454,9],\"els\":[\"1:2700:4\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[454,10,454,20],\"els\":[\"1:2700:4\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[454,20,454,21],\"els\":[\"1:2700:4\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[457,3,457,9],\"els\":[\"1:2768\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[457,10,457,17],\"els\":[\"1:2768\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[457,17,457,18],\"els\":[\"1:2768\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[460,3,460,9],\"els\":[\"1:2701\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[460,10,460,19],\"els\":[\"1:2701\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[460,19,460,20],\"els\":[\"1:2701\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[463,3,463,9],\"els\":[\"1:2702\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[463,10,463,20],\"els\":[\"1:2702\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[463,20,463,21],\"els\":[\"1:2702\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[466,3,466,9],\"els\":[\"1:3280\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[466,10,466,41],\"els\":[\"1:3280\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[466,41,466,42],\"els\":[\"1:3280\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[470,3,470,9],\"els\":[\"1:3280\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[470,10,470,36],\"els\":[\"1:3280\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[470,36,470,37],\"els\":[\"1:3280\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[473,3,473,9],\"els\":[\"1:3358\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[473,10,473,22],\"els\":[\"1:3358\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[473,22,473,23],\"els\":[\"1:3358\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[476,3,476,9],\"els\":[\"1:3359\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[476,10,476,30],\"els\":[\"1:3359\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[476,30,476,31],\"els\":[\"1:3359\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[479,3,479,9],\"els\":[\"1:3359\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[479,10,479,30],\"els\":[\"1:3359\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[479,30,479,31],\"els\":[\"1:3359\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[482,3,482,9],\"els\":[\"1:3704\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[482,10,482,22],\"els\":[\"1:3704\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[482,22,482,23],\"els\":[\"1:3704\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[485,3,485,9],\"els\":[\"1:3704\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[485,10,485,23],\"els\":[\"1:3704\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[485,23,485,24],\"els\":[\"1:3704\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[488,3,488,9],\"els\":[\"1:3704\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[488,10,488,23],\"els\":[\"1:3704\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[488,23,488,24],\"els\":[\"1:3704\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[491,3,491,9],\"els\":[\"1:3704\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[491,10,491,23],\"els\":[\"1:3704\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[491,23,491,24],\"els\":[\"1:3704\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[494,3,494,9],\"els\":[\"1:3704\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[494,10,494,23],\"els\":[\"1:3704\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[494,23,494,24],\"els\":[\"1:3704\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[497,3,497,9],\"els\":[\"1:3704\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[497,10,497,23],\"els\":[\"1:3704\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[497,23,497,24],\"els\":[\"1:3704\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[500,3,500,9],\"els\":[\"1:3704\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[500,10,500,23],\"els\":[\"1:3704\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[500,23,500,24],\"els\":[\"1:3704\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[503,3,503,9],\"els\":[\"1:2277\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[503,10,503,19],\"els\":[\"1:2277\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[503,19,503,20],\"els\":[\"1:2277\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[506,3,506,9],\"els\":[\"1:2475\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[506,10,506,20],\"els\":[\"1:2475\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[506,20,506,21],\"els\":[\"1:2475\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[509,3,509,9],\"els\":[\"1:2474\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[509,10,509,19],\"els\":[\"1:2474\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[509,19,509,20],\"els\":[\"1:2474\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[512,3,512,9],\"els\":[\"1:2476\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[512,10,512,19],\"els\":[\"1:2476\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[512,19,512,20],\"els\":[\"1:2476\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[515,3,515,9],\"els\":[\"1:2282\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[515,10,515,19],\"els\":[\"1:2282\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[515,19,515,20],\"els\":[\"1:2282\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[518,3,518,9],\"els\":[\"1:2266\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[518,10,518,22],\"els\":[\"1:2266\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[518,22,518,23],\"els\":[\"1:2266\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[521,3,521,9],\"els\":[\"1:2255:4\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[521,10,521,22],\"els\":[\"1:2255:4\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[521,22,521,23],\"els\":[\"1:2255:4\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[524,3,524,9],\"els\":[\"1:2283\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[524,10,524,19],\"els\":[\"1:2283\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[524,19,524,20],\"els\":[\"1:2283\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[527,3,527,9],\"els\":[\"1:2256\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[527,10,527,21],\"els\":[\"1:2256\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[527,21,527,22],\"els\":[\"1:2256\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[530,3,530,9],\"els\":[\"1:2257\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[530,10,530,22],\"els\":[\"1:2257\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[530,22,530,23],\"els\":[\"1:2257\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[533,3,533,9],\"els\":[\"1:3632\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[533,10,533,41],\"els\":[\"1:3632\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[533,41,533,42],\"els\":[\"1:3632\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[537,3,537,9],\"els\":[\"1:3632\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[537,10,537,38],\"els\":[\"1:3632\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[537,38,537,39],\"els\":[\"1:3632\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[540,3,540,9],\"els\":[\"1:2810\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[540,10,540,20],\"els\":[\"1:2810\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[540,20,540,21],\"els\":[\"1:2810\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[543,3,543,9],\"els\":[\"1:2653\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[543,10,543,19],\"els\":[\"1:2653\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[543,19,543,20],\"els\":[\"1:2653\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[546,3,546,9],\"els\":[\"1:2652\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[546,10,546,20],\"els\":[\"1:2652\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[546,20,546,21],\"els\":[\"1:2652\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[549,3,549,9],\"els\":[\"1:2651\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[549,10,549,19],\"els\":[\"1:2651\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[549,19,549,20],\"els\":[\"1:2651\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[552,3,552,9],\"els\":[\"1:2679\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[552,10,552,19],\"els\":[\"1:2679\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[552,19,552,20],\"els\":[\"1:2679\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[555,3,555,9],\"els\":[\"1:2684\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[555,10,555,19],\"els\":[\"1:2684\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[555,19,555,20],\"els\":[\"1:2684\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[558,3,558,9],\"els\":[\"1:2634\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[558,10,558,22],\"els\":[\"1:2634\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[558,22,558,23],\"els\":[\"1:2634\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[561,3,561,9],\"els\":[\"1:2617:4\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[561,10,561,22],\"els\":[\"1:2617:4\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[561,22,561,23],\"els\":[\"1:2617:4\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[564,3,564,9],\"els\":[\"1:2685\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[564,10,564,19],\"els\":[\"1:2685\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[564,19,564,20],\"els\":[\"1:2685\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[567,3,567,9],\"els\":[\"1:2618\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[567,10,567,21],\"els\":[\"1:2618\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[567,21,567,22],\"els\":[\"1:2618\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[570,3,570,9],\"els\":[\"1:3111\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[570,10,570,16],\"els\":[\"1:3111\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[570,16,570,17],\"els\":[\"1:3111\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[573,3,573,9],\"els\":[\"1:3521\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[573,10,573,41],\"els\":[\"1:3521\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[573,41,573,42],\"els\":[\"1:3521\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[577,3,577,9],\"els\":[\"1:3521\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[577,10,577,38],\"els\":[\"1:3521\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[577,38,577,39],\"els\":[\"1:3521\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[580,3,580,9],\"els\":[\"1:3112\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[580,10,580,18],\"els\":[\"1:3112\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[580,18,580,19],\"els\":[\"1:3112\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[583,3,583,9],\"els\":[\"1:2724\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[583,10,583,38],\"els\":[\"1:2724\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[583,38,583,39],\"els\":[\"1:2724\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[586,3,586,9],\"els\":[\"1:2436\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[586,10,586,40],\"els\":[\"1:2436\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[586,40,586,41],\"els\":[\"1:2436\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[589,3,589,9],\"els\":[\"1:2641\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[589,10,589,40],\"els\":[\"1:2641\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[589,40,589,41],\"els\":[\"1:2641\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[592,3,592,9],\"els\":[\"1:3278\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[592,10,592,41],\"els\":[\"1:3278\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[592,41,592,42],\"els\":[\"1:3278\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[596,3,596,9],\"els\":[\"1:3278\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[596,10,596,37],\"els\":[\"1:3278\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[596,37,596,38],\"els\":[\"1:3278\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[599,3,599,9],\"els\":[\"1:3291\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[599,10,599,22],\"els\":[\"1:3291\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[599,22,599,23],\"els\":[\"1:3291\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[602,3,602,9],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[602,10,602,17],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[602,17,602,18],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[605,3,605,9],\"els\":[\"1:3476\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[605,10,605,17],\"els\":[\"1:3476\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[605,17,605,18],\"els\":[\"1:3476\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[608,3,608,9],\"els\":[\"1:3306\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[608,10,608,31],\"els\":[\"1:3306\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[608,31,608,32],\"els\":[\"1:3306\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[611,3,611,9],\"els\":[\"1:3306\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[611,10,611,31],\"els\":[\"1:3306\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[611,31,611,32],\"els\":[\"1:3306\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[614,3,614,9],\"els\":[\"1:3326\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[614,10,614,17],\"els\":[\"1:3326\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[614,17,614,18],\"els\":[\"1:3326\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[617,3,617,9],\"els\":[\"1:3329\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[617,10,617,22],\"els\":[\"1:3329\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[617,22,617,23],\"els\":[\"1:3329\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[620,3,620,9],\"els\":[\"1:3279\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[620,10,620,41],\"els\":[\"1:3279\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[620,41,620,42],\"els\":[\"1:3279\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[624,3,624,9],\"els\":[\"1:3279\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[624,10,624,36],\"els\":[\"1:3279\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[624,36,624,37],\"els\":[\"1:3279\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[627,3,627,9],\"els\":[\"1:3271\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[627,10,627,27],\"els\":[\"1:3271\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[627,27,627,28],\"els\":[\"1:3271\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[630,3,630,9],\"els\":[\"1:3308\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[630,10,630,31],\"els\":[\"1:3308\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[630,31,630,32],\"els\":[\"1:3308\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[633,3,633,9],\"els\":[\"1:3308\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[633,10,633,31],\"els\":[\"1:3308\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[633,31,633,32],\"els\":[\"1:3308\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[636,3,636,9],\"els\":[\"1:3309\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[636,10,636,31],\"els\":[\"1:3309\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[636,31,636,32],\"els\":[\"1:3309\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[639,3,639,9],\"els\":[\"1:3309\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[639,10,639,31],\"els\":[\"1:3309\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[639,31,639,32],\"els\":[\"1:3309\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[642,3,642,9],\"els\":[\"1:3289\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[642,10,642,22],\"els\":[\"1:3289\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[642,22,642,23],\"els\":[\"1:3289\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[645,3,645,9],\"els\":[\"1:3319\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[645,10,645,30],\"els\":[\"1:3319\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[645,30,645,31],\"els\":[\"1:3319\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[648,3,648,9],\"els\":[\"1:3319\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[648,10,648,30],\"els\":[\"1:3319\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[648,30,648,31],\"els\":[\"1:3319\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[651,3,651,9],\"els\":[\"1:3272\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[651,10,651,25],\"els\":[\"1:3272\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[651,25,651,26],\"els\":[\"1:3272\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[654,3,654,9],\"els\":[\"1:3294\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[654,10,654,20],\"els\":[\"1:3294\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[654,20,654,21],\"els\":[\"1:3294\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[657,3,657,9],\"els\":[\"1:3311\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[657,10,657,31],\"els\":[\"1:3311\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[657,31,657,32],\"els\":[\"1:3311\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[660,3,660,9],\"els\":[\"1:3311\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[660,10,660,31],\"els\":[\"1:3311\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[660,31,660,32],\"els\":[\"1:3311\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[663,3,663,9],\"els\":[\"1:3320\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[663,10,663,30],\"els\":[\"1:3320\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[663,30,663,31],\"els\":[\"1:3320\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[666,3,666,9],\"els\":[\"1:3320\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[666,10,666,30],\"els\":[\"1:3320\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[666,30,666,31],\"els\":[\"1:3320\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[669,3,669,9],\"els\":[\"1:3290\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[669,10,669,22],\"els\":[\"1:3290\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[669,22,669,23],\"els\":[\"1:3290\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[672,3,672,9],\"els\":[\"1:3273\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[672,10,672,25],\"els\":[\"1:3273\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[672,25,672,26],\"els\":[\"1:3273\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[675,3,675,9],\"els\":[\"1:3310\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[675,10,675,31],\"els\":[\"1:3310\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[675,31,675,32],\"els\":[\"1:3310\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[678,3,678,9],\"els\":[\"1:3310\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[678,10,678,31],\"els\":[\"1:3310\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[678,31,678,32],\"els\":[\"1:3310\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[681,3,681,9],\"els\":[\"1:3314\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[681,10,681,31],\"els\":[\"1:3314\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[681,31,681,32],\"els\":[\"1:3314\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[684,3,684,9],\"els\":[\"1:3314\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[684,10,684,31],\"els\":[\"1:3314\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[684,31,684,32],\"els\":[\"1:3314\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[687,3,687,9],\"els\":[\"1:3312\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[687,10,687,31],\"els\":[\"1:3312\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[687,31,687,32],\"els\":[\"1:3312\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[690,3,690,9],\"els\":[\"1:3312\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[690,10,690,31],\"els\":[\"1:3312\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[690,31,690,32],\"els\":[\"1:3312\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[693,3,693,9],\"els\":[\"1:3292\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[693,10,693,20],\"els\":[\"1:3292\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[693,20,693,21],\"els\":[\"1:3292\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[696,3,696,9],\"els\":[\"1:3274\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[696,10,696,25],\"els\":[\"1:3274\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[696,25,696,26],\"els\":[\"1:3274\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[699,3,699,9],\"els\":[\"1:3330\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[699,10,699,22],\"els\":[\"1:3330\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[699,22,699,23],\"els\":[\"1:3330\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[702,3,702,9],\"els\":[\"1:3307\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[702,10,702,30],\"els\":[\"1:3307\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[702,30,702,31],\"els\":[\"1:3307\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[705,3,705,9],\"els\":[\"1:3307\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[705,10,705,30],\"els\":[\"1:3307\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[705,30,705,31],\"els\":[\"1:3307\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[708,3,708,9],\"els\":[\"1:3327\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[708,10,708,17],\"els\":[\"1:3327\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[708,17,708,18],\"els\":[\"1:3327\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[711,3,711,9],\"els\":[\"1:3313\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[711,10,711,31],\"els\":[\"1:3313\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[711,31,711,32],\"els\":[\"1:3313\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[714,3,714,9],\"els\":[\"1:3313\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[714,10,714,31],\"els\":[\"1:3313\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[714,31,714,32],\"els\":[\"1:3313\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[717,3,717,9],\"els\":[\"1:3295\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[717,10,717,20],\"els\":[\"1:3295\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[717,20,717,21],\"els\":[\"1:3295\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[720,3,720,9],\"els\":[\"1:3317\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[720,10,720,31],\"els\":[\"1:3317\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[720,31,720,32],\"els\":[\"1:3317\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[723,3,723,9],\"els\":[\"1:3317\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[723,10,723,31],\"els\":[\"1:3317\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[723,31,723,32],\"els\":[\"1:3317\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[726,3,726,9],\"els\":[\"1:3315\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[726,10,726,31],\"els\":[\"1:3315\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[726,31,726,32],\"els\":[\"1:3315\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[729,3,729,9],\"els\":[\"1:3315\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[729,10,729,31],\"els\":[\"1:3315\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[729,31,729,32],\"els\":[\"1:3315\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[732,3,732,9],\"els\":[\"1:3293\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[732,10,732,22],\"els\":[\"1:3293\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[732,22,732,23],\"els\":[\"1:3293\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[735,3,735,9],\"els\":[\"1:3275\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[735,10,735,25],\"els\":[\"1:3275\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[735,25,735,26],\"els\":[\"1:3275\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[738,3,738,9],\"els\":[\"1:3316\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[738,10,738,31],\"els\":[\"1:3316\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[738,31,738,32],\"els\":[\"1:3316\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[741,3,741,9],\"els\":[\"1:3316\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[741,10,741,31],\"els\":[\"1:3316\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[741,31,741,32],\"els\":[\"1:3316\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[744,3,744,9],\"els\":[\"1:3318\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[744,10,744,30],\"els\":[\"1:3318\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[744,30,744,31],\"els\":[\"1:3318\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[747,3,747,9],\"els\":[\"1:3318\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[747,10,747,30],\"els\":[\"1:3318\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[747,30,747,31],\"els\":[\"1:3318\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[750,3,750,9],\"els\":[\"1:3328\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[750,10,750,17],\"els\":[\"1:3328\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[750,17,750,18],\"els\":[\"1:3328\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[753,3,753,9],\"els\":[\"1:3331\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[753,10,753,22],\"els\":[\"1:3331\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[753,22,753,23],\"els\":[\"1:3331\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[756,3,756,9],\"els\":[\"1:3296\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[756,10,756,20],\"els\":[\"1:3296\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[756,20,756,21],\"els\":[\"1:3296\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[759,3,759,9],\"els\":[\"1:3297\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[759,10,759,20],\"els\":[\"1:3297\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[759,20,759,21],\"els\":[\"1:3297\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[762,3,762,9],\"els\":[\"1:3630\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[762,10,762,41],\"els\":[\"1:3630\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[762,41,762,42],\"els\":[\"1:3630\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[766,3,766,9],\"els\":[\"1:3630\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[766,10,766,37],\"els\":[\"1:3630\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[766,37,766,38],\"els\":[\"1:3630\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[769,3,769,9],\"els\":[\"1:3643\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[769,10,769,22],\"els\":[\"1:3643\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[769,22,769,23],\"els\":[\"1:3643\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[772,3,772,9],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[772,10,772,19],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[772,19,772,20],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[775,3,775,9],\"els\":[\"1:3698\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[775,10,775,19],\"els\":[\"1:3698\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[775,19,775,20],\"els\":[\"1:3698\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[778,3,778,9],\"els\":[\"1:3659\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[778,10,778,31],\"els\":[\"1:3659\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[778,31,778,32],\"els\":[\"1:3659\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[781,3,781,9],\"els\":[\"1:3659\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[781,10,781,31],\"els\":[\"1:3659\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[781,31,781,32],\"els\":[\"1:3659\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[784,3,784,9],\"els\":[\"1:3680\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[784,10,784,19],\"els\":[\"1:3680\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[784,19,784,20],\"els\":[\"1:3680\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[787,3,787,9],\"els\":[\"1:3683\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[787,10,787,24],\"els\":[\"1:3683\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[787,24,787,25],\"els\":[\"1:3683\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[790,3,790,9],\"els\":[\"1:3631\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[790,10,790,41],\"els\":[\"1:3631\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[790,41,790,42],\"els\":[\"1:3631\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[794,3,794,9],\"els\":[\"1:3631\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[794,10,794,38],\"els\":[\"1:3631\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[794,38,794,39],\"els\":[\"1:3631\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[797,3,797,9],\"els\":[\"1:3620\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[797,10,797,27],\"els\":[\"1:3620\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[797,27,797,28],\"els\":[\"1:3620\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[800,3,800,9],\"els\":[\"1:3661\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[800,10,800,33],\"els\":[\"1:3661\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[800,33,800,34],\"els\":[\"1:3661\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[803,3,803,9],\"els\":[\"1:3661\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[803,10,803,33],\"els\":[\"1:3661\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[803,33,803,34],\"els\":[\"1:3661\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[806,3,806,9],\"els\":[\"1:3662\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[806,10,806,33],\"els\":[\"1:3662\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[806,33,806,34],\"els\":[\"1:3662\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[809,3,809,9],\"els\":[\"1:3662\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[809,10,809,33],\"els\":[\"1:3662\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[809,33,809,34],\"els\":[\"1:3662\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[812,3,812,9],\"els\":[\"1:3641\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[812,10,812,21],\"els\":[\"1:3641\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[812,21,812,22],\"els\":[\"1:3641\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[815,3,815,9],\"els\":[\"1:3672\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[815,10,815,32],\"els\":[\"1:3672\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[815,32,815,33],\"els\":[\"1:3672\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[818,3,818,9],\"els\":[\"1:3672\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[818,10,818,32],\"els\":[\"1:3672\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[818,32,818,33],\"els\":[\"1:3672\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[821,3,821,9],\"els\":[\"1:3621\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[821,10,821,27],\"els\":[\"1:3621\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[821,27,821,28],\"els\":[\"1:3621\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[824,3,824,9],\"els\":[\"1:3646\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[824,10,824,22],\"els\":[\"1:3646\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[824,22,824,23],\"els\":[\"1:3646\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[827,3,827,9],\"els\":[\"1:3664\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[827,10,827,33],\"els\":[\"1:3664\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[827,33,827,34],\"els\":[\"1:3664\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[830,3,830,9],\"els\":[\"1:3664\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[830,10,830,33],\"els\":[\"1:3664\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[830,33,830,34],\"els\":[\"1:3664\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[833,3,833,9],\"els\":[\"1:3673\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[833,10,833,32],\"els\":[\"1:3673\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[833,32,833,33],\"els\":[\"1:3673\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[836,3,836,9],\"els\":[\"1:3673\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[836,10,836,32],\"els\":[\"1:3673\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[836,32,836,33],\"els\":[\"1:3673\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[839,3,839,9],\"els\":[\"1:3642\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[839,10,839,22],\"els\":[\"1:3642\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[839,22,839,23],\"els\":[\"1:3642\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[842,3,842,9],\"els\":[\"1:3623\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[842,10,842,27],\"els\":[\"1:3623\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[842,27,842,28],\"els\":[\"1:3623\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[845,3,845,9],\"els\":[\"1:3663\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[845,10,845,33],\"els\":[\"1:3663\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[845,33,845,34],\"els\":[\"1:3663\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[848,3,848,9],\"els\":[\"1:3663\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[848,10,848,33],\"els\":[\"1:3663\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[848,33,848,34],\"els\":[\"1:3663\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[851,3,851,9],\"els\":[\"1:3667\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[851,10,851,33],\"els\":[\"1:3667\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[851,33,851,34],\"els\":[\"1:3667\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[854,3,854,9],\"els\":[\"1:3667\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[854,10,854,33],\"els\":[\"1:3667\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[854,33,854,34],\"els\":[\"1:3667\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[857,3,857,9],\"els\":[\"1:3665\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[857,10,857,33],\"els\":[\"1:3665\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[857,33,857,34],\"els\":[\"1:3665\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[860,3,860,9],\"els\":[\"1:3665\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[860,10,860,33],\"els\":[\"1:3665\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[860,33,860,34],\"els\":[\"1:3665\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[863,3,863,9],\"els\":[\"1:3644\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[863,10,863,22],\"els\":[\"1:3644\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[863,22,863,23],\"els\":[\"1:3644\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[866,3,866,9],\"els\":[\"1:3624\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[866,10,866,27],\"els\":[\"1:3624\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[866,27,866,28],\"els\":[\"1:3624\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[869,3,869,9],\"els\":[\"1:3684\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[869,10,869,24],\"els\":[\"1:3684\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[869,24,869,25],\"els\":[\"1:3684\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[872,3,872,9],\"els\":[\"1:3660\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[872,10,872,32],\"els\":[\"1:3660\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[872,32,872,33],\"els\":[\"1:3660\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[875,3,875,9],\"els\":[\"1:3660\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[875,10,875,32],\"els\":[\"1:3660\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[875,32,875,33],\"els\":[\"1:3660\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[878,3,878,9],\"els\":[\"1:3681\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[878,10,878,19],\"els\":[\"1:3681\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[878,19,878,20],\"els\":[\"1:3681\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[881,3,881,9],\"els\":[\"1:3666\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[881,10,881,33],\"els\":[\"1:3666\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[881,33,881,34],\"els\":[\"1:3666\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[884,3,884,9],\"els\":[\"1:3666\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[884,10,884,33],\"els\":[\"1:3666\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[884,33,884,34],\"els\":[\"1:3666\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[887,3,887,9],\"els\":[\"1:3647\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[887,10,887,22],\"els\":[\"1:3647\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[887,22,887,23],\"els\":[\"1:3647\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[890,3,890,9],\"els\":[\"1:3670\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[890,10,890,33],\"els\":[\"1:3670\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[890,33,890,34],\"els\":[\"1:3670\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[893,3,893,9],\"els\":[\"1:3670\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[893,10,893,33],\"els\":[\"1:3670\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[893,33,893,34],\"els\":[\"1:3670\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[896,3,896,9],\"els\":[\"1:3668\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[896,10,896,33],\"els\":[\"1:3668\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[896,33,896,34],\"els\":[\"1:3668\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[899,3,899,9],\"els\":[\"1:3668\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[899,10,899,33],\"els\":[\"1:3668\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[899,33,899,34],\"els\":[\"1:3668\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[902,3,902,9],\"els\":[\"1:3645\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[902,10,902,22],\"els\":[\"1:3645\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[902,22,902,23],\"els\":[\"1:3645\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[905,3,905,9],\"els\":[\"1:3625\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[905,10,905,27],\"els\":[\"1:3625\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[905,27,905,28],\"els\":[\"1:3625\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[908,3,908,9],\"els\":[\"1:3669\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[908,10,908,33],\"els\":[\"1:3669\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[908,33,908,34],\"els\":[\"1:3669\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[911,3,911,9],\"els\":[\"1:3669\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[911,10,911,33],\"els\":[\"1:3669\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[911,33,911,34],\"els\":[\"1:3669\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[914,3,914,9],\"els\":[\"1:3671\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[914,10,914,32],\"els\":[\"1:3671\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[914,32,914,33],\"els\":[\"1:3671\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[917,3,917,9],\"els\":[\"1:3671\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[917,10,917,32],\"els\":[\"1:3671\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[917,32,917,33],\"els\":[\"1:3671\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[920,3,920,9],\"els\":[\"1:3682\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[920,10,920,19],\"els\":[\"1:3682\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[920,19,920,20],\"els\":[\"1:3682\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[923,3,923,9],\"els\":[\"1:3685\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[923,10,923,24],\"els\":[\"1:3685\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[923,24,923,25],\"els\":[\"1:3685\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[926,3,926,9],\"els\":[\"1:3648\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[926,10,926,22],\"els\":[\"1:3648\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[926,22,926,23],\"els\":[\"1:3648\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[929,3,929,9],\"els\":[\"1:3649\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[929,10,929,22],\"els\":[\"1:3649\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[929,22,929,23],\"els\":[\"1:3649\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[932,3,932,9],\"els\":[\"1:3519\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[932,10,932,41],\"els\":[\"1:3519\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[932,41,932,42],\"els\":[\"1:3519\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[936,3,936,9],\"els\":[\"1:3519\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[936,10,936,37],\"els\":[\"1:3519\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[936,37,936,38],\"els\":[\"1:3519\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[939,3,939,9],\"els\":[\"1:3532\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[939,10,939,22],\"els\":[\"1:3532\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[939,22,939,23],\"els\":[\"1:3532\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[942,3,942,9],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[942,10,942,19],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[942,19,942,20],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[945,3,945,9],\"els\":[\"1:3587\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[945,10,945,19],\"els\":[\"1:3587\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[945,19,945,20],\"els\":[\"1:3587\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[948,3,948,9],\"els\":[\"1:3548\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[948,10,948,32],\"els\":[\"1:3548\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[948,32,948,33],\"els\":[\"1:3548\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[951,3,951,9],\"els\":[\"1:3548\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[951,10,951,31],\"els\":[\"1:3548\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[951,31,951,32],\"els\":[\"1:3548\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[954,3,954,9],\"els\":[\"1:3569\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[954,10,954,19],\"els\":[\"1:3569\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[954,19,954,20],\"els\":[\"1:3569\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[957,3,957,9],\"els\":[\"1:3572\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[957,10,957,24],\"els\":[\"1:3572\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[957,24,957,25],\"els\":[\"1:3572\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[960,3,960,9],\"els\":[\"1:3520\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[960,10,960,41],\"els\":[\"1:3520\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[960,41,960,42],\"els\":[\"1:3520\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[964,3,964,9],\"els\":[\"1:3520\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[964,10,964,38],\"els\":[\"1:3520\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[964,38,964,39],\"els\":[\"1:3520\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[967,3,967,9],\"els\":[\"1:3509\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[967,10,967,28],\"els\":[\"1:3509\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[967,28,967,29],\"els\":[\"1:3509\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[970,3,970,9],\"els\":[\"1:3550\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[970,10,970,33],\"els\":[\"1:3550\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[970,33,970,34],\"els\":[\"1:3550\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[973,3,973,9],\"els\":[\"1:3550\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[973,10,973,33],\"els\":[\"1:3550\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[973,33,973,34],\"els\":[\"1:3550\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[976,3,976,9],\"els\":[\"1:3551\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[976,10,976,33],\"els\":[\"1:3551\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[976,33,976,34],\"els\":[\"1:3551\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[979,3,979,9],\"els\":[\"1:3551\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[979,10,979,33],\"els\":[\"1:3551\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[979,33,979,34],\"els\":[\"1:3551\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[982,3,982,9],\"els\":[\"1:3530\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[982,10,982,21],\"els\":[\"1:3530\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[982,21,982,22],\"els\":[\"1:3530\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[985,3,985,9],\"els\":[\"1:3561\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[985,10,985,32],\"els\":[\"1:3561\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[985,32,985,33],\"els\":[\"1:3561\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[988,3,988,9],\"els\":[\"1:3561\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[988,10,988,32],\"els\":[\"1:3561\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[988,32,988,33],\"els\":[\"1:3561\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[991,3,991,9],\"els\":[\"1:3510\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[991,10,991,27],\"els\":[\"1:3510\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[991,27,991,28],\"els\":[\"1:3510\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[994,3,994,9],\"els\":[\"1:3535\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[994,10,994,22],\"els\":[\"1:3535\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[994,22,994,23],\"els\":[\"1:3535\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[997,3,997,9],\"els\":[\"1:3553\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[997,10,997,33],\"els\":[\"1:3553\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[997,33,997,34],\"els\":[\"1:3553\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1000,3,1000,9],\"els\":[\"1:3553\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1000,10,1000,33],\"els\":[\"1:3553\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1000,33,1000,34],\"els\":[\"1:3553\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1003,3,1003,9],\"els\":[\"1:3562\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1003,10,1003,32],\"els\":[\"1:3562\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1003,32,1003,33],\"els\":[\"1:3562\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1006,3,1006,9],\"els\":[\"1:3562\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1006,10,1006,33],\"els\":[\"1:3562\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1006,33,1006,34],\"els\":[\"1:3562\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1009,3,1009,9],\"els\":[\"1:3531\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1009,10,1009,22],\"els\":[\"1:3531\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1009,22,1009,23],\"els\":[\"1:3531\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1012,3,1012,9],\"els\":[\"1:3512\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1012,10,1012,27],\"els\":[\"1:3512\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1012,27,1012,28],\"els\":[\"1:3512\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1015,3,1015,9],\"els\":[\"1:3552\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1015,10,1015,33],\"els\":[\"1:3552\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1015,33,1015,34],\"els\":[\"1:3552\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1018,3,1018,9],\"els\":[\"1:3552\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1018,10,1018,33],\"els\":[\"1:3552\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1018,33,1018,34],\"els\":[\"1:3552\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1021,3,1021,9],\"els\":[\"1:3556\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1021,10,1021,33],\"els\":[\"1:3556\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1021,33,1021,34],\"els\":[\"1:3556\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1024,3,1024,9],\"els\":[\"1:3556\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1024,10,1024,33],\"els\":[\"1:3556\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1024,33,1024,34],\"els\":[\"1:3556\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1027,3,1027,9],\"els\":[\"1:3554\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1027,10,1027,33],\"els\":[\"1:3554\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1027,33,1027,34],\"els\":[\"1:3554\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1030,3,1030,9],\"els\":[\"1:3554\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1030,10,1030,33],\"els\":[\"1:3554\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1030,33,1030,34],\"els\":[\"1:3554\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1033,3,1033,9],\"els\":[\"1:3533\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1033,10,1033,22],\"els\":[\"1:3533\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1033,22,1033,23],\"els\":[\"1:3533\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1036,3,1036,9],\"els\":[\"1:3513\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1036,10,1036,27],\"els\":[\"1:3513\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1036,27,1036,28],\"els\":[\"1:3513\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1039,3,1039,9],\"els\":[\"1:3573\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1039,10,1039,24],\"els\":[\"1:3573\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1039,24,1039,25],\"els\":[\"1:3573\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1042,3,1042,9],\"els\":[\"1:3549\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1042,10,1042,32],\"els\":[\"1:3549\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1042,32,1042,33],\"els\":[\"1:3549\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1045,3,1045,9],\"els\":[\"1:3549\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1045,10,1045,32],\"els\":[\"1:3549\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1045,32,1045,33],\"els\":[\"1:3549\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1048,3,1048,9],\"els\":[\"1:3570\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1048,10,1048,19],\"els\":[\"1:3570\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1048,19,1048,20],\"els\":[\"1:3570\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1051,3,1051,9],\"els\":[\"1:3555\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1051,10,1051,33],\"els\":[\"1:3555\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1051,33,1051,34],\"els\":[\"1:3555\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1054,3,1054,9],\"els\":[\"1:3555\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1054,10,1054,33],\"els\":[\"1:3555\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1054,33,1054,34],\"els\":[\"1:3555\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1057,3,1057,9],\"els\":[\"1:3536\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1057,10,1057,22],\"els\":[\"1:3536\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1057,22,1057,23],\"els\":[\"1:3536\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1060,3,1060,9],\"els\":[\"1:3559\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1060,10,1060,34],\"els\":[\"1:3559\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1060,34,1060,35],\"els\":[\"1:3559\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1063,3,1063,9],\"els\":[\"1:3559\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1063,10,1063,33],\"els\":[\"1:3559\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1063,33,1063,34],\"els\":[\"1:3559\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1066,3,1066,9],\"els\":[\"1:3557\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1066,10,1066,33],\"els\":[\"1:3557\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1066,33,1066,34],\"els\":[\"1:3557\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1069,3,1069,9],\"els\":[\"1:3557\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1069,10,1069,33],\"els\":[\"1:3557\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1069,33,1069,34],\"els\":[\"1:3557\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1072,3,1072,9],\"els\":[\"1:3534\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1072,10,1072,22],\"els\":[\"1:3534\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1072,22,1072,23],\"els\":[\"1:3534\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1075,3,1075,9],\"els\":[\"1:3514\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1075,10,1075,27],\"els\":[\"1:3514\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1075,27,1075,28],\"els\":[\"1:3514\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1078,3,1078,9],\"els\":[\"1:3558\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1078,10,1078,33],\"els\":[\"1:3558\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1078,33,1078,34],\"els\":[\"1:3558\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1081,3,1081,9],\"els\":[\"1:3558\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1081,10,1081,33],\"els\":[\"1:3558\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1081,33,1081,34],\"els\":[\"1:3558\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1084,3,1084,9],\"els\":[\"1:3560\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1084,10,1084,32],\"els\":[\"1:3560\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1084,32,1084,33],\"els\":[\"1:3560\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1087,3,1087,9],\"els\":[\"1:3560\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1087,10,1087,32],\"els\":[\"1:3560\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1087,32,1087,33],\"els\":[\"1:3560\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1090,3,1090,9],\"els\":[\"1:3571\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1090,10,1090,19],\"els\":[\"1:3571\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1090,19,1090,20],\"els\":[\"1:3571\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1093,3,1093,9],\"els\":[\"1:3574\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1093,10,1093,24],\"els\":[\"1:3574\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1093,24,1093,25],\"els\":[\"1:3574\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1096,3,1096,9],\"els\":[\"1:3537\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1096,10,1096,22],\"els\":[\"1:3537\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1096,22,1096,23],\"els\":[\"1:3537\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1099,3,1099,9],\"els\":[\"1:3538\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1099,10,1099,22],\"els\":[\"1:3538\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1099,22,1099,23],\"els\":[\"1:3538\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1102,3,1102,9],\"els\":[\"1:3229\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1102,10,1102,30],\"els\":[\"1:3229\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1102,30,1102,31],\"els\":[\"1:3229\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1105,3,1105,9],\"els\":[\"1:3229\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1105,10,1105,30],\"els\":[\"1:3229\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1105,30,1105,31],\"els\":[\"1:3229\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1108,3,1108,9],\"els\":[\"1:2430\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1108,10,1108,30],\"els\":[\"1:2430\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1108,30,1108,31],\"els\":[\"1:2430\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1111,3,1111,9],\"els\":[\"1:2688\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1111,10,1111,31],\"els\":[\"1:2688\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1111,31,1111,32],\"els\":[\"1:2688\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1114,3,1114,9],\"els\":[\"1:2770\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1114,10,1114,31],\"els\":[\"1:2770\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1114,31,1114,32],\"els\":[\"1:2770\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1117,3,1117,9],\"els\":[\"1:341\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1117,10,1117,27],\"els\":[\"1:341\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1117,27,1117,28],\"els\":[\"1:341\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1120,3,1120,9],\"els\":[\"1:2868\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1120,10,1120,23],\"els\":[\"1:2868\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1120,23,1120,24],\"els\":[\"1:2868\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1123,3,1123,9],\"els\":[\"1:333\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1123,10,1123,28],\"els\":[\"1:333\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1123,28,1123,29],\"els\":[\"1:333\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1123,29,1123,31],\"els\":[\"1:333\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1123,31,1123,32],\"els\":[\"1:333\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1123,32,1123,33],\"els\":[\"1:333\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1127,3,1127,9],\"els\":[\"1:332\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1127,10,1127,23],\"els\":[\"1:332\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1127,23,1127,24],\"els\":[\"1:332\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1130,3,1130,9],\"els\":[\"1:3115\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1130,10,1130,23],\"els\":[\"1:3115\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1130,23,1130,24],\"els\":[\"1:3115\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1133,3,1133,9],\"els\":[\"1:3116\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1133,10,1133,23],\"els\":[\"1:3116\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1133,23,1133,24],\"els\":[\"1:3116\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1136,3,1136,9],\"els\":[\"1:3117\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1136,10,1136,23],\"els\":[\"1:3117\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1136,23,1136,24],\"els\":[\"1:3117\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1139,3,1139,9],\"els\":[\"1:412\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1139,10,1139,23],\"els\":[\"1:412\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1139,23,1139,24],\"els\":[\"1:412\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1142,3,1142,9],\"els\":[\"1:3706\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1142,10,1142,21],\"els\":[\"1:3706\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1142,21,1142,22],\"els\":[\"1:3706\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1145,3,1145,9],\"els\":[\"1:418\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1145,10,1145,22],\"els\":[\"1:418\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1145,22,1145,23],\"els\":[\"1:418\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1148,3,1148,9],\"els\":[\"1:3707\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1148,10,1148,21],\"els\":[\"1:3707\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1148,21,1148,22],\"els\":[\"1:3707\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1151,3,1151,9],\"els\":[\"1:422\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1151,10,1151,20],\"els\":[\"1:422\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1151,20,1151,21],\"els\":[\"1:422\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1154,3,1154,9],\"els\":[\"1:3768\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1154,10,1154,27],\"els\":[\"1:3768\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1154,27,1154,28],\"els\":[\"1:3768\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1157,3,1157,9],\"els\":[\"1:345\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1157,10,1157,22],\"els\":[\"1:345\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1157,22,1157,23],\"els\":[\"1:345\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1160,3,1160,9],\"els\":[\"1:344\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1160,10,1160,22],\"els\":[\"1:344\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1160,22,1160,23],\"els\":[\"1:344\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1163,3,1163,9],\"els\":[\"1:390\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1163,10,1163,22],\"els\":[\"1:390\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1163,22,1163,23],\"els\":[\"1:390\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1166,3,1166,9],\"els\":[\"1:2236\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1166,10,1166,31],\"els\":[\"1:2236\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1166,31,1166,32],\"els\":[\"1:2236\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1169,3,1169,9],\"els\":[\"1:2236\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1169,10,1169,31],\"els\":[\"1:2236\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1169,31,1169,32],\"els\":[\"1:2236\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1172,3,1172,9],\"els\":[\"1:267\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1172,10,1172,40],\"els\":[\"1:267\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1172,40,1172,41],\"els\":[\"1:267\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1175,3,1175,9],\"els\":[\"1:268\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1175,10,1175,40],\"els\":[\"1:268\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1175,40,1175,41],\"els\":[\"1:268\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1178,3,1178,9],\"els\":[\"1:269\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1178,10,1178,40],\"els\":[\"1:269\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1178,40,1178,41],\"els\":[\"1:269\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1181,3,1181,9],\"els\":[\"1:375\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1181,10,1181,40],\"els\":[\"1:375\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1181,40,1181,41],\"els\":[\"1:375\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1184,3,1184,9],\"els\":[\"1:376\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1184,10,1184,40],\"els\":[\"1:376\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1184,40,1184,41],\"els\":[\"1:376\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1187,3,1187,9],\"els\":[\"1:377\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1187,10,1187,40],\"els\":[\"1:377\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1187,40,1187,41],\"els\":[\"1:377\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1190,3,1190,9],\"els\":[\"1:516\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1190,10,1190,40],\"els\":[\"1:516\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1190,40,1190,41],\"els\":[\"1:516\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1193,3,1193,9],\"els\":[\"1:517\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1193,10,1193,40],\"els\":[\"1:517\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1193,40,1193,41],\"els\":[\"1:517\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1196,3,1196,9],\"els\":[\"1:518\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1196,10,1196,40],\"els\":[\"1:518\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1196,40,1196,41],\"els\":[\"1:518\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1199,3,1199,9],\"els\":[\"1:519\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1199,10,1199,40],\"els\":[\"1:519\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1199,40,1199,41],\"els\":[\"1:519\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1202,3,1202,9],\"els\":[\"1:146\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1202,10,1202,39],\"els\":[\"1:146\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1202,39,1202,40],\"els\":[\"1:146\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1205,3,1205,9],\"els\":[\"1:520\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1205,10,1205,40],\"els\":[\"1:520\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1205,40,1205,41],\"els\":[\"1:520\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1208,3,1208,9],\"els\":[\"1:521\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1208,10,1208,40],\"els\":[\"1:521\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1208,40,1208,41],\"els\":[\"1:521\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1211,3,1211,9],\"els\":[\"1:2227\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1211,10,1211,40],\"els\":[\"1:2227\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1211,40,1211,41],\"els\":[\"1:2227\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1214,3,1214,9],\"els\":[\"1:2243\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1214,10,1214,40],\"els\":[\"1:2243\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1214,40,1214,41],\"els\":[\"1:2243\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1217,3,1217,9],\"els\":[\"1:154\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1217,10,1217,39],\"els\":[\"1:154\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1217,39,1217,40],\"els\":[\"1:154\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1220,3,1220,9],\"els\":[\"1:157\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1220,10,1220,39],\"els\":[\"1:157\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1220,39,1220,40],\"els\":[\"1:157\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1223,3,1223,9],\"els\":[\"1:158\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1223,10,1223,39],\"els\":[\"1:158\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1223,39,1223,40],\"els\":[\"1:158\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1226,3,1226,9],\"els\":[\"1:328\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1226,10,1226,39],\"els\":[\"1:328\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1226,39,1226,40],\"els\":[\"1:328\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1229,3,1229,9],\"els\":[\"1:372\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1229,10,1229,39],\"els\":[\"1:372\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1229,39,1229,40],\"els\":[\"1:372\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1232,3,1232,9],\"els\":[\"1:266\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1232,10,1232,39],\"els\":[\"1:266\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1232,39,1232,40],\"els\":[\"1:266\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1235,3,1235,11],\"els\":[\"1:3740\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1235,12,1235,29],\"els\":[\"1:3740\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1235,29,1235,30],\"els\":[\"1:3740\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1238,3,1238,12],\"els\":[\"1:3745\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1238,13,1238,29],\"els\":[\"1:3745\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1238,29,1238,30],\"els\":[\"1:3745\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1241,3,1241,12],\"els\":[\"1:3746\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1241,13,1241,29],\"els\":[\"1:3746\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1241,29,1241,30],\"els\":[\"1:3746\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1244,3,1244,12],\"els\":[\"1:1643\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1244,13,1244,32],\"els\":[\"1:1643\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1244,32,1244,33],\"els\":[\"1:1643\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1247,3,1247,12],\"els\":[\"1:2876\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1247,13,1247,32],\"els\":[\"1:2876\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1247,32,1247,33],\"els\":[\"1:2876\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1250,3,1250,12],\"els\":[\"1:1880\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1250,13,1250,32],\"els\":[\"1:1880\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1250,32,1250,33],\"els\":[\"1:1880\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1253,3,1253,12],\"els\":[\"1:720\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1253,13,1253,31],\"els\":[\"1:720\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1253,31,1253,32],\"els\":[\"1:720\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1256,3,1256,12],\"els\":[\"1:1638\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1256,13,1256,43],\"els\":[\"1:1638\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1256,43,1256,44],\"els\":[\"1:1638\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1260,3,1260,12],\"els\":[\"1:249\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1260,13,1260,42],\"els\":[\"1:249\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1260,42,1260,43],\"els\":[\"1:249\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1264,3,1264,12],\"els\":[\"1:1877\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1264,13,1264,43],\"els\":[\"1:1877\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1264,43,1264,44],\"els\":[\"1:1877\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1268,3,1268,12],\"els\":[\"1:2872\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1268,13,1268,43],\"els\":[\"1:2872\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1268,43,1268,44],\"els\":[\"1:2872\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1272,3,1272,10],\"els\":[\"1:3718:267\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1272,11,1272,23],\"els\":[\"1:3718:267\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1272,23,1272,24],\"els\":[\"1:3718:267\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1275,3,1275,10],\"els\":[\"1:3718:264\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1275,11,1275,22],\"els\":[\"1:3718:264\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1275,22,1275,23],\"els\":[\"1:3718:264\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1278,3,1278,10],\"els\":[\"1:1737\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1278,11,1278,38],\"els\":[\"1:1737\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1278,38,1278,39],\"els\":[\"1:1737\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1282,3,1282,10],\"els\":[\"1:3705\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1282,11,1282,40],\"els\":[\"1:3705\"],\"ct\":{\"1\":1,\"0\":4}},{\"tk\":[1282,40,1282,41],\"els\":[\"1:3705\"],\"ct\":{\"1\":1,\"0\":4}}]},\"0\":{\"records\":[{\"tk\":[101,3,101,5],\"els\":[\"0:2571:32-215\",\"0:2571::29\"]},{\"tk\":[101,7,101,12],\"els\":[\"0:2571::29\"]},{\"tk\":[101,13,101,14],\"els\":[\"0:2571:35-40\",\"0:2571::29\"]},{\"tk\":[101,15,101,18],\"els\":[\"0:2571:35-40\",\"0:2571::29\"]},{\"tk\":[102,6,102,11],\"els\":[\"0:2571:32-215\",\"0:2571::29\"]},{\"tk\":[102,12,102,13],\"els\":[\"0:2571:32-215\",\"0:2571::29\",\"0:2571:45-49\"]},{\"tk\":[102,14,102,20],\"els\":[\"0:2571::29\"]},{\"tk\":[105,5,105,8],\"els\":[\"0:2571:63-68\"]},{\"tk\":[105,9,105,10],\"els\":[\"0:2571:63-68\",\"0:2571::29\",\"0:2571:103-108\",\"0:2571:136-141\"]},{\"tk\":[105,11,105,16],\"els\":[\"0:2571::29\"]},{\"tk\":[105,17,105,18],\"els\":[\"0:2571:63-68\",\"0:2571::29\"]},{\"tk\":[105,19,105,26],\"els\":[\"0:2571::29\"]},{\"tk\":[106,5,106,7],\"els\":[\"0:2571:51-91\",\"0:2571::29\"]},{\"tk\":[106,9,106,14],\"els\":[\"0:2571::29\"]},{\"tk\":[106,15,106,17],\"els\":[\"0:2571:63-73\",\"0:2571::29\"]},{\"tk\":[106,19,106,22],\"els\":[\"0:2571:63-68\"]},{\"tk\":[106,23,106,25],\"els\":[\"0:2571:63-73\",\"0:2571::29\"]},{\"tk\":[106,26,106,29],\"els\":[\"0:2571:63-73\",\"0:2571::29\"]},{\"tk\":[106,31,106,33],\"els\":[\"0:2571:75-80\",\"0:2571::29\"]},{\"tk\":[106,35,106,40],\"els\":[\"0:2571::29\"]},{\"tk\":[106,41,106,42],\"els\":[\"0:2571:75-80\",\"0:2571::29\"]},{\"tk\":[106,43,106,46],\"els\":[\"0:2571:75-80\",\"0:2571::29\"]},{\"tk\":[107,8,107,13],\"els\":[\"0:2571:51-91\",\"0:2571::29\",\"0:2571:32-215\"]},{\"tk\":[107,14,107,15],\"els\":[\"0:2571:51-91\",\"0:2571::29\",\"0:2571:85-89\"]},{\"tk\":[107,16,107,22],\"els\":[\"0:2571::29\"]},{\"tk\":[108,12,108,14],\"els\":[\"0:2571:91-123\",\"0:2571::29\"]},{\"tk\":[108,16,108,21],\"els\":[\"0:2571::29\"]},{\"tk\":[108,22,108,24],\"els\":[\"0:2571:103-112\",\"0:2571::29\"]},{\"tk\":[108,30,108,31],\"els\":[\"0:2571:103-112\",\"0:2571::29\"]},{\"tk\":[108,32,108,35],\"els\":[\"0:2571:103-112\",\"0:2571::29\"]},{\"tk\":[109,8,109,13],\"els\":[\"0:2571:91-123\",\"0:2571::29\",\"0:2571:32-215\"]},{\"tk\":[109,14,109,15],\"els\":[\"0:2571:91-123\",\"0:2571::29\",\"0:2571:117-121\"]},{\"tk\":[109,16,109,22],\"els\":[\"0:2571::29\"]},{\"tk\":[110,12,110,14],\"els\":[\"0:2571:123-164\",\"0:2571::29\"]},{\"tk\":[110,17,110,18],\"els\":[\"0:2571::29\"]},{\"tk\":[110,18,110,23],\"els\":[\"0:2571::29\"]},{\"tk\":[110,25,110,27],\"els\":[\"0:2571:136-146\",\"0:2571::29\"]},{\"tk\":[110,33,110,35],\"els\":[\"0:2571:136-146\",\"0:2571::29\"]},{\"tk\":[110,36,110,39],\"els\":[\"0:2571:136-146\",\"0:2571::29\"]},{\"tk\":[110,41,110,43],\"els\":[\"0:2571:148-153\",\"0:2571::29\"]},{\"tk\":[110,45,110,50],\"els\":[\"0:2571::29\"]},{\"tk\":[110,51,110,52],\"els\":[\"0:2571:148-153\",\"0:2571::29\"]},{\"tk\":[110,53,110,56],\"els\":[\"0:2571:148-153\",\"0:2571::29\"]},{\"tk\":[111,8,111,13],\"els\":[\"0:2571:123-164\",\"0:2571::29\",\"0:2571:32-215\"]},{\"tk\":[111,14,111,15],\"els\":[\"0:2571:123-164\",\"0:2571::29\",\"0:2571:158-162\"]},{\"tk\":[111,16,111,22],\"els\":[\"0:2571::29\"]},{\"tk\":[113,8,113,13],\"els\":[\"0:2571:32-215\",\"0:2571::29\"]},{\"tk\":[113,14,113,15],\"els\":[\"0:2571:191-195\",\"0:2571::29\",\"0:2571:206-210\"]},{\"tk\":[113,16,113,22],\"els\":[\"0:2571::29\"]},{\"tk\":[333,3,333,5],\"els\":[\"0:2766\"]},{\"tk\":[333,7,333,32],\"els\":[\"0:2766\",\"0:2696\"]},{\"tk\":[333,33,333,46],\"els\":[\"0:2766\",\"0:2696\"]},{\"tk\":[334,5,334,29],\"els\":[\"0:2766\"]},{\"tk\":[334,30,334,59],\"els\":[\"0:2766\"]},{\"tk\":[334,60,334,61],\"els\":[\"0:2766\"]},{\"tk\":[335,7,335,32],\"els\":[\"0:374\",\"0:2766\"]},{\"tk\":[335,33,335,36],\"els\":[\"0:374\",\"0:2766\"]},{\"tk\":[336,5,336,29],\"els\":[\"0:2766\"]},{\"tk\":[336,30,336,59],\"els\":[\"0:2766\"]},{\"tk\":[336,60,336,61],\"els\":[\"0:2766\"]},{\"tk\":[337,7,337,31],\"els\":[\"0:369\"]},{\"tk\":[337,32,337,49],\"els\":[\"0:369\"]},{\"tk\":[338,5,338,29],\"els\":[\"0:2766\"]},{\"tk\":[338,30,338,59],\"els\":[\"0:2766\"]},{\"tk\":[338,60,338,61],\"els\":[\"0:2766\"]},{\"tk\":[339,7,339,32],\"els\":[\"0:2697\",\"0:2766\"]},{\"tk\":[339,33,339,42],\"els\":[\"0:2697\",\"0:2766\"]},{\"tk\":[341,5,341,29],\"els\":[\"0:2766\"]},{\"tk\":[341,30,341,59],\"els\":[\"0:2766\"]},{\"tk\":[341,60,341,61],\"els\":[\"0:2766\"]},{\"tk\":[342,7,342,31],\"els\":[\"0:2695\"]},{\"tk\":[342,32,342,49],\"els\":[\"0:2695\"]},{\"tk\":[343,5,343,29],\"els\":[\"0:2766\"]},{\"tk\":[343,30,343,59],\"els\":[\"0:2766\"]},{\"tk\":[343,60,343,61],\"els\":[\"0:2766\"]},{\"tk\":[344,7,344,31],\"els\":[\"0:2695\"]},{\"tk\":[344,32,344,49],\"els\":[\"0:2695\"]},{\"tk\":[345,5,345,29],\"els\":[\"0:2766\"]},{\"tk\":[345,30,345,59],\"els\":[\"0:2766\"]},{\"tk\":[345,60,345,61],\"els\":[\"0:2766\"]},{\"tk\":[346,7,346,31],\"els\":[\"0:2695\"]},{\"tk\":[346,32,346,49],\"els\":[\"0:2695\"]},{\"tk\":[356,3,356,14],\"els\":[\"0:2723:2#out:1\"]},{\"tk\":[356,15,356,16],\"els\":[\"0:2723:2#out:1\",\"0:2723:2\"]},{\"tk\":[356,18,356,22],\"els\":[\"0:2720\"]},{\"tk\":[356,23,356,48],\"els\":[\"0:2720\",\"0:2726\"]},{\"tk\":[356,49,356,60],\"els\":[\"0:2720\",\"0:2726\"]},{\"tk\":[356,62,356,64],\"els\":[\"0:2723:2\"]},{\"tk\":[357,18,357,42],\"els\":[\"0:2723:2\",\"0:2723:3\"]},{\"tk\":[357,43,357,67],\"els\":[\"0:2723:2\",\"0:2723:3\"]},{\"tk\":[364,3,364,27],\"els\":[\"0:2721\"]},{\"tk\":[364,28,364,32],\"els\":[\"0:2721\"]},{\"tk\":[364,33,364,34],\"els\":[\"0:2721\",\"0:2740\"]},{\"tk\":[364,35,364,60],\"els\":[\"0:2721\",\"0:2725\"]},{\"tk\":[364,61,364,62],\"els\":[\"0:2721\",\"0:2725\"]},{\"tk\":[364,63,364,64],\"els\":[\"0:2721\"]},{\"tk\":[365,5,365,30],\"els\":[\"0:2721\",\"0:2727\"]},{\"tk\":[365,31,365,45],\"els\":[\"0:2721\",\"0:2727\"]},{\"tk\":[372,3,372,27],\"els\":[\"0:2730#out:1\"]},{\"tk\":[372,28,372,38],\"els\":[\"0:2730#out:1\"]},{\"tk\":[372,39,372,40],\"els\":[\"0:2730#out:1\",\"0:2730\"]},{\"tk\":[372,41,372,65],\"els\":[\"0:2735\"]},{\"tk\":[372,66,372,74],\"els\":[\"0:2735\"]},{\"tk\":[372,75,372,76],\"els\":[\"0:2730\"]},{\"tk\":[373,6,373,30],\"els\":[\"0:2734\"]},{\"tk\":[373,31,373,38],\"els\":[\"0:2734\"]},{\"tk\":[373,39,373,40],\"els\":[\"0:2730\"]},{\"tk\":[373,41,373,65],\"els\":[\"0:2721\"]},{\"tk\":[373,66,373,70],\"els\":[\"0:2721\"]},{\"tk\":[380,3,380,30],\"els\":[\"0:2731\",\"0:2762\"]},{\"tk\":[380,30,380,31],\"els\":[\"0:2731\",\"0:2762\"]},{\"tk\":[380,31,380,42],\"els\":[\"0:2731\",\"0:2762\"]},{\"tk\":[380,42,380,43],\"els\":[\"0:2731\",\"0:2762\"]},{\"tk\":[380,44,380,69],\"els\":[\"0:2731\",\"0:2762\",\"0:2725\"]},{\"tk\":[380,69,380,70],\"els\":[\"0:2731\",\"0:2762\"]},{\"tk\":[380,70,380,71],\"els\":[\"0:2731\",\"0:2762\",\"0:2725\"]},{\"tk\":[380,71,380,72],\"els\":[\"0:2731\",\"0:2762\"]},{\"tk\":[381,5,381,30],\"els\":[\"0:2731\",\"0:2762\",\"0:2727\"]},{\"tk\":[381,30,381,31],\"els\":[\"0:2731\",\"0:2762\"]},{\"tk\":[381,31,381,45],\"els\":[\"0:2731\",\"0:2762\",\"0:2727\"]},{\"tk\":[381,45,381,46],\"els\":[\"0:2731\",\"0:2762\"]},{\"tk\":[382,5,382,29],\"els\":[\"0:2731\",\"0:2762\"]},{\"tk\":[382,29,382,30],\"els\":[\"0:2731\",\"0:2762\"]},{\"tk\":[382,30,382,40],\"els\":[\"0:2731\",\"0:2762\"]},{\"tk\":[382,40,382,41],\"els\":[\"0:2731\",\"0:2762\"]},{\"tk\":[382,42,382,66],\"els\":[\"0:2731\",\"0:2762\"]},{\"tk\":[382,66,382,67],\"els\":[\"0:2731\",\"0:2762\"]},{\"tk\":[382,67,382,74],\"els\":[\"0:2731\",\"0:2762\"]},{\"tk\":[382,74,382,75],\"els\":[\"0:2731\",\"0:2762\"]},{\"tk\":[383,5,383,6],\"els\":[\"0:2731\",\"0:2762\"]},{\"tk\":[383,6,383,30],\"els\":[\"0:2731\",\"0:2762\"]},{\"tk\":[383,30,383,31],\"els\":[\"0:2731\",\"0:2762\"]},{\"tk\":[383,31,383,32],\"els\":[\"0:2731\",\"0:2762\"]},{\"tk\":[383,32,383,33],\"els\":[\"0:2731\",\"0:2762\"]},{\"tk\":[388,3,388,27],\"els\":[\"0:2722\"]},{\"tk\":[388,28,388,30],\"els\":[\"0:2722\"]},{\"tk\":[388,31,388,32],\"els\":[\"0:2722\"]},{\"tk\":[388,33,388,57],\"els\":[\"0:2736\"]},{\"tk\":[388,58,388,65],\"els\":[\"0:2736\"]},{\"tk\":[388,66,388,67],\"els\":[\"0:2722\"]},{\"tk\":[389,5,389,29],\"els\":[\"0:2722\"]},{\"tk\":[389,30,389,31],\"els\":[\"0:2722\"]},{\"tk\":[394,3,394,28],\"els\":[\"0:2716\"]},{\"tk\":[394,29,394,40],\"els\":[\"0:2716\"]},{\"tk\":[394,41,394,42],\"els\":[\"0:2716\",\"0:2694\"]},{\"tk\":[395,5,395,29],\"els\":[\"0:2716\"]},{\"tk\":[395,30,395,59],\"els\":[\"0:2716\"]},{\"tk\":[395,60,395,61],\"els\":[\"0:2716\"]},{\"tk\":[396,5,396,29],\"els\":[\"0:2716\"]},{\"tk\":[396,30,396,59],\"els\":[\"0:2716\"]},{\"tk\":[403,3,403,27],\"els\":[\"0:2717\"]},{\"tk\":[403,28,403,42],\"els\":[\"0:2717\"]},{\"tk\":[403,43,403,44],\"els\":[\"0:2717\"]},{\"tk\":[404,5,404,30],\"els\":[\"0:2716\"]},{\"tk\":[404,31,404,42],\"els\":[\"0:2716\"]},{\"tk\":[404,43,404,44],\"els\":[\"0:2718\"]},{\"tk\":[404,45,404,69],\"els\":[\"0:2718\"]},{\"tk\":[404,70,404,72],\"els\":[\"0:2718\"]},{\"tk\":[404,73,404,74],\"els\":[\"0:2718\"]},{\"tk\":[405,5,405,29],\"els\":[\"0:2767\"]},{\"tk\":[405,30,405,37],\"els\":[\"0:2767\"]},{\"tk\":[405,38,405,39],\"els\":[\"0:2717\"]},{\"tk\":[405,40,405,64],\"els\":[\"0:2717\"]},{\"tk\":[405,65,405,75],\"els\":[\"0:2717\"]},{\"tk\":[412,3,412,27],\"els\":[\"0:2700:4\"]},{\"tk\":[412,28,412,33],\"els\":[\"0:2700:4\"]},{\"tk\":[412,34,412,35],\"els\":[\"0:2700:4\"]},{\"tk\":[412,36,412,60],\"els\":[\"0:2700:4\"]},{\"tk\":[412,61,412,75],\"els\":[\"0:2700:4\"]},{\"tk\":[412,76,412,77],\"els\":[\"0:2700:4\"]},{\"tk\":[413,5,413,29],\"els\":[\"0:2700:4\"]},{\"tk\":[413,30,413,40],\"els\":[\"0:2700:4\"]},{\"tk\":[416,3,416,27],\"els\":[\"0:2693\"]},{\"tk\":[416,28,416,42],\"els\":[\"0:2693\"]},{\"tk\":[416,43,416,44],\"els\":[\"0:2693\"]},{\"tk\":[417,5,417,29],\"els\":[\"0:2693\"]},{\"tk\":[417,30,417,59],\"els\":[\"0:2693\"]},{\"tk\":[417,60,417,61],\"els\":[\"0:2693\"]},{\"tk\":[418,5,418,29],\"els\":[\"0:2693\"]},{\"tk\":[418,30,418,44],\"els\":[\"0:2693\"]},{\"tk\":[423,3,423,27],\"els\":[\"0:3358\"]},{\"tk\":[423,28,423,38],\"els\":[\"0:3358\"]},{\"tk\":[423,39,423,40],\"els\":[\"0:3358\"]},{\"tk\":[423,41,423,65],\"els\":[\"0:3358\"]},{\"tk\":[423,66,423,78],\"els\":[\"0:3358\"]},{\"tk\":[423,79,423,80],\"els\":[\"0:3358\"]},{\"tk\":[424,5,424,30],\"els\":[\"0:3280\"]},{\"tk\":[424,31,424,61],\"els\":[\"0:3280\"]},{\"tk\":[427,3,427,5],\"els\":[\"0:2706\"]},{\"tk\":[427,7,427,14],\"els\":[\"0:2706\"]},{\"tk\":[427,15,427,39],\"els\":[\"0:2706\"]},{\"tk\":[427,40,427,54],\"els\":[\"0:2706\"]},{\"tk\":[428,5,428,29],\"els\":[\"0:2706\"]},{\"tk\":[428,30,428,34],\"els\":[\"0:2706\"]},{\"tk\":[428,35,428,36],\"els\":[\"0:2706\"]},{\"tk\":[428,37,428,61],\"els\":[\"0:2706\"]},{\"tk\":[428,62,428,76],\"els\":[\"0:2706\"]},{\"tk\":[429,10,429,12],\"els\":[\"0:2706\"]},{\"tk\":[429,14,429,38],\"els\":[\"0:2706\"]},{\"tk\":[429,39,429,53],\"els\":[\"0:2706\"]},{\"tk\":[429,54,429,55],\"els\":[\"0:2706\"]},{\"tk\":[429,56,429,59],\"els\":[\"0:2706\"]},{\"tk\":[430,5,430,29],\"els\":[\"0:2706\"]},{\"tk\":[430,30,430,34],\"els\":[\"0:2706\"]},{\"tk\":[430,35,430,36],\"els\":[\"0:2706\"]},{\"tk\":[430,37,430,38],\"els\":[\"0:2706\"]},{\"tk\":[432,5,432,29],\"els\":[\"0:2706\"]},{\"tk\":[432,30,432,34],\"els\":[\"0:2706\"]},{\"tk\":[432,35,432,36],\"els\":[\"0:2706\"]},{\"tk\":[432,38,432,62],\"els\":[\"0:2706\"]},{\"tk\":[432,63,432,77],\"els\":[\"0:2706\"]},{\"tk\":[432,78,432,79],\"els\":[\"0:2706\"]},{\"tk\":[433,7,433,10],\"els\":[\"0:2706\"]},{\"tk\":[439,3,439,5],\"els\":[\"0:3359\"]},{\"tk\":[439,7,439,31],\"els\":[\"0:3359\"]},{\"tk\":[439,32,439,42],\"els\":[\"0:3359\"]},{\"tk\":[439,43,439,44],\"els\":[\"0:3359\"]},{\"tk\":[440,7,440,31],\"els\":[\"0:3359\"]},{\"tk\":[440,32,440,52],\"els\":[\"0:3359\"]},{\"tk\":[441,5,441,29],\"els\":[\"0:3359\"]},{\"tk\":[441,30,441,40],\"els\":[\"0:3359\"]},{\"tk\":[441,41,441,42],\"els\":[\"0:3359\"]},{\"tk\":[442,7,442,31],\"els\":[\"0:3359\"]},{\"tk\":[442,32,442,52],\"els\":[\"0:3359\"]},{\"tk\":[443,10,443,12],\"els\":[\"0:3359\"]},{\"tk\":[443,14,443,38],\"els\":[\"0:3359\"]},{\"tk\":[443,39,443,49],\"els\":[\"0:3359\"]},{\"tk\":[443,50,443,51],\"els\":[\"0:3359\"]},{\"tk\":[444,14,444,38],\"els\":[\"0:3359\"]},{\"tk\":[444,39,444,59],\"els\":[\"0:3359\"]},{\"tk\":[445,5,445,29],\"els\":[\"0:3359\"]},{\"tk\":[445,30,445,40],\"els\":[\"0:3359\"]},{\"tk\":[445,41,445,42],\"els\":[\"0:3359\"]},{\"tk\":[446,7,446,31],\"els\":[\"0:3359\"]},{\"tk\":[446,32,446,52],\"els\":[\"0:3359\"]},{\"tk\":[471,3,471,27],\"els\":[\"0:3464\"]},{\"tk\":[471,28,471,32],\"els\":[\"0:3464\"]},{\"tk\":[471,33,471,34],\"els\":[\"0:3464\"]},{\"tk\":[471,40,471,64],\"els\":[\"0:2700:3\"]},{\"tk\":[471,65,471,70],\"els\":[\"0:2700:3\"]},{\"tk\":[471,71,471,72],\"els\":[\"0:2700:3\"]},{\"tk\":[472,5,472,30],\"els\":[\"0:2700:3\",\"0:2700:5\"]},{\"tk\":[472,31,472,40],\"els\":[\"0:2700:3\",\"0:2700:5\"]},{\"tk\":[472,42,472,43],\"els\":[\"0:2692\"]},{\"tk\":[472,44,472,69],\"els\":[\"0:2692\",\"0:2698\"]},{\"tk\":[472,70,472,81],\"els\":[\"0:2692\",\"0:2698\"]},{\"tk\":[473,5,473,6],\"els\":[\"0:2692\"]},{\"tk\":[473,7,473,31],\"els\":[\"0:2704\"]},{\"tk\":[473,32,473,46],\"els\":[\"0:2704\"]},{\"tk\":[473,47,473,48],\"els\":[\"0:2704\"]},{\"tk\":[473,49,473,73],\"els\":[\"0:2704\"]},{\"tk\":[473,74,473,76],\"els\":[\"0:2704\"]},{\"tk\":[473,77,473,78],\"els\":[\"0:2704\"]},{\"tk\":[474,5,474,29],\"els\":[\"0:2767\"]},{\"tk\":[474,30,474,37],\"els\":[\"0:2767\"]},{\"tk\":[474,39,474,40],\"els\":[\"0:2692\"]},{\"tk\":[474,41,474,65],\"els\":[\"0:2705\"]},{\"tk\":[474,66,474,70],\"els\":[\"0:2705\"]},{\"tk\":[474,71,474,72],\"els\":[\"0:2705\"]},{\"tk\":[475,5,475,29],\"els\":[\"0:2768\"]},{\"tk\":[475,30,475,37],\"els\":[\"0:2768\"]},{\"tk\":[475,39,475,40],\"els\":[\"0:2692\"]},{\"tk\":[475,41,475,65],\"els\":[\"0:2701\"]},{\"tk\":[475,66,475,75],\"els\":[\"0:2701\"]},{\"tk\":[475,76,475,77],\"els\":[\"0:2701\"]},{\"tk\":[476,5,476,29],\"els\":[\"0:2701\"]},{\"tk\":[476,30,476,59],\"els\":[\"0:2701\"]},{\"tk\":[476,61,476,62],\"els\":[\"0:2702\"]},{\"tk\":[477,5,477,29],\"els\":[\"0:2702\"]},{\"tk\":[477,30,477,40],\"els\":[\"0:2702\"]},{\"tk\":[477,41,477,42],\"els\":[\"0:3464\"]},{\"tk\":[477,43,477,67],\"els\":[\"0:3464\"]},{\"tk\":[477,68,477,78],\"els\":[\"0:3464\"]},{\"tk\":[483,3,483,5],\"els\":[\"0:1737\"]},{\"tk\":[483,7,483,31],\"els\":[\"0:1737\"]},{\"tk\":[483,32,483,59],\"els\":[\"0:1737\"]},{\"tk\":[483,60,483,62],\"els\":[\"0:1737\"]},{\"tk\":[483,63,483,64],\"els\":[\"0:1737\"]},{\"tk\":[485,5,485,7],\"els\":[\"0:1664\",\"0:1737\"]},{\"tk\":[485,9,485,33],\"els\":[\"0:1664\",\"0:1737\"]},{\"tk\":[485,34,485,38],\"els\":[\"0:1664\",\"0:1737\"]},{\"tk\":[485,39,485,40],\"els\":[\"0:1664\",\"0:1737\"]},{\"tk\":[486,9,486,33],\"els\":[\"0:1664\"]},{\"tk\":[486,34,486,53],\"els\":[\"0:1664\"]},{\"tk\":[487,7,487,31],\"els\":[\"0:1664\",\"0:1737\"]},{\"tk\":[487,32,487,47],\"els\":[\"0:1664\",\"0:1737\"]},{\"tk\":[487,48,487,49],\"els\":[\"0:1664\",\"0:1737\"]},{\"tk\":[488,9,488,33],\"els\":[\"0:1664\"]},{\"tk\":[488,34,488,53],\"els\":[\"0:1664\"]},{\"tk\":[489,12,489,14],\"els\":[\"0:1664\",\"0:1737\"]},{\"tk\":[489,16,489,40],\"els\":[\"0:1664\",\"0:1737\"]},{\"tk\":[489,41,489,45],\"els\":[\"0:1664\",\"0:1737\"]},{\"tk\":[489,46,489,47],\"els\":[\"0:1664\",\"0:1737\"]},{\"tk\":[490,16,490,40],\"els\":[\"0:1664\"]},{\"tk\":[490,41,490,60],\"els\":[\"0:1664\"]},{\"tk\":[491,7,491,31],\"els\":[\"0:1664\",\"0:1737\"]},{\"tk\":[491,32,491,47],\"els\":[\"0:1664\",\"0:1737\"]},{\"tk\":[491,48,491,49],\"els\":[\"0:1664\",\"0:1737\"]},{\"tk\":[492,9,492,33],\"els\":[\"0:1664\"]},{\"tk\":[492,34,492,53],\"els\":[\"0:1664\"]},{\"tk\":[494,7,494,31],\"els\":[\"0:1737\",\"0:1664\"]},{\"tk\":[494,32,494,47],\"els\":[\"0:1737\",\"0:1664\"]},{\"tk\":[494,48,494,49],\"els\":[\"0:1737\",\"0:1664\"]},{\"tk\":[494,50,494,74],\"els\":[\"0:1664\",\"0:1737\"]},{\"tk\":[494,75,494,79],\"els\":[\"0:1664\",\"0:1737\"]},{\"tk\":[499,5,499,29],\"els\":[\"0:1737\",\"0:378\"]},{\"tk\":[499,30,499,45],\"els\":[\"0:1737\",\"0:378\"]},{\"tk\":[499,46,499,47],\"els\":[\"0:1737\"]},{\"tk\":[500,7,500,31],\"els\":[\"0:1738\"]},{\"tk\":[500,32,500,48],\"els\":[\"0:1738\"]},{\"tk\":[506,3,506,5],\"els\":[\"0:3704\"]},{\"tk\":[506,7,506,32],\"els\":[\"0:3704\"]},{\"tk\":[506,33,506,45],\"els\":[\"0:3704\"]},{\"tk\":[506,46,506,48],\"els\":[\"0:3704\"]},{\"tk\":[506,49,506,50],\"els\":[\"0:3704\"]},{\"tk\":[507,5,507,29],\"els\":[\"0:3704\"]},{\"tk\":[507,30,507,32],\"els\":[\"0:3704\"]},{\"tk\":[507,33,507,34],\"els\":[\"0:3704\"]},{\"tk\":[507,35,507,59],\"els\":[\"0:3704\"]},{\"tk\":[507,60,507,73],\"els\":[\"0:3704\"]},{\"tk\":[507,74,507,75],\"els\":[\"0:3704\"]},{\"tk\":[508,7,508,31],\"els\":[\"0:3704\"]},{\"tk\":[508,31,508,33],\"els\":[\"0:3704\"]},{\"tk\":[508,33,508,39],\"els\":[\"0:3704\"]},{\"tk\":[508,39,508,40],\"els\":[\"0:3704\"]},{\"tk\":[508,40,508,49],\"els\":[\"0:3704\"]},{\"tk\":[509,5,509,30],\"els\":[\"0:3704\"]},{\"tk\":[509,31,509,38],\"els\":[\"0:3704\"]},{\"tk\":[509,39,509,40],\"els\":[\"0:3704\"]},{\"tk\":[509,41,509,44],\"els\":[\"0:3704\"]},{\"tk\":[509,45,509,69],\"els\":[\"0:3704\"]},{\"tk\":[509,70,509,72],\"els\":[\"0:3704\"]},{\"tk\":[510,5,510,30],\"els\":[\"0:3704\"]},{\"tk\":[510,31,510,38],\"els\":[\"0:3704\"]},{\"tk\":[510,39,510,40],\"els\":[\"0:3704\"]},{\"tk\":[510,41,510,44],\"els\":[\"0:3704\"]},{\"tk\":[511,5,511,30],\"els\":[\"0:3704\"]},{\"tk\":[511,31,511,43],\"els\":[\"0:3704\"]},{\"tk\":[511,44,511,45],\"els\":[\"0:3704\"]},{\"tk\":[511,46,511,47],\"els\":[\"0:3704\"]},{\"tk\":[518,3,518,5],\"els\":[\"0:3705\"]},{\"tk\":[518,7,518,31],\"els\":[\"0:3705\"]},{\"tk\":[518,32,518,61],\"els\":[\"0:3705\"]},{\"tk\":[518,62,518,64],\"els\":[\"0:3705\"]},{\"tk\":[518,65,518,66],\"els\":[\"0:3705\"]},{\"tk\":[519,5,519,29],\"els\":[\"0:3705\"]},{\"tk\":[519,30,519,44],\"els\":[\"0:3705\"]},{\"tk\":[519,45,519,46],\"els\":[\"0:3705\"]},{\"tk\":[520,9,520,34],\"els\":[\"0:3704\"]},{\"tk\":[520,35,520,42],\"els\":[\"0:3704\"]},{\"tk\":[520,43,520,44],\"els\":[\"0:3704\"]},{\"tk\":[521,9,521,33],\"els\":[\"0:3704\"]},{\"tk\":[521,34,521,47],\"els\":[\"0:3704\"]},{\"tk\":[521,48,521,49],\"els\":[\"0:3704\"]},{\"tk\":[522,9,522,34],\"els\":[\"0:3704\"]},{\"tk\":[522,35,522,42],\"els\":[\"0:3704\"]},{\"tk\":[522,43,522,44],\"els\":[\"0:3704\"]},{\"tk\":[523,9,523,33],\"els\":[\"0:3704\"]},{\"tk\":[523,34,523,47],\"els\":[\"0:3704\"]},{\"tk\":[523,49,523,50],\"els\":[\"0:3704\"]},{\"tk\":[524,8,524,32],\"els\":[\"0:3704\"]},{\"tk\":[524,33,524,46],\"els\":[\"0:3704\"]},{\"tk\":[524,47,524,48],\"els\":[\"0:3704\"]},{\"tk\":[525,9,525,34],\"els\":[\"0:3704\"]},{\"tk\":[525,35,525,42],\"els\":[\"0:3704\"]},{\"tk\":[525,43,525,44],\"els\":[\"0:3704\"]},{\"tk\":[526,9,526,33],\"els\":[\"0:3704\"]},{\"tk\":[526,34,526,47],\"els\":[\"0:3704\"]},{\"tk\":[526,48,526,49],\"els\":[\"0:3704\"]},{\"tk\":[527,9,527,34],\"els\":[\"0:3704\"]},{\"tk\":[527,35,527,42],\"els\":[\"0:3704\"]},{\"tk\":[527,43,527,44],\"els\":[\"0:3704\"]},{\"tk\":[528,9,528,33],\"els\":[\"0:3704\"]},{\"tk\":[528,34,528,47],\"els\":[\"0:3704\"]},{\"tk\":[528,49,528,50],\"els\":[\"0:3704\"]},{\"tk\":[529,8,529,32],\"els\":[\"0:3704\"]},{\"tk\":[529,33,529,46],\"els\":[\"0:3704\"]},{\"tk\":[529,48,529,49],\"els\":[\"0:3704\"]},{\"tk\":[530,7,530,31],\"els\":[\"0:3704\"]},{\"tk\":[530,32,530,44],\"els\":[\"0:3704\"]},{\"tk\":[530,45,530,46],\"els\":[\"0:3704\"]},{\"tk\":[531,7,531,31],\"els\":[\"0:3704\"]},{\"tk\":[531,32,531,45],\"els\":[\"0:3704\"]},{\"tk\":[533,5,533,29],\"els\":[\"0:3705\"]},{\"tk\":[533,30,533,44],\"els\":[\"0:3705\"]},{\"tk\":[533,45,533,46],\"els\":[\"0:3705\"]},{\"tk\":[534,7,534,31],\"els\":[\"0:369\"]},{\"tk\":[534,32,534,49],\"els\":[\"0:369\"]},{\"tk\":[545,3,545,5],\"els\":[\"0:2385\"]},{\"tk\":[545,7,545,32],\"els\":[\"0:2385\",\"0:2383\"]},{\"tk\":[545,33,545,46],\"els\":[\"0:2385\",\"0:2383\"]},{\"tk\":[546,5,546,29],\"els\":[\"0:2385\"]},{\"tk\":[546,30,546,59],\"els\":[\"0:2385\"]},{\"tk\":[546,60,546,61],\"els\":[\"0:2385\"]},{\"tk\":[547,7,547,32],\"els\":[\"0:370\",\"0:2385\"]},{\"tk\":[547,33,547,38],\"els\":[\"0:370\",\"0:2385\"]},{\"tk\":[548,5,548,29],\"els\":[\"0:2385\"]},{\"tk\":[548,30,548,59],\"els\":[\"0:2385\"]},{\"tk\":[548,60,548,61],\"els\":[\"0:2385\"]},{\"tk\":[549,7,549,31],\"els\":[\"0:2385\"]},{\"tk\":[549,32,549,46],\"els\":[\"0:2385\"]},{\"tk\":[550,5,550,29],\"els\":[\"0:2385\"]},{\"tk\":[550,30,550,59],\"els\":[\"0:2385\"]},{\"tk\":[550,60,550,61],\"els\":[\"0:2385\"]},{\"tk\":[551,7,551,32],\"els\":[\"0:2387\",\"0:2385\"]},{\"tk\":[551,33,551,44],\"els\":[\"0:2387\",\"0:2385\"]},{\"tk\":[553,5,553,29],\"els\":[\"0:2385\"]},{\"tk\":[553,30,553,59],\"els\":[\"0:2385\"]},{\"tk\":[553,60,553,61],\"els\":[\"0:2385\"]},{\"tk\":[554,7,554,31],\"els\":[\"0:2382\"]},{\"tk\":[554,32,554,47],\"els\":[\"0:2382\"]},{\"tk\":[555,5,555,29],\"els\":[\"0:2385\"]},{\"tk\":[555,30,555,59],\"els\":[\"0:2385\"]},{\"tk\":[555,60,555,61],\"els\":[\"0:2385\"]},{\"tk\":[556,7,556,31],\"els\":[\"0:2382\"]},{\"tk\":[556,32,556,47],\"els\":[\"0:2382\"]},{\"tk\":[557,5,557,29],\"els\":[\"0:2385\"]},{\"tk\":[557,30,557,59],\"els\":[\"0:2385\"]},{\"tk\":[557,60,557,61],\"els\":[\"0:2385\"]},{\"tk\":[558,7,558,31],\"els\":[\"0:2382\"]},{\"tk\":[558,32,558,47],\"els\":[\"0:2382\"]},{\"tk\":[568,3,568,16],\"els\":[\"0:2434:2#out:1\"]},{\"tk\":[568,17,568,18],\"els\":[\"0:2434:2#out:1\",\"0:2434:2\"]},{\"tk\":[568,20,568,24],\"els\":[\"0:2433\"]},{\"tk\":[568,25,568,50],\"els\":[\"0:2433\",\"0:2432\"]},{\"tk\":[568,51,568,58],\"els\":[\"0:2433\",\"0:2432\"]},{\"tk\":[568,60,568,62],\"els\":[\"0:2434:2\"]},{\"tk\":[569,20,569,44],\"els\":[\"0:2434:2\",\"0:2434:3\"]},{\"tk\":[569,45,569,71],\"els\":[\"0:2434:2\",\"0:2434:3\"]},{\"tk\":[576,3,576,27],\"els\":[\"0:2467\"]},{\"tk\":[576,28,576,36],\"els\":[\"0:2467\"]},{\"tk\":[576,37,576,38],\"els\":[\"0:2467\",\"0:2575\"]},{\"tk\":[576,39,576,64],\"els\":[\"0:2467\",\"0:2469\"]},{\"tk\":[576,65,576,66],\"els\":[\"0:2467\",\"0:2469\"]},{\"tk\":[576,67,576,68],\"els\":[\"0:2467\"]},{\"tk\":[577,5,577,30],\"els\":[\"0:2467\",\"0:2470\"]},{\"tk\":[577,31,577,41],\"els\":[\"0:2467\",\"0:2470\"]},{\"tk\":[584,3,584,27],\"els\":[\"0:2471#out:1\"]},{\"tk\":[584,28,584,39],\"els\":[\"0:2471#out:1\"]},{\"tk\":[584,40,584,41],\"els\":[\"0:2471#out:1\",\"0:2471\"]},{\"tk\":[584,42,584,66],\"els\":[\"0:2475\"]},{\"tk\":[584,67,584,77],\"els\":[\"0:2475\"]},{\"tk\":[584,78,584,79],\"els\":[\"0:2471\"]},{\"tk\":[585,6,585,30],\"els\":[\"0:2474\"]},{\"tk\":[585,31,585,40],\"els\":[\"0:2474\"]},{\"tk\":[585,41,585,42],\"els\":[\"0:2471\"]},{\"tk\":[585,43,585,67],\"els\":[\"0:2467\"]},{\"tk\":[585,68,585,76],\"els\":[\"0:2467\"]},{\"tk\":[592,3,592,30],\"els\":[\"0:2571\",\"0:2476\"]},{\"tk\":[592,30,592,31],\"els\":[\"0:2571\",\"0:2476\"]},{\"tk\":[592,31,592,44],\"els\":[\"0:2571\",\"0:2476\"]},{\"tk\":[592,44,592,45],\"els\":[\"0:2571\",\"0:2476\"]},{\"tk\":[592,46,592,71],\"els\":[\"0:2571\",\"0:2476\",\"0:2469\"]},{\"tk\":[592,71,592,72],\"els\":[\"0:2571\",\"0:2476\"]},{\"tk\":[592,72,592,73],\"els\":[\"0:2571\",\"0:2476\",\"0:2469\"]},{\"tk\":[592,73,592,74],\"els\":[\"0:2571\",\"0:2476\"]},{\"tk\":[593,5,593,30],\"els\":[\"0:2571\",\"0:2476\",\"0:2470\"]},{\"tk\":[593,30,593,31],\"els\":[\"0:2571\",\"0:2476\"]},{\"tk\":[593,31,593,41],\"els\":[\"0:2571\",\"0:2476\",\"0:2470\"]},{\"tk\":[593,41,593,42],\"els\":[\"0:2571\",\"0:2476\"]},{\"tk\":[593,43,593,67],\"els\":[\"0:2571\",\"0:2476\"]},{\"tk\":[593,67,593,68],\"els\":[\"0:2571\",\"0:2476\"]},{\"tk\":[593,68,593,79],\"els\":[\"0:2571\",\"0:2476\"]},{\"tk\":[593,79,593,80],\"els\":[\"0:2571\",\"0:2476\"]},{\"tk\":[594,5,594,29],\"els\":[\"0:2571\",\"0:2476\"]},{\"tk\":[594,29,594,30],\"els\":[\"0:2571\",\"0:2476\"]},{\"tk\":[594,30,594,39],\"els\":[\"0:2571\",\"0:2476\"]},{\"tk\":[594,39,594,40],\"els\":[\"0:2571\",\"0:2476\"]},{\"tk\":[594,41,594,42],\"els\":[\"0:2571\",\"0:2476\"]},{\"tk\":[594,42,594,66],\"els\":[\"0:2571\",\"0:2476\"]},{\"tk\":[594,66,594,67],\"els\":[\"0:2571\",\"0:2476\"]},{\"tk\":[594,67,594,70],\"els\":[\"0:2571\",\"0:2476\"]},{\"tk\":[594,70,594,71],\"els\":[\"0:2571\",\"0:2476\"]},{\"tk\":[599,3,599,27],\"els\":[\"0:2269\"]},{\"tk\":[599,28,599,32],\"els\":[\"0:2269\"]},{\"tk\":[599,33,599,34],\"els\":[\"0:2269\"]},{\"tk\":[599,35,599,59],\"els\":[\"0:2277\"]},{\"tk\":[599,60,599,69],\"els\":[\"0:2277\"]},{\"tk\":[599,70,599,71],\"els\":[\"0:2269\"]},{\"tk\":[600,5,600,29],\"els\":[\"0:2269\"]},{\"tk\":[600,30,600,33],\"els\":[\"0:2269\"]},{\"tk\":[605,3,605,28],\"els\":[\"0:2265\"]},{\"tk\":[605,29,605,36],\"els\":[\"0:2265\"]},{\"tk\":[605,37,605,38],\"els\":[\"0:2265\",\"0:2253\"]},{\"tk\":[606,5,606,29],\"els\":[\"0:2265\"]},{\"tk\":[606,30,606,59],\"els\":[\"0:2265\"]},{\"tk\":[606,60,606,61],\"els\":[\"0:2265\"]},{\"tk\":[607,5,607,29],\"els\":[\"0:2265\"]},{\"tk\":[607,30,607,59],\"els\":[\"0:2265\"]},{\"tk\":[614,3,614,27],\"els\":[\"0:2266\"]},{\"tk\":[614,28,614,36],\"els\":[\"0:2266\"]},{\"tk\":[614,37,614,38],\"els\":[\"0:2266\"]},{\"tk\":[614,39,614,64],\"els\":[\"0:2265\"]},{\"tk\":[614,65,614,72],\"els\":[\"0:2265\"]},{\"tk\":[614,73,614,74],\"els\":[\"0:2267\"]},{\"tk\":[615,5,615,29],\"els\":[\"0:2267\"]},{\"tk\":[615,30,615,34],\"els\":[\"0:2267\"]},{\"tk\":[615,35,615,36],\"els\":[\"0:2267\"]},{\"tk\":[615,37,615,61],\"els\":[\"0:2282\"]},{\"tk\":[615,62,615,71],\"els\":[\"0:2282\"]},{\"tk\":[615,72,615,73],\"els\":[\"0:2266\"]},{\"tk\":[616,5,616,29],\"els\":[\"0:2266\"]},{\"tk\":[616,30,616,42],\"els\":[\"0:2266\"]},{\"tk\":[623,3,623,27],\"els\":[\"0:2255:4\"]},{\"tk\":[623,28,623,30],\"els\":[\"0:2255:4\"]},{\"tk\":[623,31,623,32],\"els\":[\"0:2255:4\"]},{\"tk\":[623,33,623,57],\"els\":[\"0:2255:4\"]},{\"tk\":[623,58,623,66],\"els\":[\"0:2255:4\"]},{\"tk\":[623,67,623,68],\"els\":[\"0:2255:4\"]},{\"tk\":[624,5,624,29],\"els\":[\"0:2255:4\"]},{\"tk\":[624,30,624,42],\"els\":[\"0:2255:4\"]},{\"tk\":[627,3,627,27],\"els\":[\"0:2252\"]},{\"tk\":[627,28,627,36],\"els\":[\"0:2252\"]},{\"tk\":[627,37,627,38],\"els\":[\"0:2252\"]},{\"tk\":[628,5,628,29],\"els\":[\"0:2252\"]},{\"tk\":[628,30,628,59],\"els\":[\"0:2252\"]},{\"tk\":[628,60,628,61],\"els\":[\"0:2252\"]},{\"tk\":[629,5,629,29],\"els\":[\"0:2252\"]},{\"tk\":[629,30,629,38],\"els\":[\"0:2252\"]},{\"tk\":[634,3,634,27],\"els\":[\"0:2810#out:1\"]},{\"tk\":[634,28,634,33],\"els\":[\"0:2810#out:1\"]},{\"tk\":[634,34,634,35],\"els\":[\"0:2810#out:1\",\"0:2810\"]},{\"tk\":[634,36,634,60],\"els\":[\"0:2810\"]},{\"tk\":[634,61,634,71],\"els\":[\"0:2810\"]},{\"tk\":[634,72,634,73],\"els\":[\"0:2810\"]},{\"tk\":[635,5,635,30],\"els\":[\"0:3632\"]},{\"tk\":[635,31,635,62],\"els\":[\"0:3632\"]},{\"tk\":[638,3,638,5],\"els\":[\"0:2260\"]},{\"tk\":[638,7,638,14],\"els\":[\"0:2260\"]},{\"tk\":[638,15,638,39],\"els\":[\"0:2260\"]},{\"tk\":[638,40,638,48],\"els\":[\"0:2260\"]},{\"tk\":[639,5,639,29],\"els\":[\"0:2260\"]},{\"tk\":[639,30,639,34],\"els\":[\"0:2260\"]},{\"tk\":[639,35,639,36],\"els\":[\"0:2260\"]},{\"tk\":[639,37,639,61],\"els\":[\"0:2260\"]},{\"tk\":[639,62,639,70],\"els\":[\"0:2260\"]},{\"tk\":[640,10,640,12],\"els\":[\"0:2260\"]},{\"tk\":[640,14,640,38],\"els\":[\"0:2260\"]},{\"tk\":[640,39,640,47],\"els\":[\"0:2260\"]},{\"tk\":[640,48,640,49],\"els\":[\"0:2260\"]},{\"tk\":[640,50,640,53],\"els\":[\"0:2260\"]},{\"tk\":[641,5,641,29],\"els\":[\"0:2260\"]},{\"tk\":[641,30,641,34],\"els\":[\"0:2260\"]},{\"tk\":[641,35,641,36],\"els\":[\"0:2260\"]},{\"tk\":[641,37,641,38],\"els\":[\"0:2260\"]},{\"tk\":[643,5,643,29],\"els\":[\"0:2260\"]},{\"tk\":[643,30,643,34],\"els\":[\"0:2260\"]},{\"tk\":[643,35,643,36],\"els\":[\"0:2260\"]},{\"tk\":[643,38,643,62],\"els\":[\"0:2260\"]},{\"tk\":[643,63,643,71],\"els\":[\"0:2260\"]},{\"tk\":[643,72,643,73],\"els\":[\"0:2260\"]},{\"tk\":[643,74,643,77],\"els\":[\"0:2260\"]},{\"tk\":[669,3,669,27],\"els\":[\"0:2848\",\"0:379\"]},{\"tk\":[669,28,669,43],\"els\":[\"0:2848\",\"0:379\"]},{\"tk\":[669,44,669,45],\"els\":[\"0:2848\"]},{\"tk\":[669,51,669,75],\"els\":[\"0:2255:3\"]},{\"tk\":[669,76,669,78],\"els\":[\"0:2255:3\"]},{\"tk\":[669,79,669,80],\"els\":[\"0:2255:3\"]},{\"tk\":[670,5,670,30],\"els\":[\"0:2255:3\",\"0:2255:5\"]},{\"tk\":[670,31,670,42],\"els\":[\"0:2255:3\",\"0:2255:5\"]},{\"tk\":[670,44,670,45],\"els\":[\"0:2251\"]},{\"tk\":[670,46,670,71],\"els\":[\"0:2251\",\"0:2431\"]},{\"tk\":[670,72,670,79],\"els\":[\"0:2251\",\"0:2431\"]},{\"tk\":[671,5,671,6],\"els\":[\"0:2251\"]},{\"tk\":[671,7,671,31],\"els\":[\"0:2258\"]},{\"tk\":[671,32,671,40],\"els\":[\"0:2258\"]},{\"tk\":[671,41,671,42],\"els\":[\"0:2258\"]},{\"tk\":[671,43,671,67],\"els\":[\"0:2258\"]},{\"tk\":[671,68,671,72],\"els\":[\"0:2258\"]},{\"tk\":[671,73,671,74],\"els\":[\"0:2258\"]},{\"tk\":[672,5,672,29],\"els\":[\"0:2282\"]},{\"tk\":[672,30,672,39],\"els\":[\"0:2282\"]},{\"tk\":[672,41,672,42],\"els\":[\"0:2251\"]},{\"tk\":[672,43,672,67],\"els\":[\"0:2259\"]},{\"tk\":[672,68,672,72],\"els\":[\"0:2259\"]},{\"tk\":[672,73,672,74],\"els\":[\"0:2259\"]},{\"tk\":[673,5,673,29],\"els\":[\"0:2283\"]},{\"tk\":[673,30,673,39],\"els\":[\"0:2283\"]},{\"tk\":[673,41,673,42],\"els\":[\"0:2251\"]},{\"tk\":[673,43,673,67],\"els\":[\"0:2256\"]},{\"tk\":[673,68,673,79],\"els\":[\"0:2256\"]},{\"tk\":[673,80,673,81],\"els\":[\"0:2256\"]},{\"tk\":[674,5,674,29],\"els\":[\"0:2256\"]},{\"tk\":[674,30,674,59],\"els\":[\"0:2256\"]},{\"tk\":[674,61,674,62],\"els\":[\"0:2257\"]},{\"tk\":[675,5,675,29],\"els\":[\"0:2257\"]},{\"tk\":[675,30,675,42],\"els\":[\"0:2257\"]},{\"tk\":[675,43,675,44],\"els\":[\"0:2848\"]},{\"tk\":[675,45,675,69],\"els\":[\"0:2848\"]},{\"tk\":[675,70,675,75],\"els\":[\"0:2848\"]},{\"tk\":[683,3,683,5],\"els\":[\"0:2683\"]},{\"tk\":[683,7,683,32],\"els\":[\"0:2683\",\"0:2613\"]},{\"tk\":[683,33,683,46],\"els\":[\"0:2683\",\"0:2613\"]},{\"tk\":[684,5,684,29],\"els\":[\"0:2683\"]},{\"tk\":[684,30,684,59],\"els\":[\"0:2683\"]},{\"tk\":[684,60,684,61],\"els\":[\"0:2683\"]},{\"tk\":[685,7,685,32],\"els\":[\"0:371\",\"0:2683\"]},{\"tk\":[685,33,685,37],\"els\":[\"0:371\",\"0:2683\"]},{\"tk\":[686,5,686,29],\"els\":[\"0:2683\"]},{\"tk\":[686,30,686,59],\"els\":[\"0:2683\"]},{\"tk\":[686,60,686,61],\"els\":[\"0:2683\"]},{\"tk\":[687,7,687,31],\"els\":[\"0:2683\"]},{\"tk\":[687,32,687,46],\"els\":[\"0:2683\"]},{\"tk\":[688,5,688,29],\"els\":[\"0:2683\"]},{\"tk\":[688,30,688,59],\"els\":[\"0:2683\"]},{\"tk\":[688,60,688,61],\"els\":[\"0:2683\"]},{\"tk\":[689,7,689,32],\"els\":[\"0:2614\",\"0:2683\"]},{\"tk\":[689,33,689,43],\"els\":[\"0:2614\",\"0:2683\"]},{\"tk\":[691,5,691,29],\"els\":[\"0:2683\"]},{\"tk\":[691,30,691,59],\"els\":[\"0:2683\"]},{\"tk\":[691,60,691,61],\"els\":[\"0:2683\"]},{\"tk\":[692,7,692,31],\"els\":[\"0:2612\"]},{\"tk\":[692,32,692,49],\"els\":[\"0:2612\"]},{\"tk\":[693,5,693,29],\"els\":[\"0:2683\"]},{\"tk\":[693,30,693,59],\"els\":[\"0:2683\"]},{\"tk\":[693,60,693,61],\"els\":[\"0:2683\"]},{\"tk\":[694,7,694,31],\"els\":[\"0:2612\"]},{\"tk\":[694,32,694,49],\"els\":[\"0:2612\"]},{\"tk\":[695,5,695,29],\"els\":[\"0:2683\"]},{\"tk\":[695,30,695,59],\"els\":[\"0:2683\"]},{\"tk\":[695,60,695,61],\"els\":[\"0:2683\"]},{\"tk\":[696,7,696,31],\"els\":[\"0:2612\"]},{\"tk\":[696,32,696,49],\"els\":[\"0:2612\"]},{\"tk\":[706,3,706,17],\"els\":[\"0:2640:2#out:1\"]},{\"tk\":[706,18,706,19],\"els\":[\"0:2640:2#out:1\",\"0:2640:2\"]},{\"tk\":[706,21,706,25],\"els\":[\"0:2637\"]},{\"tk\":[706,26,706,51],\"els\":[\"0:2637\",\"0:2643\"]},{\"tk\":[706,52,706,64],\"els\":[\"0:2637\",\"0:2643\"]},{\"tk\":[706,66,706,68],\"els\":[\"0:2640:2\"]},{\"tk\":[707,21,707,45],\"els\":[\"0:2640:2\",\"0:2640:3\"]},{\"tk\":[707,46,707,72],\"els\":[\"0:2640:2\",\"0:2640:3\"]},{\"tk\":[714,3,714,27],\"els\":[\"0:2638\"]},{\"tk\":[714,28,714,36],\"els\":[\"0:2638\"]},{\"tk\":[714,37,714,38],\"els\":[\"0:2638\",\"0:2657\"]},{\"tk\":[714,39,714,64],\"els\":[\"0:2638\",\"0:2642\"]},{\"tk\":[714,65,714,66],\"els\":[\"0:2638\",\"0:2642\"]},{\"tk\":[714,67,714,68],\"els\":[\"0:2638\"]},{\"tk\":[715,5,715,30],\"els\":[\"0:2638\",\"0:2644\"]},{\"tk\":[715,31,715,46],\"els\":[\"0:2638\",\"0:2644\"]},{\"tk\":[722,3,722,27],\"els\":[\"0:2647#out:1\"]},{\"tk\":[722,28,722,39],\"els\":[\"0:2647#out:1\"]},{\"tk\":[722,40,722,41],\"els\":[\"0:2647#out:1\",\"0:2647\"]},{\"tk\":[722,42,722,66],\"els\":[\"0:2652\"]},{\"tk\":[722,67,722,77],\"els\":[\"0:2652\"]},{\"tk\":[722,78,722,79],\"els\":[\"0:2647\"]},{\"tk\":[723,6,723,30],\"els\":[\"0:2651\"]},{\"tk\":[723,31,723,40],\"els\":[\"0:2651\"]},{\"tk\":[723,41,723,42],\"els\":[\"0:2647\"]},{\"tk\":[723,43,723,67],\"els\":[\"0:2638\"]},{\"tk\":[723,68,723,76],\"els\":[\"0:2638\"]},{\"tk\":[730,3,730,30],\"els\":[\"0:2648\",\"0:2679\"]},{\"tk\":[730,30,730,31],\"els\":[\"0:2648\",\"0:2679\"]},{\"tk\":[730,31,730,45],\"els\":[\"0:2648\",\"0:2679\"]},{\"tk\":[730,45,730,46],\"els\":[\"0:2648\",\"0:2679\"]},{\"tk\":[730,47,730,72],\"els\":[\"0:2648\",\"0:2679\",\"0:2642\"]},{\"tk\":[730,72,730,73],\"els\":[\"0:2648\",\"0:2679\"]},{\"tk\":[730,73,730,74],\"els\":[\"0:2648\",\"0:2679\",\"0:2642\"]},{\"tk\":[730,74,730,75],\"els\":[\"0:2648\",\"0:2679\"]},{\"tk\":[731,5,731,30],\"els\":[\"0:2648\",\"0:2679\",\"0:2644\"]},{\"tk\":[731,30,731,31],\"els\":[\"0:2648\",\"0:2679\"]},{\"tk\":[731,31,731,46],\"els\":[\"0:2648\",\"0:2679\",\"0:2644\"]},{\"tk\":[731,46,731,47],\"els\":[\"0:2648\",\"0:2679\"]},{\"tk\":[732,5,732,29],\"els\":[\"0:2648\",\"0:2679\"]},{\"tk\":[732,29,732,30],\"els\":[\"0:2648\",\"0:2679\"]},{\"tk\":[732,30,732,41],\"els\":[\"0:2648\",\"0:2679\"]},{\"tk\":[732,41,732,42],\"els\":[\"0:2648\",\"0:2679\"]},{\"tk\":[732,43,732,67],\"els\":[\"0:2648\",\"0:2679\"]},{\"tk\":[732,67,732,68],\"els\":[\"0:2648\",\"0:2679\"]},{\"tk\":[732,68,732,77],\"els\":[\"0:2648\",\"0:2679\"]},{\"tk\":[732,77,732,78],\"els\":[\"0:2648\",\"0:2679\"]},{\"tk\":[733,5,733,6],\"els\":[\"0:2648\",\"0:2679\"]},{\"tk\":[733,6,733,30],\"els\":[\"0:2648\",\"0:2679\"]},{\"tk\":[733,30,733,31],\"els\":[\"0:2648\",\"0:2679\"]},{\"tk\":[733,31,733,34],\"els\":[\"0:2648\",\"0:2679\"]},{\"tk\":[733,34,733,35],\"els\":[\"0:2648\",\"0:2679\"]},{\"tk\":[738,3,738,27],\"els\":[\"0:2639\"]},{\"tk\":[738,28,738,32],\"els\":[\"0:2639\"]},{\"tk\":[738,33,738,34],\"els\":[\"0:2639\"]},{\"tk\":[738,35,738,59],\"els\":[\"0:2653\"]},{\"tk\":[738,60,738,69],\"els\":[\"0:2653\"]},{\"tk\":[738,70,738,71],\"els\":[\"0:2639\"]},{\"tk\":[739,5,739,29],\"els\":[\"0:2639\"]},{\"tk\":[739,30,739,33],\"els\":[\"0:2639\"]},{\"tk\":[744,3,744,28],\"els\":[\"0:2633\"]},{\"tk\":[744,29,744,41],\"els\":[\"0:2633\"]},{\"tk\":[744,42,744,43],\"els\":[\"0:2633\",\"0:2611\"]},{\"tk\":[745,5,745,29],\"els\":[\"0:2633\"]},{\"tk\":[745,30,745,59],\"els\":[\"0:2633\"]},{\"tk\":[745,60,745,61],\"els\":[\"0:2633\"]},{\"tk\":[746,5,746,29],\"els\":[\"0:2633\"]},{\"tk\":[746,30,746,59],\"els\":[\"0:2633\"]},{\"tk\":[753,3,753,27],\"els\":[\"0:2634\"]},{\"tk\":[753,28,753,36],\"els\":[\"0:2634\"]},{\"tk\":[753,37,753,38],\"els\":[\"0:2634\"]},{\"tk\":[753,39,753,64],\"els\":[\"0:2633\"]},{\"tk\":[753,65,753,77],\"els\":[\"0:2633\"]},{\"tk\":[753,78,753,79],\"els\":[\"0:2635\"]},{\"tk\":[754,5,754,29],\"els\":[\"0:2635\"]},{\"tk\":[754,30,754,34],\"els\":[\"0:2635\"]},{\"tk\":[754,35,754,36],\"els\":[\"0:2635\"]},{\"tk\":[754,37,754,61],\"els\":[\"0:2684\"]},{\"tk\":[754,62,754,71],\"els\":[\"0:2684\"]},{\"tk\":[754,72,754,73],\"els\":[\"0:2634\"]},{\"tk\":[755,5,755,29],\"els\":[\"0:2634\"]},{\"tk\":[755,30,755,42],\"els\":[\"0:2634\"]},{\"tk\":[762,3,762,27],\"els\":[\"0:2617:4\"]},{\"tk\":[762,28,762,32],\"els\":[\"0:2617:4\"]},{\"tk\":[762,33,762,34],\"els\":[\"0:2617:4\"]},{\"tk\":[762,35,762,59],\"els\":[\"0:2617:4\"]},{\"tk\":[762,60,762,68],\"els\":[\"0:2617:4\"]},{\"tk\":[762,69,762,70],\"els\":[\"0:2617:4\"]},{\"tk\":[763,5,763,29],\"els\":[\"0:2617:4\"]},{\"tk\":[763,30,763,42],\"els\":[\"0:2617:4\"]},{\"tk\":[766,3,766,27],\"els\":[\"0:2610\"]},{\"tk\":[766,28,766,36],\"els\":[\"0:2610\"]},{\"tk\":[766,37,766,38],\"els\":[\"0:2610\"]},{\"tk\":[767,5,767,29],\"els\":[\"0:2610\"]},{\"tk\":[767,30,767,59],\"els\":[\"0:2610\"]},{\"tk\":[767,60,767,61],\"els\":[\"0:2610\"]},{\"tk\":[768,5,768,29],\"els\":[\"0:2610\"]},{\"tk\":[768,30,768,38],\"els\":[\"0:2610\"]},{\"tk\":[773,3,773,27],\"els\":[\"0:3112#out:1\"]},{\"tk\":[773,28,773,29],\"els\":[\"0:3112#out:1\"]},{\"tk\":[773,30,773,31],\"els\":[\"0:3112#out:1\",\"0:3112\"]},{\"tk\":[773,32,773,56],\"els\":[\"0:3112\"]},{\"tk\":[773,57,773,65],\"els\":[\"0:3112\"]},{\"tk\":[773,66,773,67],\"els\":[\"0:3112\"]},{\"tk\":[774,5,774,30],\"els\":[\"0:3521\"]},{\"tk\":[774,31,774,62],\"els\":[\"0:3521\"]},{\"tk\":[777,3,777,5],\"els\":[\"0:2623\"]},{\"tk\":[777,7,777,14],\"els\":[\"0:2623\"]},{\"tk\":[777,15,777,39],\"els\":[\"0:2623\"]},{\"tk\":[777,40,777,48],\"els\":[\"0:2623\"]},{\"tk\":[778,5,778,29],\"els\":[\"0:2623\"]},{\"tk\":[778,30,778,34],\"els\":[\"0:2623\"]},{\"tk\":[778,35,778,36],\"els\":[\"0:2623\"]},{\"tk\":[778,37,778,61],\"els\":[\"0:2623\"]},{\"tk\":[778,62,778,70],\"els\":[\"0:2623\"]},{\"tk\":[779,10,779,12],\"els\":[\"0:2623\"]},{\"tk\":[779,14,779,38],\"els\":[\"0:2623\"]},{\"tk\":[779,39,779,47],\"els\":[\"0:2623\"]},{\"tk\":[779,48,779,49],\"els\":[\"0:2623\"]},{\"tk\":[779,50,779,53],\"els\":[\"0:2623\"]},{\"tk\":[780,5,780,29],\"els\":[\"0:2623\"]},{\"tk\":[780,30,780,34],\"els\":[\"0:2623\"]},{\"tk\":[780,35,780,36],\"els\":[\"0:2623\"]},{\"tk\":[780,37,780,38],\"els\":[\"0:2623\"]},{\"tk\":[782,5,782,29],\"els\":[\"0:2623\"]},{\"tk\":[782,30,782,34],\"els\":[\"0:2623\"]},{\"tk\":[782,35,782,36],\"els\":[\"0:2623\"]},{\"tk\":[782,38,782,62],\"els\":[\"0:2623\"]},{\"tk\":[782,63,782,71],\"els\":[\"0:2623\"]},{\"tk\":[782,72,782,73],\"els\":[\"0:2623\"]},{\"tk\":[782,74,782,77],\"els\":[\"0:2623\"]},{\"tk\":[808,3,808,27],\"els\":[\"0:2804\",\"0:380\"]},{\"tk\":[808,28,808,43],\"els\":[\"0:2804\",\"0:380\"]},{\"tk\":[808,44,808,45],\"els\":[\"0:2804\"]},{\"tk\":[808,51,808,75],\"els\":[\"0:2617:3\"]},{\"tk\":[808,76,808,80],\"els\":[\"0:2617:3\"]},{\"tk\":[809,5,809,6],\"els\":[\"0:2617:3\"]},{\"tk\":[809,7,809,32],\"els\":[\"0:2617:3\",\"0:2617:5\"]},{\"tk\":[809,33,809,44],\"els\":[\"0:2617:3\",\"0:2617:5\"]},{\"tk\":[809,46,809,47],\"els\":[\"0:2609\"]},{\"tk\":[810,5,810,30],\"els\":[\"0:2609\",\"0:2615\"]},{\"tk\":[810,31,810,43],\"els\":[\"0:2609\",\"0:2615\"]},{\"tk\":[810,45,810,46],\"els\":[\"0:2609\"]},{\"tk\":[810,47,810,71],\"els\":[\"0:2621\"]},{\"tk\":[810,72,810,80],\"els\":[\"0:2621\"]},{\"tk\":[810,81,810,82],\"els\":[\"0:2621\"]},{\"tk\":[811,5,811,29],\"els\":[\"0:2621\"]},{\"tk\":[811,30,811,34],\"els\":[\"0:2621\"]},{\"tk\":[811,35,811,36],\"els\":[\"0:2621\"]},{\"tk\":[811,37,811,61],\"els\":[\"0:2684\"]},{\"tk\":[811,62,811,71],\"els\":[\"0:2684\"]},{\"tk\":[811,73,811,74],\"els\":[\"0:2609\"]},{\"tk\":[812,5,812,29],\"els\":[\"0:2622\"]},{\"tk\":[812,30,812,34],\"els\":[\"0:2622\"]},{\"tk\":[812,35,812,36],\"els\":[\"0:2622\"]},{\"tk\":[812,37,812,61],\"els\":[\"0:2685\"]},{\"tk\":[812,62,812,71],\"els\":[\"0:2685\"]},{\"tk\":[812,73,812,74],\"els\":[\"0:2609\"]},{\"tk\":[813,5,813,29],\"els\":[\"0:2618\"]},{\"tk\":[813,30,813,41],\"els\":[\"0:2618\"]},{\"tk\":[813,42,813,43],\"els\":[\"0:2618\"]},{\"tk\":[814,5,814,29],\"els\":[\"0:2618\"]},{\"tk\":[814,30,814,59],\"els\":[\"0:2618\"]},{\"tk\":[814,61,814,62],\"els\":[\"0:3111\"]},{\"tk\":[815,5,815,29],\"els\":[\"0:3111\"]},{\"tk\":[815,30,815,36],\"els\":[\"0:3111\"]},{\"tk\":[815,37,815,38],\"els\":[\"0:2804\"]},{\"tk\":[815,39,815,63],\"els\":[\"0:2804\"]},{\"tk\":[815,64,815,65],\"els\":[\"0:2804\"]},{\"tk\":[818,3,818,27],\"els\":[\"0:2728#out:1\"]},{\"tk\":[818,28,818,42],\"els\":[\"0:2728#out:1\"]},{\"tk\":[818,43,818,44],\"els\":[\"0:2728#out:1\",\"0:2728\"]},{\"tk\":[819,5,819,30],\"els\":[\"0:2728\"]},{\"tk\":[819,31,819,45],\"els\":[\"0:2728\"]},{\"tk\":[829,3,829,22],\"els\":[\"0:2752#out:1\"]},{\"tk\":[829,23,829,24],\"els\":[\"0:2752\"]},{\"tk\":[829,27,829,31],\"els\":[\"0:2738\"]},{\"tk\":[829,32,829,57],\"els\":[\"0:2738\",\"0:2747\"]},{\"tk\":[829,58,829,69],\"els\":[\"0:2738\",\"0:2747\"]},{\"tk\":[829,71,829,73],\"els\":[\"0:2743:2\"]},{\"tk\":[830,5,830,29],\"els\":[\"0:2743:2\",\"0:2743:3\"]},{\"tk\":[830,30,830,54],\"els\":[\"0:2743:2\",\"0:2743:3\"]},{\"tk\":[830,56,830,58],\"els\":[\"0:2752\"]},{\"tk\":[831,36,831,38],\"els\":[\"0:2742:2\"]},{\"tk\":[832,6,832,30],\"els\":[\"0:2742:2\",\"0:2742:3\"]},{\"tk\":[832,31,832,58],\"els\":[\"0:2742:2\",\"0:2742:3\"]},{\"tk\":[837,3,837,5],\"els\":[\"0:2755\",\"0:2754\"]},{\"tk\":[837,7,837,26],\"els\":[\"0:2752#out:1\"]},{\"tk\":[837,27,837,29],\"els\":[\"0:2755\",\"0:2754\"]},{\"tk\":[837,31,837,61],\"els\":[\"0:2755\",\"0:2754\"]},{\"tk\":[837,62,837,80],\"els\":[\"0:2755\",\"0:2754\"]},{\"tk\":[838,8,838,10],\"els\":[\"0:2755\",\"0:2754\"]},{\"tk\":[838,11,838,20],\"els\":[\"0:2755\",\"0:2754\"]},{\"tk\":[842,5,842,30],\"els\":[\"0:2757\",\"0:2755\",\"0:2754\"]},{\"tk\":[842,31,842,45],\"els\":[\"0:2757\",\"0:2755\",\"0:2754\"]},{\"tk\":[842,46,842,47],\"els\":[\"0:2757\",\"0:2755\",\"0:2754\"]},{\"tk\":[842,48,842,73],\"els\":[\"0:2757\",\"0:2755\",\"0:2754\",\"0:2756\"]},{\"tk\":[842,74,842,75],\"els\":[\"0:2757\",\"0:2755\",\"0:2754\",\"0:2756\"]},{\"tk\":[843,5,843,30],\"els\":[\"0:2755\",\"0:2754\"]},{\"tk\":[843,31,843,52],\"els\":[\"0:2755\",\"0:2754\"]},{\"tk\":[843,53,843,54],\"els\":[\"0:2755\",\"0:2754\"]},{\"tk\":[843,55,843,56],\"els\":[\"0:2755\",\"0:2754\"]},{\"tk\":[846,3,846,33],\"els\":[\"0:2755\",\"0:2754\"]},{\"tk\":[846,34,846,52],\"els\":[\"0:2755\",\"0:2754\"]},{\"tk\":[846,53,846,54],\"els\":[\"0:2755\",\"0:2754\"]},{\"tk\":[846,55,846,74],\"els\":[\"0:2752#out:1\"]},{\"tk\":[850,3,850,27],\"els\":[\"0:2478#out:1\"]},{\"tk\":[850,28,850,44],\"els\":[\"0:2478#out:1\"]},{\"tk\":[850,45,850,46],\"els\":[\"0:2478#out:1\",\"0:2478\"]},{\"tk\":[851,5,851,30],\"els\":[\"0:2478\"]},{\"tk\":[851,31,851,41],\"els\":[\"0:2478\"]},{\"tk\":[861,3,861,22],\"els\":[\"0:2752#out:1\"]},{\"tk\":[861,23,861,24],\"els\":[\"0:2578\"]},{\"tk\":[861,27,861,31],\"els\":[\"0:2443\"]},{\"tk\":[861,32,861,57],\"els\":[\"0:2443\",\"0:2445\"]},{\"tk\":[861,58,861,65],\"els\":[\"0:2443\",\"0:2445\"]},{\"tk\":[861,67,861,69],\"els\":[\"0:2444:2\"]},{\"tk\":[862,5,862,29],\"els\":[\"0:2444:2\",\"0:2444:3\"]},{\"tk\":[862,30,862,56],\"els\":[\"0:2444:2\",\"0:2444:3\"]},{\"tk\":[862,58,862,60],\"els\":[\"0:2578\"]},{\"tk\":[863,40,863,42],\"els\":[\"0:2579:2\"]},{\"tk\":[864,6,864,30],\"els\":[\"0:2579:2\",\"0:2579:3\"]},{\"tk\":[864,31,864,57],\"els\":[\"0:2579:2\",\"0:2579:3\"]},{\"tk\":[869,3,869,5],\"els\":[\"0:2442\",\"0:2441\"]},{\"tk\":[869,7,869,26],\"els\":[\"0:2752#out:1\"]},{\"tk\":[869,27,869,29],\"els\":[\"0:2442\",\"0:2441\"]},{\"tk\":[870,8,870,38],\"els\":[\"0:2442\",\"0:2441\"]},{\"tk\":[870,39,870,59],\"els\":[\"0:2442\",\"0:2441\"]},{\"tk\":[870,60,870,62],\"els\":[\"0:2442\",\"0:2441\"]},{\"tk\":[870,63,870,72],\"els\":[\"0:2442\",\"0:2441\"]},{\"tk\":[874,5,874,30],\"els\":[\"0:2437\",\"0:2442\",\"0:2441\"]},{\"tk\":[874,31,874,41],\"els\":[\"0:2437\",\"0:2442\",\"0:2441\"]},{\"tk\":[874,42,874,43],\"els\":[\"0:2437\",\"0:2442\",\"0:2441\"]},{\"tk\":[874,44,874,69],\"els\":[\"0:2437\",\"0:2442\",\"0:2441\",\"0:2435\"]},{\"tk\":[874,70,874,71],\"els\":[\"0:2437\",\"0:2442\",\"0:2441\",\"0:2435\"]},{\"tk\":[875,5,875,30],\"els\":[\"0:2442\",\"0:2441\"]},{\"tk\":[875,31,875,54],\"els\":[\"0:2442\",\"0:2441\"]},{\"tk\":[875,55,875,56],\"els\":[\"0:2442\",\"0:2441\"]},{\"tk\":[875,57,875,58],\"els\":[\"0:2442\",\"0:2441\"]},{\"tk\":[878,3,878,33],\"els\":[\"0:2442\",\"0:2441\"]},{\"tk\":[878,34,878,54],\"els\":[\"0:2442\",\"0:2441\"]},{\"tk\":[878,55,878,56],\"els\":[\"0:2442\",\"0:2441\"]},{\"tk\":[878,57,878,76],\"els\":[\"0:2752#out:1\"]},{\"tk\":[882,3,882,27],\"els\":[\"0:2645#out:1\"]},{\"tk\":[882,28,882,44],\"els\":[\"0:2645#out:1\"]},{\"tk\":[882,45,882,46],\"els\":[\"0:2645#out:1\",\"0:2645\"]},{\"tk\":[883,5,883,30],\"els\":[\"0:2645\"]},{\"tk\":[883,31,883,46],\"els\":[\"0:2645\"]},{\"tk\":[893,3,893,22],\"els\":[\"0:2752#out:1\"]},{\"tk\":[893,23,893,24],\"els\":[\"0:2669\"]},{\"tk\":[893,27,893,31],\"els\":[\"0:2655\"]},{\"tk\":[893,32,893,57],\"els\":[\"0:2655\",\"0:2664\"]},{\"tk\":[893,58,893,70],\"els\":[\"0:2655\",\"0:2664\"]},{\"tk\":[893,72,893,74],\"els\":[\"0:2660:2\"]},{\"tk\":[894,5,894,29],\"els\":[\"0:2660:2\",\"0:2660:3\"]},{\"tk\":[894,30,894,56],\"els\":[\"0:2660:2\",\"0:2660:3\"]},{\"tk\":[894,58,894,60],\"els\":[\"0:2669\"]},{\"tk\":[895,40,895,42],\"els\":[\"0:2659:2\"]},{\"tk\":[896,6,896,30],\"els\":[\"0:2659:2\",\"0:2659:3\"]},{\"tk\":[896,31,896,57],\"els\":[\"0:2659:2\",\"0:2659:3\"]},{\"tk\":[901,3,901,5],\"els\":[\"0:2672\",\"0:2671\"]},{\"tk\":[901,7,901,26],\"els\":[\"0:2752#out:1\"]},{\"tk\":[901,27,901,29],\"els\":[\"0:2672\",\"0:2671\"]},{\"tk\":[902,8,902,38],\"els\":[\"0:2672\",\"0:2671\"]},{\"tk\":[902,39,902,59],\"els\":[\"0:2672\",\"0:2671\"]},{\"tk\":[902,60,902,62],\"els\":[\"0:2672\",\"0:2671\"]},{\"tk\":[902,63,902,72],\"els\":[\"0:2672\",\"0:2671\"]},{\"tk\":[906,5,906,30],\"els\":[\"0:2674\",\"0:2672\",\"0:2671\"]},{\"tk\":[906,31,906,46],\"els\":[\"0:2674\",\"0:2672\",\"0:2671\"]},{\"tk\":[906,47,906,48],\"els\":[\"0:2674\",\"0:2672\",\"0:2671\"]},{\"tk\":[906,49,906,74],\"els\":[\"0:2674\",\"0:2672\",\"0:2671\",\"0:2673\"]},{\"tk\":[906,75,906,76],\"els\":[\"0:2674\",\"0:2672\",\"0:2671\",\"0:2673\"]},{\"tk\":[907,5,907,30],\"els\":[\"0:2672\",\"0:2671\"]},{\"tk\":[907,31,907,54],\"els\":[\"0:2672\",\"0:2671\"]},{\"tk\":[907,55,907,56],\"els\":[\"0:2672\",\"0:2671\"]},{\"tk\":[907,57,907,58],\"els\":[\"0:2672\",\"0:2671\"]},{\"tk\":[910,3,910,33],\"els\":[\"0:2672\",\"0:2671\"]},{\"tk\":[910,34,910,54],\"els\":[\"0:2672\",\"0:2671\"]},{\"tk\":[910,55,910,56],\"els\":[\"0:2672\",\"0:2671\"]},{\"tk\":[910,57,910,76],\"els\":[\"0:2752#out:1\"]},{\"tk\":[917,3,917,27],\"els\":[\"0:3291#out:1\"]},{\"tk\":[917,28,917,38],\"els\":[\"0:3291#out:1\"]},{\"tk\":[917,39,917,40],\"els\":[\"0:3291#out:1\",\"0:3291\"]},{\"tk\":[917,41,917,65],\"els\":[\"0:3291\"]},{\"tk\":[917,66,917,78],\"els\":[\"0:3291\"]},{\"tk\":[917,79,917,80],\"els\":[\"0:3291\"]},{\"tk\":[918,5,918,30],\"els\":[\"0:3278\"]},{\"tk\":[918,31,918,60],\"els\":[\"0:3278\"]},{\"tk\":[929,3,929,5],\"els\":[\"0:3472\"]},{\"tk\":[929,7,929,32],\"els\":[\"0:3472\",\"0:3470\"]},{\"tk\":[929,33,929,46],\"els\":[\"0:3472\",\"0:3470\"]},{\"tk\":[930,5,930,29],\"els\":[\"0:3472\"]},{\"tk\":[930,30,930,59],\"els\":[\"0:3472\"]},{\"tk\":[930,60,930,61],\"els\":[\"0:3472\"]},{\"tk\":[931,7,931,31],\"els\":[\"0:3466\"]},{\"tk\":[931,32,931,39],\"els\":[\"0:3466\"]},{\"tk\":[931,40,931,41],\"els\":[\"0:3466\"]},{\"tk\":[931,42,931,66],\"els\":[\"0:3466\"]},{\"tk\":[931,67,931,71],\"els\":[\"0:3466\"]},{\"tk\":[932,5,932,29],\"els\":[\"0:3472\"]},{\"tk\":[932,30,932,59],\"els\":[\"0:3472\"]},{\"tk\":[932,60,932,61],\"els\":[\"0:3472\"]},{\"tk\":[933,7,933,31],\"els\":[\"0:3476\"]},{\"tk\":[933,32,933,39],\"els\":[\"0:3476\"]},{\"tk\":[933,40,933,41],\"els\":[\"0:3476\"]},{\"tk\":[933,42,933,67],\"els\":[\"0:3476\",\"0:3469\"]},{\"tk\":[933,68,933,77],\"els\":[\"0:3476\",\"0:3469\"]},{\"tk\":[934,5,934,29],\"els\":[\"0:3472\"]},{\"tk\":[934,30,934,59],\"els\":[\"0:3472\"]},{\"tk\":[934,60,934,61],\"els\":[\"0:3472\"]},{\"tk\":[935,7,935,32],\"els\":[\"0:3473\",\"0:3468\"]},{\"tk\":[935,33,935,36],\"els\":[\"0:3473\",\"0:3468\"]},{\"tk\":[937,5,937,29],\"els\":[\"0:3472\"]},{\"tk\":[937,30,937,59],\"els\":[\"0:3472\"]},{\"tk\":[937,60,937,61],\"els\":[\"0:3472\"]},{\"tk\":[938,7,938,31],\"els\":[\"0:3467\"]},{\"tk\":[938,32,938,49],\"els\":[\"0:3467\"]},{\"tk\":[939,5,939,29],\"els\":[\"0:3472\"]},{\"tk\":[939,30,939,59],\"els\":[\"0:3472\"]},{\"tk\":[939,60,939,61],\"els\":[\"0:3472\"]},{\"tk\":[940,7,940,31],\"els\":[\"0:3467\"]},{\"tk\":[940,32,940,49],\"els\":[\"0:3467\"]},{\"tk\":[941,5,941,29],\"els\":[\"0:3472\"]},{\"tk\":[941,30,941,59],\"els\":[\"0:3472\"]},{\"tk\":[941,60,941,61],\"els\":[\"0:3472\"]},{\"tk\":[942,7,942,31],\"els\":[\"0:3467\"]},{\"tk\":[942,32,942,49],\"els\":[\"0:3467\"]},{\"tk\":[950,3,950,27],\"els\":[\"0:3247\"]},{\"tk\":[950,28,950,32],\"els\":[\"0:3247\"]},{\"tk\":[950,33,950,34],\"els\":[\"0:3247\"]},{\"tk\":[951,5,951,29],\"els\":[\"0:3247\"]},{\"tk\":[951,30,951,59],\"els\":[\"0:3247\"]},{\"tk\":[951,60,951,61],\"els\":[\"0:3247\"]},{\"tk\":[952,5,952,30],\"els\":[\"0:3278\"]},{\"tk\":[952,31,952,60],\"els\":[\"0:3278\"]},{\"tk\":[959,3,959,27],\"els\":[\"0:3242\"]},{\"tk\":[959,28,959,32],\"els\":[\"0:3242\"]},{\"tk\":[959,33,959,34],\"els\":[\"0:3242\",\"0:3243\",\"0:3244\",\"0:3245\"]},{\"tk\":[959,35,959,39],\"els\":[\"0:3242\"]},{\"tk\":[959,40,959,64],\"els\":[\"0:3242\"]},{\"tk\":[959,65,959,69],\"els\":[\"0:3242\"]},{\"tk\":[966,3,966,27],\"els\":[\"0:3268\"]},{\"tk\":[966,28,966,37],\"els\":[\"0:3268\"]},{\"tk\":[966,38,966,39],\"els\":[\"0:3268\",\"0:3251\",\"0:3256\"]},{\"tk\":[967,5,967,29],\"els\":[\"0:3271\"]},{\"tk\":[967,30,967,47],\"els\":[\"0:3271\"]},{\"tk\":[967,48,967,49],\"els\":[\"0:3268\"]},{\"tk\":[967,50,967,74],\"els\":[\"0:3268\"]},{\"tk\":[967,75,967,79],\"els\":[\"0:3268\"]},{\"tk\":[974,3,974,9],\"els\":[\"0:3267\"]},{\"tk\":[974,10,974,11],\"els\":[\"0:3267\",\"0:3250\",\"0:3255\"]},{\"tk\":[974,12,974,36],\"els\":[\"0:3267\"]},{\"tk\":[974,37,974,41],\"els\":[\"0:3267\"]},{\"tk\":[974,42,974,43],\"els\":[\"0:3267\"]},{\"tk\":[975,5,975,29],\"els\":[\"0:3271\"]},{\"tk\":[975,30,975,47],\"els\":[\"0:3271\"]},{\"tk\":[980,3,980,5],\"els\":[\"0:3308\"]},{\"tk\":[980,7,980,31],\"els\":[\"0:3268\"]},{\"tk\":[980,32,980,41],\"els\":[\"0:3268\"]},{\"tk\":[980,42,980,43],\"els\":[\"0:3308\"]},{\"tk\":[981,7,981,31],\"els\":[\"0:3308\"]},{\"tk\":[981,32,981,53],\"els\":[\"0:3308\"]},{\"tk\":[982,5,982,29],\"els\":[\"0:3308\"]},{\"tk\":[982,30,982,40],\"els\":[\"0:3308\"]},{\"tk\":[982,41,982,42],\"els\":[\"0:3308\"]},{\"tk\":[983,7,983,31],\"els\":[\"0:3308\"]},{\"tk\":[983,32,983,53],\"els\":[\"0:3308\"]},{\"tk\":[984,10,984,12],\"els\":[\"0:3308\"]},{\"tk\":[984,14,984,38],\"els\":[\"0:3268\"]},{\"tk\":[984,39,984,48],\"els\":[\"0:3268\"]},{\"tk\":[984,49,984,50],\"els\":[\"0:3308\"]},{\"tk\":[985,14,985,38],\"els\":[\"0:3308\"]},{\"tk\":[985,39,985,60],\"els\":[\"0:3308\"]},{\"tk\":[986,5,986,29],\"els\":[\"0:3308\"]},{\"tk\":[986,30,986,40],\"els\":[\"0:3308\"]},{\"tk\":[986,41,986,42],\"els\":[\"0:3308\"]},{\"tk\":[987,7,987,31],\"els\":[\"0:3308\"]},{\"tk\":[987,32,987,53],\"els\":[\"0:3308\"]},{\"tk\":[989,5,989,29],\"els\":[\"0:3308\"]},{\"tk\":[989,30,989,40],\"els\":[\"0:3308\"]},{\"tk\":[989,41,989,42],\"els\":[\"0:3308\"]},{\"tk\":[989,43,989,67],\"els\":[\"0:3268\"]},{\"tk\":[989,68,989,77],\"els\":[\"0:3268\"]},{\"tk\":[997,3,997,5],\"els\":[\"0:3309\"]},{\"tk\":[997,7,997,13],\"els\":[\"0:3267\"]},{\"tk\":[997,14,997,15],\"els\":[\"0:3309\"]},{\"tk\":[997,16,997,40],\"els\":[\"0:3309\"]},{\"tk\":[997,41,997,62],\"els\":[\"0:3309\"]},{\"tk\":[998,5,998,29],\"els\":[\"0:3309\"]},{\"tk\":[998,30,998,40],\"els\":[\"0:3309\"]},{\"tk\":[998,41,998,42],\"els\":[\"0:3309\"]},{\"tk\":[999,7,999,31],\"els\":[\"0:3309\"]},{\"tk\":[999,32,999,53],\"els\":[\"0:3309\"]},{\"tk\":[1000,10,1000,12],\"els\":[\"0:3309\"]},{\"tk\":[1000,14,1000,20],\"els\":[\"0:3267\"]},{\"tk\":[1000,21,1000,22],\"els\":[\"0:3309\"]},{\"tk\":[1000,23,1000,47],\"els\":[\"0:3309\"]},{\"tk\":[1000,48,1000,69],\"els\":[\"0:3309\"]},{\"tk\":[1001,5,1001,29],\"els\":[\"0:3309\"]},{\"tk\":[1001,30,1001,40],\"els\":[\"0:3309\"]},{\"tk\":[1001,41,1001,42],\"els\":[\"0:3309\"]},{\"tk\":[1002,7,1002,31],\"els\":[\"0:3309\"]},{\"tk\":[1002,32,1002,53],\"els\":[\"0:3309\"]},{\"tk\":[1004,5,1004,29],\"els\":[\"0:3309\"]},{\"tk\":[1004,30,1004,40],\"els\":[\"0:3309\"]},{\"tk\":[1004,41,1004,42],\"els\":[\"0:3309\"]},{\"tk\":[1004,43,1004,49],\"els\":[\"0:3267\"]},{\"tk\":[1012,3,1012,27],\"els\":[\"0:3289\"]},{\"tk\":[1012,28,1012,38],\"els\":[\"0:3289\"]},{\"tk\":[1012,39,1012,40],\"els\":[\"0:3289\"]},{\"tk\":[1012,42,1012,66],\"els\":[\"0:3269\"]},{\"tk\":[1012,67,1012,77],\"els\":[\"0:3269\"]},{\"tk\":[1012,78,1012,79],\"els\":[\"0:3269\"]},{\"tk\":[1013,5,1013,29],\"els\":[\"0:3269\"]},{\"tk\":[1013,30,1013,40],\"els\":[\"0:3269\"]},{\"tk\":[1013,42,1013,43],\"els\":[\"0:3289\"]},{\"tk\":[1013,44,1013,68],\"els\":[\"0:3289\"]},{\"tk\":[1013,69,1013,81],\"els\":[\"0:3289\"]},{\"tk\":[1018,3,1018,5],\"els\":[\"0:3282\"]},{\"tk\":[1018,7,1018,31],\"els\":[\"0:3271\"]},{\"tk\":[1018,32,1018,49],\"els\":[\"0:3271\"]},{\"tk\":[1018,50,1018,51],\"els\":[\"0:3282\"]},{\"tk\":[1018,52,1018,55],\"els\":[\"0:3282\"]},{\"tk\":[1019,5,1019,29],\"els\":[\"0:3282\"]},{\"tk\":[1019,30,1019,34],\"els\":[\"0:3282\"]},{\"tk\":[1019,35,1019,36],\"els\":[\"0:3282\"]},{\"tk\":[1019,37,1019,38],\"els\":[\"0:3282\"]},{\"tk\":[1019,38,1019,49],\"els\":[\"0:3282\"]},{\"tk\":[1020,7,1020,8],\"els\":[\"0:3282\"]},{\"tk\":[1020,8,1020,9],\"els\":[\"0:3282\"]},{\"tk\":[1020,9,1020,33],\"els\":[\"0:3282\",\"0:3271\"]},{\"tk\":[1020,33,1020,34],\"els\":[\"0:3282\"]},{\"tk\":[1020,34,1020,51],\"els\":[\"0:3282\",\"0:3271\"]},{\"tk\":[1020,51,1020,52],\"els\":[\"0:3282\"]},{\"tk\":[1020,53,1020,54],\"els\":[\"0:3282\"]},{\"tk\":[1020,54,1020,57],\"els\":[\"0:3282\"]},{\"tk\":[1020,57,1020,58],\"els\":[\"0:3282\"]},{\"tk\":[1022,5,1022,29],\"els\":[\"0:3282\"]},{\"tk\":[1022,30,1022,34],\"els\":[\"0:3282\"]},{\"tk\":[1022,35,1022,36],\"els\":[\"0:3282\"]},{\"tk\":[1022,37,1022,48],\"els\":[\"0:3282\",\"0:3271\"]},{\"tk\":[1023,7,1023,8],\"els\":[\"0:3282\",\"0:3271\"]},{\"tk\":[1023,8,1023,32],\"els\":[\"0:3282\",\"0:3271\"]},{\"tk\":[1023,32,1023,33],\"els\":[\"0:3282\",\"0:3271\"]},{\"tk\":[1023,33,1023,50],\"els\":[\"0:3282\",\"0:3271\"]},{\"tk\":[1023,50,1023,51],\"els\":[\"0:3282\",\"0:3271\"]},{\"tk\":[1023,52,1023,53],\"els\":[\"0:3282\",\"0:3271\"]},{\"tk\":[1023,53,1023,56],\"els\":[\"0:3282\",\"0:3271\"]},{\"tk\":[1023,56,1023,57],\"els\":[\"0:3282\",\"0:3271\"]},{\"tk\":[1029,3,1029,27],\"els\":[\"0:3299\"]},{\"tk\":[1029,28,1029,32],\"els\":[\"0:3299\"]},{\"tk\":[1029,33,1029,34],\"els\":[\"0:3299\"]},{\"tk\":[1029,35,1029,59],\"els\":[\"0:3299\"]},{\"tk\":[1029,60,1029,64],\"els\":[\"0:3299\"]},{\"tk\":[1029,65,1029,66],\"els\":[\"0:3299\"]},{\"tk\":[1030,5,1030,29],\"els\":[\"0:3299\"]},{\"tk\":[1030,30,1030,40],\"els\":[\"0:3299\"]},{\"tk\":[1030,41,1030,42],\"els\":[\"0:3299\"]},{\"tk\":[1030,43,1030,67],\"els\":[\"0:3299\"]},{\"tk\":[1030,68,1030,72],\"els\":[\"0:3299\"]},{\"tk\":[1033,3,1033,5],\"els\":[\"0:3319\"]},{\"tk\":[1033,7,1033,31],\"els\":[\"0:3319\"]},{\"tk\":[1033,32,1033,36],\"els\":[\"0:3319\"]},{\"tk\":[1033,37,1033,38],\"els\":[\"0:3319\"]},{\"tk\":[1034,7,1034,31],\"els\":[\"0:3319\"]},{\"tk\":[1034,32,1034,52],\"els\":[\"0:3319\"]},{\"tk\":[1035,5,1035,29],\"els\":[\"0:3319\"]},{\"tk\":[1035,30,1035,40],\"els\":[\"0:3319\"]},{\"tk\":[1035,41,1035,42],\"els\":[\"0:3319\"]},{\"tk\":[1036,7,1036,31],\"els\":[\"0:3319\"]},{\"tk\":[1036,32,1036,52],\"els\":[\"0:3319\"]},{\"tk\":[1037,10,1037,12],\"els\":[\"0:3319\"]},{\"tk\":[1037,14,1037,38],\"els\":[\"0:3319\"]},{\"tk\":[1037,39,1037,43],\"els\":[\"0:3319\"]},{\"tk\":[1037,44,1037,45],\"els\":[\"0:3319\"]},{\"tk\":[1038,14,1038,38],\"els\":[\"0:3319\"]},{\"tk\":[1038,39,1038,59],\"els\":[\"0:3319\"]},{\"tk\":[1039,5,1039,29],\"els\":[\"0:3319\"]},{\"tk\":[1039,30,1039,40],\"els\":[\"0:3319\"]},{\"tk\":[1039,41,1039,42],\"els\":[\"0:3319\"]},{\"tk\":[1040,7,1040,31],\"els\":[\"0:3319\"]},{\"tk\":[1040,32,1040,52],\"els\":[\"0:3319\"]},{\"tk\":[1042,5,1042,29],\"els\":[\"0:3319\"]},{\"tk\":[1042,30,1042,40],\"els\":[\"0:3319\"]},{\"tk\":[1042,41,1042,42],\"els\":[\"0:3319\"]},{\"tk\":[1042,43,1042,67],\"els\":[\"0:3319\"]},{\"tk\":[1042,68,1042,72],\"els\":[\"0:3319\"]},{\"tk\":[1053,3,1053,27],\"els\":[\"0:3300\"]},{\"tk\":[1053,28,1053,36],\"els\":[\"0:3300\"]},{\"tk\":[1053,37,1053,38],\"els\":[\"0:3300\"]},{\"tk\":[1053,39,1053,50],\"els\":[\"0:3283\",\"0:3242\"]},{\"tk\":[1053,50,1053,51],\"els\":[\"0:3283\",\"0:3242\"]},{\"tk\":[1053,51,1053,75],\"els\":[\"0:3283\",\"0:3242\"]},{\"tk\":[1053,75,1053,76],\"els\":[\"0:3283\",\"0:3242\"]},{\"tk\":[1053,76,1053,80],\"els\":[\"0:3283\",\"0:3242\"]},{\"tk\":[1053,80,1053,81],\"els\":[\"0:3283\",\"0:3242\"]},{\"tk\":[1054,5,1054,8],\"els\":[\"0:3283\",\"0:3242\"]},{\"tk\":[1054,8,1054,9],\"els\":[\"0:3283\",\"0:3242\"]},{\"tk\":[1054,10,1054,11],\"els\":[\"0:3300\"]},{\"tk\":[1054,12,1054,36],\"els\":[\"0:3300\"]},{\"tk\":[1054,37,1054,47],\"els\":[\"0:3300\"]},{\"tk\":[1054,48,1054,49],\"els\":[\"0:3300\"]},{\"tk\":[1055,6,1055,30],\"els\":[\"0:3272\"]},{\"tk\":[1055,31,1055,46],\"els\":[\"0:3272\"]},{\"tk\":[1055,47,1055,48],\"els\":[\"0:3248\"]},{\"tk\":[1056,6,1056,30],\"els\":[\"0:3248\"]},{\"tk\":[1056,31,1056,41],\"els\":[\"0:3248\"]},{\"tk\":[1059,3,1059,5],\"els\":[\"0:3311\"]},{\"tk\":[1059,42,1059,43],\"els\":[\"0:3311\"]},{\"tk\":[1060,7,1060,31],\"els\":[\"0:3311\"]},{\"tk\":[1060,32,1060,53],\"els\":[\"0:3311\"]},{\"tk\":[1061,5,1061,29],\"els\":[\"0:3311\"]},{\"tk\":[1061,30,1061,40],\"els\":[\"0:3311\"]},{\"tk\":[1061,41,1061,42],\"els\":[\"0:3311\"]},{\"tk\":[1062,7,1062,31],\"els\":[\"0:3311\"]},{\"tk\":[1062,32,1062,53],\"els\":[\"0:3311\"]},{\"tk\":[1063,10,1063,12],\"els\":[\"0:3311\"]},{\"tk\":[1063,49,1063,50],\"els\":[\"0:3311\"]},{\"tk\":[1064,14,1064,38],\"els\":[\"0:3311\"]},{\"tk\":[1064,39,1064,60],\"els\":[\"0:3311\"]},{\"tk\":[1065,5,1065,29],\"els\":[\"0:3311\"]},{\"tk\":[1065,30,1065,40],\"els\":[\"0:3311\"]},{\"tk\":[1065,41,1065,42],\"els\":[\"0:3311\"]},{\"tk\":[1066,7,1066,31],\"els\":[\"0:3311\"]},{\"tk\":[1066,32,1066,53],\"els\":[\"0:3311\"]},{\"tk\":[1068,5,1068,29],\"els\":[\"0:3311\"]},{\"tk\":[1068,30,1068,40],\"els\":[\"0:3311\"]},{\"tk\":[1068,41,1068,42],\"els\":[\"0:3311\"]},{\"tk\":[1074,3,1074,5],\"els\":[\"0:3320\"]},{\"tk\":[1074,14,1074,15],\"els\":[\"0:3320\"]},{\"tk\":[1074,16,1074,40],\"els\":[\"0:3320\"]},{\"tk\":[1074,41,1074,61],\"els\":[\"0:3320\"]},{\"tk\":[1075,5,1075,29],\"els\":[\"0:3320\"]},{\"tk\":[1075,30,1075,40],\"els\":[\"0:3320\"]},{\"tk\":[1075,41,1075,42],\"els\":[\"0:3320\"]},{\"tk\":[1076,7,1076,31],\"els\":[\"0:3320\"]},{\"tk\":[1076,32,1076,52],\"els\":[\"0:3320\"]},{\"tk\":[1077,10,1077,12],\"els\":[\"0:3320\"]},{\"tk\":[1077,21,1077,22],\"els\":[\"0:3320\"]},{\"tk\":[1077,23,1077,47],\"els\":[\"0:3320\"]},{\"tk\":[1077,48,1077,68],\"els\":[\"0:3320\"]},{\"tk\":[1078,5,1078,29],\"els\":[\"0:3320\"]},{\"tk\":[1078,30,1078,40],\"els\":[\"0:3320\"]},{\"tk\":[1078,41,1078,42],\"els\":[\"0:3320\"]},{\"tk\":[1079,7,1079,31],\"els\":[\"0:3320\"]},{\"tk\":[1079,32,1079,52],\"els\":[\"0:3320\"]},{\"tk\":[1081,5,1081,29],\"els\":[\"0:3320\"]},{\"tk\":[1081,30,1081,40],\"els\":[\"0:3320\"]},{\"tk\":[1081,41,1081,42],\"els\":[\"0:3320\"]},{\"tk\":[1089,3,1089,27],\"els\":[\"0:3290\"]},{\"tk\":[1089,28,1089,38],\"els\":[\"0:3290\"]},{\"tk\":[1089,39,1089,40],\"els\":[\"0:3290\"]},{\"tk\":[1089,42,1089,66],\"els\":[\"0:3252\"]},{\"tk\":[1089,67,1089,77],\"els\":[\"0:3252\"]},{\"tk\":[1089,78,1089,79],\"els\":[\"0:3252\"]},{\"tk\":[1090,5,1090,29],\"els\":[\"0:3252\"]},{\"tk\":[1090,30,1090,40],\"els\":[\"0:3252\"]},{\"tk\":[1090,42,1090,43],\"els\":[\"0:3290\"]},{\"tk\":[1090,44,1090,68],\"els\":[\"0:3290\"]},{\"tk\":[1090,69,1090,81],\"els\":[\"0:3290\"]},{\"tk\":[1095,3,1095,5],\"els\":[\"0:3285\"]},{\"tk\":[1095,7,1095,31],\"els\":[\"0:3271\"]},{\"tk\":[1095,32,1095,49],\"els\":[\"0:3271\"]},{\"tk\":[1095,50,1095,51],\"els\":[\"0:3285\"]},{\"tk\":[1095,52,1095,55],\"els\":[\"0:3285\"]},{\"tk\":[1096,5,1096,29],\"els\":[\"0:3285\"]},{\"tk\":[1096,30,1096,34],\"els\":[\"0:3285\"]},{\"tk\":[1096,35,1096,36],\"els\":[\"0:3285\"]},{\"tk\":[1096,37,1096,38],\"els\":[\"0:3285\"]},{\"tk\":[1096,38,1096,49],\"els\":[\"0:3285\"]},{\"tk\":[1097,7,1097,8],\"els\":[\"0:3285\"]},{\"tk\":[1097,8,1097,9],\"els\":[\"0:3285\"]},{\"tk\":[1097,9,1097,33],\"els\":[\"0:3285\",\"0:3271\"]},{\"tk\":[1097,33,1097,34],\"els\":[\"0:3285\"]},{\"tk\":[1097,34,1097,51],\"els\":[\"0:3285\",\"0:3271\"]},{\"tk\":[1097,51,1097,52],\"els\":[\"0:3285\"]},{\"tk\":[1097,53,1097,54],\"els\":[\"0:3285\"]},{\"tk\":[1097,54,1097,60],\"els\":[\"0:3285\"]},{\"tk\":[1097,60,1097,61],\"els\":[\"0:3285\"]},{\"tk\":[1099,5,1099,29],\"els\":[\"0:3285\"]},{\"tk\":[1099,30,1099,34],\"els\":[\"0:3285\"]},{\"tk\":[1099,35,1099,36],\"els\":[\"0:3285\"]},{\"tk\":[1099,37,1099,48],\"els\":[\"0:3285\",\"0:3271\"]},{\"tk\":[1100,7,1100,8],\"els\":[\"0:3285\",\"0:3271\"]},{\"tk\":[1100,8,1100,32],\"els\":[\"0:3285\",\"0:3271\"]},{\"tk\":[1100,32,1100,33],\"els\":[\"0:3285\",\"0:3271\"]},{\"tk\":[1100,33,1100,50],\"els\":[\"0:3285\",\"0:3271\"]},{\"tk\":[1100,50,1100,51],\"els\":[\"0:3285\",\"0:3271\"]},{\"tk\":[1100,52,1100,53],\"els\":[\"0:3285\",\"0:3271\"]},{\"tk\":[1100,53,1100,59],\"els\":[\"0:3285\",\"0:3271\"]},{\"tk\":[1100,59,1100,60],\"els\":[\"0:3285\",\"0:3271\"]},{\"tk\":[1106,3,1106,27],\"els\":[\"0:3302\"]},{\"tk\":[1106,28,1106,36],\"els\":[\"0:3302\"]},{\"tk\":[1106,37,1106,38],\"els\":[\"0:3302\"]},{\"tk\":[1106,39,1106,63],\"els\":[\"0:3302\"]},{\"tk\":[1106,64,1106,68],\"els\":[\"0:3302\"]},{\"tk\":[1106,69,1106,70],\"els\":[\"0:3302\"]},{\"tk\":[1107,5,1107,29],\"els\":[\"0:3302\"]},{\"tk\":[1107,30,1107,40],\"els\":[\"0:3302\"]},{\"tk\":[1107,41,1107,42],\"els\":[\"0:3302\"]},{\"tk\":[1107,43,1107,67],\"els\":[\"0:3302\"]},{\"tk\":[1107,68,1107,72],\"els\":[\"0:3302\"]},{\"tk\":[1110,3,1110,5],\"els\":[\"0:3310\"]},{\"tk\":[1110,7,1110,31],\"els\":[\"0:3310\"]},{\"tk\":[1110,32,1110,36],\"els\":[\"0:3310\"]},{\"tk\":[1110,37,1110,38],\"els\":[\"0:3310\"]},{\"tk\":[1111,7,1111,31],\"els\":[\"0:3310\"]},{\"tk\":[1111,32,1111,53],\"els\":[\"0:3310\"]},{\"tk\":[1112,5,1112,29],\"els\":[\"0:3310\"]},{\"tk\":[1112,30,1112,40],\"els\":[\"0:3310\"]},{\"tk\":[1112,41,1112,42],\"els\":[\"0:3310\"]},{\"tk\":[1113,7,1113,31],\"els\":[\"0:3310\"]},{\"tk\":[1113,32,1113,53],\"els\":[\"0:3310\"]},{\"tk\":[1114,10,1114,12],\"els\":[\"0:3310\"]},{\"tk\":[1114,14,1114,38],\"els\":[\"0:3310\"]},{\"tk\":[1114,39,1114,43],\"els\":[\"0:3310\"]},{\"tk\":[1114,44,1114,45],\"els\":[\"0:3310\"]},{\"tk\":[1115,14,1115,38],\"els\":[\"0:3310\"]},{\"tk\":[1115,39,1115,60],\"els\":[\"0:3310\"]},{\"tk\":[1116,5,1116,29],\"els\":[\"0:3310\"]},{\"tk\":[1116,30,1116,40],\"els\":[\"0:3310\"]},{\"tk\":[1116,41,1116,42],\"els\":[\"0:3310\"]},{\"tk\":[1117,7,1117,31],\"els\":[\"0:3310\"]},{\"tk\":[1117,32,1117,53],\"els\":[\"0:3310\"]},{\"tk\":[1119,5,1119,29],\"els\":[\"0:3310\"]},{\"tk\":[1119,30,1119,40],\"els\":[\"0:3310\"]},{\"tk\":[1119,41,1119,42],\"els\":[\"0:3310\"]},{\"tk\":[1119,43,1119,67],\"els\":[\"0:3310\"]},{\"tk\":[1119,68,1119,72],\"els\":[\"0:3310\"]},{\"tk\":[1129,3,1129,27],\"els\":[\"0:3301\"]},{\"tk\":[1129,28,1129,36],\"els\":[\"0:3301\"]},{\"tk\":[1129,37,1129,38],\"els\":[\"0:3301\"]},{\"tk\":[1129,39,1129,50],\"els\":[\"0:3284\",\"0:3243\"]},{\"tk\":[1129,50,1129,51],\"els\":[\"0:3284\",\"0:3243\"]},{\"tk\":[1129,51,1129,75],\"els\":[\"0:3284\",\"0:3243\"]},{\"tk\":[1129,75,1129,76],\"els\":[\"0:3284\",\"0:3243\"]},{\"tk\":[1129,76,1129,80],\"els\":[\"0:3284\",\"0:3243\"]},{\"tk\":[1129,80,1129,81],\"els\":[\"0:3284\",\"0:3243\"]},{\"tk\":[1130,5,1130,11],\"els\":[\"0:3284\",\"0:3243\"]},{\"tk\":[1130,11,1130,12],\"els\":[\"0:3284\",\"0:3243\"]},{\"tk\":[1130,13,1130,14],\"els\":[\"0:3301\"]},{\"tk\":[1130,15,1130,39],\"els\":[\"0:3301\"]},{\"tk\":[1130,40,1130,50],\"els\":[\"0:3301\"]},{\"tk\":[1130,51,1130,52],\"els\":[\"0:3301\"]},{\"tk\":[1131,6,1131,30],\"els\":[\"0:3273\"]},{\"tk\":[1131,31,1131,46],\"els\":[\"0:3273\"]},{\"tk\":[1131,47,1131,48],\"els\":[\"0:3249\"]},{\"tk\":[1132,6,1132,30],\"els\":[\"0:3249\"]},{\"tk\":[1132,31,1132,41],\"els\":[\"0:3249\"]},{\"tk\":[1135,3,1135,5],\"els\":[\"0:3314\"]},{\"tk\":[1135,42,1135,43],\"els\":[\"0:3314\"]},{\"tk\":[1136,7,1136,31],\"els\":[\"0:3314\"]},{\"tk\":[1136,32,1136,53],\"els\":[\"0:3314\"]},{\"tk\":[1137,5,1137,29],\"els\":[\"0:3314\"]},{\"tk\":[1137,30,1137,39],\"els\":[\"0:3314\"]},{\"tk\":[1137,40,1137,41],\"els\":[\"0:3314\"]},{\"tk\":[1138,7,1138,31],\"els\":[\"0:3314\"]},{\"tk\":[1138,32,1138,53],\"els\":[\"0:3314\"]},{\"tk\":[1139,10,1139,12],\"els\":[\"0:3314\"]},{\"tk\":[1139,49,1139,50],\"els\":[\"0:3314\"]},{\"tk\":[1140,14,1140,38],\"els\":[\"0:3314\"]},{\"tk\":[1140,39,1140,60],\"els\":[\"0:3314\"]},{\"tk\":[1141,5,1141,29],\"els\":[\"0:3314\"]},{\"tk\":[1141,30,1141,39],\"els\":[\"0:3314\"]},{\"tk\":[1141,40,1141,41],\"els\":[\"0:3314\"]},{\"tk\":[1142,7,1142,31],\"els\":[\"0:3314\"]},{\"tk\":[1142,32,1142,53],\"els\":[\"0:3314\"]},{\"tk\":[1148,3,1148,5],\"els\":[\"0:3312\"]},{\"tk\":[1148,14,1148,15],\"els\":[\"0:3312\"]},{\"tk\":[1148,16,1148,40],\"els\":[\"0:3312\"]},{\"tk\":[1148,41,1148,62],\"els\":[\"0:3312\"]},{\"tk\":[1149,5,1149,11],\"els\":[\"0:3267\"]},{\"tk\":[1149,12,1149,13],\"els\":[\"0:3312\"]},{\"tk\":[1149,14,1149,38],\"els\":[\"0:3312\"]},{\"tk\":[1149,39,1149,60],\"els\":[\"0:3312\"]},{\"tk\":[1150,10,1150,12],\"els\":[\"0:3312\"]},{\"tk\":[1150,21,1150,22],\"els\":[\"0:3312\"]},{\"tk\":[1150,23,1150,47],\"els\":[\"0:3312\"]},{\"tk\":[1150,48,1150,69],\"els\":[\"0:3312\"]},{\"tk\":[1151,5,1151,11],\"els\":[\"0:3267\"]},{\"tk\":[1151,12,1151,13],\"els\":[\"0:3312\"]},{\"tk\":[1151,14,1151,38],\"els\":[\"0:3312\"]},{\"tk\":[1151,39,1151,60],\"els\":[\"0:3312\"]},{\"tk\":[1159,3,1159,27],\"els\":[\"0:3292\"]},{\"tk\":[1159,28,1159,38],\"els\":[\"0:3292\"]},{\"tk\":[1159,39,1159,40],\"els\":[\"0:3292\"]},{\"tk\":[1159,42,1159,66],\"els\":[\"0:3257\"]},{\"tk\":[1159,67,1159,76],\"els\":[\"0:3257\"]},{\"tk\":[1159,77,1159,78],\"els\":[\"0:3257\"]},{\"tk\":[1160,5,1160,11],\"els\":[\"0:3267\"]},{\"tk\":[1160,13,1160,14],\"els\":[\"0:3292\"]},{\"tk\":[1160,15,1160,39],\"els\":[\"0:3292\"]},{\"tk\":[1160,40,1160,50],\"els\":[\"0:3292\"]},{\"tk\":[1163,3,1163,5],\"els\":[\"0:3307\"]},{\"tk\":[1163,7,1163,31],\"els\":[\"0:3307\"]},{\"tk\":[1163,32,1163,36],\"els\":[\"0:3307\"]},{\"tk\":[1163,37,1163,38],\"els\":[\"0:3307\"]},{\"tk\":[1164,7,1164,31],\"els\":[\"0:3307\"]},{\"tk\":[1164,32,1164,52],\"els\":[\"0:3307\"]},{\"tk\":[1165,5,1165,29],\"els\":[\"0:3307\"]},{\"tk\":[1165,30,1165,40],\"els\":[\"0:3307\"]},{\"tk\":[1165,41,1165,42],\"els\":[\"0:3307\"]},{\"tk\":[1166,7,1166,31],\"els\":[\"0:3307\"]},{\"tk\":[1166,32,1166,52],\"els\":[\"0:3307\"]},{\"tk\":[1167,10,1167,12],\"els\":[\"0:3307\"]},{\"tk\":[1167,14,1167,38],\"els\":[\"0:3307\"]},{\"tk\":[1167,39,1167,43],\"els\":[\"0:3307\"]},{\"tk\":[1167,44,1167,45],\"els\":[\"0:3307\"]},{\"tk\":[1168,14,1168,38],\"els\":[\"0:3307\"]},{\"tk\":[1168,39,1168,59],\"els\":[\"0:3307\"]},{\"tk\":[1169,5,1169,29],\"els\":[\"0:3307\"]},{\"tk\":[1169,30,1169,40],\"els\":[\"0:3307\"]},{\"tk\":[1169,41,1169,42],\"els\":[\"0:3307\"]},{\"tk\":[1170,7,1170,31],\"els\":[\"0:3307\"]},{\"tk\":[1170,32,1170,52],\"els\":[\"0:3307\"]},{\"tk\":[1172,5,1172,29],\"els\":[\"0:3307\"]},{\"tk\":[1172,30,1172,40],\"els\":[\"0:3307\"]},{\"tk\":[1172,41,1172,42],\"els\":[\"0:3307\"]},{\"tk\":[1172,43,1172,67],\"els\":[\"0:3307\"]},{\"tk\":[1172,68,1172,72],\"els\":[\"0:3307\"]},{\"tk\":[1180,3,1180,5],\"els\":[\"0:3286\"]},{\"tk\":[1180,7,1180,31],\"els\":[\"0:3271\"]},{\"tk\":[1180,32,1180,49],\"els\":[\"0:3271\"]},{\"tk\":[1180,50,1180,51],\"els\":[\"0:3286\"]},{\"tk\":[1180,52,1180,55],\"els\":[\"0:3286\"]},{\"tk\":[1181,5,1181,29],\"els\":[\"0:3286\"]},{\"tk\":[1181,30,1181,34],\"els\":[\"0:3286\"]},{\"tk\":[1181,35,1181,36],\"els\":[\"0:3286\"]},{\"tk\":[1181,37,1181,38],\"els\":[\"0:3286\"]},{\"tk\":[1181,38,1181,49],\"els\":[\"0:3286\"]},{\"tk\":[1182,7,1182,8],\"els\":[\"0:3286\"]},{\"tk\":[1182,8,1182,9],\"els\":[\"0:3286\"]},{\"tk\":[1182,9,1182,33],\"els\":[\"0:3286\",\"0:3271\"]},{\"tk\":[1182,33,1182,34],\"els\":[\"0:3286\"]},{\"tk\":[1182,34,1182,51],\"els\":[\"0:3286\",\"0:3271\"]},{\"tk\":[1182,51,1182,52],\"els\":[\"0:3286\"]},{\"tk\":[1182,53,1182,54],\"els\":[\"0:3286\"]},{\"tk\":[1182,54,1182,58],\"els\":[\"0:3286\"]},{\"tk\":[1182,58,1182,59],\"els\":[\"0:3286\"]},{\"tk\":[1184,5,1184,29],\"els\":[\"0:3286\"]},{\"tk\":[1184,30,1184,34],\"els\":[\"0:3286\"]},{\"tk\":[1184,35,1184,36],\"els\":[\"0:3286\"]},{\"tk\":[1184,37,1184,48],\"els\":[\"0:3286\",\"0:3271\"]},{\"tk\":[1185,7,1185,8],\"els\":[\"0:3286\",\"0:3271\"]},{\"tk\":[1185,8,1185,32],\"els\":[\"0:3286\",\"0:3271\"]},{\"tk\":[1185,32,1185,33],\"els\":[\"0:3286\",\"0:3271\"]},{\"tk\":[1185,33,1185,50],\"els\":[\"0:3286\",\"0:3271\"]},{\"tk\":[1185,50,1185,51],\"els\":[\"0:3286\",\"0:3271\"]},{\"tk\":[1185,52,1185,53],\"els\":[\"0:3286\",\"0:3271\"]},{\"tk\":[1185,53,1185,57],\"els\":[\"0:3286\",\"0:3271\"]},{\"tk\":[1185,57,1185,58],\"els\":[\"0:3286\",\"0:3271\"]},{\"tk\":[1191,3,1191,5],\"els\":[\"0:3313\"]},{\"tk\":[1191,7,1191,31],\"els\":[\"0:3313\"]},{\"tk\":[1191,32,1191,36],\"els\":[\"0:3313\"]},{\"tk\":[1191,37,1191,38],\"els\":[\"0:3313\"]},{\"tk\":[1192,7,1192,31],\"els\":[\"0:3313\"]},{\"tk\":[1192,32,1192,53],\"els\":[\"0:3313\"]},{\"tk\":[1193,5,1193,29],\"els\":[\"0:3313\"]},{\"tk\":[1193,30,1193,39],\"els\":[\"0:3313\"]},{\"tk\":[1193,40,1193,41],\"els\":[\"0:3313\"]},{\"tk\":[1194,7,1194,31],\"els\":[\"0:3313\"]},{\"tk\":[1194,32,1194,53],\"els\":[\"0:3313\"]},{\"tk\":[1195,10,1195,12],\"els\":[\"0:3313\"]},{\"tk\":[1195,14,1195,38],\"els\":[\"0:3313\"]},{\"tk\":[1195,39,1195,43],\"els\":[\"0:3313\"]},{\"tk\":[1195,44,1195,45],\"els\":[\"0:3313\"]},{\"tk\":[1196,14,1196,38],\"els\":[\"0:3313\"]},{\"tk\":[1196,39,1196,60],\"els\":[\"0:3313\"]},{\"tk\":[1197,5,1197,29],\"els\":[\"0:3313\"]},{\"tk\":[1197,30,1197,39],\"els\":[\"0:3313\"]},{\"tk\":[1197,40,1197,41],\"els\":[\"0:3313\"]},{\"tk\":[1198,7,1198,31],\"els\":[\"0:3313\"]},{\"tk\":[1198,32,1198,53],\"els\":[\"0:3313\"]},{\"tk\":[1200,5,1200,29],\"els\":[\"0:3313\"]},{\"tk\":[1200,30,1200,39],\"els\":[\"0:3313\"]},{\"tk\":[1200,40,1200,41],\"els\":[\"0:3313\"]},{\"tk\":[1200,42,1200,66],\"els\":[\"0:3313\"]},{\"tk\":[1200,67,1200,71],\"els\":[\"0:3313\"]},{\"tk\":[1218,3,1218,27],\"els\":[\"0:3258\"]},{\"tk\":[1218,28,1218,32],\"els\":[\"0:3258\"]},{\"tk\":[1218,33,1218,34],\"els\":[\"0:3258\"]},{\"tk\":[1218,38,1218,62],\"els\":[\"0:3330\"]},{\"tk\":[1218,63,1218,75],\"els\":[\"0:3330\"]},{\"tk\":[1218,76,1218,77],\"els\":[\"0:3330\"]},{\"tk\":[1219,5,1219,29],\"els\":[\"0:3330\"]},{\"tk\":[1219,30,1219,34],\"els\":[\"0:3330\"]},{\"tk\":[1219,35,1219,36],\"els\":[\"0:3258\"]},{\"tk\":[1219,37,1219,61],\"els\":[\"0:3327\"]},{\"tk\":[1219,62,1219,69],\"els\":[\"0:3327\"]},{\"tk\":[1219,70,1219,71],\"els\":[\"0:3327\"]},{\"tk\":[1220,5,1220,29],\"els\":[\"0:3327\"]},{\"tk\":[1220,30,1220,40],\"els\":[\"0:3327\"]},{\"tk\":[1220,42,1220,43],\"els\":[\"0:3258\"]},{\"tk\":[1221,6,1221,30],\"els\":[\"0:3265\"]},{\"tk\":[1221,31,1221,60],\"els\":[\"0:3265\"]},{\"tk\":[1221,61,1221,62],\"els\":[\"0:3265\"]},{\"tk\":[1222,6,1222,30],\"els\":[\"0:3265\"]},{\"tk\":[1222,31,1222,60],\"els\":[\"0:3265\"]},{\"tk\":[1222,63,1222,64],\"els\":[\"0:3258\"]},{\"tk\":[1223,5,1223,30],\"els\":[\"0:3280\"]},{\"tk\":[1223,31,1223,61],\"els\":[\"0:3280\"]},{\"tk\":[1223,63,1223,64],\"els\":[\"0:3258\"]},{\"tk\":[1224,6,1224,30],\"els\":[\"0:3303\"]},{\"tk\":[1224,31,1224,35],\"els\":[\"0:3303\"]},{\"tk\":[1224,36,1224,37],\"els\":[\"0:3303\"]},{\"tk\":[1224,38,1224,62],\"els\":[\"0:3303\"]},{\"tk\":[1224,63,1224,73],\"els\":[\"0:3303\"]},{\"tk\":[1224,74,1224,75],\"els\":[\"0:3303\"]},{\"tk\":[1225,6,1225,30],\"els\":[\"0:3303\"]},{\"tk\":[1225,31,1225,35],\"els\":[\"0:3303\"]},{\"tk\":[1225,36,1225,37],\"els\":[\"0:3259\"]},{\"tk\":[1225,38,1225,49],\"els\":[\"0:3287\",\"0:3244\"]},{\"tk\":[1225,49,1225,50],\"els\":[\"0:3287\",\"0:3244\"]},{\"tk\":[1225,50,1225,74],\"els\":[\"0:3287\",\"0:3244\"]},{\"tk\":[1225,74,1225,75],\"els\":[\"0:3287\",\"0:3244\"]},{\"tk\":[1225,75,1225,79],\"els\":[\"0:3287\",\"0:3244\"]},{\"tk\":[1225,79,1225,80],\"els\":[\"0:3287\",\"0:3244\"]},{\"tk\":[1226,7,1226,11],\"els\":[\"0:3287\",\"0:3244\"]},{\"tk\":[1226,11,1226,12],\"els\":[\"0:3287\",\"0:3244\"]},{\"tk\":[1226,13,1226,14],\"els\":[\"0:3304\"]},{\"tk\":[1226,15,1226,39],\"els\":[\"0:3304\"]},{\"tk\":[1226,40,1226,49],\"els\":[\"0:3304\"]},{\"tk\":[1226,50,1226,51],\"els\":[\"0:3304\"]},{\"tk\":[1227,7,1227,31],\"els\":[\"0:3274\"]},{\"tk\":[1227,32,1227,47],\"els\":[\"0:3274\"]},{\"tk\":[1227,48,1227,49],\"els\":[\"0:3254\"]},{\"tk\":[1228,7,1228,31],\"els\":[\"0:3254\"]},{\"tk\":[1228,32,1228,42],\"els\":[\"0:3254\"]},{\"tk\":[1228,45,1228,46],\"els\":[\"0:3295\"]},{\"tk\":[1229,5,1229,29],\"els\":[\"0:3295\"]},{\"tk\":[1229,30,1229,40],\"els\":[\"0:3295\"]},{\"tk\":[1234,3,1234,27],\"els\":[\"0:3643#out:1\"]},{\"tk\":[1234,28,1234,40],\"els\":[\"0:3643#out:1\"]},{\"tk\":[1234,41,1234,42],\"els\":[\"0:3643#out:1\",\"0:3643\"]},{\"tk\":[1234,43,1234,67],\"els\":[\"0:3643\"]},{\"tk\":[1234,68,1234,80],\"els\":[\"0:3643\"]},{\"tk\":[1234,81,1234,82],\"els\":[\"0:3643\"]},{\"tk\":[1235,5,1235,30],\"els\":[\"0:3630\"]},{\"tk\":[1235,31,1235,62],\"els\":[\"0:3630\"]},{\"tk\":[1247,3,1247,5],\"els\":[\"0:3694\"]},{\"tk\":[1247,7,1247,32],\"els\":[\"0:3694\",\"0:3692\"]},{\"tk\":[1247,33,1247,46],\"els\":[\"0:3694\",\"0:3692\"]},{\"tk\":[1248,5,1248,29],\"els\":[\"0:3694\"]},{\"tk\":[1248,30,1248,59],\"els\":[\"0:3694\"]},{\"tk\":[1248,60,1248,61],\"els\":[\"0:3694\"]},{\"tk\":[1249,7,1249,31],\"els\":[\"0:3688\"]},{\"tk\":[1249,32,1249,41],\"els\":[\"0:3688\"]},{\"tk\":[1249,42,1249,43],\"els\":[\"0:3688\"]},{\"tk\":[1250,7,1250,31],\"els\":[\"0:3688\",\"0:379\"]},{\"tk\":[1250,32,1250,47],\"els\":[\"0:3688\",\"0:379\"]},{\"tk\":[1251,5,1251,29],\"els\":[\"0:3694\"]},{\"tk\":[1251,30,1251,59],\"els\":[\"0:3694\"]},{\"tk\":[1251,60,1251,61],\"els\":[\"0:3694\"]},{\"tk\":[1252,7,1252,31],\"els\":[\"0:3698\"]},{\"tk\":[1252,32,1252,41],\"els\":[\"0:3698\"]},{\"tk\":[1252,42,1252,43],\"els\":[\"0:3698\"]},{\"tk\":[1252,44,1252,69],\"els\":[\"0:3698\",\"0:3691\"]},{\"tk\":[1252,70,1252,81],\"els\":[\"0:3698\",\"0:3691\"]},{\"tk\":[1253,5,1253,29],\"els\":[\"0:3694\"]},{\"tk\":[1253,30,1253,59],\"els\":[\"0:3694\"]},{\"tk\":[1253,60,1253,61],\"els\":[\"0:3694\"]},{\"tk\":[1254,7,1254,32],\"els\":[\"0:3695\",\"0:3690\"]},{\"tk\":[1254,33,1254,38],\"els\":[\"0:3695\",\"0:3690\"]},{\"tk\":[1256,5,1256,29],\"els\":[\"0:3694\"]},{\"tk\":[1256,30,1256,59],\"els\":[\"0:3694\"]},{\"tk\":[1256,60,1256,61],\"els\":[\"0:3694\"]},{\"tk\":[1257,7,1257,31],\"els\":[\"0:3689\"]},{\"tk\":[1257,32,1257,47],\"els\":[\"0:3689\"]},{\"tk\":[1258,5,1258,29],\"els\":[\"0:3694\"]},{\"tk\":[1258,30,1258,59],\"els\":[\"0:3694\"]},{\"tk\":[1258,60,1258,61],\"els\":[\"0:3694\"]},{\"tk\":[1259,7,1259,31],\"els\":[\"0:3689\"]},{\"tk\":[1259,32,1259,47],\"els\":[\"0:3689\"]},{\"tk\":[1260,5,1260,29],\"els\":[\"0:3694\"]},{\"tk\":[1260,30,1260,59],\"els\":[\"0:3694\"]},{\"tk\":[1260,60,1260,61],\"els\":[\"0:3694\"]},{\"tk\":[1261,7,1261,31],\"els\":[\"0:3689\"]},{\"tk\":[1261,32,1261,47],\"els\":[\"0:3689\"]},{\"tk\":[1269,3,1269,27],\"els\":[\"0:3596\"]},{\"tk\":[1269,28,1269,38],\"els\":[\"0:3596\"]},{\"tk\":[1269,39,1269,40],\"els\":[\"0:3596\"]},{\"tk\":[1270,5,1270,29],\"els\":[\"0:3596\"]},{\"tk\":[1270,30,1270,59],\"els\":[\"0:3596\"]},{\"tk\":[1270,60,1270,61],\"els\":[\"0:3596\"]},{\"tk\":[1271,5,1271,30],\"els\":[\"0:3630\"]},{\"tk\":[1271,31,1271,62],\"els\":[\"0:3630\"]},{\"tk\":[1278,3,1278,27],\"els\":[\"0:3591\"]},{\"tk\":[1278,28,1278,34],\"els\":[\"0:3591\"]},{\"tk\":[1278,35,1278,36],\"els\":[\"0:3591\",\"0:3592\",\"0:3593\",\"0:3594\"]},{\"tk\":[1278,37,1278,41],\"els\":[\"0:3591\"]},{\"tk\":[1278,42,1278,66],\"els\":[\"0:3591\"]},{\"tk\":[1278,67,1278,77],\"els\":[\"0:3591\"]},{\"tk\":[1281,3,1281,5],\"els\":[\"0:3659\"]},{\"tk\":[1281,7,1281,31],\"els\":[\"0:3659\"]},{\"tk\":[1281,32,1281,42],\"els\":[\"0:3659\"]},{\"tk\":[1281,43,1281,44],\"els\":[\"0:3659\"]},{\"tk\":[1282,7,1282,31],\"els\":[\"0:3659\"]},{\"tk\":[1282,32,1282,53],\"els\":[\"0:3659\"]},{\"tk\":[1283,5,1283,29],\"els\":[\"0:3659\"]},{\"tk\":[1283,30,1283,40],\"els\":[\"0:3659\"]},{\"tk\":[1283,41,1283,42],\"els\":[\"0:3659\"]},{\"tk\":[1284,7,1284,31],\"els\":[\"0:3659\"]},{\"tk\":[1284,32,1284,53],\"els\":[\"0:3659\"]},{\"tk\":[1285,10,1285,12],\"els\":[\"0:3659\"]},{\"tk\":[1285,14,1285,38],\"els\":[\"0:3659\"]},{\"tk\":[1285,39,1285,49],\"els\":[\"0:3659\"]},{\"tk\":[1285,50,1285,51],\"els\":[\"0:3659\"]},{\"tk\":[1286,14,1286,38],\"els\":[\"0:3659\"]},{\"tk\":[1286,39,1286,60],\"els\":[\"0:3659\"]},{\"tk\":[1287,5,1287,29],\"els\":[\"0:3659\"]},{\"tk\":[1287,30,1287,40],\"els\":[\"0:3659\"]},{\"tk\":[1287,41,1287,42],\"els\":[\"0:3659\"]},{\"tk\":[1288,7,1288,31],\"els\":[\"0:3659\"]},{\"tk\":[1288,32,1288,53],\"els\":[\"0:3659\"]},{\"tk\":[1290,5,1290,29],\"els\":[\"0:3659\"]},{\"tk\":[1290,30,1290,40],\"els\":[\"0:3659\"]},{\"tk\":[1290,41,1290,42],\"els\":[\"0:3659\"]},{\"tk\":[1290,43,1290,67],\"els\":[\"0:3659\"]},{\"tk\":[1290,68,1290,78],\"els\":[\"0:3659\"]},{\"tk\":[1296,3,1296,27],\"els\":[\"0:3683\"]},{\"tk\":[1296,28,1296,37],\"els\":[\"0:3683\"]},{\"tk\":[1296,38,1296,39],\"els\":[\"0:3683\"]},{\"tk\":[1296,40,1296,64],\"els\":[\"0:3683\"]},{\"tk\":[1296,65,1296,79],\"els\":[\"0:3683\"]},{\"tk\":[1296,80,1296,81],\"els\":[\"0:3683\"]},{\"tk\":[1297,5,1297,29],\"els\":[\"0:3683\"]},{\"tk\":[1297,30,1297,40],\"els\":[\"0:3683\"]},{\"tk\":[1304,3,1304,27],\"els\":[\"0:3617\"]},{\"tk\":[1304,28,1304,37],\"els\":[\"0:3617\"]},{\"tk\":[1304,38,1304,39],\"els\":[\"0:3617\",\"0:3600\",\"0:3605\"]},{\"tk\":[1305,5,1305,29],\"els\":[\"0:3620\"]},{\"tk\":[1305,30,1305,47],\"els\":[\"0:3620\"]},{\"tk\":[1305,48,1305,49],\"els\":[\"0:3617\"]},{\"tk\":[1306,5,1306,29],\"els\":[\"0:3617\"]},{\"tk\":[1306,30,1306,40],\"els\":[\"0:3617\"]},{\"tk\":[1313,3,1313,9],\"els\":[\"0:3267\"]},{\"tk\":[1313,10,1313,11],\"els\":[\"0:3616\",\"0:3599\",\"0:3604\"]},{\"tk\":[1313,12,1313,36],\"els\":[\"0:3616\"]},{\"tk\":[1313,37,1313,47],\"els\":[\"0:3616\"]},{\"tk\":[1313,48,1313,49],\"els\":[\"0:3616\"]},{\"tk\":[1314,5,1314,29],\"els\":[\"0:3620\"]},{\"tk\":[1314,30,1314,47],\"els\":[\"0:3620\"]},{\"tk\":[1319,3,1319,5],\"els\":[\"0:3661\"]},{\"tk\":[1319,7,1319,31],\"els\":[\"0:3617\"]},{\"tk\":[1319,32,1319,41],\"els\":[\"0:3617\"]},{\"tk\":[1319,42,1319,43],\"els\":[\"0:3661\"]},{\"tk\":[1320,7,1320,31],\"els\":[\"0:3661\"]},{\"tk\":[1320,32,1320,55],\"els\":[\"0:3661\"]},{\"tk\":[1321,5,1321,29],\"els\":[\"0:3661\"]},{\"tk\":[1321,30,1321,40],\"els\":[\"0:3661\"]},{\"tk\":[1321,41,1321,42],\"els\":[\"0:3661\"]},{\"tk\":[1322,7,1322,31],\"els\":[\"0:3661\"]},{\"tk\":[1322,32,1322,55],\"els\":[\"0:3661\"]},{\"tk\":[1323,10,1323,12],\"els\":[\"0:3661\"]},{\"tk\":[1323,14,1323,38],\"els\":[\"0:3617\"]},{\"tk\":[1323,39,1323,48],\"els\":[\"0:3617\"]},{\"tk\":[1323,49,1323,50],\"els\":[\"0:3661\"]},{\"tk\":[1324,14,1324,38],\"els\":[\"0:3661\"]},{\"tk\":[1324,39,1324,62],\"els\":[\"0:3661\"]},{\"tk\":[1325,5,1325,29],\"els\":[\"0:3661\"]},{\"tk\":[1325,30,1325,40],\"els\":[\"0:3661\"]},{\"tk\":[1325,41,1325,42],\"els\":[\"0:3661\"]},{\"tk\":[1326,7,1326,31],\"els\":[\"0:3661\"]},{\"tk\":[1326,32,1326,55],\"els\":[\"0:3661\"]},{\"tk\":[1328,5,1328,29],\"els\":[\"0:3661\"]},{\"tk\":[1328,30,1328,40],\"els\":[\"0:3661\"]},{\"tk\":[1328,41,1328,42],\"els\":[\"0:3661\"]},{\"tk\":[1328,43,1328,67],\"els\":[\"0:3617\"]},{\"tk\":[1328,68,1328,77],\"els\":[\"0:3617\"]},{\"tk\":[1336,3,1336,5],\"els\":[\"0:3662\"]},{\"tk\":[1336,7,1336,13],\"els\":[\"0:3267\"]},{\"tk\":[1336,14,1336,15],\"els\":[\"0:3662\"]},{\"tk\":[1336,16,1336,40],\"els\":[\"0:3662\"]},{\"tk\":[1336,41,1336,64],\"els\":[\"0:3662\"]},{\"tk\":[1337,5,1337,29],\"els\":[\"0:3662\"]},{\"tk\":[1337,30,1337,40],\"els\":[\"0:3662\"]},{\"tk\":[1337,41,1337,42],\"els\":[\"0:3662\"]},{\"tk\":[1338,7,1338,31],\"els\":[\"0:3662\"]},{\"tk\":[1338,32,1338,55],\"els\":[\"0:3662\"]},{\"tk\":[1339,10,1339,12],\"els\":[\"0:3662\"]},{\"tk\":[1339,14,1339,20],\"els\":[\"0:3267\"]},{\"tk\":[1339,21,1339,22],\"els\":[\"0:3662\"]},{\"tk\":[1339,23,1339,47],\"els\":[\"0:3662\"]},{\"tk\":[1339,48,1339,71],\"els\":[\"0:3662\"]},{\"tk\":[1340,5,1340,29],\"els\":[\"0:3662\"]},{\"tk\":[1340,30,1340,40],\"els\":[\"0:3662\"]},{\"tk\":[1340,41,1340,42],\"els\":[\"0:3662\"]},{\"tk\":[1341,7,1341,31],\"els\":[\"0:3662\"]},{\"tk\":[1341,32,1341,55],\"els\":[\"0:3662\"]},{\"tk\":[1343,5,1343,29],\"els\":[\"0:3662\"]},{\"tk\":[1343,30,1343,40],\"els\":[\"0:3662\"]},{\"tk\":[1343,41,1343,42],\"els\":[\"0:3662\"]},{\"tk\":[1343,43,1343,49],\"els\":[\"0:3267\"]},{\"tk\":[1351,3,1351,27],\"els\":[\"0:3641\"]},{\"tk\":[1351,28,1351,38],\"els\":[\"0:3641\"]},{\"tk\":[1351,39,1351,40],\"els\":[\"0:3641\"]},{\"tk\":[1351,42,1351,66],\"els\":[\"0:3618\"]},{\"tk\":[1351,67,1351,77],\"els\":[\"0:3618\"]},{\"tk\":[1351,78,1351,79],\"els\":[\"0:3618\"]},{\"tk\":[1352,5,1352,29],\"els\":[\"0:3618\"]},{\"tk\":[1352,30,1352,40],\"els\":[\"0:3618\"]},{\"tk\":[1352,42,1352,43],\"els\":[\"0:3641\"]},{\"tk\":[1352,44,1352,68],\"els\":[\"0:3641\"]},{\"tk\":[1352,69,1352,80],\"els\":[\"0:3641\"]},{\"tk\":[1357,3,1357,5],\"els\":[\"0:3634\"]},{\"tk\":[1357,7,1357,31],\"els\":[\"0:3620\"]},{\"tk\":[1357,32,1357,49],\"els\":[\"0:3620\"]},{\"tk\":[1357,50,1357,51],\"els\":[\"0:3634\"]},{\"tk\":[1357,52,1357,55],\"els\":[\"0:3634\"]},{\"tk\":[1358,5,1358,29],\"els\":[\"0:3634\"]},{\"tk\":[1358,30,1358,34],\"els\":[\"0:3634\"]},{\"tk\":[1358,35,1358,36],\"els\":[\"0:3634\"]},{\"tk\":[1358,37,1358,38],\"els\":[\"0:3634\"]},{\"tk\":[1358,38,1358,49],\"els\":[\"0:3634\"]},{\"tk\":[1359,7,1359,8],\"els\":[\"0:3634\"]},{\"tk\":[1359,8,1359,9],\"els\":[\"0:3634\"]},{\"tk\":[1359,9,1359,33],\"els\":[\"0:3634\",\"0:3620\"]},{\"tk\":[1359,33,1359,34],\"els\":[\"0:3634\"]},{\"tk\":[1359,34,1359,51],\"els\":[\"0:3634\",\"0:3620\"]},{\"tk\":[1359,51,1359,52],\"els\":[\"0:3634\"]},{\"tk\":[1359,53,1359,54],\"els\":[\"0:3634\"]},{\"tk\":[1359,54,1359,57],\"els\":[\"0:3634\"]},{\"tk\":[1359,57,1359,58],\"els\":[\"0:3634\"]},{\"tk\":[1361,5,1361,29],\"els\":[\"0:3634\"]},{\"tk\":[1361,30,1361,34],\"els\":[\"0:3634\"]},{\"tk\":[1361,35,1361,36],\"els\":[\"0:3634\"]},{\"tk\":[1361,37,1361,48],\"els\":[\"0:3634\",\"0:3620\"]},{\"tk\":[1362,7,1362,8],\"els\":[\"0:3634\",\"0:3620\"]},{\"tk\":[1362,8,1362,32],\"els\":[\"0:3634\",\"0:3620\"]},{\"tk\":[1362,32,1362,33],\"els\":[\"0:3634\",\"0:3620\"]},{\"tk\":[1362,33,1362,50],\"els\":[\"0:3634\",\"0:3620\"]},{\"tk\":[1362,50,1362,51],\"els\":[\"0:3634\",\"0:3620\"]},{\"tk\":[1362,52,1362,53],\"els\":[\"0:3634\",\"0:3620\"]},{\"tk\":[1362,53,1362,56],\"els\":[\"0:3634\",\"0:3620\"]},{\"tk\":[1362,56,1362,57],\"els\":[\"0:3634\",\"0:3620\"]},{\"tk\":[1368,3,1368,27],\"els\":[\"0:3652\"]},{\"tk\":[1368,28,1368,38],\"els\":[\"0:3652\"]},{\"tk\":[1368,39,1368,40],\"els\":[\"0:3652\"]},{\"tk\":[1368,41,1368,65],\"els\":[\"0:3652\"]},{\"tk\":[1368,66,1368,70],\"els\":[\"0:3652\"]},{\"tk\":[1368,71,1368,72],\"els\":[\"0:3652\"]},{\"tk\":[1369,5,1369,29],\"els\":[\"0:3652\"]},{\"tk\":[1369,30,1369,40],\"els\":[\"0:3652\"]},{\"tk\":[1369,41,1369,42],\"els\":[\"0:3652\"]},{\"tk\":[1369,43,1369,67],\"els\":[\"0:3652\"]},{\"tk\":[1369,68,1369,78],\"els\":[\"0:3652\"]},{\"tk\":[1372,3,1372,5],\"els\":[\"0:3672\"]},{\"tk\":[1372,7,1372,31],\"els\":[\"0:3672\"]},{\"tk\":[1372,32,1372,42],\"els\":[\"0:3672\"]},{\"tk\":[1372,43,1372,44],\"els\":[\"0:3672\"]},{\"tk\":[1373,7,1373,31],\"els\":[\"0:3672\"]},{\"tk\":[1373,32,1373,54],\"els\":[\"0:3672\"]},{\"tk\":[1374,5,1374,29],\"els\":[\"0:3672\"]},{\"tk\":[1374,30,1374,39],\"els\":[\"0:3672\"]},{\"tk\":[1374,40,1374,41],\"els\":[\"0:3672\"]},{\"tk\":[1375,7,1375,31],\"els\":[\"0:3672\"]},{\"tk\":[1375,32,1375,54],\"els\":[\"0:3672\"]},{\"tk\":[1376,10,1376,12],\"els\":[\"0:3672\"]},{\"tk\":[1376,14,1376,38],\"els\":[\"0:3672\"]},{\"tk\":[1376,39,1376,49],\"els\":[\"0:3672\"]},{\"tk\":[1376,50,1376,51],\"els\":[\"0:3672\"]},{\"tk\":[1377,14,1377,38],\"els\":[\"0:3672\"]},{\"tk\":[1377,39,1377,61],\"els\":[\"0:3672\"]},{\"tk\":[1378,5,1378,29],\"els\":[\"0:3672\"]},{\"tk\":[1378,30,1378,39],\"els\":[\"0:3672\"]},{\"tk\":[1378,40,1378,41],\"els\":[\"0:3672\"]},{\"tk\":[1379,7,1379,31],\"els\":[\"0:3672\"]},{\"tk\":[1379,32,1379,54],\"els\":[\"0:3672\"]},{\"tk\":[1381,5,1381,29],\"els\":[\"0:3672\"]},{\"tk\":[1381,30,1381,39],\"els\":[\"0:3672\"]},{\"tk\":[1381,40,1381,41],\"els\":[\"0:3672\"]},{\"tk\":[1381,42,1381,66],\"els\":[\"0:3672\"]},{\"tk\":[1381,67,1381,77],\"els\":[\"0:3672\"]},{\"tk\":[1392,3,1392,27],\"els\":[\"0:3653\"]},{\"tk\":[1392,28,1392,38],\"els\":[\"0:3653\"]},{\"tk\":[1392,39,1392,40],\"els\":[\"0:3653\"]},{\"tk\":[1392,41,1392,52],\"els\":[\"0:3635\",\"0:3591\"]},{\"tk\":[1393,5,1393,6],\"els\":[\"0:3635\",\"0:3591\"]},{\"tk\":[1393,6,1393,30],\"els\":[\"0:3635\",\"0:3591\"]},{\"tk\":[1393,30,1393,31],\"els\":[\"0:3635\",\"0:3591\"]},{\"tk\":[1393,31,1393,37],\"els\":[\"0:3635\",\"0:3591\"]},{\"tk\":[1393,37,1393,38],\"els\":[\"0:3635\",\"0:3591\"]},{\"tk\":[1393,39,1393,42],\"els\":[\"0:3635\",\"0:3591\"]},{\"tk\":[1393,42,1393,43],\"els\":[\"0:3635\",\"0:3591\"]},{\"tk\":[1393,44,1393,45],\"els\":[\"0:3653\"]},{\"tk\":[1393,46,1393,70],\"els\":[\"0:3653\"]},{\"tk\":[1393,71,1393,80],\"els\":[\"0:3653\"]},{\"tk\":[1393,81,1393,82],\"els\":[\"0:3653\"]},{\"tk\":[1394,6,1394,30],\"els\":[\"0:3621\"]},{\"tk\":[1394,31,1394,48],\"els\":[\"0:3621\"]},{\"tk\":[1394,49,1394,50],\"els\":[\"0:3597\"]},{\"tk\":[1395,6,1395,30],\"els\":[\"0:3597\"]},{\"tk\":[1395,31,1395,41],\"els\":[\"0:3597\"]},{\"tk\":[1398,3,1398,5],\"els\":[\"0:3664\"]},{\"tk\":[1398,42,1398,43],\"els\":[\"0:3664\"]},{\"tk\":[1399,7,1399,31],\"els\":[\"0:3664\"]},{\"tk\":[1399,32,1399,55],\"els\":[\"0:3664\"]},{\"tk\":[1400,5,1400,29],\"els\":[\"0:3664\"]},{\"tk\":[1400,30,1400,40],\"els\":[\"0:3664\"]},{\"tk\":[1400,41,1400,42],\"els\":[\"0:3664\"]},{\"tk\":[1401,7,1401,31],\"els\":[\"0:3664\"]},{\"tk\":[1401,32,1401,55],\"els\":[\"0:3664\"]},{\"tk\":[1402,10,1402,12],\"els\":[\"0:3664\"]},{\"tk\":[1402,49,1402,50],\"els\":[\"0:3664\"]},{\"tk\":[1403,14,1403,38],\"els\":[\"0:3664\"]},{\"tk\":[1403,39,1403,62],\"els\":[\"0:3664\"]},{\"tk\":[1404,5,1404,29],\"els\":[\"0:3664\"]},{\"tk\":[1404,30,1404,40],\"els\":[\"0:3664\"]},{\"tk\":[1404,41,1404,42],\"els\":[\"0:3664\"]},{\"tk\":[1405,7,1405,31],\"els\":[\"0:3664\"]},{\"tk\":[1405,32,1405,55],\"els\":[\"0:3664\"]},{\"tk\":[1407,5,1407,29],\"els\":[\"0:3664\"]},{\"tk\":[1407,30,1407,40],\"els\":[\"0:3664\"]},{\"tk\":[1407,41,1407,42],\"els\":[\"0:3664\"]},{\"tk\":[1413,3,1413,5],\"els\":[\"0:3673\"]},{\"tk\":[1413,14,1413,15],\"els\":[\"0:3673\"]},{\"tk\":[1413,16,1413,40],\"els\":[\"0:3673\"]},{\"tk\":[1413,41,1413,63],\"els\":[\"0:3673\"]},{\"tk\":[1414,5,1414,29],\"els\":[\"0:3673\"]},{\"tk\":[1414,30,1414,40],\"els\":[\"0:3673\"]},{\"tk\":[1414,41,1414,42],\"els\":[\"0:3673\"]},{\"tk\":[1415,7,1415,31],\"els\":[\"0:3673\"]},{\"tk\":[1415,32,1415,54],\"els\":[\"0:3673\"]},{\"tk\":[1416,10,1416,12],\"els\":[\"0:3673\"]},{\"tk\":[1416,21,1416,22],\"els\":[\"0:3673\"]},{\"tk\":[1416,23,1416,47],\"els\":[\"0:3673\"]},{\"tk\":[1416,48,1416,70],\"els\":[\"0:3673\"]},{\"tk\":[1417,5,1417,29],\"els\":[\"0:3673\"]},{\"tk\":[1417,30,1417,40],\"els\":[\"0:3673\"]},{\"tk\":[1417,41,1417,42],\"els\":[\"0:3673\"]},{\"tk\":[1418,7,1418,31],\"els\":[\"0:3673\"]},{\"tk\":[1418,32,1418,54],\"els\":[\"0:3673\"]},{\"tk\":[1420,5,1420,29],\"els\":[\"0:3673\"]},{\"tk\":[1420,30,1420,40],\"els\":[\"0:3673\"]},{\"tk\":[1420,41,1420,42],\"els\":[\"0:3673\"]},{\"tk\":[1428,3,1428,27],\"els\":[\"0:3642\"]},{\"tk\":[1428,28,1428,38],\"els\":[\"0:3642\"]},{\"tk\":[1428,39,1428,40],\"els\":[\"0:3642\"]},{\"tk\":[1428,42,1428,66],\"els\":[\"0:3601\"]},{\"tk\":[1428,67,1428,77],\"els\":[\"0:3601\"]},{\"tk\":[1428,78,1428,79],\"els\":[\"0:3601\"]},{\"tk\":[1429,5,1429,29],\"els\":[\"0:3601\"]},{\"tk\":[1429,30,1429,40],\"els\":[\"0:3601\"]},{\"tk\":[1429,42,1429,43],\"els\":[\"0:3642\"]},{\"tk\":[1429,44,1429,68],\"els\":[\"0:3642\"]},{\"tk\":[1429,69,1429,81],\"els\":[\"0:3642\"]},{\"tk\":[1434,3,1434,5],\"els\":[\"0:3637\"]},{\"tk\":[1434,7,1434,31],\"els\":[\"0:3620\"]},{\"tk\":[1434,32,1434,49],\"els\":[\"0:3620\"]},{\"tk\":[1434,50,1434,51],\"els\":[\"0:3637\"]},{\"tk\":[1434,52,1434,55],\"els\":[\"0:3637\"]},{\"tk\":[1435,5,1435,29],\"els\":[\"0:3637\"]},{\"tk\":[1435,30,1435,34],\"els\":[\"0:3637\"]},{\"tk\":[1435,35,1435,36],\"els\":[\"0:3637\"]},{\"tk\":[1435,37,1435,38],\"els\":[\"0:3637\"]},{\"tk\":[1435,38,1435,49],\"els\":[\"0:3637\"]},{\"tk\":[1436,7,1436,8],\"els\":[\"0:3637\"]},{\"tk\":[1436,8,1436,9],\"els\":[\"0:3637\"]},{\"tk\":[1436,9,1436,33],\"els\":[\"0:3637\",\"0:3620\"]},{\"tk\":[1436,33,1436,34],\"els\":[\"0:3637\"]},{\"tk\":[1436,34,1436,51],\"els\":[\"0:3637\",\"0:3620\"]},{\"tk\":[1436,51,1436,52],\"els\":[\"0:3637\"]},{\"tk\":[1436,53,1436,54],\"els\":[\"0:3637\"]},{\"tk\":[1436,54,1436,60],\"els\":[\"0:3637\"]},{\"tk\":[1436,60,1436,61],\"els\":[\"0:3637\"]},{\"tk\":[1438,5,1438,29],\"els\":[\"0:3637\"]},{\"tk\":[1438,30,1438,34],\"els\":[\"0:3637\"]},{\"tk\":[1438,35,1438,36],\"els\":[\"0:3637\"]},{\"tk\":[1438,37,1438,48],\"els\":[\"0:3637\",\"0:3620\"]},{\"tk\":[1439,7,1439,8],\"els\":[\"0:3637\",\"0:3620\"]},{\"tk\":[1439,8,1439,32],\"els\":[\"0:3637\",\"0:3620\"]},{\"tk\":[1439,32,1439,33],\"els\":[\"0:3637\",\"0:3620\"]},{\"tk\":[1439,33,1439,50],\"els\":[\"0:3637\",\"0:3620\"]},{\"tk\":[1439,50,1439,51],\"els\":[\"0:3637\",\"0:3620\"]},{\"tk\":[1439,52,1439,53],\"els\":[\"0:3637\",\"0:3620\"]},{\"tk\":[1439,53,1439,59],\"els\":[\"0:3637\",\"0:3620\"]},{\"tk\":[1439,59,1439,60],\"els\":[\"0:3637\",\"0:3620\"]},{\"tk\":[1445,3,1445,27],\"els\":[\"0:3655\"]},{\"tk\":[1445,28,1445,38],\"els\":[\"0:3655\"]},{\"tk\":[1445,39,1445,40],\"els\":[\"0:3655\"]},{\"tk\":[1445,41,1445,65],\"els\":[\"0:3655\"]},{\"tk\":[1445,66,1445,70],\"els\":[\"0:3655\"]},{\"tk\":[1445,71,1445,72],\"els\":[\"0:3655\"]},{\"tk\":[1446,5,1446,29],\"els\":[\"0:3655\"]},{\"tk\":[1446,30,1446,40],\"els\":[\"0:3655\"]},{\"tk\":[1446,41,1446,42],\"els\":[\"0:3655\"]},{\"tk\":[1446,43,1446,67],\"els\":[\"0:3655\"]},{\"tk\":[1446,68,1446,78],\"els\":[\"0:3655\"]},{\"tk\":[1449,3,1449,5],\"els\":[\"0:3663\"]},{\"tk\":[1449,7,1449,31],\"els\":[\"0:3663\"]},{\"tk\":[1449,32,1449,42],\"els\":[\"0:3663\"]},{\"tk\":[1449,43,1449,44],\"els\":[\"0:3663\"]},{\"tk\":[1450,7,1450,31],\"els\":[\"0:3663\"]},{\"tk\":[1450,32,1450,55],\"els\":[\"0:3663\"]},{\"tk\":[1451,5,1451,29],\"els\":[\"0:3663\"]},{\"tk\":[1451,30,1451,39],\"els\":[\"0:3663\"]},{\"tk\":[1451,40,1451,41],\"els\":[\"0:3663\"]},{\"tk\":[1452,7,1452,31],\"els\":[\"0:3663\"]},{\"tk\":[1452,32,1452,55],\"els\":[\"0:3663\"]},{\"tk\":[1453,10,1453,12],\"els\":[\"0:3663\"]},{\"tk\":[1453,14,1453,38],\"els\":[\"0:3663\"]},{\"tk\":[1453,39,1453,49],\"els\":[\"0:3663\"]},{\"tk\":[1453,50,1453,51],\"els\":[\"0:3663\"]},{\"tk\":[1454,14,1454,38],\"els\":[\"0:3663\"]},{\"tk\":[1454,39,1454,62],\"els\":[\"0:3663\"]},{\"tk\":[1455,5,1455,29],\"els\":[\"0:3663\"]},{\"tk\":[1455,30,1455,39],\"els\":[\"0:3663\"]},{\"tk\":[1455,40,1455,41],\"els\":[\"0:3663\"]},{\"tk\":[1456,7,1456,31],\"els\":[\"0:3663\"]},{\"tk\":[1456,32,1456,55],\"els\":[\"0:3663\"]},{\"tk\":[1458,5,1458,29],\"els\":[\"0:3663\"]},{\"tk\":[1458,30,1458,39],\"els\":[\"0:3663\"]},{\"tk\":[1458,40,1458,41],\"els\":[\"0:3663\"]},{\"tk\":[1458,42,1458,66],\"els\":[\"0:3663\"]},{\"tk\":[1458,67,1458,77],\"els\":[\"0:3663\"]},{\"tk\":[1468,3,1468,27],\"els\":[\"0:3654\"]},{\"tk\":[1468,28,1468,38],\"els\":[\"0:3654\"]},{\"tk\":[1468,39,1468,40],\"els\":[\"0:3654\"]},{\"tk\":[1468,41,1468,52],\"els\":[\"0:3636\",\"0:3592\"]},{\"tk\":[1469,5,1469,6],\"els\":[\"0:3636\",\"0:3592\"]},{\"tk\":[1469,6,1469,30],\"els\":[\"0:3636\",\"0:3592\"]},{\"tk\":[1469,30,1469,31],\"els\":[\"0:3636\",\"0:3592\"]},{\"tk\":[1469,31,1469,37],\"els\":[\"0:3636\",\"0:3592\"]},{\"tk\":[1469,37,1469,38],\"els\":[\"0:3636\",\"0:3592\"]},{\"tk\":[1469,39,1469,45],\"els\":[\"0:3636\",\"0:3592\"]},{\"tk\":[1469,45,1469,46],\"els\":[\"0:3636\",\"0:3592\"]},{\"tk\":[1469,47,1469,48],\"els\":[\"0:3654\"]},{\"tk\":[1470,5,1470,29],\"els\":[\"0:3654\"]},{\"tk\":[1470,30,1470,39],\"els\":[\"0:3654\"]},{\"tk\":[1470,40,1470,41],\"els\":[\"0:3654\"]},{\"tk\":[1471,6,1471,30],\"els\":[\"0:3623\"]},{\"tk\":[1471,31,1471,48],\"els\":[\"0:3623\"]},{\"tk\":[1471,49,1471,50],\"els\":[\"0:3598\"]},{\"tk\":[1472,6,1472,30],\"els\":[\"0:3598\"]},{\"tk\":[1472,31,1472,41],\"els\":[\"0:3598\"]},{\"tk\":[1475,3,1475,5],\"els\":[\"0:3667\"]},{\"tk\":[1475,42,1475,43],\"els\":[\"0:3667\"]},{\"tk\":[1476,7,1476,31],\"els\":[\"0:3667\"]},{\"tk\":[1476,32,1476,55],\"els\":[\"0:3667\"]},{\"tk\":[1477,5,1477,29],\"els\":[\"0:3667\"]},{\"tk\":[1477,30,1477,39],\"els\":[\"0:3667\"]},{\"tk\":[1477,40,1477,41],\"els\":[\"0:3667\"]},{\"tk\":[1478,7,1478,31],\"els\":[\"0:3667\"]},{\"tk\":[1478,32,1478,55],\"els\":[\"0:3667\"]},{\"tk\":[1479,10,1479,12],\"els\":[\"0:3667\"]},{\"tk\":[1479,49,1479,50],\"els\":[\"0:3667\"]},{\"tk\":[1480,14,1480,38],\"els\":[\"0:3667\"]},{\"tk\":[1480,39,1480,62],\"els\":[\"0:3667\"]},{\"tk\":[1481,5,1481,29],\"els\":[\"0:3667\"]},{\"tk\":[1481,30,1481,39],\"els\":[\"0:3667\"]},{\"tk\":[1481,40,1481,41],\"els\":[\"0:3667\"]},{\"tk\":[1482,7,1482,31],\"els\":[\"0:3667\"]},{\"tk\":[1482,32,1482,55],\"els\":[\"0:3667\"]},{\"tk\":[1488,3,1488,5],\"els\":[\"0:3665\"]},{\"tk\":[1488,14,1488,15],\"els\":[\"0:3665\"]},{\"tk\":[1488,16,1488,40],\"els\":[\"0:3665\"]},{\"tk\":[1488,41,1488,64],\"els\":[\"0:3665\"]},{\"tk\":[1489,5,1489,11],\"els\":[\"0:3267\"]},{\"tk\":[1489,12,1489,13],\"els\":[\"0:3665\"]},{\"tk\":[1489,14,1489,38],\"els\":[\"0:3665\"]},{\"tk\":[1489,39,1489,62],\"els\":[\"0:3665\"]},{\"tk\":[1490,10,1490,12],\"els\":[\"0:3665\"]},{\"tk\":[1490,21,1490,22],\"els\":[\"0:3665\"]},{\"tk\":[1490,23,1490,47],\"els\":[\"0:3665\"]},{\"tk\":[1490,48,1490,71],\"els\":[\"0:3665\"]},{\"tk\":[1491,5,1491,11],\"els\":[\"0:3267\"]},{\"tk\":[1491,12,1491,13],\"els\":[\"0:3665\"]},{\"tk\":[1491,14,1491,38],\"els\":[\"0:3665\"]},{\"tk\":[1491,39,1491,62],\"els\":[\"0:3665\"]},{\"tk\":[1499,3,1499,27],\"els\":[\"0:3644\"]},{\"tk\":[1499,28,1499,38],\"els\":[\"0:3644\"]},{\"tk\":[1499,39,1499,40],\"els\":[\"0:3644\"]},{\"tk\":[1499,42,1499,66],\"els\":[\"0:3606\"]},{\"tk\":[1499,67,1499,76],\"els\":[\"0:3606\"]},{\"tk\":[1499,77,1499,78],\"els\":[\"0:3606\"]},{\"tk\":[1500,5,1500,11],\"els\":[\"0:3267\"]},{\"tk\":[1500,13,1500,14],\"els\":[\"0:3644\"]},{\"tk\":[1500,15,1500,39],\"els\":[\"0:3644\"]},{\"tk\":[1500,40,1500,52],\"els\":[\"0:3644\"]},{\"tk\":[1503,3,1503,5],\"els\":[\"0:3660\"]},{\"tk\":[1503,7,1503,31],\"els\":[\"0:3660\"]},{\"tk\":[1503,32,1503,42],\"els\":[\"0:3660\"]},{\"tk\":[1503,43,1503,44],\"els\":[\"0:3660\"]},{\"tk\":[1504,7,1504,31],\"els\":[\"0:3660\"]},{\"tk\":[1504,32,1504,54],\"els\":[\"0:3660\"]},{\"tk\":[1505,5,1505,29],\"els\":[\"0:3660\"]},{\"tk\":[1505,30,1505,39],\"els\":[\"0:3660\"]},{\"tk\":[1505,40,1505,41],\"els\":[\"0:3660\"]},{\"tk\":[1506,7,1506,31],\"els\":[\"0:3660\"]},{\"tk\":[1506,32,1506,54],\"els\":[\"0:3660\"]},{\"tk\":[1507,10,1507,12],\"els\":[\"0:3660\"]},{\"tk\":[1507,14,1507,38],\"els\":[\"0:3660\"]},{\"tk\":[1507,39,1507,49],\"els\":[\"0:3660\"]},{\"tk\":[1507,50,1507,51],\"els\":[\"0:3660\"]},{\"tk\":[1508,14,1508,38],\"els\":[\"0:3660\"]},{\"tk\":[1508,39,1508,61],\"els\":[\"0:3660\"]},{\"tk\":[1509,5,1509,29],\"els\":[\"0:3660\"]},{\"tk\":[1509,30,1509,39],\"els\":[\"0:3660\"]},{\"tk\":[1509,40,1509,41],\"els\":[\"0:3660\"]},{\"tk\":[1510,7,1510,31],\"els\":[\"0:3660\"]},{\"tk\":[1510,32,1510,54],\"els\":[\"0:3660\"]},{\"tk\":[1512,5,1512,29],\"els\":[\"0:3660\"]},{\"tk\":[1512,30,1512,39],\"els\":[\"0:3660\"]},{\"tk\":[1512,40,1512,41],\"els\":[\"0:3660\"]},{\"tk\":[1512,42,1512,66],\"els\":[\"0:3660\"]},{\"tk\":[1512,67,1512,77],\"els\":[\"0:3660\"]},{\"tk\":[1520,3,1520,5],\"els\":[\"0:3638\"]},{\"tk\":[1520,7,1520,31],\"els\":[\"0:3620\"]},{\"tk\":[1520,32,1520,49],\"els\":[\"0:3620\"]},{\"tk\":[1520,50,1520,51],\"els\":[\"0:3638\"]},{\"tk\":[1520,52,1520,55],\"els\":[\"0:3638\"]},{\"tk\":[1521,5,1521,29],\"els\":[\"0:3638\"]},{\"tk\":[1521,30,1521,34],\"els\":[\"0:3638\"]},{\"tk\":[1521,35,1521,36],\"els\":[\"0:3638\"]},{\"tk\":[1521,37,1521,38],\"els\":[\"0:3638\"]},{\"tk\":[1521,38,1521,49],\"els\":[\"0:3638\"]},{\"tk\":[1522,7,1522,8],\"els\":[\"0:3638\"]},{\"tk\":[1522,8,1522,9],\"els\":[\"0:3638\"]},{\"tk\":[1522,9,1522,33],\"els\":[\"0:3638\",\"0:3620\"]},{\"tk\":[1522,33,1522,34],\"els\":[\"0:3638\"]},{\"tk\":[1522,34,1522,51],\"els\":[\"0:3638\",\"0:3620\"]},{\"tk\":[1522,51,1522,52],\"els\":[\"0:3638\"]},{\"tk\":[1522,53,1522,54],\"els\":[\"0:3638\"]},{\"tk\":[1522,54,1522,58],\"els\":[\"0:3638\"]},{\"tk\":[1522,58,1522,59],\"els\":[\"0:3638\"]},{\"tk\":[1524,5,1524,29],\"els\":[\"0:3638\"]},{\"tk\":[1524,30,1524,34],\"els\":[\"0:3638\"]},{\"tk\":[1524,35,1524,36],\"els\":[\"0:3638\"]},{\"tk\":[1524,37,1524,48],\"els\":[\"0:3638\",\"0:3620\"]},{\"tk\":[1525,7,1525,8],\"els\":[\"0:3638\",\"0:3620\"]},{\"tk\":[1525,8,1525,32],\"els\":[\"0:3638\",\"0:3620\"]},{\"tk\":[1525,32,1525,33],\"els\":[\"0:3638\",\"0:3620\"]},{\"tk\":[1525,33,1525,50],\"els\":[\"0:3638\",\"0:3620\"]},{\"tk\":[1525,50,1525,51],\"els\":[\"0:3638\",\"0:3620\"]},{\"tk\":[1525,52,1525,53],\"els\":[\"0:3638\",\"0:3620\"]},{\"tk\":[1525,53,1525,57],\"els\":[\"0:3638\",\"0:3620\"]},{\"tk\":[1525,57,1525,58],\"els\":[\"0:3638\",\"0:3620\"]},{\"tk\":[1531,3,1531,5],\"els\":[\"0:3666\"]},{\"tk\":[1531,7,1531,31],\"els\":[\"0:3666\"]},{\"tk\":[1531,32,1531,42],\"els\":[\"0:3666\"]},{\"tk\":[1531,43,1531,44],\"els\":[\"0:3666\"]},{\"tk\":[1532,7,1532,31],\"els\":[\"0:3666\"]},{\"tk\":[1532,32,1532,55],\"els\":[\"0:3666\"]},{\"tk\":[1533,5,1533,29],\"els\":[\"0:3666\"]},{\"tk\":[1533,30,1533,59],\"els\":[\"0:3666\"]},{\"tk\":[1533,60,1533,61],\"els\":[\"0:3666\"]},{\"tk\":[1534,7,1534,31],\"els\":[\"0:3666\"]},{\"tk\":[1534,32,1534,55],\"els\":[\"0:3666\"]},{\"tk\":[1535,10,1535,12],\"els\":[\"0:3666\"]},{\"tk\":[1535,14,1535,38],\"els\":[\"0:3666\"]},{\"tk\":[1535,39,1535,49],\"els\":[\"0:3666\"]},{\"tk\":[1535,50,1535,51],\"els\":[\"0:3666\"]},{\"tk\":[1536,14,1536,38],\"els\":[\"0:3666\"]},{\"tk\":[1536,39,1536,62],\"els\":[\"0:3666\"]},{\"tk\":[1537,5,1537,29],\"els\":[\"0:3666\"]},{\"tk\":[1537,30,1537,59],\"els\":[\"0:3666\"]},{\"tk\":[1537,60,1537,61],\"els\":[\"0:3666\"]},{\"tk\":[1538,7,1538,31],\"els\":[\"0:3666\"]},{\"tk\":[1538,32,1538,55],\"els\":[\"0:3666\"]},{\"tk\":[1540,5,1540,29],\"els\":[\"0:3666\"]},{\"tk\":[1540,30,1540,59],\"els\":[\"0:3666\"]},{\"tk\":[1540,60,1540,61],\"els\":[\"0:3666\"]},{\"tk\":[1541,7,1541,31],\"els\":[\"0:3666\"]},{\"tk\":[1541,32,1541,42],\"els\":[\"0:3666\"]},{\"tk\":[1559,3,1559,27],\"els\":[\"0:3607\"]},{\"tk\":[1559,28,1559,34],\"els\":[\"0:3607\"]},{\"tk\":[1559,35,1559,36],\"els\":[\"0:3607\"]},{\"tk\":[1559,40,1559,64],\"els\":[\"0:3684\"]},{\"tk\":[1559,65,1559,79],\"els\":[\"0:3684\"]},{\"tk\":[1559,80,1559,81],\"els\":[\"0:3684\"]},{\"tk\":[1560,5,1560,29],\"els\":[\"0:3684\"]},{\"tk\":[1560,30,1560,40],\"els\":[\"0:3684\"]},{\"tk\":[1560,41,1560,42],\"els\":[\"0:3607\"]},{\"tk\":[1560,43,1560,67],\"els\":[\"0:3681\"]},{\"tk\":[1560,68,1560,77],\"els\":[\"0:3681\"]},{\"tk\":[1560,78,1560,79],\"els\":[\"0:3681\"]},{\"tk\":[1561,5,1561,29],\"els\":[\"0:3681\"]},{\"tk\":[1561,30,1561,39],\"els\":[\"0:3681\"]},{\"tk\":[1561,41,1561,42],\"els\":[\"0:3607\"]},{\"tk\":[1562,6,1562,30],\"els\":[\"0:3614\"]},{\"tk\":[1562,31,1562,60],\"els\":[\"0:3614\"]},{\"tk\":[1562,61,1562,62],\"els\":[\"0:3614\"]},{\"tk\":[1563,6,1563,30],\"els\":[\"0:3614\"]},{\"tk\":[1563,31,1563,60],\"els\":[\"0:3614\"]},{\"tk\":[1563,63,1563,64],\"els\":[\"0:3607\"]},{\"tk\":[1564,5,1564,30],\"els\":[\"0:3632\"]},{\"tk\":[1564,31,1564,62],\"els\":[\"0:3632\"]},{\"tk\":[1564,64,1564,65],\"els\":[\"0:3607\"]},{\"tk\":[1565,6,1565,30],\"els\":[\"0:3656\"]},{\"tk\":[1565,31,1565,35],\"els\":[\"0:3656\"]},{\"tk\":[1565,36,1565,37],\"els\":[\"0:3656\"]},{\"tk\":[1565,38,1565,62],\"els\":[\"0:3656\"]},{\"tk\":[1565,63,1565,73],\"els\":[\"0:3656\"]},{\"tk\":[1565,74,1565,75],\"els\":[\"0:3656\"]},{\"tk\":[1566,6,1566,30],\"els\":[\"0:3656\"]},{\"tk\":[1566,31,1566,41],\"els\":[\"0:3656\"]},{\"tk\":[1566,42,1566,43],\"els\":[\"0:3608\"]},{\"tk\":[1566,44,1566,55],\"els\":[\"0:3639\",\"0:3593\"]},{\"tk\":[1567,6,1567,7],\"els\":[\"0:3639\",\"0:3593\"]},{\"tk\":[1567,7,1567,31],\"els\":[\"0:3639\",\"0:3593\"]},{\"tk\":[1567,31,1567,32],\"els\":[\"0:3639\",\"0:3593\"]},{\"tk\":[1567,32,1567,38],\"els\":[\"0:3639\",\"0:3593\"]},{\"tk\":[1567,38,1567,39],\"els\":[\"0:3639\",\"0:3593\"]},{\"tk\":[1567,40,1567,44],\"els\":[\"0:3639\",\"0:3593\"]},{\"tk\":[1567,44,1567,45],\"els\":[\"0:3639\",\"0:3593\"]},{\"tk\":[1567,46,1567,47],\"els\":[\"0:3657\"]},{\"tk\":[1568,6,1568,30],\"els\":[\"0:3657\"]},{\"tk\":[1568,31,1568,60],\"els\":[\"0:3657\"]},{\"tk\":[1568,61,1568,62],\"els\":[\"0:3657\"]},{\"tk\":[1569,7,1569,31],\"els\":[\"0:3624\"]},{\"tk\":[1569,32,1569,49],\"els\":[\"0:3624\"]},{\"tk\":[1569,50,1569,51],\"els\":[\"0:3603\"]},{\"tk\":[1570,7,1570,31],\"els\":[\"0:3603\"]},{\"tk\":[1570,32,1570,42],\"els\":[\"0:3603\"]},{\"tk\":[1570,45,1570,46],\"els\":[\"0:3647\"]},{\"tk\":[1571,5,1571,29],\"els\":[\"0:3647\"]},{\"tk\":[1571,30,1571,42],\"els\":[\"0:3647\"]},{\"tk\":[1574,3,1574,5],\"els\":[\"0:3671\"]},{\"tk\":[1574,7,1574,31],\"els\":[\"0:3671\"]},{\"tk\":[1574,32,1574,42],\"els\":[\"0:3671\"]},{\"tk\":[1574,43,1574,44],\"els\":[\"0:3671\"]},{\"tk\":[1575,7,1575,31],\"els\":[\"0:3671\"]},{\"tk\":[1575,32,1575,54],\"els\":[\"0:3671\"]},{\"tk\":[1576,5,1576,29],\"els\":[\"0:3671\"]},{\"tk\":[1576,30,1576,40],\"els\":[\"0:3671\"]},{\"tk\":[1576,41,1576,42],\"els\":[\"0:3671\"]},{\"tk\":[1577,7,1577,31],\"els\":[\"0:3671\"]},{\"tk\":[1577,32,1577,54],\"els\":[\"0:3671\"]},{\"tk\":[1578,10,1578,12],\"els\":[\"0:3671\"]},{\"tk\":[1578,14,1578,38],\"els\":[\"0:3671\"]},{\"tk\":[1578,39,1578,49],\"els\":[\"0:3671\"]},{\"tk\":[1578,50,1578,51],\"els\":[\"0:3671\"]},{\"tk\":[1579,14,1579,38],\"els\":[\"0:3671\"]},{\"tk\":[1579,39,1579,61],\"els\":[\"0:3671\"]},{\"tk\":[1580,5,1580,29],\"els\":[\"0:3671\"]},{\"tk\":[1580,30,1580,40],\"els\":[\"0:3671\"]},{\"tk\":[1580,41,1580,42],\"els\":[\"0:3671\"]},{\"tk\":[1581,7,1581,31],\"els\":[\"0:3671\"]},{\"tk\":[1581,32,1581,54],\"els\":[\"0:3671\"]},{\"tk\":[1583,5,1583,29],\"els\":[\"0:3671\"]},{\"tk\":[1583,30,1583,40],\"els\":[\"0:3671\"]},{\"tk\":[1583,41,1583,42],\"els\":[\"0:3671\"]},{\"tk\":[1583,43,1583,67],\"els\":[\"0:3671\"]},{\"tk\":[1583,68,1583,78],\"els\":[\"0:3671\"]},{\"tk\":[1589,3,1589,27],\"els\":[\"0:3685\"]},{\"tk\":[1589,28,1589,37],\"els\":[\"0:3685\"]},{\"tk\":[1589,38,1589,39],\"els\":[\"0:3685\"]},{\"tk\":[1589,40,1589,64],\"els\":[\"0:3685\"]},{\"tk\":[1589,65,1589,79],\"els\":[\"0:3685\"]},{\"tk\":[1589,80,1589,81],\"els\":[\"0:3685\"]},{\"tk\":[1590,5,1590,29],\"els\":[\"0:3685\"]},{\"tk\":[1590,30,1590,40],\"els\":[\"0:3685\"]},{\"tk\":[1595,3,1595,27],\"els\":[\"0:3532#out:1\"]},{\"tk\":[1595,28,1595,40],\"els\":[\"0:3532#out:1\"]},{\"tk\":[1595,41,1595,42],\"els\":[\"0:3532#out:1\",\"0:3532\"]},{\"tk\":[1595,43,1595,67],\"els\":[\"0:3532\"]},{\"tk\":[1595,68,1595,80],\"els\":[\"0:3532\"]},{\"tk\":[1595,81,1595,82],\"els\":[\"0:3532\"]},{\"tk\":[1596,5,1596,30],\"els\":[\"0:3519\"]},{\"tk\":[1596,31,1596,62],\"els\":[\"0:3519\"]},{\"tk\":[1608,3,1608,5],\"els\":[\"0:3583\"]},{\"tk\":[1608,7,1608,32],\"els\":[\"0:3583\",\"0:3581\"]},{\"tk\":[1608,33,1608,46],\"els\":[\"0:3583\",\"0:3581\"]},{\"tk\":[1609,5,1609,29],\"els\":[\"0:3583\"]},{\"tk\":[1609,30,1609,59],\"els\":[\"0:3583\"]},{\"tk\":[1609,60,1609,61],\"els\":[\"0:3583\"]},{\"tk\":[1610,7,1610,31],\"els\":[\"0:3577\"]},{\"tk\":[1610,32,1610,41],\"els\":[\"0:3577\"]},{\"tk\":[1610,42,1610,43],\"els\":[\"0:3577\"]},{\"tk\":[1611,7,1611,31],\"els\":[\"0:3577\",\"0:380\"]},{\"tk\":[1611,32,1611,47],\"els\":[\"0:3577\",\"0:380\"]},{\"tk\":[1612,5,1612,29],\"els\":[\"0:3583\"]},{\"tk\":[1612,30,1612,59],\"els\":[\"0:3583\"]},{\"tk\":[1612,60,1612,61],\"els\":[\"0:3583\"]},{\"tk\":[1613,7,1613,31],\"els\":[\"0:3587\"]},{\"tk\":[1613,32,1613,41],\"els\":[\"0:3587\"]},{\"tk\":[1613,42,1613,43],\"els\":[\"0:3587\"]},{\"tk\":[1613,44,1613,69],\"els\":[\"0:3587\",\"0:3580\"]},{\"tk\":[1613,70,1613,80],\"els\":[\"0:3587\",\"0:3580\"]},{\"tk\":[1614,5,1614,29],\"els\":[\"0:3583\"]},{\"tk\":[1614,30,1614,59],\"els\":[\"0:3583\"]},{\"tk\":[1614,60,1614,61],\"els\":[\"0:3583\"]},{\"tk\":[1615,7,1615,32],\"els\":[\"0:3584\",\"0:3579\"]},{\"tk\":[1615,33,1615,37],\"els\":[\"0:3584\",\"0:3579\"]},{\"tk\":[1617,5,1617,29],\"els\":[\"0:3583\"]},{\"tk\":[1617,30,1617,59],\"els\":[\"0:3583\"]},{\"tk\":[1617,60,1617,61],\"els\":[\"0:3583\"]},{\"tk\":[1618,7,1618,31],\"els\":[\"0:3578\"]},{\"tk\":[1618,32,1618,49],\"els\":[\"0:3578\"]},{\"tk\":[1619,5,1619,29],\"els\":[\"0:3583\"]},{\"tk\":[1619,30,1619,59],\"els\":[\"0:3583\"]},{\"tk\":[1619,60,1619,61],\"els\":[\"0:3583\"]},{\"tk\":[1620,7,1620,31],\"els\":[\"0:3578\"]},{\"tk\":[1620,32,1620,49],\"els\":[\"0:3578\"]},{\"tk\":[1621,5,1621,29],\"els\":[\"0:3583\"]},{\"tk\":[1621,30,1621,59],\"els\":[\"0:3583\"]},{\"tk\":[1621,60,1621,61],\"els\":[\"0:3583\"]},{\"tk\":[1622,7,1622,31],\"els\":[\"0:3578\"]},{\"tk\":[1622,32,1622,49],\"els\":[\"0:3578\"]},{\"tk\":[1630,3,1630,27],\"els\":[\"0:3485\"]},{\"tk\":[1630,28,1630,38],\"els\":[\"0:3485\"]},{\"tk\":[1630,39,1630,40],\"els\":[\"0:3485\"]},{\"tk\":[1631,5,1631,29],\"els\":[\"0:3485\"]},{\"tk\":[1631,30,1631,59],\"els\":[\"0:3485\"]},{\"tk\":[1631,60,1631,61],\"els\":[\"0:3485\"]},{\"tk\":[1632,5,1632,30],\"els\":[\"0:3519\"]},{\"tk\":[1632,31,1632,62],\"els\":[\"0:3519\"]},{\"tk\":[1639,3,1639,27],\"els\":[\"0:3480\"]},{\"tk\":[1639,28,1639,38],\"els\":[\"0:3480\"]},{\"tk\":[1639,39,1639,40],\"els\":[\"0:3480\",\"0:3481\",\"0:3482\",\"0:3483\"]},{\"tk\":[1639,41,1639,45],\"els\":[\"0:3480\"]},{\"tk\":[1639,46,1639,70],\"els\":[\"0:3480\"]},{\"tk\":[1639,71,1639,81],\"els\":[\"0:3480\"]},{\"tk\":[1642,3,1642,5],\"els\":[\"0:3548\"]},{\"tk\":[1642,7,1642,31],\"els\":[\"0:3548\"]},{\"tk\":[1642,32,1642,42],\"els\":[\"0:3548\"]},{\"tk\":[1642,43,1642,44],\"els\":[\"0:3548\"]},{\"tk\":[1643,7,1643,31],\"els\":[\"0:3548\"]},{\"tk\":[1643,32,1643,54],\"els\":[\"0:3548\"]},{\"tk\":[1644,5,1644,29],\"els\":[\"0:3548\"]},{\"tk\":[1644,30,1644,59],\"els\":[\"0:3548\"]},{\"tk\":[1644,60,1644,61],\"els\":[\"0:3548\"]},{\"tk\":[1645,7,1645,31],\"els\":[\"0:3548\"]},{\"tk\":[1645,32,1645,54],\"els\":[\"0:3548\"]},{\"tk\":[1646,10,1646,12],\"els\":[\"0:3548\"]},{\"tk\":[1646,14,1646,38],\"els\":[\"0:3548\"]},{\"tk\":[1646,39,1646,49],\"els\":[\"0:3548\"]},{\"tk\":[1646,50,1646,51],\"els\":[\"0:3548\"]},{\"tk\":[1647,14,1647,38],\"els\":[\"0:3548\"]},{\"tk\":[1647,39,1647,60],\"els\":[\"0:3548\"]},{\"tk\":[1648,5,1648,29],\"els\":[\"0:3548\"]},{\"tk\":[1648,30,1648,59],\"els\":[\"0:3548\"]},{\"tk\":[1648,60,1648,61],\"els\":[\"0:3548\"]},{\"tk\":[1649,7,1649,31],\"els\":[\"0:3548\"]},{\"tk\":[1649,32,1649,53],\"els\":[\"0:3548\"]},{\"tk\":[1651,5,1651,29],\"els\":[\"0:3548\"]},{\"tk\":[1651,30,1651,59],\"els\":[\"0:3548\"]},{\"tk\":[1651,60,1651,61],\"els\":[\"0:3548\"]},{\"tk\":[1652,7,1652,31],\"els\":[\"0:3548\"]},{\"tk\":[1652,32,1652,42],\"els\":[\"0:3548\"]},{\"tk\":[1658,3,1658,27],\"els\":[\"0:3572\"]},{\"tk\":[1658,28,1658,37],\"els\":[\"0:3572\"]},{\"tk\":[1658,38,1658,39],\"els\":[\"0:3572\"]},{\"tk\":[1658,40,1658,64],\"els\":[\"0:3572\"]},{\"tk\":[1658,65,1658,79],\"els\":[\"0:3572\"]},{\"tk\":[1658,80,1658,81],\"els\":[\"0:3572\"]},{\"tk\":[1659,5,1659,29],\"els\":[\"0:3572\"]},{\"tk\":[1659,30,1659,40],\"els\":[\"0:3572\"]},{\"tk\":[1666,3,1666,27],\"els\":[\"0:3506\"]},{\"tk\":[1666,28,1666,37],\"els\":[\"0:3506\"]},{\"tk\":[1666,38,1666,39],\"els\":[\"0:3506\",\"0:3489\",\"0:3494\"]},{\"tk\":[1667,5,1667,29],\"els\":[\"0:3509\"]},{\"tk\":[1667,30,1667,48],\"els\":[\"0:3509\"]},{\"tk\":[1667,49,1667,50],\"els\":[\"0:3506\"]},{\"tk\":[1668,5,1668,29],\"els\":[\"0:3506\"]},{\"tk\":[1668,30,1668,40],\"els\":[\"0:3506\"]},{\"tk\":[1675,3,1675,9],\"els\":[\"0:3267\"]},{\"tk\":[1675,10,1675,11],\"els\":[\"0:3505\",\"0:3488\",\"0:3493\"]},{\"tk\":[1675,12,1675,36],\"els\":[\"0:3505\"]},{\"tk\":[1675,37,1675,47],\"els\":[\"0:3505\"]},{\"tk\":[1675,48,1675,49],\"els\":[\"0:3505\"]},{\"tk\":[1676,5,1676,29],\"els\":[\"0:3509\"]},{\"tk\":[1676,30,1676,48],\"els\":[\"0:3509\"]},{\"tk\":[1681,3,1681,5],\"els\":[\"0:3550\"]},{\"tk\":[1681,7,1681,31],\"els\":[\"0:3506\"]},{\"tk\":[1681,32,1681,41],\"els\":[\"0:3506\"]},{\"tk\":[1681,42,1681,43],\"els\":[\"0:3550\"]},{\"tk\":[1682,7,1682,31],\"els\":[\"0:3550\"]},{\"tk\":[1682,32,1682,55],\"els\":[\"0:3550\"]},{\"tk\":[1683,5,1683,29],\"els\":[\"0:3550\"]},{\"tk\":[1683,30,1683,40],\"els\":[\"0:3550\"]},{\"tk\":[1683,41,1683,42],\"els\":[\"0:3550\"]},{\"tk\":[1684,7,1684,31],\"els\":[\"0:3550\"]},{\"tk\":[1684,32,1684,55],\"els\":[\"0:3550\"]},{\"tk\":[1685,10,1685,12],\"els\":[\"0:3550\"]},{\"tk\":[1685,14,1685,38],\"els\":[\"0:3506\"]},{\"tk\":[1685,39,1685,48],\"els\":[\"0:3506\"]},{\"tk\":[1685,49,1685,50],\"els\":[\"0:3550\"]},{\"tk\":[1686,14,1686,38],\"els\":[\"0:3550\"]},{\"tk\":[1686,39,1686,62],\"els\":[\"0:3550\"]},{\"tk\":[1687,5,1687,29],\"els\":[\"0:3550\"]},{\"tk\":[1687,30,1687,40],\"els\":[\"0:3550\"]},{\"tk\":[1687,41,1687,42],\"els\":[\"0:3550\"]},{\"tk\":[1688,7,1688,31],\"els\":[\"0:3550\"]},{\"tk\":[1688,32,1688,55],\"els\":[\"0:3550\"]},{\"tk\":[1690,5,1690,29],\"els\":[\"0:3550\"]},{\"tk\":[1690,30,1690,40],\"els\":[\"0:3550\"]},{\"tk\":[1690,41,1690,42],\"els\":[\"0:3550\"]},{\"tk\":[1690,43,1690,67],\"els\":[\"0:3506\"]},{\"tk\":[1690,68,1690,77],\"els\":[\"0:3506\"]},{\"tk\":[1698,3,1698,5],\"els\":[\"0:3551\"]},{\"tk\":[1698,7,1698,13],\"els\":[\"0:3267\"]},{\"tk\":[1698,14,1698,15],\"els\":[\"0:3551\"]},{\"tk\":[1698,16,1698,40],\"els\":[\"0:3551\"]},{\"tk\":[1698,41,1698,64],\"els\":[\"0:3551\"]},{\"tk\":[1699,5,1699,29],\"els\":[\"0:3551\"]},{\"tk\":[1699,30,1699,40],\"els\":[\"0:3551\"]},{\"tk\":[1699,41,1699,42],\"els\":[\"0:3551\"]},{\"tk\":[1700,7,1700,31],\"els\":[\"0:3551\"]},{\"tk\":[1700,32,1700,55],\"els\":[\"0:3551\"]},{\"tk\":[1701,10,1701,12],\"els\":[\"0:3551\"]},{\"tk\":[1701,14,1701,20],\"els\":[\"0:3267\"]},{\"tk\":[1701,21,1701,22],\"els\":[\"0:3551\"]},{\"tk\":[1701,23,1701,47],\"els\":[\"0:3551\"]},{\"tk\":[1701,48,1701,71],\"els\":[\"0:3551\"]},{\"tk\":[1702,5,1702,29],\"els\":[\"0:3551\"]},{\"tk\":[1702,30,1702,40],\"els\":[\"0:3551\"]},{\"tk\":[1702,41,1702,42],\"els\":[\"0:3551\"]},{\"tk\":[1703,7,1703,31],\"els\":[\"0:3551\"]},{\"tk\":[1703,32,1703,55],\"els\":[\"0:3551\"]},{\"tk\":[1705,5,1705,29],\"els\":[\"0:3551\"]},{\"tk\":[1705,30,1705,40],\"els\":[\"0:3551\"]},{\"tk\":[1705,41,1705,42],\"els\":[\"0:3551\"]},{\"tk\":[1705,43,1705,49],\"els\":[\"0:3267\"]},{\"tk\":[1713,3,1713,27],\"els\":[\"0:3530\"]},{\"tk\":[1713,28,1713,38],\"els\":[\"0:3530\"]},{\"tk\":[1713,39,1713,40],\"els\":[\"0:3530\"]},{\"tk\":[1713,42,1713,66],\"els\":[\"0:3507\"]},{\"tk\":[1713,67,1713,77],\"els\":[\"0:3507\"]},{\"tk\":[1713,78,1713,79],\"els\":[\"0:3507\"]},{\"tk\":[1714,5,1714,29],\"els\":[\"0:3507\"]},{\"tk\":[1714,30,1714,40],\"els\":[\"0:3507\"]},{\"tk\":[1714,42,1714,43],\"els\":[\"0:3530\"]},{\"tk\":[1714,44,1714,68],\"els\":[\"0:3530\"]},{\"tk\":[1714,69,1714,80],\"els\":[\"0:3530\"]},{\"tk\":[1719,3,1719,5],\"els\":[\"0:3523\"]},{\"tk\":[1719,7,1719,31],\"els\":[\"0:3509\"]},{\"tk\":[1719,32,1719,50],\"els\":[\"0:3509\"]},{\"tk\":[1719,51,1719,52],\"els\":[\"0:3523\"]},{\"tk\":[1719,53,1719,56],\"els\":[\"0:3523\"]},{\"tk\":[1720,5,1720,29],\"els\":[\"0:3523\"]},{\"tk\":[1720,30,1720,34],\"els\":[\"0:3523\"]},{\"tk\":[1720,35,1720,36],\"els\":[\"0:3523\"]},{\"tk\":[1720,37,1720,38],\"els\":[\"0:3523\"]},{\"tk\":[1720,38,1720,49],\"els\":[\"0:3523\"]},{\"tk\":[1721,7,1721,8],\"els\":[\"0:3523\"]},{\"tk\":[1721,8,1721,9],\"els\":[\"0:3523\"]},{\"tk\":[1721,9,1721,33],\"els\":[\"0:3523\",\"0:3509\"]},{\"tk\":[1721,33,1721,34],\"els\":[\"0:3523\"]},{\"tk\":[1721,34,1721,52],\"els\":[\"0:3523\",\"0:3509\"]},{\"tk\":[1721,52,1721,53],\"els\":[\"0:3523\"]},{\"tk\":[1721,54,1721,55],\"els\":[\"0:3523\"]},{\"tk\":[1721,55,1721,58],\"els\":[\"0:3523\"]},{\"tk\":[1721,58,1721,59],\"els\":[\"0:3523\"]},{\"tk\":[1723,5,1723,29],\"els\":[\"0:3523\"]},{\"tk\":[1723,30,1723,34],\"els\":[\"0:3523\"]},{\"tk\":[1723,35,1723,36],\"els\":[\"0:3523\"]},{\"tk\":[1723,37,1723,48],\"els\":[\"0:3523\",\"0:3509\"]},{\"tk\":[1724,7,1724,8],\"els\":[\"0:3523\",\"0:3509\"]},{\"tk\":[1724,8,1724,32],\"els\":[\"0:3523\",\"0:3509\"]},{\"tk\":[1724,32,1724,33],\"els\":[\"0:3523\",\"0:3509\"]},{\"tk\":[1724,33,1724,51],\"els\":[\"0:3523\",\"0:3509\"]},{\"tk\":[1724,51,1724,52],\"els\":[\"0:3523\",\"0:3509\"]},{\"tk\":[1724,53,1724,54],\"els\":[\"0:3523\",\"0:3509\"]},{\"tk\":[1724,54,1724,57],\"els\":[\"0:3523\",\"0:3509\"]},{\"tk\":[1724,57,1724,58],\"els\":[\"0:3523\",\"0:3509\"]},{\"tk\":[1730,3,1730,27],\"els\":[\"0:3541\"]},{\"tk\":[1730,28,1730,38],\"els\":[\"0:3541\"]},{\"tk\":[1730,39,1730,40],\"els\":[\"0:3541\"]},{\"tk\":[1730,41,1730,65],\"els\":[\"0:3541\"]},{\"tk\":[1730,66,1730,70],\"els\":[\"0:3541\"]},{\"tk\":[1730,71,1730,72],\"els\":[\"0:3541\"]},{\"tk\":[1731,5,1731,29],\"els\":[\"0:3541\"]},{\"tk\":[1731,30,1731,40],\"els\":[\"0:3541\"]},{\"tk\":[1731,41,1731,42],\"els\":[\"0:3541\"]},{\"tk\":[1731,43,1731,67],\"els\":[\"0:3541\"]},{\"tk\":[1731,68,1731,78],\"els\":[\"0:3541\"]},{\"tk\":[1734,3,1734,5],\"els\":[\"0:3561\"]},{\"tk\":[1734,7,1734,31],\"els\":[\"0:3561\"]},{\"tk\":[1734,32,1734,42],\"els\":[\"0:3561\"]},{\"tk\":[1734,43,1734,44],\"els\":[\"0:3561\"]},{\"tk\":[1735,7,1735,31],\"els\":[\"0:3561\"]},{\"tk\":[1735,32,1735,54],\"els\":[\"0:3561\"]},{\"tk\":[1736,5,1736,29],\"els\":[\"0:3561\"]},{\"tk\":[1736,30,1736,46],\"els\":[\"0:3561\"]},{\"tk\":[1736,47,1736,48],\"els\":[\"0:3561\"]},{\"tk\":[1737,7,1737,31],\"els\":[\"0:3561\"]},{\"tk\":[1737,32,1737,54],\"els\":[\"0:3561\"]},{\"tk\":[1738,10,1738,12],\"els\":[\"0:3561\"]},{\"tk\":[1738,14,1738,38],\"els\":[\"0:3561\"]},{\"tk\":[1738,39,1738,49],\"els\":[\"0:3561\"]},{\"tk\":[1738,50,1738,51],\"els\":[\"0:3561\"]},{\"tk\":[1739,14,1739,38],\"els\":[\"0:3561\"]},{\"tk\":[1739,39,1739,61],\"els\":[\"0:3561\"]},{\"tk\":[1740,5,1740,29],\"els\":[\"0:3561\"]},{\"tk\":[1740,30,1740,46],\"els\":[\"0:3561\"]},{\"tk\":[1740,47,1740,48],\"els\":[\"0:3561\"]},{\"tk\":[1741,7,1741,31],\"els\":[\"0:3561\"]},{\"tk\":[1741,32,1741,54],\"els\":[\"0:3561\"]},{\"tk\":[1743,5,1743,29],\"els\":[\"0:3561\"]},{\"tk\":[1743,30,1743,46],\"els\":[\"0:3561\"]},{\"tk\":[1743,47,1743,48],\"els\":[\"0:3561\"]},{\"tk\":[1744,7,1744,31],\"els\":[\"0:3561\"]},{\"tk\":[1744,32,1744,42],\"els\":[\"0:3561\"]},{\"tk\":[1755,3,1755,27],\"els\":[\"0:3542\"]},{\"tk\":[1755,28,1755,38],\"els\":[\"0:3542\"]},{\"tk\":[1755,39,1755,40],\"els\":[\"0:3542\"]},{\"tk\":[1755,41,1755,52],\"els\":[\"0:3524\",\"0:3480\"]},{\"tk\":[1756,5,1756,6],\"els\":[\"0:3524\",\"0:3480\"]},{\"tk\":[1756,6,1756,30],\"els\":[\"0:3524\",\"0:3480\"]},{\"tk\":[1756,30,1756,31],\"els\":[\"0:3524\",\"0:3480\"]},{\"tk\":[1756,31,1756,41],\"els\":[\"0:3524\",\"0:3480\"]},{\"tk\":[1756,41,1756,42],\"els\":[\"0:3524\",\"0:3480\"]},{\"tk\":[1756,43,1756,46],\"els\":[\"0:3524\",\"0:3480\"]},{\"tk\":[1756,46,1756,47],\"els\":[\"0:3524\",\"0:3480\"]},{\"tk\":[1756,48,1756,49],\"els\":[\"0:3542\"]},{\"tk\":[1757,5,1757,29],\"els\":[\"0:3542\"]},{\"tk\":[1757,30,1757,46],\"els\":[\"0:3542\"]},{\"tk\":[1757,47,1757,48],\"els\":[\"0:3542\"]},{\"tk\":[1758,6,1758,30],\"els\":[\"0:3510\"]},{\"tk\":[1758,31,1758,48],\"els\":[\"0:3510\"]},{\"tk\":[1758,49,1758,50],\"els\":[\"0:3486\"]},{\"tk\":[1759,6,1759,30],\"els\":[\"0:3486\"]},{\"tk\":[1759,31,1759,41],\"els\":[\"0:3486\"]},{\"tk\":[1762,3,1762,5],\"els\":[\"0:3553\"]},{\"tk\":[1762,42,1762,43],\"els\":[\"0:3553\"]},{\"tk\":[1763,7,1763,31],\"els\":[\"0:3553\"]},{\"tk\":[1763,32,1763,55],\"els\":[\"0:3553\"]},{\"tk\":[1764,5,1764,29],\"els\":[\"0:3553\"]},{\"tk\":[1764,30,1764,40],\"els\":[\"0:3553\"]},{\"tk\":[1764,41,1764,42],\"els\":[\"0:3553\"]},{\"tk\":[1765,7,1765,31],\"els\":[\"0:3553\"]},{\"tk\":[1765,32,1765,55],\"els\":[\"0:3553\"]},{\"tk\":[1766,10,1766,12],\"els\":[\"0:3553\"]},{\"tk\":[1766,49,1766,50],\"els\":[\"0:3553\"]},{\"tk\":[1767,14,1767,38],\"els\":[\"0:3553\"]},{\"tk\":[1767,39,1767,62],\"els\":[\"0:3553\"]},{\"tk\":[1768,5,1768,29],\"els\":[\"0:3553\"]},{\"tk\":[1768,30,1768,40],\"els\":[\"0:3553\"]},{\"tk\":[1768,41,1768,42],\"els\":[\"0:3553\"]},{\"tk\":[1769,7,1769,31],\"els\":[\"0:3553\"]},{\"tk\":[1769,32,1769,55],\"els\":[\"0:3553\"]},{\"tk\":[1771,5,1771,29],\"els\":[\"0:3553\"]},{\"tk\":[1771,30,1771,40],\"els\":[\"0:3553\"]},{\"tk\":[1771,41,1771,42],\"els\":[\"0:3553\"]},{\"tk\":[1777,3,1777,5],\"els\":[\"0:3562\"]},{\"tk\":[1777,14,1777,15],\"els\":[\"0:3562\"]},{\"tk\":[1777,16,1777,40],\"els\":[\"0:3562\"]},{\"tk\":[1777,41,1777,63],\"els\":[\"0:3562\"]},{\"tk\":[1778,5,1778,29],\"els\":[\"0:3562\"]},{\"tk\":[1778,30,1778,40],\"els\":[\"0:3562\"]},{\"tk\":[1778,41,1778,42],\"els\":[\"0:3562\"]},{\"tk\":[1779,7,1779,31],\"els\":[\"0:3562\"]},{\"tk\":[1779,32,1779,54],\"els\":[\"0:3562\"]},{\"tk\":[1780,10,1780,12],\"els\":[\"0:3562\"]},{\"tk\":[1780,21,1780,22],\"els\":[\"0:3562\"]},{\"tk\":[1780,23,1780,47],\"els\":[\"0:3562\"]},{\"tk\":[1780,48,1780,71],\"els\":[\"0:3562\"]},{\"tk\":[1781,5,1781,29],\"els\":[\"0:3562\"]},{\"tk\":[1781,30,1781,40],\"els\":[\"0:3562\"]},{\"tk\":[1781,41,1781,42],\"els\":[\"0:3562\"]},{\"tk\":[1782,7,1782,31],\"els\":[\"0:3562\"]},{\"tk\":[1782,32,1782,55],\"els\":[\"0:3562\"]},{\"tk\":[1784,5,1784,29],\"els\":[\"0:3562\"]},{\"tk\":[1784,30,1784,40],\"els\":[\"0:3562\"]},{\"tk\":[1784,41,1784,42],\"els\":[\"0:3562\"]},{\"tk\":[1792,3,1792,27],\"els\":[\"0:3531\"]},{\"tk\":[1792,28,1792,38],\"els\":[\"0:3531\"]},{\"tk\":[1792,39,1792,40],\"els\":[\"0:3531\"]},{\"tk\":[1792,42,1792,66],\"els\":[\"0:3490\"]},{\"tk\":[1792,67,1792,77],\"els\":[\"0:3490\"]},{\"tk\":[1792,78,1792,79],\"els\":[\"0:3490\"]},{\"tk\":[1793,5,1793,29],\"els\":[\"0:3490\"]},{\"tk\":[1793,30,1793,40],\"els\":[\"0:3490\"]},{\"tk\":[1793,42,1793,43],\"els\":[\"0:3531\"]},{\"tk\":[1793,44,1793,68],\"els\":[\"0:3531\"]},{\"tk\":[1793,69,1793,81],\"els\":[\"0:3531\"]},{\"tk\":[1798,3,1798,5],\"els\":[\"0:3526\"]},{\"tk\":[1798,7,1798,31],\"els\":[\"0:3509\"]},{\"tk\":[1798,32,1798,50],\"els\":[\"0:3509\"]},{\"tk\":[1798,51,1798,52],\"els\":[\"0:3526\"]},{\"tk\":[1798,53,1798,56],\"els\":[\"0:3526\"]},{\"tk\":[1799,5,1799,29],\"els\":[\"0:3526\"]},{\"tk\":[1799,30,1799,34],\"els\":[\"0:3526\"]},{\"tk\":[1799,35,1799,36],\"els\":[\"0:3526\"]},{\"tk\":[1799,37,1799,38],\"els\":[\"0:3526\"]},{\"tk\":[1799,38,1799,49],\"els\":[\"0:3526\"]},{\"tk\":[1800,7,1800,8],\"els\":[\"0:3526\"]},{\"tk\":[1800,8,1800,9],\"els\":[\"0:3526\"]},{\"tk\":[1800,9,1800,33],\"els\":[\"0:3526\",\"0:3509\"]},{\"tk\":[1800,33,1800,34],\"els\":[\"0:3526\"]},{\"tk\":[1800,34,1800,52],\"els\":[\"0:3526\",\"0:3509\"]},{\"tk\":[1800,52,1800,53],\"els\":[\"0:3526\"]},{\"tk\":[1800,54,1800,55],\"els\":[\"0:3526\"]},{\"tk\":[1800,55,1800,61],\"els\":[\"0:3526\"]},{\"tk\":[1800,61,1800,62],\"els\":[\"0:3526\"]},{\"tk\":[1802,5,1802,29],\"els\":[\"0:3526\"]},{\"tk\":[1802,30,1802,34],\"els\":[\"0:3526\"]},{\"tk\":[1802,35,1802,36],\"els\":[\"0:3526\"]},{\"tk\":[1802,37,1802,48],\"els\":[\"0:3526\",\"0:3509\"]},{\"tk\":[1803,7,1803,8],\"els\":[\"0:3526\",\"0:3509\"]},{\"tk\":[1803,8,1803,32],\"els\":[\"0:3526\",\"0:3509\"]},{\"tk\":[1803,32,1803,33],\"els\":[\"0:3526\",\"0:3509\"]},{\"tk\":[1803,33,1803,51],\"els\":[\"0:3526\",\"0:3509\"]},{\"tk\":[1803,51,1803,52],\"els\":[\"0:3526\",\"0:3509\"]},{\"tk\":[1803,53,1803,54],\"els\":[\"0:3526\",\"0:3509\"]},{\"tk\":[1803,54,1803,60],\"els\":[\"0:3526\",\"0:3509\"]},{\"tk\":[1803,60,1803,61],\"els\":[\"0:3526\",\"0:3509\"]},{\"tk\":[1809,3,1809,27],\"els\":[\"0:3544\"]},{\"tk\":[1809,28,1809,38],\"els\":[\"0:3544\"]},{\"tk\":[1809,39,1809,40],\"els\":[\"0:3544\"]},{\"tk\":[1809,41,1809,65],\"els\":[\"0:3544\"]},{\"tk\":[1809,66,1809,70],\"els\":[\"0:3544\"]},{\"tk\":[1809,71,1809,72],\"els\":[\"0:3544\"]},{\"tk\":[1810,5,1810,29],\"els\":[\"0:3544\"]},{\"tk\":[1810,30,1810,40],\"els\":[\"0:3544\"]},{\"tk\":[1810,41,1810,42],\"els\":[\"0:3544\"]},{\"tk\":[1810,43,1810,67],\"els\":[\"0:3544\"]},{\"tk\":[1810,68,1810,78],\"els\":[\"0:3544\"]},{\"tk\":[1813,3,1813,5],\"els\":[\"0:3552\"]},{\"tk\":[1813,7,1813,31],\"els\":[\"0:3552\"]},{\"tk\":[1813,32,1813,42],\"els\":[\"0:3552\"]},{\"tk\":[1813,43,1813,44],\"els\":[\"0:3552\"]},{\"tk\":[1814,7,1814,31],\"els\":[\"0:3552\"]},{\"tk\":[1814,32,1814,55],\"els\":[\"0:3552\"]},{\"tk\":[1815,5,1815,29],\"els\":[\"0:3552\"]},{\"tk\":[1815,30,1815,46],\"els\":[\"0:3552\"]},{\"tk\":[1815,47,1815,48],\"els\":[\"0:3552\"]},{\"tk\":[1816,7,1816,31],\"els\":[\"0:3552\"]},{\"tk\":[1816,32,1816,55],\"els\":[\"0:3552\"]},{\"tk\":[1817,10,1817,12],\"els\":[\"0:3552\"]},{\"tk\":[1817,14,1817,38],\"els\":[\"0:3552\"]},{\"tk\":[1817,39,1817,49],\"els\":[\"0:3552\"]},{\"tk\":[1817,50,1817,51],\"els\":[\"0:3552\"]},{\"tk\":[1818,14,1818,38],\"els\":[\"0:3552\"]},{\"tk\":[1818,39,1818,62],\"els\":[\"0:3552\"]},{\"tk\":[1819,5,1819,29],\"els\":[\"0:3552\"]},{\"tk\":[1819,30,1819,46],\"els\":[\"0:3552\"]},{\"tk\":[1819,47,1819,48],\"els\":[\"0:3552\"]},{\"tk\":[1820,7,1820,31],\"els\":[\"0:3552\"]},{\"tk\":[1820,32,1820,55],\"els\":[\"0:3552\"]},{\"tk\":[1822,5,1822,29],\"els\":[\"0:3552\"]},{\"tk\":[1822,30,1822,46],\"els\":[\"0:3552\"]},{\"tk\":[1822,47,1822,48],\"els\":[\"0:3552\"]},{\"tk\":[1823,7,1823,31],\"els\":[\"0:3552\"]},{\"tk\":[1823,32,1823,42],\"els\":[\"0:3552\"]},{\"tk\":[1833,3,1833,27],\"els\":[\"0:3543\"]},{\"tk\":[1833,28,1833,38],\"els\":[\"0:3543\"]},{\"tk\":[1833,39,1833,40],\"els\":[\"0:3543\"]},{\"tk\":[1833,41,1833,52],\"els\":[\"0:3525\",\"0:3481\"]},{\"tk\":[1834,5,1834,6],\"els\":[\"0:3525\",\"0:3481\"]},{\"tk\":[1834,6,1834,30],\"els\":[\"0:3525\",\"0:3481\"]},{\"tk\":[1834,30,1834,31],\"els\":[\"0:3525\",\"0:3481\"]},{\"tk\":[1834,31,1834,41],\"els\":[\"0:3525\",\"0:3481\"]},{\"tk\":[1834,41,1834,42],\"els\":[\"0:3525\",\"0:3481\"]},{\"tk\":[1834,43,1834,49],\"els\":[\"0:3525\",\"0:3481\"]},{\"tk\":[1834,49,1834,50],\"els\":[\"0:3525\",\"0:3481\"]},{\"tk\":[1834,51,1834,52],\"els\":[\"0:3543\"]},{\"tk\":[1835,5,1835,29],\"els\":[\"0:3543\"]},{\"tk\":[1835,30,1835,46],\"els\":[\"0:3543\"]},{\"tk\":[1835,47,1835,48],\"els\":[\"0:3543\"]},{\"tk\":[1836,6,1836,30],\"els\":[\"0:3512\"]},{\"tk\":[1836,31,1836,48],\"els\":[\"0:3512\"]},{\"tk\":[1836,49,1836,50],\"els\":[\"0:3487\"]},{\"tk\":[1837,6,1837,30],\"els\":[\"0:3487\"]},{\"tk\":[1837,31,1837,41],\"els\":[\"0:3487\"]},{\"tk\":[1840,3,1840,5],\"els\":[\"0:3556\"]},{\"tk\":[1840,42,1840,43],\"els\":[\"0:3556\"]},{\"tk\":[1841,7,1841,31],\"els\":[\"0:3556\"]},{\"tk\":[1841,32,1841,55],\"els\":[\"0:3556\"]},{\"tk\":[1842,5,1842,29],\"els\":[\"0:3556\"]},{\"tk\":[1842,30,1842,39],\"els\":[\"0:3556\"]},{\"tk\":[1842,40,1842,41],\"els\":[\"0:3556\"]},{\"tk\":[1843,7,1843,31],\"els\":[\"0:3556\"]},{\"tk\":[1843,32,1843,55],\"els\":[\"0:3556\"]},{\"tk\":[1844,10,1844,12],\"els\":[\"0:3556\"]},{\"tk\":[1844,49,1844,50],\"els\":[\"0:3556\"]},{\"tk\":[1845,14,1845,38],\"els\":[\"0:3556\"]},{\"tk\":[1845,39,1845,62],\"els\":[\"0:3556\"]},{\"tk\":[1846,5,1846,29],\"els\":[\"0:3556\"]},{\"tk\":[1846,30,1846,39],\"els\":[\"0:3556\"]},{\"tk\":[1846,40,1846,41],\"els\":[\"0:3556\"]},{\"tk\":[1847,7,1847,31],\"els\":[\"0:3556\"]},{\"tk\":[1847,32,1847,55],\"els\":[\"0:3556\"]},{\"tk\":[1853,3,1853,5],\"els\":[\"0:3554\"]},{\"tk\":[1853,14,1853,15],\"els\":[\"0:3554\"]},{\"tk\":[1853,16,1853,40],\"els\":[\"0:3554\"]},{\"tk\":[1853,41,1853,64],\"els\":[\"0:3554\"]},{\"tk\":[1854,5,1854,11],\"els\":[\"0:3267\"]},{\"tk\":[1854,12,1854,13],\"els\":[\"0:3554\"]},{\"tk\":[1854,14,1854,38],\"els\":[\"0:3554\"]},{\"tk\":[1854,39,1854,62],\"els\":[\"0:3554\"]},{\"tk\":[1855,10,1855,12],\"els\":[\"0:3554\"]},{\"tk\":[1855,21,1855,22],\"els\":[\"0:3554\"]},{\"tk\":[1855,23,1855,47],\"els\":[\"0:3554\"]},{\"tk\":[1855,48,1855,71],\"els\":[\"0:3554\"]},{\"tk\":[1856,5,1856,11],\"els\":[\"0:3267\"]},{\"tk\":[1856,12,1856,13],\"els\":[\"0:3554\"]},{\"tk\":[1856,14,1856,38],\"els\":[\"0:3554\"]},{\"tk\":[1856,39,1856,62],\"els\":[\"0:3554\"]},{\"tk\":[1864,3,1864,27],\"els\":[\"0:3533\"]},{\"tk\":[1864,28,1864,38],\"els\":[\"0:3533\"]},{\"tk\":[1864,39,1864,40],\"els\":[\"0:3533\"]},{\"tk\":[1864,42,1864,66],\"els\":[\"0:3495\"]},{\"tk\":[1864,67,1864,76],\"els\":[\"0:3495\"]},{\"tk\":[1864,77,1864,78],\"els\":[\"0:3495\"]},{\"tk\":[1865,5,1865,11],\"els\":[\"0:3267\"]},{\"tk\":[1865,13,1865,14],\"els\":[\"0:3533\"]},{\"tk\":[1865,15,1865,39],\"els\":[\"0:3533\"]},{\"tk\":[1865,40,1865,52],\"els\":[\"0:3533\"]},{\"tk\":[1868,3,1868,5],\"els\":[\"0:3549\"]},{\"tk\":[1868,7,1868,31],\"els\":[\"0:3549\"]},{\"tk\":[1868,32,1868,42],\"els\":[\"0:3549\"]},{\"tk\":[1868,43,1868,44],\"els\":[\"0:3549\"]},{\"tk\":[1869,7,1869,31],\"els\":[\"0:3549\"]},{\"tk\":[1869,32,1869,54],\"els\":[\"0:3549\"]},{\"tk\":[1870,5,1870,29],\"els\":[\"0:3549\"]},{\"tk\":[1870,30,1870,46],\"els\":[\"0:3549\"]},{\"tk\":[1870,47,1870,48],\"els\":[\"0:3549\"]},{\"tk\":[1871,7,1871,31],\"els\":[\"0:3549\"]},{\"tk\":[1871,32,1871,54],\"els\":[\"0:3549\"]},{\"tk\":[1872,10,1872,12],\"els\":[\"0:3549\"]},{\"tk\":[1872,14,1872,38],\"els\":[\"0:3549\"]},{\"tk\":[1872,39,1872,49],\"els\":[\"0:3549\"]},{\"tk\":[1872,50,1872,51],\"els\":[\"0:3549\"]},{\"tk\":[1873,14,1873,38],\"els\":[\"0:3549\"]},{\"tk\":[1873,39,1873,61],\"els\":[\"0:3549\"]},{\"tk\":[1874,5,1874,29],\"els\":[\"0:3549\"]},{\"tk\":[1874,30,1874,46],\"els\":[\"0:3549\"]},{\"tk\":[1874,47,1874,48],\"els\":[\"0:3549\"]},{\"tk\":[1875,7,1875,31],\"els\":[\"0:3549\"]},{\"tk\":[1875,32,1875,54],\"els\":[\"0:3549\"]},{\"tk\":[1877,5,1877,29],\"els\":[\"0:3549\"]},{\"tk\":[1877,30,1877,46],\"els\":[\"0:3549\"]},{\"tk\":[1877,47,1877,48],\"els\":[\"0:3549\"]},{\"tk\":[1878,7,1878,31],\"els\":[\"0:3549\"]},{\"tk\":[1878,32,1878,42],\"els\":[\"0:3549\"]},{\"tk\":[1886,3,1886,5],\"els\":[\"0:3527\"]},{\"tk\":[1886,7,1886,31],\"els\":[\"0:3509\"]},{\"tk\":[1886,32,1886,50],\"els\":[\"0:3509\"]},{\"tk\":[1886,51,1886,52],\"els\":[\"0:3527\"]},{\"tk\":[1886,53,1886,56],\"els\":[\"0:3527\"]},{\"tk\":[1887,5,1887,29],\"els\":[\"0:3527\"]},{\"tk\":[1887,30,1887,34],\"els\":[\"0:3527\"]},{\"tk\":[1887,35,1887,36],\"els\":[\"0:3527\"]},{\"tk\":[1887,37,1887,38],\"els\":[\"0:3527\"]},{\"tk\":[1887,38,1887,49],\"els\":[\"0:3527\"]},{\"tk\":[1888,7,1888,8],\"els\":[\"0:3527\"]},{\"tk\":[1888,8,1888,9],\"els\":[\"0:3527\"]},{\"tk\":[1888,9,1888,33],\"els\":[\"0:3527\",\"0:3509\"]},{\"tk\":[1888,33,1888,34],\"els\":[\"0:3527\"]},{\"tk\":[1888,34,1888,52],\"els\":[\"0:3527\",\"0:3509\"]},{\"tk\":[1888,52,1888,53],\"els\":[\"0:3527\"]},{\"tk\":[1888,54,1888,55],\"els\":[\"0:3527\"]},{\"tk\":[1888,55,1888,59],\"els\":[\"0:3527\"]},{\"tk\":[1888,59,1888,60],\"els\":[\"0:3527\"]},{\"tk\":[1890,5,1890,29],\"els\":[\"0:3527\"]},{\"tk\":[1890,30,1890,34],\"els\":[\"0:3527\"]},{\"tk\":[1890,35,1890,36],\"els\":[\"0:3527\"]},{\"tk\":[1890,37,1890,48],\"els\":[\"0:3527\",\"0:3509\"]},{\"tk\":[1891,7,1891,8],\"els\":[\"0:3527\",\"0:3509\"]},{\"tk\":[1891,8,1891,32],\"els\":[\"0:3527\",\"0:3509\"]},{\"tk\":[1891,32,1891,33],\"els\":[\"0:3527\",\"0:3509\"]},{\"tk\":[1891,33,1891,51],\"els\":[\"0:3527\",\"0:3509\"]},{\"tk\":[1891,51,1891,52],\"els\":[\"0:3527\",\"0:3509\"]},{\"tk\":[1891,53,1891,54],\"els\":[\"0:3527\",\"0:3509\"]},{\"tk\":[1891,54,1891,58],\"els\":[\"0:3527\",\"0:3509\"]},{\"tk\":[1891,58,1891,59],\"els\":[\"0:3527\",\"0:3509\"]},{\"tk\":[1897,3,1897,5],\"els\":[\"0:3555\"]},{\"tk\":[1897,7,1897,31],\"els\":[\"0:3555\"]},{\"tk\":[1897,32,1897,42],\"els\":[\"0:3555\"]},{\"tk\":[1897,43,1897,44],\"els\":[\"0:3555\"]},{\"tk\":[1898,7,1898,31],\"els\":[\"0:3555\"]},{\"tk\":[1898,32,1898,55],\"els\":[\"0:3555\"]},{\"tk\":[1899,5,1899,29],\"els\":[\"0:3555\"]},{\"tk\":[1899,30,1899,39],\"els\":[\"0:3555\"]},{\"tk\":[1899,40,1899,41],\"els\":[\"0:3555\"]},{\"tk\":[1900,7,1900,31],\"els\":[\"0:3555\"]},{\"tk\":[1900,32,1900,55],\"els\":[\"0:3555\"]},{\"tk\":[1901,10,1901,12],\"els\":[\"0:3555\"]},{\"tk\":[1901,14,1901,38],\"els\":[\"0:3555\"]},{\"tk\":[1901,39,1901,49],\"els\":[\"0:3555\"]},{\"tk\":[1901,50,1901,51],\"els\":[\"0:3555\"]},{\"tk\":[1902,14,1902,38],\"els\":[\"0:3555\"]},{\"tk\":[1902,39,1902,62],\"els\":[\"0:3555\"]},{\"tk\":[1903,5,1903,29],\"els\":[\"0:3555\"]},{\"tk\":[1903,30,1903,39],\"els\":[\"0:3555\"]},{\"tk\":[1903,40,1903,41],\"els\":[\"0:3555\"]},{\"tk\":[1904,7,1904,31],\"els\":[\"0:3555\"]},{\"tk\":[1904,32,1904,55],\"els\":[\"0:3555\"]},{\"tk\":[1906,5,1906,29],\"els\":[\"0:3555\"]},{\"tk\":[1906,30,1906,39],\"els\":[\"0:3555\"]},{\"tk\":[1906,40,1906,41],\"els\":[\"0:3555\"]},{\"tk\":[1906,42,1906,66],\"els\":[\"0:3555\"]},{\"tk\":[1906,67,1906,77],\"els\":[\"0:3555\"]},{\"tk\":[1924,3,1924,27],\"els\":[\"0:3496\"]},{\"tk\":[1924,28,1924,57],\"els\":[\"0:3496\"]},{\"tk\":[1924,58,1924,59],\"els\":[\"0:3496\"]},{\"tk\":[1925,8,1925,32],\"els\":[\"0:3573\"]},{\"tk\":[1925,33,1925,47],\"els\":[\"0:3573\"]},{\"tk\":[1925,48,1925,49],\"els\":[\"0:3573\"]},{\"tk\":[1926,8,1926,32],\"els\":[\"0:3573\"]},{\"tk\":[1926,33,1926,43],\"els\":[\"0:3573\"]},{\"tk\":[1926,44,1926,45],\"els\":[\"0:3496\"]},{\"tk\":[1926,46,1926,70],\"els\":[\"0:3570\"]},{\"tk\":[1926,71,1926,80],\"els\":[\"0:3570\"]},{\"tk\":[1926,81,1926,82],\"els\":[\"0:3570\"]},{\"tk\":[1927,8,1927,32],\"els\":[\"0:3570\"]},{\"tk\":[1927,33,1927,49],\"els\":[\"0:3570\"]},{\"tk\":[1927,51,1927,52],\"els\":[\"0:3496\"]},{\"tk\":[1928,8,1928,32],\"els\":[\"0:3503\"]},{\"tk\":[1928,33,1928,62],\"els\":[\"0:3503\"]},{\"tk\":[1928,63,1928,64],\"els\":[\"0:3503\"]},{\"tk\":[1929,8,1929,32],\"els\":[\"0:3503\"]},{\"tk\":[1929,33,1929,62],\"els\":[\"0:3503\"]},{\"tk\":[1929,65,1929,66],\"els\":[\"0:3496\"]},{\"tk\":[1930,6,1930,31],\"els\":[\"0:3521\"]},{\"tk\":[1930,32,1930,63],\"els\":[\"0:3521\"]},{\"tk\":[1930,65,1930,66],\"els\":[\"0:3496\"]},{\"tk\":[1931,6,1931,30],\"els\":[\"0:3545\"]},{\"tk\":[1931,31,1931,35],\"els\":[\"0:3545\"]},{\"tk\":[1931,36,1931,37],\"els\":[\"0:3545\"]},{\"tk\":[1931,38,1931,62],\"els\":[\"0:3545\"]},{\"tk\":[1931,63,1931,73],\"els\":[\"0:3545\"]},{\"tk\":[1931,74,1931,75],\"els\":[\"0:3545\"]},{\"tk\":[1932,6,1932,30],\"els\":[\"0:3545\"]},{\"tk\":[1932,31,1932,41],\"els\":[\"0:3545\"]},{\"tk\":[1932,42,1932,43],\"els\":[\"0:3497\"]},{\"tk\":[1932,44,1932,55],\"els\":[\"0:3528\",\"0:3482\"]},{\"tk\":[1933,6,1933,7],\"els\":[\"0:3528\",\"0:3482\"]},{\"tk\":[1933,7,1933,31],\"els\":[\"0:3528\",\"0:3482\"]},{\"tk\":[1933,31,1933,32],\"els\":[\"0:3528\",\"0:3482\"]},{\"tk\":[1933,32,1933,42],\"els\":[\"0:3528\",\"0:3482\"]},{\"tk\":[1933,42,1933,43],\"els\":[\"0:3528\",\"0:3482\"]},{\"tk\":[1933,44,1933,48],\"els\":[\"0:3528\",\"0:3482\"]},{\"tk\":[1933,48,1933,49],\"els\":[\"0:3528\",\"0:3482\"]},{\"tk\":[1933,50,1933,51],\"els\":[\"0:3546\"]},{\"tk\":[1934,6,1934,30],\"els\":[\"0:3546\"]},{\"tk\":[1934,31,1934,40],\"els\":[\"0:3546\"]},{\"tk\":[1934,41,1934,42],\"els\":[\"0:3546\"]},{\"tk\":[1935,7,1935,31],\"els\":[\"0:3513\"]},{\"tk\":[1935,32,1935,49],\"els\":[\"0:3513\"]},{\"tk\":[1935,50,1935,51],\"els\":[\"0:3492\"]},{\"tk\":[1936,7,1936,31],\"els\":[\"0:3492\"]},{\"tk\":[1936,32,1936,42],\"els\":[\"0:3492\"]},{\"tk\":[1936,45,1936,46],\"els\":[\"0:3536\"]},{\"tk\":[1937,5,1937,29],\"els\":[\"0:3536\"]},{\"tk\":[1937,30,1937,42],\"els\":[\"0:3536\"]},{\"tk\":[1940,3,1940,5],\"els\":[\"0:3560\"]},{\"tk\":[1940,7,1940,31],\"els\":[\"0:3560\"]},{\"tk\":[1940,32,1940,42],\"els\":[\"0:3560\"]},{\"tk\":[1940,43,1940,44],\"els\":[\"0:3560\"]},{\"tk\":[1941,7,1941,31],\"els\":[\"0:3560\"]},{\"tk\":[1941,32,1941,54],\"els\":[\"0:3560\"]},{\"tk\":[1942,5,1942,29],\"els\":[\"0:3560\"]},{\"tk\":[1942,30,1942,59],\"els\":[\"0:3560\"]},{\"tk\":[1942,60,1942,61],\"els\":[\"0:3560\"]},{\"tk\":[1943,7,1943,31],\"els\":[\"0:3560\"]},{\"tk\":[1943,32,1943,54],\"els\":[\"0:3560\"]},{\"tk\":[1944,10,1944,12],\"els\":[\"0:3560\"]},{\"tk\":[1944,14,1944,38],\"els\":[\"0:3560\"]},{\"tk\":[1944,39,1944,49],\"els\":[\"0:3560\"]},{\"tk\":[1944,50,1944,51],\"els\":[\"0:3560\"]},{\"tk\":[1945,14,1945,38],\"els\":[\"0:3560\"]},{\"tk\":[1945,39,1945,61],\"els\":[\"0:3560\"]},{\"tk\":[1946,5,1946,29],\"els\":[\"0:3560\"]},{\"tk\":[1946,30,1946,59],\"els\":[\"0:3560\"]},{\"tk\":[1946,60,1946,61],\"els\":[\"0:3560\"]},{\"tk\":[1947,7,1947,31],\"els\":[\"0:3560\"]},{\"tk\":[1947,32,1947,54],\"els\":[\"0:3560\"]},{\"tk\":[1949,5,1949,29],\"els\":[\"0:3560\"]},{\"tk\":[1949,30,1949,59],\"els\":[\"0:3560\"]},{\"tk\":[1949,60,1949,61],\"els\":[\"0:3560\"]},{\"tk\":[1950,7,1950,31],\"els\":[\"0:3560\"]},{\"tk\":[1950,32,1950,42],\"els\":[\"0:3560\"]},{\"tk\":[1956,3,1956,27],\"els\":[\"0:3574\"]},{\"tk\":[1956,28,1956,37],\"els\":[\"0:3574\"]},{\"tk\":[1956,38,1956,39],\"els\":[\"0:3574\"]},{\"tk\":[1956,40,1956,64],\"els\":[\"0:3574\"]},{\"tk\":[1956,65,1956,79],\"els\":[\"0:3574\"]},{\"tk\":[1956,80,1956,81],\"els\":[\"0:3574\"]},{\"tk\":[1957,5,1957,29],\"els\":[\"0:3574\"]},{\"tk\":[1957,30,1957,40],\"els\":[\"0:3574\"]},{\"tk\":[1960,3,1960,22],\"els\":[\"0:2752#out:1\"]},{\"tk\":[1960,23,1960,24],\"els\":[\"0:34:9\"]},{\"tk\":[1960,25,1960,39],\"els\":[\"0:34:9\"]},{\"tk\":[1961,6,1961,31],\"els\":[\"0:34:9\"]},{\"tk\":[1961,32,1961,37],\"els\":[\"0:34:9\"]},{\"tk\":[1962,7,1962,32],\"els\":[\"0:34:9\"]},{\"tk\":[1962,33,1962,38],\"els\":[\"0:34:9\"]},{\"tk\":[1962,39,1962,53],\"els\":[\"0:34:9\"]},{\"tk\":[1963,7,1963,31],\"els\":[\"0:34:9\"]},{\"tk\":[1963,32,1963,45],\"els\":[\"0:34:9\"]},{\"tk\":[1963,47,1963,52],\"els\":[\"0:34:9\"]},{\"tk\":[1963,54,1963,57],\"els\":[\"0:34:9\"]},{\"tk\":[1968,3,1968,5],\"els\":[\"0:34:5\",\"0:34:3\"]},{\"tk\":[1968,7,1968,26],\"els\":[\"0:2752#out:1\"]},{\"tk\":[1970,5,1970,29],\"els\":[\"0:34:4\"]},{\"tk\":[1970,30,1970,33],\"els\":[\"0:34:4\"]},{\"tk\":[1970,34,1970,35],\"els\":[\"0:34:4\",\"0:34:5\",\"0:34:3\"]},{\"tk\":[1970,36,1970,60],\"els\":[\"0:34:9\"]},{\"tk\":[1970,61,1970,74],\"els\":[\"0:34:9\"]},{\"tk\":[1971,5,1971,15],\"els\":[\"0:34:5\",\"0:34:3\"]},{\"tk\":[1971,16,1971,41],\"els\":[\"0:34:5\",\"0:34:3\"]},{\"tk\":[1971,42,1971,72],\"els\":[\"0:34:5\",\"0:34:3\"]},{\"tk\":[1984,3,1984,27],\"els\":[\"0:35:13:384:379\"]},{\"tk\":[1984,28,1984,38],\"els\":[\"0:35:13:384:379\"]},{\"tk\":[1984,39,1984,40],\"els\":[\"0:35:13:384:379\"]},{\"tk\":[1984,41,1984,45],\"els\":[\"0:35:13:384:379\"]},{\"tk\":[1985,6,1985,30],\"els\":[\"0:31\"]},{\"tk\":[1985,31,1985,34],\"els\":[\"0:31\"]},{\"tk\":[1985,35,1985,36],\"els\":[\"0:31\"]},{\"tk\":[1985,36,1985,37],\"els\":[\"0:31\"]},{\"tk\":[1985,37,1985,38],\"els\":[\"0:31\"]},{\"tk\":[1985,41,1985,42],\"els\":[\"0:35:13:384:385:72\"]},{\"tk\":[1985,43,1985,67],\"els\":[\"0:31\"]},{\"tk\":[1985,68,1985,71],\"els\":[\"0:31\"]},{\"tk\":[1985,72,1985,73],\"els\":[\"0:31\"]},{\"tk\":[1985,73,1985,74],\"els\":[\"0:31\"]},{\"tk\":[1985,74,1985,75],\"els\":[\"0:31\"]},{\"tk\":[1985,77,1985,78],\"els\":[\"0:35:13:384:385:76\"]},{\"tk\":[1986,25,1986,49],\"els\":[\"0:31\"]},{\"tk\":[1986,50,1986,53],\"els\":[\"0:31\"]},{\"tk\":[1986,54,1986,55],\"els\":[\"0:31\"]},{\"tk\":[1986,55,1986,56],\"els\":[\"0:31\"]},{\"tk\":[1986,56,1986,57],\"els\":[\"0:31\"]},{\"tk\":[1986,60,1986,61],\"els\":[\"0:35:13:384:385:73\"]},{\"tk\":[1987,5,1987,29],\"els\":[\"0:31\"]},{\"tk\":[1987,30,1987,33],\"els\":[\"0:31\"]},{\"tk\":[1987,34,1987,35],\"els\":[\"0:31\"]},{\"tk\":[1987,35,1987,36],\"els\":[\"0:31\"]},{\"tk\":[1987,36,1987,37],\"els\":[\"0:31\"]},{\"tk\":[1987,40,1987,41],\"els\":[\"0:35:13:384:385:76\"]},{\"tk\":[1988,6,1988,30],\"els\":[\"0:31\"]},{\"tk\":[1988,31,1988,34],\"els\":[\"0:31\"]},{\"tk\":[1988,35,1988,36],\"els\":[\"0:31\"]},{\"tk\":[1988,36,1988,37],\"els\":[\"0:31\"]},{\"tk\":[1988,37,1988,38],\"els\":[\"0:31\"]},{\"tk\":[1988,41,1988,42],\"els\":[\"0:35:13:384:385:74\"]},{\"tk\":[1988,43,1988,67],\"els\":[\"0:31\"]},{\"tk\":[1988,68,1988,71],\"els\":[\"0:31\"]},{\"tk\":[1988,72,1988,73],\"els\":[\"0:31\"]},{\"tk\":[1988,73,1988,74],\"els\":[\"0:31\"]},{\"tk\":[1988,74,1988,75],\"els\":[\"0:31\"]},{\"tk\":[1988,78,1988,79],\"els\":[\"0:35:13:384:385:76\"]},{\"tk\":[1989,25,1989,49],\"els\":[\"0:31\"]},{\"tk\":[1989,50,1989,53],\"els\":[\"0:31\"]},{\"tk\":[1989,54,1989,55],\"els\":[\"0:31\"]},{\"tk\":[1989,55,1989,56],\"els\":[\"0:31\"]},{\"tk\":[1989,56,1989,57],\"els\":[\"0:31\"]},{\"tk\":[1989,60,1989,61],\"els\":[\"0:35:13:384:385:75\"]},{\"tk\":[1990,5,1990,29],\"els\":[\"0:31\"]},{\"tk\":[1990,30,1990,33],\"els\":[\"0:31\"]},{\"tk\":[1990,34,1990,35],\"els\":[\"0:31\"]},{\"tk\":[1990,35,1990,36],\"els\":[\"0:31\"]},{\"tk\":[1990,36,1990,37],\"els\":[\"0:31\"]},{\"tk\":[1995,3,1995,27],\"els\":[\"0:35:13:60\"]},{\"tk\":[1995,28,1995,32],\"els\":[\"0:35:13:60\"]},{\"tk\":[1995,33,1995,34],\"els\":[\"0:35:13:60\"]},{\"tk\":[1995,35,1995,59],\"els\":[\"0:31\"]},{\"tk\":[1995,60,1995,63],\"els\":[\"0:31\"]},{\"tk\":[1995,64,1995,65],\"els\":[\"0:31\"]},{\"tk\":[1995,65,1995,66],\"els\":[\"0:31\"]},{\"tk\":[1995,66,1995,67],\"els\":[\"0:31\"]},{\"tk\":[1995,69,1995,70],\"els\":[\"0:35:13:60\"]},{\"tk\":[1996,5,1996,29],\"els\":[\"0:35:13:60\"]},{\"tk\":[1996,30,1996,40],\"els\":[\"0:35:13:60\"]},{\"tk\":[2001,3,2001,27],\"els\":[\"0:35:13:61\"]},{\"tk\":[2001,28,2001,38],\"els\":[\"0:35:13:61\"]},{\"tk\":[2001,39,2001,40],\"els\":[\"0:35:13:61\"]},{\"tk\":[2001,41,2001,65],\"els\":[\"0:31\"]},{\"tk\":[2001,66,2001,69],\"els\":[\"0:31\"]},{\"tk\":[2001,70,2001,71],\"els\":[\"0:31\"]},{\"tk\":[2001,71,2001,72],\"els\":[\"0:31\"]},{\"tk\":[2001,72,2001,73],\"els\":[\"0:31\"]},{\"tk\":[2001,75,2001,76],\"els\":[\"0:35:13:61\"]},{\"tk\":[2002,5,2002,29],\"els\":[\"0:35:13:61\"]},{\"tk\":[2002,30,2002,40],\"els\":[\"0:35:13:61\"]},{\"tk\":[2007,3,2007,27],\"els\":[\"0:35:13:62\"]},{\"tk\":[2007,28,2007,38],\"els\":[\"0:35:13:62\"]},{\"tk\":[2007,39,2007,40],\"els\":[\"0:35:13:62\"]},{\"tk\":[2007,41,2007,65],\"els\":[\"0:31\"]},{\"tk\":[2007,66,2007,69],\"els\":[\"0:31\"]},{\"tk\":[2007,70,2007,71],\"els\":[\"0:31\"]},{\"tk\":[2007,71,2007,72],\"els\":[\"0:31\"]},{\"tk\":[2007,72,2007,73],\"els\":[\"0:31\"]},{\"tk\":[2007,75,2007,76],\"els\":[\"0:35:13:62\"]},{\"tk\":[2008,5,2008,29],\"els\":[\"0:35:13:62\"]},{\"tk\":[2008,30,2008,40],\"els\":[\"0:35:13:62\"]},{\"tk\":[2013,3,2013,27],\"els\":[\"0:35:13:63\"]},{\"tk\":[2013,28,2013,38],\"els\":[\"0:35:13:63\"]},{\"tk\":[2013,39,2013,40],\"els\":[\"0:35:13:63\"]},{\"tk\":[2013,41,2013,65],\"els\":[\"0:31\"]},{\"tk\":[2013,66,2013,69],\"els\":[\"0:31\"]},{\"tk\":[2013,70,2013,71],\"els\":[\"0:31\"]},{\"tk\":[2013,71,2013,72],\"els\":[\"0:31\"]},{\"tk\":[2013,72,2013,73],\"els\":[\"0:31\"]},{\"tk\":[2013,75,2013,76],\"els\":[\"0:35:13:63\"]},{\"tk\":[2014,5,2014,29],\"els\":[\"0:35:13:63\"]},{\"tk\":[2014,30,2014,40],\"els\":[\"0:35:13:63\"]},{\"tk\":[2017,3,2017,27],\"els\":[\"0:35:8\"]},{\"tk\":[2017,28,2017,32],\"els\":[\"0:35:8\"]},{\"tk\":[2017,33,2017,34],\"els\":[\"0:35:8\"]},{\"tk\":[2017,36,2017,60],\"els\":[\"0:35:8\"]},{\"tk\":[2017,61,2017,71],\"els\":[\"0:35:8\"]},{\"tk\":[2017,72,2017,73],\"els\":[\"0:35:8\"]},{\"tk\":[2018,5,2018,29],\"els\":[\"0:35:8\"]},{\"tk\":[2018,30,2018,40],\"els\":[\"0:35:8\"]},{\"tk\":[2018,41,2018,42],\"els\":[\"0:35:8\"]},{\"tk\":[2018,43,2018,67],\"els\":[\"0:35:8\"]},{\"tk\":[2018,68,2018,72],\"els\":[\"0:35:8\"]},{\"tk\":[2018,73,2018,74],\"els\":[\"0:35:8\"]},{\"tk\":[2019,5,2019,29],\"els\":[\"0:35:8\"]},{\"tk\":[2019,30,2019,40],\"els\":[\"0:35:8\"]},{\"tk\":[2019,42,2019,43],\"els\":[\"0:35:8\"]},{\"tk\":[2019,44,2019,45],\"els\":[\"0:35:8\"]},{\"tk\":[2025,3,2025,5],\"els\":[\"0:35:14:46:98\"]},{\"tk\":[2025,7,2025,31],\"els\":[\"0:35:14:46:98\"]},{\"tk\":[2025,32,2025,36],\"els\":[\"0:35:14:46:98\"]},{\"tk\":[2025,37,2025,38],\"els\":[\"0:35:14:46:98\"]},{\"tk\":[2025,39,2025,42],\"els\":[\"0:35:14:46:98\"]},{\"tk\":[2029,5,2029,29],\"els\":[\"0:35:14:46:101\",\"0:35:14:46:99\",\"0:35:14:46:98\",\"0:35:14:46:100\"]},{\"tk\":[2029,30,2029,34],\"els\":[\"0:35:14:46:101\",\"0:35:14:46:99\",\"0:35:14:46:98\",\"0:35:14:46:100\"]},{\"tk\":[2029,35,2029,36],\"els\":[\"0:35:14:46:101\",\"0:35:14:46:99\",\"0:35:14:46:98\",\"0:35:14:46:100\"]},{\"tk\":[2029,37,2029,61],\"els\":[\"0:35:14:46:101\"]},{\"tk\":[2029,62,2029,78],\"els\":[\"0:35:14:46:101\"]},{\"tk\":[2039,5,2039,15],\"els\":[\"0:35:14:46:99\",\"0:35:14:46:98\",\"0:35:14:46:100\"]},{\"tk\":[2039,16,2039,41],\"els\":[\"0:35:14:46:99\",\"0:35:14:46:98\",\"0:35:14:46:100\"]},{\"tk\":[2039,42,2039,71],\"els\":[\"0:35:14:46:99\",\"0:35:14:46:98\",\"0:35:14:46:100\"]},{\"tk\":[2042,10,2042,12],\"els\":[\"0:35:14:46:98\"]},{\"tk\":[2042,14,2042,38],\"els\":[\"0:35:14:46:98\"]},{\"tk\":[2042,39,2042,43],\"els\":[\"0:35:14:46:98\"]},{\"tk\":[2042,44,2042,45],\"els\":[\"0:35:14:46:98\"]},{\"tk\":[2042,46,2042,47],\"els\":[\"0:35:14:46:98\"]},{\"tk\":[2046,5,2046,29],\"els\":[\"0:35:14:46:105\",\"0:35:14:46:103\",\"0:35:14:46:98\",\"0:35:14:46:104\"]},{\"tk\":[2046,30,2046,34],\"els\":[\"0:35:14:46:105\",\"0:35:14:46:103\",\"0:35:14:46:98\",\"0:35:14:46:104\"]},{\"tk\":[2046,35,2046,36],\"els\":[\"0:35:14:46:105\",\"0:35:14:46:103\",\"0:35:14:46:98\",\"0:35:14:46:104\"]},{\"tk\":[2046,37,2046,61],\"els\":[\"0:35:14:46:105\"]},{\"tk\":[2046,62,2046,79],\"els\":[\"0:35:14:46:105\"]},{\"tk\":[2056,5,2056,15],\"els\":[\"0:35:14:46:103\",\"0:35:14:46:98\",\"0:35:14:46:104\"]},{\"tk\":[2056,16,2056,41],\"els\":[\"0:35:14:46:103\",\"0:35:14:46:98\",\"0:35:14:46:104\"]},{\"tk\":[2056,42,2056,72],\"els\":[\"0:35:14:46:103\",\"0:35:14:46:98\",\"0:35:14:46:104\"]},{\"tk\":[2064,5,2064,15],\"els\":[\"0:35:14:46:107\",\"0:35:14:46:98\",\"0:35:14:46:109\"]},{\"tk\":[2064,16,2064,41],\"els\":[\"0:35:14:46:107\",\"0:35:14:46:98\",\"0:35:14:46:109\"]},{\"tk\":[2064,42,2064,72],\"els\":[\"0:35:14:46:107\",\"0:35:14:46:98\",\"0:35:14:46:109\"]},{\"tk\":[2074,3,2074,9],\"els\":[\"0:3267\"]},{\"tk\":[2074,10,2074,11],\"els\":[\"0:35:10\",\"0:35:7\"]},{\"tk\":[2074,12,2074,36],\"els\":[\"0:35:10\"]},{\"tk\":[2074,37,2074,41],\"els\":[\"0:35:10\"]},{\"tk\":[2074,42,2074,43],\"els\":[\"0:35:10\"]},{\"tk\":[2074,44,2074,68],\"els\":[\"0:35:10\"]},{\"tk\":[2074,69,2074,73],\"els\":[\"0:35:10\"]},{\"tk\":[2075,3,2075,27],\"els\":[\"0:35:10\"]},{\"tk\":[2075,28,2075,44],\"els\":[\"0:35:10\"]},{\"tk\":[2075,45,2075,46],\"els\":[\"0:35:10\",\"0:35:7\"]},{\"tk\":[2076,5,2076,29],\"els\":[\"0:35:10\"]},{\"tk\":[2076,30,2076,40],\"els\":[\"0:35:10\"]},{\"tk\":[2076,41,2076,42],\"els\":[\"0:35:10\"]},{\"tk\":[2076,43,2076,67],\"els\":[\"0:35:10\"]},{\"tk\":[2076,68,2076,78],\"els\":[\"0:35:10\"]},{\"tk\":[2077,3,2077,11],\"els\":[\"0:35:10\"]},{\"tk\":[2077,12,2077,13],\"els\":[\"0:35:10\",\"0:35:7\"]},{\"tk\":[2077,14,2077,38],\"els\":[\"0:35:10\"]},{\"tk\":[2077,39,2077,49],\"els\":[\"0:35:10\"]},{\"tk\":[2077,50,2077,51],\"els\":[\"0:35:10\"]},{\"tk\":[2078,5,2078,29],\"els\":[\"0:35:10\"]},{\"tk\":[2078,30,2078,40],\"els\":[\"0:35:10\"]},{\"tk\":[2079,3,2079,13],\"els\":[\"0:35:10\"]},{\"tk\":[2079,14,2079,15],\"els\":[\"0:35:10\",\"0:35:7\"]},{\"tk\":[2079,16,2079,40],\"els\":[\"0:35:10\"]},{\"tk\":[2079,41,2079,51],\"els\":[\"0:35:10\"]},{\"tk\":[2079,52,2079,53],\"els\":[\"0:35:10\"]},{\"tk\":[2080,5,2080,29],\"els\":[\"0:35:10\"]},{\"tk\":[2080,30,2080,40],\"els\":[\"0:35:10\"]},{\"tk\":[2087,3,2087,28],\"els\":[\"0:162\"]},{\"tk\":[2087,29,2087,33],\"els\":[\"0:162\"]},{\"tk\":[2087,34,2087,35],\"els\":[\"0:162\"]},{\"tk\":[2087,36,2087,49],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\"]},{\"tk\":[2088,5,2088,6],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\"]},{\"tk\":[2088,6,2088,7],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\"]},{\"tk\":[2088,7,2088,31],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\"]},{\"tk\":[2088,31,2088,32],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\"]},{\"tk\":[2088,32,2088,42],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\"]},{\"tk\":[2088,43,2088,44],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\"]},{\"tk\":[2088,45,2088,69],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\"]},{\"tk\":[2088,69,2088,70],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\"]},{\"tk\":[2088,70,2088,80],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\"]},{\"tk\":[2089,7,2089,8],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\"]},{\"tk\":[2089,9,2089,33],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\"]},{\"tk\":[2089,33,2089,34],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\"]},{\"tk\":[2089,34,2089,38],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\"]},{\"tk\":[2089,39,2089,40],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\"]},{\"tk\":[2089,41,2089,65],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\"]},{\"tk\":[2089,65,2089,66],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\"]},{\"tk\":[2089,66,2089,76],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\"]},{\"tk\":[2089,76,2089,77],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\"]},{\"tk\":[2089,78,2089,79],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\"]},{\"tk\":[2090,6,2090,9],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\"]},{\"tk\":[2090,9,2090,10],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\"]},{\"tk\":[2090,11,2090,12],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\"]},{\"tk\":[2090,12,2090,13],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\"]},{\"tk\":[2090,13,2090,19],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\",\"0:3267\"]},{\"tk\":[2090,20,2090,21],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\"]},{\"tk\":[2090,22,2090,46],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\"]},{\"tk\":[2090,46,2090,47],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\"]},{\"tk\":[2090,47,2090,63],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\"]},{\"tk\":[2090,63,2090,64],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\"]},{\"tk\":[2090,65,2090,66],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\"]},{\"tk\":[2090,67,2090,75],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\"]},{\"tk\":[2090,75,2090,76],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\"]},{\"tk\":[2090,77,2090,78],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\"]},{\"tk\":[2091,6,2091,16],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\"]},{\"tk\":[2091,16,2091,17],\"els\":[\"0:35:14:2\",\"0:35:9\",\"0:35:10\"]},{\"tk\":[2094,3,2094,5],\"els\":[\"0:35:14:4\"]},{\"tk\":[2094,7,2094,31],\"els\":[\"0:35:14:4\"]},{\"tk\":[2094,32,2094,36],\"els\":[\"0:35:14:4\"]},{\"tk\":[2094,37,2094,38],\"els\":[\"0:35:14:4\"]},{\"tk\":[2094,39,2094,42],\"els\":[\"0:35:14:4\"]},{\"tk\":[2095,5,2095,29],\"els\":[\"0:35:14:4\"]},{\"tk\":[2095,30,2095,34],\"els\":[\"0:35:14:4\"]},{\"tk\":[2095,35,2095,36],\"els\":[\"0:35:14:4\"]},{\"tk\":[2095,37,2095,40],\"els\":[\"0:35:14:4\"]},{\"tk\":[2096,10,2096,12],\"els\":[\"0:35:14:4\"]},{\"tk\":[2096,14,2096,38],\"els\":[\"0:35:14:4\"]},{\"tk\":[2096,39,2096,43],\"els\":[\"0:35:14:4\"]},{\"tk\":[2096,44,2096,45],\"els\":[\"0:35:14:4\"]},{\"tk\":[2096,46,2096,47],\"els\":[\"0:35:14:4\"]},{\"tk\":[2097,5,2097,29],\"els\":[\"0:35:14:4\"]},{\"tk\":[2097,30,2097,34],\"els\":[\"0:35:14:4\"]},{\"tk\":[2097,35,2097,36],\"els\":[\"0:35:14:4\"]},{\"tk\":[2097,37,2097,38],\"els\":[\"0:35:14:4\"]},{\"tk\":[2103,3,2103,28],\"els\":[\"0:163\"]},{\"tk\":[2103,29,2103,34],\"els\":[\"0:163\"]},{\"tk\":[2103,35,2103,36],\"els\":[\"0:163\"]},{\"tk\":[2103,37,2103,41],\"els\":[\"0:35:14:4\"]},{\"tk\":[2103,42,2103,66],\"els\":[\"0:35:14:4\"]},{\"tk\":[2103,67,2103,71],\"els\":[\"0:35:14:4\"]},{\"tk\":[2110,3,2110,28],\"els\":[\"0:373\"]},{\"tk\":[2110,29,2110,32],\"els\":[\"0:373\"]},{\"tk\":[2110,33,2110,34],\"els\":[\"0:373\"]},{\"tk\":[2110,35,2110,48],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2111,5,2111,6],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2111,6,2111,7],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2111,7,2111,31],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2111,31,2111,32],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2111,32,2111,42],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2111,43,2111,44],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2111,45,2111,69],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2111,69,2111,70],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2111,70,2111,80],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2112,7,2112,8],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2112,9,2112,33],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2112,33,2112,34],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2112,34,2112,38],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2112,39,2112,40],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2112,41,2112,65],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2112,65,2112,66],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2112,66,2112,76],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2112,76,2112,77],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2112,78,2112,79],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2113,6,2113,9],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2113,9,2113,10],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2113,11,2113,12],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2113,12,2113,13],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2113,13,2113,19],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2113,20,2113,21],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2113,22,2113,46],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2113,46,2113,47],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2113,47,2113,63],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2113,63,2113,64],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2113,65,2113,66],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2113,67,2113,75],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2113,75,2113,76],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2113,77,2113,78],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2114,6,2114,16],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2114,16,2114,17],\"els\":[\"0:35:14:1\",\"0:35:6\",\"0:35:7\"]},{\"tk\":[2119,3,2119,28],\"els\":[\"0:525\"]},{\"tk\":[2119,29,2119,38],\"els\":[\"0:525\"]},{\"tk\":[2119,39,2119,40],\"els\":[\"0:525\"]},{\"tk\":[2119,41,2119,65],\"els\":[\"0:523\"]},{\"tk\":[2119,66,2119,69],\"els\":[\"0:523\"]},{\"tk\":[2124,3,2124,28],\"els\":[\"0:526\"]},{\"tk\":[2124,29,2124,40],\"els\":[\"0:526\"]},{\"tk\":[2124,41,2124,42],\"els\":[\"0:526\"]},{\"tk\":[2125,5,2125,29],\"els\":[\"0:523\"]},{\"tk\":[2125,30,2125,33],\"els\":[\"0:523\"]},{\"tk\":[2130,3,2130,28],\"els\":[\"0:527\"]},{\"tk\":[2130,29,2130,39],\"els\":[\"0:527\"]},{\"tk\":[2130,40,2130,41],\"els\":[\"0:527\"]},{\"tk\":[2130,42,2130,66],\"els\":[\"0:523\"]},{\"tk\":[2130,67,2130,70],\"els\":[\"0:523\"]},{\"tk\":[2133,3,2133,16],\"els\":[\"0:3718:43:9\"]},{\"tk\":[2133,17,2133,18],\"els\":[\"0:3718:43:9\"]},{\"tk\":[2133,19,2133,33],\"els\":[\"0:3718:43:9\"]},{\"tk\":[2133,34,2133,59],\"els\":[\"0:3718:43:9\"]},{\"tk\":[2133,60,2133,65],\"els\":[\"0:3718:43:9\"]},{\"tk\":[2134,6,2134,31],\"els\":[\"0:3718:43:9\"]},{\"tk\":[2134,32,2134,37],\"els\":[\"0:3718:43:9\"]},{\"tk\":[2134,38,2134,52],\"els\":[\"0:3718:43:9\"]},{\"tk\":[2135,6,2135,30],\"els\":[\"0:3718:43:9\"]},{\"tk\":[2135,31,2135,46],\"els\":[\"0:3718:43:9\"]},{\"tk\":[2135,48,2135,53],\"els\":[\"0:3718:43:9\"]},{\"tk\":[2135,55,2135,61],\"els\":[\"0:3718:43:9\"]},{\"tk\":[2140,3,2140,5],\"els\":[\"0:3718:43:5\",\"0:3718:43:3\"]},{\"tk\":[2140,7,2140,20],\"els\":[\"0:3718:43:9\"]},{\"tk\":[2142,5,2142,29],\"els\":[\"0:3718:43:4\"]},{\"tk\":[2142,30,2142,35],\"els\":[\"0:3718:43:4\"]},{\"tk\":[2142,36,2142,37],\"els\":[\"0:3718:43:4\",\"0:3718:43:5\",\"0:3718:43:3\"]},{\"tk\":[2142,38,2142,62],\"els\":[\"0:3718:43:9\"]},{\"tk\":[2142,63,2142,78],\"els\":[\"0:3718:43:9\"]},{\"tk\":[2143,5,2143,15],\"els\":[\"0:3718:43:5\",\"0:3718:43:3\"]},{\"tk\":[2143,16,2143,41],\"els\":[\"0:3718:43:5\",\"0:3718:43:3\"]},{\"tk\":[2143,42,2143,70],\"els\":[\"0:3718:43:5\",\"0:3718:43:3\"]},{\"tk\":[2148,3,2148,6],\"els\":[\"0:3718:41\"]},{\"tk\":[2148,16,2148,17],\"els\":[\"0:3718:41\"]},{\"tk\":[2148,20,2148,21],\"els\":[\"0:3718:41\"]},{\"tk\":[2148,23,2148,24],\"els\":[\"0:3718:41\"]},{\"tk\":[2148,27,2148,29],\"els\":[\"0:3718:41\"]},{\"tk\":[2148,31,2148,32],\"els\":[\"0:3718:41\"]},{\"tk\":[2148,32,2148,34],\"els\":[\"0:3718:41\"]},{\"tk\":[2150,5,2150,29],\"els\":[\"0:3718:41\"]},{\"tk\":[2150,30,2150,36],\"els\":[\"0:3718:41\"]},{\"tk\":[2150,36,2150,37],\"els\":[\"0:3718:41\"]},{\"tk\":[2150,37,2150,38],\"els\":[\"0:3718:41\"]},{\"tk\":[2150,40,2150,41],\"els\":[\"0:3718:41\"]},{\"tk\":[2150,42,2150,66],\"els\":[\"0:3718:41\"]},{\"tk\":[2150,67,2150,72],\"els\":[\"0:3718:41\"]},{\"tk\":[2150,73,2150,79],\"els\":[\"0:3718:41\"]},{\"tk\":[2150,79,2150,80],\"els\":[\"0:3718:41\"]},{\"tk\":[2150,80,2150,81],\"els\":[\"0:3718:41\"]},{\"tk\":[2154,3,2154,5],\"els\":[\"0:3740\"]},{\"tk\":[2154,7,2154,31],\"els\":[\"0:3740\"]},{\"tk\":[2154,32,2154,38],\"els\":[\"0:3740\"]},{\"tk\":[2154,38,2154,39],\"els\":[\"0:3740\"]},{\"tk\":[2154,39,2154,40],\"els\":[\"0:3740\"]},{\"tk\":[2154,42,2154,43],\"els\":[\"0:3740\"]},{\"tk\":[2155,7,2155,31],\"els\":[\"0:3740\"]},{\"tk\":[2155,32,2155,49],\"els\":[\"0:3740\"]},{\"tk\":[2159,5,2159,29],\"els\":[\"0:3740\",\"0:3740#out:1\"]},{\"tk\":[2159,30,2159,37],\"els\":[\"0:3740\",\"0:3740#out:1\"]},{\"tk\":[2159,38,2159,39],\"els\":[\"0:3740\",\"0:3740#out:1\"]},{\"tk\":[2159,40,2159,64],\"els\":[\"0:3745\"]},{\"tk\":[2159,65,2159,81],\"els\":[\"0:3745\"]},{\"tk\":[2164,5,2164,29],\"els\":[\"0:3740#out:1\"]},{\"tk\":[2164,30,2164,37],\"els\":[\"0:3740#out:1\"]},{\"tk\":[2164,38,2164,39],\"els\":[\"0:3740#out:1\",\"0:3740\"]},{\"tk\":[2164,40,2164,64],\"els\":[\"0:3746\"]},{\"tk\":[2164,65,2164,81],\"els\":[\"0:3746\"]},{\"tk\":[2172,3,2172,28],\"els\":[\"0:1642\"]},{\"tk\":[2172,29,2172,42],\"els\":[\"0:1642\"]},{\"tk\":[2172,43,2172,44],\"els\":[\"0:1642\"]},{\"tk\":[2173,5,2173,29],\"els\":[\"0:1643\"]},{\"tk\":[2173,30,2173,49],\"els\":[\"0:1643\"]},{\"tk\":[2178,3,2178,28],\"els\":[\"0:2875\"]},{\"tk\":[2178,29,2178,42],\"els\":[\"0:2875\"]},{\"tk\":[2178,43,2178,44],\"els\":[\"0:2875\"]},{\"tk\":[2179,5,2179,29],\"els\":[\"0:2876\"]},{\"tk\":[2179,30,2179,49],\"els\":[\"0:2876\"]},{\"tk\":[2180,3,2180,6],\"els\":[\"0:335\",\"0:332\"]},{\"tk\":[2180,16,2180,17],\"els\":[\"0:3718:41\"]},{\"tk\":[2180,20,2180,21],\"els\":[\"0:335\",\"0:332\"]},{\"tk\":[2180,23,2180,24],\"els\":[\"0:3718:41\"]},{\"tk\":[2180,27,2180,28],\"els\":[\"0:335\",\"0:332\"]},{\"tk\":[2180,30,2180,31],\"els\":[\"0:3718:41\"]},{\"tk\":[2180,31,2180,33],\"els\":[\"0:335\",\"0:332\"]},{\"tk\":[2190,5,2190,29],\"els\":[\"0:332\"]},{\"tk\":[2190,30,2190,34],\"els\":[\"0:332\"]},{\"tk\":[2190,35,2190,36],\"els\":[\"0:332\"]},{\"tk\":[2190,37,2190,42],\"els\":[\"0:332\"]},{\"tk\":[2191,11,2191,35],\"els\":[\"0:333\"]},{\"tk\":[2191,36,2191,54],\"els\":[\"0:333\"]},{\"tk\":[2191,54,2191,55],\"els\":[\"0:335\",\"0:333\"]},{\"tk\":[2191,55,2191,56],\"els\":[\"0:3718:41\"]},{\"tk\":[2191,57,2191,58],\"els\":[\"0:335\",\"0:333\"]},{\"tk\":[2191,59,2191,60],\"els\":[\"0:335\",\"0:333\"]},{\"tk\":[2191,62,2191,63],\"els\":[\"0:335\"]},{\"tk\":[2192,11,2192,35],\"els\":[\"0:335\",\"0:383\"]},{\"tk\":[2192,36,2192,51],\"els\":[\"0:335\",\"0:383\"]},{\"tk\":[2192,52,2192,53],\"els\":[\"0:335\"]},{\"tk\":[2193,11,2193,35],\"els\":[\"0:333\"]},{\"tk\":[2193,36,2193,54],\"els\":[\"0:333\"]},{\"tk\":[2193,54,2193,55],\"els\":[\"0:335\",\"0:333\"]},{\"tk\":[2193,55,2193,56],\"els\":[\"0:3718:41\"]},{\"tk\":[2193,58,2193,59],\"els\":[\"0:335\"]},{\"tk\":[2194,11,2194,35],\"els\":[\"0:341\"]},{\"tk\":[2194,36,2194,53],\"els\":[\"0:341\"]},{\"tk\":[2194,55,2194,56],\"els\":[\"0:335\"]},{\"tk\":[2195,10,2195,34],\"els\":[\"0:333\"]},{\"tk\":[2195,35,2195,53],\"els\":[\"0:333\"]},{\"tk\":[2195,53,2195,54],\"els\":[\"0:335\",\"0:333\"]},{\"tk\":[2195,54,2195,55],\"els\":[\"0:3718:41\"]},{\"tk\":[2195,56,2195,57],\"els\":[\"0:335\",\"0:333\"]},{\"tk\":[2195,58,2195,59],\"els\":[\"0:335\",\"0:333\"]},{\"tk\":[2195,61,2195,62],\"els\":[\"0:335\"]},{\"tk\":[2196,10,2196,34],\"els\":[\"0:335\",\"0:381\"]},{\"tk\":[2196,35,2196,50],\"els\":[\"0:335\",\"0:381\"]},{\"tk\":[2196,52,2196,53],\"els\":[\"0:335\"]},{\"tk\":[2197,9,2197,33],\"els\":[\"0:333\"]},{\"tk\":[2197,34,2197,52],\"els\":[\"0:333\"]},{\"tk\":[2197,52,2197,53],\"els\":[\"0:335\",\"0:333\"]},{\"tk\":[2197,53,2197,54],\"els\":[\"0:3718:41\"]},{\"tk\":[2197,55,2197,56],\"els\":[\"0:335\",\"0:333\"]},{\"tk\":[2197,57,2197,59],\"els\":[\"0:335\",\"0:333\"]},{\"tk\":[2197,61,2197,62],\"els\":[\"0:335\"]},{\"tk\":[2198,9,2198,33],\"els\":[\"0:335\",\"0:382\"]},{\"tk\":[2198,34,2198,49],\"els\":[\"0:335\",\"0:382\"]},{\"tk\":[2198,51,2198,52],\"els\":[\"0:332\"]},{\"tk\":[2199,8,2199,32],\"els\":[\"0:332\"]},{\"tk\":[2199,33,2199,46],\"els\":[\"0:332\"]},{\"tk\":[2200,5,2200,7],\"els\":[\"0:332\"]},{\"tk\":[2200,9,2200,16],\"els\":[\"0:332\"]},{\"tk\":[2200,17,2200,41],\"els\":[\"0:332\"]},{\"tk\":[2200,42,2200,46],\"els\":[\"0:332\"]},{\"tk\":[2200,48,2200,50],\"els\":[\"0:332\"]},{\"tk\":[2200,51,2200,58],\"els\":[\"0:332\"]},{\"tk\":[2201,10,2201,34],\"els\":[\"0:332\"]},{\"tk\":[2201,35,2201,39],\"els\":[\"0:332\"]},{\"tk\":[2202,7,2202,31],\"els\":[\"0:332\"]},{\"tk\":[2202,32,2202,36],\"els\":[\"0:332\"]},{\"tk\":[2202,37,2202,38],\"els\":[\"0:332\"]},{\"tk\":[2202,39,2202,42],\"els\":[\"0:332\"]},{\"tk\":[2204,7,2204,31],\"els\":[\"0:332\"]},{\"tk\":[2204,32,2204,36],\"els\":[\"0:332\"]},{\"tk\":[2204,37,2204,38],\"els\":[\"0:332\"]},{\"tk\":[2204,39,2204,43],\"els\":[\"0:332\"]},{\"tk\":[2204,44,2204,68],\"els\":[\"0:332\"]},{\"tk\":[2204,69,2204,73],\"els\":[\"0:332\"]},{\"tk\":[2205,9,2205,16],\"els\":[\"0:332\"]},{\"tk\":[2208,5,2208,29],\"els\":[\"0:332\"]},{\"tk\":[2208,30,2208,35],\"els\":[\"0:332\"]},{\"tk\":[2208,35,2208,36],\"els\":[\"0:332\"]},{\"tk\":[2208,36,2208,37],\"els\":[\"0:3718:41\"]},{\"tk\":[2208,39,2208,40],\"els\":[\"0:332\"]},{\"tk\":[2209,8,2209,32],\"els\":[\"0:332\"]},{\"tk\":[2209,33,2209,37],\"els\":[\"0:332\"]},{\"tk\":[2209,38,2209,39],\"els\":[\"0:332\"]},{\"tk\":[2209,40,2209,43],\"els\":[\"0:332\"]},{\"tk\":[2209,44,2209,45],\"els\":[\"0:332\"]},{\"tk\":[2210,31,2210,32],\"els\":[\"0:332\"]},{\"tk\":[2211,12,2211,13],\"els\":[\"0:332\"]},{\"tk\":[2211,13,2211,37],\"els\":[\"0:332\"]},{\"tk\":[2211,38,2211,42],\"els\":[\"0:332\"]},{\"tk\":[2212,31,2212,55],\"els\":[\"0:332\"]},{\"tk\":[2212,56,2212,60],\"els\":[\"0:332\"]},{\"tk\":[2218,3,2218,6],\"els\":[\"0:26\"]},{\"tk\":[2218,16,2218,17],\"els\":[\"0:3718:41\"]},{\"tk\":[2218,20,2218,21],\"els\":[\"0:26\"]},{\"tk\":[2218,23,2218,24],\"els\":[\"0:3718:41\"]},{\"tk\":[2218,27,2218,28],\"els\":[\"0:26\"]},{\"tk\":[2218,30,2218,31],\"els\":[\"0:3718:41\"]},{\"tk\":[2218,31,2218,33],\"els\":[\"0:26\"]},{\"tk\":[2219,5,2219,29],\"els\":[\"0:26\"]},{\"tk\":[2219,30,2219,38],\"els\":[\"0:26\"]},{\"tk\":[2219,38,2219,39],\"els\":[\"0:26\"]},{\"tk\":[2219,39,2219,40],\"els\":[\"0:3718:41\"]},{\"tk\":[2219,42,2219,43],\"els\":[\"0:26\"]},{\"tk\":[2219,44,2219,46],\"els\":[\"0:26\"]},{\"tk\":[2225,3,2225,27],\"els\":[\"0:3230\"]},{\"tk\":[2225,28,2225,32],\"els\":[\"0:3230\"]},{\"tk\":[2225,33,2225,34],\"els\":[\"0:3230\"]},{\"tk\":[2225,35,2225,40],\"els\":[\"0:3230\"]},{\"tk\":[2226,6,2226,30],\"els\":[\"0:3230\"]},{\"tk\":[2226,31,2226,36],\"els\":[\"0:3230\"]},{\"tk\":[2226,36,2226,37],\"els\":[\"0:3230\"]},{\"tk\":[2226,37,2226,38],\"els\":[\"0:3230\"]},{\"tk\":[2226,41,2226,42],\"els\":[\"0:3230\"]},{\"tk\":[2226,43,2226,67],\"els\":[\"0:2868\"]},{\"tk\":[2226,68,2226,81],\"els\":[\"0:2868\"]},{\"tk\":[2227,3,2227,5],\"els\":[\"0:3230\"]},{\"tk\":[2227,7,2227,14],\"els\":[\"0:3230\"]},{\"tk\":[2227,15,2227,39],\"els\":[\"0:3230\"]},{\"tk\":[2227,40,2227,44],\"els\":[\"0:3230\"]},{\"tk\":[2227,46,2227,48],\"els\":[\"0:3230\"]},{\"tk\":[2227,49,2227,56],\"els\":[\"0:3230\"]},{\"tk\":[2228,8,2228,32],\"els\":[\"0:3230\"]},{\"tk\":[2228,33,2228,37],\"els\":[\"0:3230\"]},{\"tk\":[2229,5,2229,29],\"els\":[\"0:3230\"]},{\"tk\":[2229,30,2229,34],\"els\":[\"0:3230\"]},{\"tk\":[2229,35,2229,36],\"els\":[\"0:3230\"]},{\"tk\":[2229,37,2229,40],\"els\":[\"0:3230\"]},{\"tk\":[2231,5,2231,29],\"els\":[\"0:3230\"]},{\"tk\":[2231,30,2231,34],\"els\":[\"0:3230\"]},{\"tk\":[2231,35,2231,36],\"els\":[\"0:3230\"]},{\"tk\":[2231,37,2231,41],\"els\":[\"0:3230\"]},{\"tk\":[2231,42,2231,66],\"els\":[\"0:3230\"]},{\"tk\":[2231,67,2231,71],\"els\":[\"0:3230\"]},{\"tk\":[2231,73,2231,80],\"els\":[\"0:3230\"]},{\"tk\":[2237,3,2237,27],\"els\":[\"0:26\"]},{\"tk\":[2237,28,2237,36],\"els\":[\"0:26\"]},{\"tk\":[2237,36,2237,37],\"els\":[\"0:26\"]},{\"tk\":[2237,37,2237,38],\"els\":[\"0:26\"]},{\"tk\":[2237,40,2237,41],\"els\":[\"0:26\"]},{\"tk\":[2238,6,2238,30],\"els\":[\"0:3230\"]},{\"tk\":[2238,31,2238,35],\"els\":[\"0:3230\"]},{\"tk\":[2238,36,2238,37],\"els\":[\"0:3230\"]},{\"tk\":[2238,38,2238,41],\"els\":[\"0:3230\"]},{\"tk\":[2238,42,2238,43],\"els\":[\"0:3230\"]},{\"tk\":[2239,29,2239,30],\"els\":[\"0:3230\"]},{\"tk\":[2240,10,2240,11],\"els\":[\"0:3230\"]},{\"tk\":[2240,11,2240,35],\"els\":[\"0:3230\"]},{\"tk\":[2240,36,2240,40],\"els\":[\"0:3230\"]},{\"tk\":[2241,29,2241,53],\"els\":[\"0:3230\"]},{\"tk\":[2241,54,2241,58],\"els\":[\"0:3230\"]},{\"tk\":[2246,3,2246,27],\"els\":[\"0:3232\"]},{\"tk\":[2246,28,2246,32],\"els\":[\"0:3232\"]},{\"tk\":[2246,33,2246,34],\"els\":[\"0:3232\"]},{\"tk\":[2246,35,2246,40],\"els\":[\"0:3232\"]},{\"tk\":[2247,6,2247,30],\"els\":[\"0:3232\"]},{\"tk\":[2247,31,2247,36],\"els\":[\"0:3232\"]},{\"tk\":[2247,36,2247,37],\"els\":[\"0:3232\"]},{\"tk\":[2247,37,2247,38],\"els\":[\"0:3232\"]},{\"tk\":[2247,41,2247,42],\"els\":[\"0:3232\"]},{\"tk\":[2247,43,2247,67],\"els\":[\"0:3115\"]},{\"tk\":[2247,68,2247,81],\"els\":[\"0:3115\"]},{\"tk\":[2248,3,2248,5],\"els\":[\"0:3232\"]},{\"tk\":[2248,7,2248,14],\"els\":[\"0:3232\"]},{\"tk\":[2248,15,2248,39],\"els\":[\"0:3232\"]},{\"tk\":[2248,40,2248,44],\"els\":[\"0:3232\"]},{\"tk\":[2248,46,2248,48],\"els\":[\"0:3232\"]},{\"tk\":[2248,49,2248,56],\"els\":[\"0:3232\"]},{\"tk\":[2249,8,2249,32],\"els\":[\"0:3232\"]},{\"tk\":[2249,33,2249,37],\"els\":[\"0:3232\"]},{\"tk\":[2250,5,2250,29],\"els\":[\"0:3232\"]},{\"tk\":[2250,30,2250,34],\"els\":[\"0:3232\"]},{\"tk\":[2250,35,2250,36],\"els\":[\"0:3232\"]},{\"tk\":[2250,37,2250,40],\"els\":[\"0:3232\"]},{\"tk\":[2252,5,2252,29],\"els\":[\"0:3232\"]},{\"tk\":[2252,30,2252,34],\"els\":[\"0:3232\"]},{\"tk\":[2252,35,2252,36],\"els\":[\"0:3232\"]},{\"tk\":[2252,37,2252,41],\"els\":[\"0:3232\"]},{\"tk\":[2252,42,2252,66],\"els\":[\"0:3232\"]},{\"tk\":[2252,67,2252,71],\"els\":[\"0:3232\"]},{\"tk\":[2252,73,2252,80],\"els\":[\"0:3232\"]},{\"tk\":[2258,3,2258,27],\"els\":[\"0:26\"]},{\"tk\":[2258,28,2258,36],\"els\":[\"0:26\"]},{\"tk\":[2258,36,2258,37],\"els\":[\"0:26\"]},{\"tk\":[2258,37,2258,38],\"els\":[\"0:26\"]},{\"tk\":[2258,40,2258,41],\"els\":[\"0:26\"]},{\"tk\":[2259,6,2259,30],\"els\":[\"0:3232\"]},{\"tk\":[2259,31,2259,35],\"els\":[\"0:3232\"]},{\"tk\":[2259,36,2259,37],\"els\":[\"0:3232\"]},{\"tk\":[2259,38,2259,41],\"els\":[\"0:3232\"]},{\"tk\":[2259,42,2259,43],\"els\":[\"0:3232\"]},{\"tk\":[2260,29,2260,30],\"els\":[\"0:3232\"]},{\"tk\":[2261,10,2261,11],\"els\":[\"0:3232\"]},{\"tk\":[2261,11,2261,35],\"els\":[\"0:3232\"]},{\"tk\":[2261,36,2261,40],\"els\":[\"0:3232\"]},{\"tk\":[2262,29,2262,53],\"els\":[\"0:3232\"]},{\"tk\":[2262,54,2262,58],\"els\":[\"0:3232\"]},{\"tk\":[2267,3,2267,27],\"els\":[\"0:3233\"]},{\"tk\":[2267,28,2267,32],\"els\":[\"0:3233\"]},{\"tk\":[2267,33,2267,34],\"els\":[\"0:3233\"]},{\"tk\":[2267,35,2267,40],\"els\":[\"0:3233\"]},{\"tk\":[2268,6,2268,30],\"els\":[\"0:3233\"]},{\"tk\":[2268,31,2268,36],\"els\":[\"0:3233\"]},{\"tk\":[2268,36,2268,37],\"els\":[\"0:3233\"]},{\"tk\":[2268,37,2268,38],\"els\":[\"0:3233\"]},{\"tk\":[2268,41,2268,42],\"els\":[\"0:3233\"]},{\"tk\":[2268,43,2268,67],\"els\":[\"0:3116\"]},{\"tk\":[2268,68,2268,81],\"els\":[\"0:3116\"]},{\"tk\":[2269,3,2269,5],\"els\":[\"0:3233\"]},{\"tk\":[2269,7,2269,14],\"els\":[\"0:3233\"]},{\"tk\":[2269,15,2269,39],\"els\":[\"0:3233\"]},{\"tk\":[2269,40,2269,44],\"els\":[\"0:3233\"]},{\"tk\":[2269,46,2269,48],\"els\":[\"0:3233\"]},{\"tk\":[2269,49,2269,56],\"els\":[\"0:3233\"]},{\"tk\":[2270,8,2270,32],\"els\":[\"0:3233\"]},{\"tk\":[2270,33,2270,37],\"els\":[\"0:3233\"]},{\"tk\":[2271,5,2271,29],\"els\":[\"0:3233\"]},{\"tk\":[2271,30,2271,34],\"els\":[\"0:3233\"]},{\"tk\":[2271,35,2271,36],\"els\":[\"0:3233\"]},{\"tk\":[2271,37,2271,40],\"els\":[\"0:3233\"]},{\"tk\":[2273,5,2273,29],\"els\":[\"0:3233\"]},{\"tk\":[2273,30,2273,34],\"els\":[\"0:3233\"]},{\"tk\":[2273,35,2273,36],\"els\":[\"0:3233\"]},{\"tk\":[2273,37,2273,41],\"els\":[\"0:3233\"]},{\"tk\":[2273,42,2273,66],\"els\":[\"0:3233\"]},{\"tk\":[2273,67,2273,71],\"els\":[\"0:3233\"]},{\"tk\":[2273,73,2273,80],\"els\":[\"0:3233\"]},{\"tk\":[2279,3,2279,27],\"els\":[\"0:26\"]},{\"tk\":[2279,28,2279,36],\"els\":[\"0:26\"]},{\"tk\":[2279,36,2279,37],\"els\":[\"0:26\"]},{\"tk\":[2279,37,2279,38],\"els\":[\"0:26\"]},{\"tk\":[2279,40,2279,41],\"els\":[\"0:26\"]},{\"tk\":[2280,6,2280,30],\"els\":[\"0:3233\"]},{\"tk\":[2280,31,2280,35],\"els\":[\"0:3233\"]},{\"tk\":[2280,36,2280,37],\"els\":[\"0:3233\"]},{\"tk\":[2280,38,2280,41],\"els\":[\"0:3233\"]},{\"tk\":[2280,42,2280,43],\"els\":[\"0:3233\"]},{\"tk\":[2281,29,2281,30],\"els\":[\"0:3233\"]},{\"tk\":[2282,10,2282,11],\"els\":[\"0:3233\"]},{\"tk\":[2282,11,2282,35],\"els\":[\"0:3233\"]},{\"tk\":[2282,36,2282,40],\"els\":[\"0:3233\"]},{\"tk\":[2283,29,2283,53],\"els\":[\"0:3233\"]},{\"tk\":[2283,54,2283,58],\"els\":[\"0:3233\"]},{\"tk\":[2288,3,2288,27],\"els\":[\"0:3234\"]},{\"tk\":[2288,28,2288,32],\"els\":[\"0:3234\"]},{\"tk\":[2288,33,2288,34],\"els\":[\"0:3234\"]},{\"tk\":[2288,35,2288,40],\"els\":[\"0:3234\"]},{\"tk\":[2289,6,2289,30],\"els\":[\"0:3234\"]},{\"tk\":[2289,31,2289,36],\"els\":[\"0:3234\"]},{\"tk\":[2289,36,2289,37],\"els\":[\"0:3234\"]},{\"tk\":[2289,37,2289,38],\"els\":[\"0:3234\"]},{\"tk\":[2289,41,2289,42],\"els\":[\"0:3234\"]},{\"tk\":[2289,43,2289,67],\"els\":[\"0:3117\"]},{\"tk\":[2289,68,2289,81],\"els\":[\"0:3117\"]},{\"tk\":[2290,3,2290,5],\"els\":[\"0:3234\"]},{\"tk\":[2290,7,2290,14],\"els\":[\"0:3234\"]},{\"tk\":[2290,15,2290,39],\"els\":[\"0:3234\"]},{\"tk\":[2290,40,2290,44],\"els\":[\"0:3234\"]},{\"tk\":[2290,46,2290,48],\"els\":[\"0:3234\"]},{\"tk\":[2290,49,2290,56],\"els\":[\"0:3234\"]},{\"tk\":[2291,8,2291,32],\"els\":[\"0:3234\"]},{\"tk\":[2291,33,2291,37],\"els\":[\"0:3234\"]},{\"tk\":[2292,5,2292,29],\"els\":[\"0:3234\"]},{\"tk\":[2292,30,2292,34],\"els\":[\"0:3234\"]},{\"tk\":[2292,35,2292,36],\"els\":[\"0:3234\"]},{\"tk\":[2292,37,2292,40],\"els\":[\"0:3234\"]},{\"tk\":[2294,5,2294,29],\"els\":[\"0:3234\"]},{\"tk\":[2294,30,2294,34],\"els\":[\"0:3234\"]},{\"tk\":[2294,35,2294,36],\"els\":[\"0:3234\"]},{\"tk\":[2294,37,2294,41],\"els\":[\"0:3234\"]},{\"tk\":[2294,42,2294,66],\"els\":[\"0:3234\"]},{\"tk\":[2294,67,2294,71],\"els\":[\"0:3234\"]},{\"tk\":[2294,73,2294,80],\"els\":[\"0:3234\"]},{\"tk\":[2302,3,2302,27],\"els\":[\"0:26\"]},{\"tk\":[2302,28,2302,36],\"els\":[\"0:26\"]},{\"tk\":[2302,36,2302,37],\"els\":[\"0:26\"]},{\"tk\":[2302,37,2302,38],\"els\":[\"0:26\"]},{\"tk\":[2302,40,2302,41],\"els\":[\"0:26\"]},{\"tk\":[2303,6,2303,30],\"els\":[\"0:3234\"]},{\"tk\":[2303,31,2303,35],\"els\":[\"0:3234\"]},{\"tk\":[2303,36,2303,37],\"els\":[\"0:3234\"]},{\"tk\":[2303,38,2303,41],\"els\":[\"0:3234\"]},{\"tk\":[2303,42,2303,43],\"els\":[\"0:3234\"]},{\"tk\":[2304,29,2304,30],\"els\":[\"0:3234\"]},{\"tk\":[2305,10,2305,11],\"els\":[\"0:3234\"]},{\"tk\":[2305,11,2305,35],\"els\":[\"0:3234\"]},{\"tk\":[2305,36,2305,40],\"els\":[\"0:3234\"]},{\"tk\":[2306,29,2306,53],\"els\":[\"0:3234\"]},{\"tk\":[2306,54,2306,58],\"els\":[\"0:3234\"]},{\"tk\":[2307,3,2307,5],\"els\":[\"0:26\"]},{\"tk\":[2307,7,2307,31],\"els\":[\"0:716\"]},{\"tk\":[2307,32,2307,39],\"els\":[\"0:716\"]},{\"tk\":[2308,5,2308,7],\"els\":[\"0:26\"]},{\"tk\":[2308,9,2308,10],\"els\":[\"0:26\"]},{\"tk\":[2308,10,2308,35],\"els\":[\"0:26\"]},{\"tk\":[2308,36,2308,39],\"els\":[\"0:26\"]},{\"tk\":[2309,7,2309,32],\"els\":[\"0:26\"]},{\"tk\":[2309,33,2309,36],\"els\":[\"0:26\"]},{\"tk\":[2309,37,2309,44],\"els\":[\"0:26\"]},{\"tk\":[2309,45,2309,46],\"els\":[\"0:26\"]},{\"tk\":[2309,47,2309,51],\"els\":[\"0:26\"]},{\"tk\":[2310,14,2310,15],\"els\":[\"0:26\"]},{\"tk\":[2310,16,2310,23],\"els\":[\"0:26\"]},{\"tk\":[2310,25,2310,50],\"els\":[\"0:26\"]},{\"tk\":[2310,51,2310,54],\"els\":[\"0:26\"]},{\"tk\":[2310,55,2310,68],\"els\":[\"0:26\"]},{\"tk\":[2311,25,2311,50],\"els\":[\"0:26\"]},{\"tk\":[2311,51,2311,54],\"els\":[\"0:26\"]},{\"tk\":[2311,55,2311,70],\"els\":[\"0:26\"]},{\"tk\":[2312,7,2312,32],\"els\":[\"0:26\"]},{\"tk\":[2312,33,2312,36],\"els\":[\"0:26\"]},{\"tk\":[2312,37,2312,48],\"els\":[\"0:26\"]},{\"tk\":[2312,49,2312,50],\"els\":[\"0:26\"]},{\"tk\":[2313,10,2313,35],\"els\":[\"0:26\"]},{\"tk\":[2313,36,2313,39],\"els\":[\"0:26\"]},{\"tk\":[2313,52,2313,53],\"els\":[\"0:26\"]},{\"tk\":[2316,12,2316,13],\"els\":[\"0:26\"]},{\"tk\":[2316,14,2316,26],\"els\":[\"0:26\"]},{\"tk\":[2316,28,2316,53],\"els\":[\"0:26\"]},{\"tk\":[2316,54,2316,57],\"els\":[\"0:26\"]},{\"tk\":[2316,58,2316,71],\"els\":[\"0:26\"]},{\"tk\":[2317,27,2317,52],\"els\":[\"0:26\"]},{\"tk\":[2317,53,2317,56],\"els\":[\"0:26\"]},{\"tk\":[2318,27,2318,52],\"els\":[\"0:26\"]},{\"tk\":[2318,53,2318,56],\"els\":[\"0:26\"]},{\"tk\":[2319,28,2319,52],\"els\":[\"0:26\"]},{\"tk\":[2319,53,2319,61],\"els\":[\"0:26\"]},{\"tk\":[2319,61,2319,62],\"els\":[\"0:26\"]},{\"tk\":[2319,62,2319,63],\"els\":[\"0:26\"]},{\"tk\":[2320,27,2320,52],\"els\":[\"0:26\"]},{\"tk\":[2320,53,2320,56],\"els\":[\"0:26\"]},{\"tk\":[2321,28,2321,53],\"els\":[\"0:26\"]},{\"tk\":[2321,54,2321,57],\"els\":[\"0:26\"]},{\"tk\":[2321,58,2321,78],\"els\":[\"0:26\"]},{\"tk\":[2322,5,2322,30],\"els\":[\"0:26\"]},{\"tk\":[2322,31,2322,34],\"els\":[\"0:26\"]},{\"tk\":[2322,35,2322,46],\"els\":[\"0:26\"]},{\"tk\":[2322,47,2322,48],\"els\":[\"0:26\"]},{\"tk\":[2323,8,2323,33],\"els\":[\"0:26\"]},{\"tk\":[2323,34,2323,37],\"els\":[\"0:26\"]},{\"tk\":[2323,50,2323,51],\"els\":[\"0:26\"]},{\"tk\":[2325,12,2325,13],\"els\":[\"0:26\"]},{\"tk\":[2325,14,2325,24],\"els\":[\"0:26\"]},{\"tk\":[2325,26,2325,51],\"els\":[\"0:26\"]},{\"tk\":[2325,52,2325,55],\"els\":[\"0:26\"]},{\"tk\":[2325,56,2325,69],\"els\":[\"0:26\"]},{\"tk\":[2326,26,2326,51],\"els\":[\"0:26\"]},{\"tk\":[2326,52,2326,55],\"els\":[\"0:26\"]},{\"tk\":[2326,56,2326,71],\"els\":[\"0:26\"]},{\"tk\":[2327,5,2327,30],\"els\":[\"0:26\"]},{\"tk\":[2327,31,2327,34],\"els\":[\"0:26\"]},{\"tk\":[2327,35,2327,46],\"els\":[\"0:26\"]},{\"tk\":[2327,47,2327,48],\"els\":[\"0:26\"]},{\"tk\":[2328,8,2328,33],\"els\":[\"0:26\"]},{\"tk\":[2328,34,2328,37],\"els\":[\"0:26\"]},{\"tk\":[2328,50,2328,51],\"els\":[\"0:26\"]},{\"tk\":[2329,5,2329,30],\"els\":[\"0:26\"]},{\"tk\":[2329,31,2329,34],\"els\":[\"0:26\"]},{\"tk\":[2329,35,2329,42],\"els\":[\"0:26\"]},{\"tk\":[2329,43,2329,44],\"els\":[\"0:26\"]},{\"tk\":[2329,45,2329,50],\"els\":[\"0:26\"]},{\"tk\":[2330,12,2330,13],\"els\":[\"0:26\"]},{\"tk\":[2330,14,2330,28],\"els\":[\"0:26\"]},{\"tk\":[2330,30,2330,55],\"els\":[\"0:26\"]},{\"tk\":[2330,56,2330,59],\"els\":[\"0:26\"]},{\"tk\":[2330,60,2330,73],\"els\":[\"0:26\"]},{\"tk\":[2331,7,2331,32],\"els\":[\"0:26\"]},{\"tk\":[2331,33,2331,36],\"els\":[\"0:26\"]},{\"tk\":[2332,7,2332,32],\"els\":[\"0:26\"]},{\"tk\":[2332,33,2332,36],\"els\":[\"0:26\"]},{\"tk\":[2333,7,2333,32],\"els\":[\"0:26\"]},{\"tk\":[2333,33,2333,36],\"els\":[\"0:26\"]},{\"tk\":[2334,8,2334,33],\"els\":[\"0:26\"]},{\"tk\":[2334,34,2334,37],\"els\":[\"0:26\"]},{\"tk\":[2334,38,2334,58],\"els\":[\"0:26\"]},{\"tk\":[2335,5,2335,30],\"els\":[\"0:26\"]},{\"tk\":[2335,31,2335,34],\"els\":[\"0:26\"]},{\"tk\":[2335,35,2335,46],\"els\":[\"0:26\"]},{\"tk\":[2335,47,2335,48],\"els\":[\"0:26\"]},{\"tk\":[2336,8,2336,33],\"els\":[\"0:26\"]},{\"tk\":[2336,34,2336,37],\"els\":[\"0:26\"]},{\"tk\":[2336,50,2336,51],\"els\":[\"0:26\"]},{\"tk\":[2339,3,2339,5],\"els\":[\"0:26\"]},{\"tk\":[2339,7,2339,32],\"els\":[\"0:26\"]},{\"tk\":[2339,33,2339,36],\"els\":[\"0:26\"]},{\"tk\":[2340,12,2340,13],\"els\":[\"0:26\"]},{\"tk\":[2340,14,2340,31],\"els\":[\"0:26\"]},{\"tk\":[2340,33,2340,58],\"els\":[\"0:26\"]},{\"tk\":[2340,59,2340,62],\"els\":[\"0:26\"]},{\"tk\":[2340,63,2340,76],\"els\":[\"0:26\"]},{\"tk\":[2341,28,2341,52],\"els\":[\"0:720\"]},{\"tk\":[2341,53,2341,71],\"els\":[\"0:720\"]},{\"tk\":[2342,5,2342,30],\"els\":[\"0:26\"]},{\"tk\":[2342,31,2342,34],\"els\":[\"0:26\"]},{\"tk\":[2342,35,2342,46],\"els\":[\"0:26\"]},{\"tk\":[2342,47,2342,48],\"els\":[\"0:26\"]},{\"tk\":[2343,8,2343,33],\"els\":[\"0:26\"]},{\"tk\":[2343,34,2343,37],\"els\":[\"0:26\"]},{\"tk\":[2343,50,2343,51],\"els\":[\"0:26\"]},{\"tk\":[2349,3,2349,27],\"els\":[\"0:412#out:1\"]},{\"tk\":[2349,28,2349,33],\"els\":[\"0:412#out:1\"]},{\"tk\":[2349,34,2349,35],\"els\":[\"0:412#out:1\",\"0:412\"]},{\"tk\":[2349,36,2349,60],\"els\":[\"0:412\"]},{\"tk\":[2349,61,2349,74],\"els\":[\"0:412\"]},{\"tk\":[2349,75,2349,76],\"els\":[\"0:412\"]},{\"tk\":[2350,5,2350,30],\"els\":[\"0:412\",\"0:405\"]},{\"tk\":[2350,31,2350,36],\"els\":[\"0:412\",\"0:405\"]},{\"tk\":[2353,3,2353,27],\"els\":[\"0:3706#out:1\"]},{\"tk\":[2353,28,2353,35],\"els\":[\"0:3706#out:1\"]},{\"tk\":[2353,36,2353,37],\"els\":[\"0:3706#out:1\",\"0:3706\"]},{\"tk\":[2353,38,2353,62],\"els\":[\"0:3706\"]},{\"tk\":[2353,63,2353,74],\"els\":[\"0:3706\"]},{\"tk\":[2353,75,2353,76],\"els\":[\"0:3706\"]},{\"tk\":[2354,5,2354,29],\"els\":[\"0:3706\"]},{\"tk\":[2354,30,2354,44],\"els\":[\"0:3706\"]},{\"tk\":[2359,3,2359,27],\"els\":[\"0:418#out:1\"]},{\"tk\":[2359,28,2359,32],\"els\":[\"0:418#out:1\"]},{\"tk\":[2359,33,2359,34],\"els\":[\"0:418#out:1\",\"0:418\"]},{\"tk\":[2359,35,2359,59],\"els\":[\"0:418\"]},{\"tk\":[2359,60,2359,72],\"els\":[\"0:418\"]},{\"tk\":[2359,73,2359,74],\"els\":[\"0:418\"]},{\"tk\":[2360,5,2360,30],\"els\":[\"0:418\",\"0:417\"]},{\"tk\":[2360,31,2360,35],\"els\":[\"0:418\",\"0:417\"]},{\"tk\":[2363,3,2363,27],\"els\":[\"0:3707#out:1\"]},{\"tk\":[2363,28,2363,35],\"els\":[\"0:3707#out:1\"]},{\"tk\":[2363,36,2363,37],\"els\":[\"0:3707#out:1\",\"0:3707\"]},{\"tk\":[2363,38,2363,62],\"els\":[\"0:3707\"]},{\"tk\":[2363,63,2363,74],\"els\":[\"0:3707\"]},{\"tk\":[2363,75,2363,76],\"els\":[\"0:3707\"]},{\"tk\":[2364,5,2364,29],\"els\":[\"0:3707\"]},{\"tk\":[2364,30,2364,44],\"els\":[\"0:3707\"]},{\"tk\":[2369,3,2369,27],\"els\":[\"0:422#out:1\"]},{\"tk\":[2369,28,2369,31],\"els\":[\"0:422#out:1\"]},{\"tk\":[2369,32,2369,33],\"els\":[\"0:422#out:1\",\"0:422\"]},{\"tk\":[2369,34,2369,58],\"els\":[\"0:422\"]},{\"tk\":[2369,59,2369,69],\"els\":[\"0:422\"]},{\"tk\":[2369,70,2369,71],\"els\":[\"0:422\"]},{\"tk\":[2370,5,2370,30],\"els\":[\"0:422\",\"0:421\"]},{\"tk\":[2370,31,2370,34],\"els\":[\"0:422\",\"0:421\"]},{\"tk\":[2375,3,2375,27],\"els\":[\"0:34:19#out:1\"]},{\"tk\":[2375,28,2375,31],\"els\":[\"0:34:19#out:1\"]},{\"tk\":[2375,32,2375,33],\"els\":[\"0:34:19#out:1\",\"0:34:19\"]},{\"tk\":[2375,34,2375,35],\"els\":[\"0:34:19\"]},{\"tk\":[2375,35,2375,54],\"els\":[\"0:2752#out:1\"]},{\"tk\":[2383,3,2383,27],\"els\":[\"0:3761\"]},{\"tk\":[2383,28,2383,55],\"els\":[\"0:3761\"]},{\"tk\":[2383,55,2383,56],\"els\":[\"0:3761\"]},{\"tk\":[2383,56,2383,57],\"els\":[\"0:3761\"]},{\"tk\":[2383,59,2383,60],\"els\":[\"0:3761\"]},{\"tk\":[2384,5,2384,29],\"els\":[\"0:3768\"]},{\"tk\":[2384,30,2384,47],\"els\":[\"0:3768\"]},{\"tk\":[2385,3,2385,27],\"els\":[\"0:3761\"]},{\"tk\":[2385,28,2385,55],\"els\":[\"0:3761\"]},{\"tk\":[2385,55,2385,56],\"els\":[\"0:3761\"]},{\"tk\":[2385,56,2385,57],\"els\":[\"0:3761\"]},{\"tk\":[2385,59,2385,60],\"els\":[\"0:3761\"]},{\"tk\":[2386,5,2386,30],\"els\":[\"0:3761\",\"0:3763\"]},{\"tk\":[2386,31,2386,36],\"els\":[\"0:3761\",\"0:3763\"]},{\"tk\":[2387,3,2387,27],\"els\":[\"0:3761\"]},{\"tk\":[2387,28,2387,55],\"els\":[\"0:3761\"]},{\"tk\":[2387,55,2387,56],\"els\":[\"0:3761\"]},{\"tk\":[2387,56,2387,57],\"els\":[\"0:3761\"]},{\"tk\":[2387,59,2387,60],\"els\":[\"0:3761\"]},{\"tk\":[2388,5,2388,30],\"els\":[\"0:3761\",\"0:3764\"]},{\"tk\":[2388,31,2388,35],\"els\":[\"0:3761\",\"0:3764\"]},{\"tk\":[2389,3,2389,27],\"els\":[\"0:3761\"]},{\"tk\":[2389,28,2389,55],\"els\":[\"0:3761\"]},{\"tk\":[2389,55,2389,56],\"els\":[\"0:3761\"]},{\"tk\":[2389,56,2389,57],\"els\":[\"0:3761\"]},{\"tk\":[2389,59,2389,60],\"els\":[\"0:3761\"]},{\"tk\":[2390,5,2390,30],\"els\":[\"0:3761\",\"0:3765\"]},{\"tk\":[2390,31,2390,34],\"els\":[\"0:3761\",\"0:3765\"]},{\"tk\":[2393,3,2393,9],\"els\":[\"0:3761\"]},{\"tk\":[2393,10,2393,11],\"els\":[\"0:3761\"]},{\"tk\":[2393,19,2393,43],\"els\":[\"0:3761\"]},{\"tk\":[2393,44,2393,57],\"els\":[\"0:3761\"]},{\"tk\":[2393,57,2393,58],\"els\":[\"0:3761\"]},{\"tk\":[2393,58,2393,59],\"els\":[\"0:3761\"]},{\"tk\":[2393,62,2393,63],\"els\":[\"0:3761\"]},{\"tk\":[2394,11,2394,35],\"els\":[\"0:3761\"]},{\"tk\":[2394,36,2394,63],\"els\":[\"0:3761\"]},{\"tk\":[2394,63,2394,64],\"els\":[\"0:3761\"]},{\"tk\":[2394,64,2394,65],\"els\":[\"0:3761\"]},{\"tk\":[2394,68,2394,69],\"els\":[\"0:3761\"]},{\"tk\":[2395,11,2395,12],\"els\":[\"0:3761\"]},{\"tk\":[2395,19,2395,21],\"els\":[\"0:3761\"]},{\"tk\":[2395,22,2395,23],\"els\":[\"0:3761\"]},{\"tk\":[2395,24,2395,30],\"els\":[\"0:3761\"]},{\"tk\":[2396,3,2396,18],\"els\":[\"0:3761\"]},{\"tk\":[2396,19,2396,44],\"els\":[\"0:3761\"]},{\"tk\":[2396,45,2396,50],\"els\":[\"0:3761\"]},{\"tk\":[2397,20,2397,44],\"els\":[\"0:3761\"]},{\"tk\":[2397,45,2397,58],\"els\":[\"0:3761\"]},{\"tk\":[2397,58,2397,59],\"els\":[\"0:3761\"]},{\"tk\":[2397,59,2397,60],\"els\":[\"0:3761\"]},{\"tk\":[2397,63,2397,66],\"els\":[\"0:3761\"]},{\"tk\":[2402,3,2402,27],\"els\":[\"0:345#out:1\"]},{\"tk\":[2402,28,2402,33],\"els\":[\"0:345#out:1\"]},{\"tk\":[2402,34,2402,35],\"els\":[\"0:345#out:1\",\"0:345\"]},{\"tk\":[2402,36,2402,60],\"els\":[\"0:345\"]},{\"tk\":[2402,61,2402,73],\"els\":[\"0:345\"]},{\"tk\":[2402,74,2402,75],\"els\":[\"0:345\"]},{\"tk\":[2403,5,2403,30],\"els\":[\"0:345\",\"0:302\"]},{\"tk\":[2403,31,2403,36],\"els\":[\"0:345\",\"0:302\"]},{\"tk\":[2408,3,2408,27],\"els\":[\"0:344#out:1\"]},{\"tk\":[2408,28,2408,33],\"els\":[\"0:344#out:1\"]},{\"tk\":[2408,34,2408,35],\"els\":[\"0:344#out:1\",\"0:344\"]},{\"tk\":[2408,36,2408,60],\"els\":[\"0:344\"]},{\"tk\":[2408,61,2408,73],\"els\":[\"0:344\"]},{\"tk\":[2408,74,2408,75],\"els\":[\"0:344\"]},{\"tk\":[2409,5,2409,30],\"els\":[\"0:344\",\"0:304\"]},{\"tk\":[2409,31,2409,35],\"els\":[\"0:344\",\"0:304\"]},{\"tk\":[2414,3,2414,27],\"els\":[\"0:308#out:1\"]},{\"tk\":[2414,28,2414,43],\"els\":[\"0:308#out:1\"]},{\"tk\":[2414,44,2414,45],\"els\":[\"0:308#out:1\",\"0:308\"]},{\"tk\":[2414,46,2414,70],\"els\":[\"0:716\"]},{\"tk\":[2414,71,2414,78],\"els\":[\"0:716\"]},{\"tk\":[2419,3,2419,27],\"els\":[\"0:329#out:1\"]},{\"tk\":[2419,28,2419,43],\"els\":[\"0:329#out:1\"]},{\"tk\":[2419,44,2419,45],\"els\":[\"0:329#out:1\",\"0:329\"]},{\"tk\":[2420,5,2420,29],\"els\":[\"0:341\"]},{\"tk\":[2420,30,2420,47],\"els\":[\"0:341\"]},{\"tk\":[2423,3,2423,27],\"els\":[\"0:314#out:1\"]},{\"tk\":[2423,28,2423,43],\"els\":[\"0:314#out:1\"]},{\"tk\":[2423,44,2423,45],\"els\":[\"0:314#out:1\",\"0:314\"]},{\"tk\":[2423,46,2423,71],\"els\":[\"0:314\"]},{\"tk\":[2423,72,2423,79],\"els\":[\"0:314\"]},{\"tk\":[2426,3,2426,27],\"els\":[\"0:315#out:1\"]},{\"tk\":[2426,28,2426,43],\"els\":[\"0:315#out:1\"]},{\"tk\":[2426,44,2426,45],\"els\":[\"0:315#out:1\",\"0:315\"]},{\"tk\":[2426,46,2426,71],\"els\":[\"0:315\"]},{\"tk\":[2426,72,2426,77],\"els\":[\"0:315\"]},{\"tk\":[2429,3,2429,27],\"els\":[\"0:316#out:1\"]},{\"tk\":[2429,28,2429,43],\"els\":[\"0:316#out:1\"]},{\"tk\":[2429,44,2429,45],\"els\":[\"0:316#out:1\",\"0:316\"]},{\"tk\":[2429,46,2429,71],\"els\":[\"0:316\"]},{\"tk\":[2429,72,2429,77],\"els\":[\"0:316\"]},{\"tk\":[2432,3,2432,27],\"els\":[\"0:318#out:1\"]},{\"tk\":[2432,28,2432,43],\"els\":[\"0:318#out:1\"]},{\"tk\":[2432,44,2432,45],\"els\":[\"0:318#out:1\",\"0:318\"]},{\"tk\":[2432,46,2432,71],\"els\":[\"0:318\"]},{\"tk\":[2432,72,2432,79],\"els\":[\"0:318\"]},{\"tk\":[2437,3,2437,27],\"els\":[\"0:390#out:1\"]},{\"tk\":[2437,28,2437,33],\"els\":[\"0:390#out:1\"]},{\"tk\":[2437,34,2437,35],\"els\":[\"0:390#out:1\",\"0:390\"]},{\"tk\":[2437,36,2437,60],\"els\":[\"0:390\"]},{\"tk\":[2437,61,2437,73],\"els\":[\"0:390\"]},{\"tk\":[2437,74,2437,75],\"els\":[\"0:390\"]},{\"tk\":[2438,5,2438,30],\"els\":[\"0:390\",\"0:388\"]},{\"tk\":[2438,31,2438,34],\"els\":[\"0:390\",\"0:388\"]},{\"tk\":[2441,3,2441,27],\"els\":[\"0:399#out:1\"]},{\"tk\":[2441,28,2441,40],\"els\":[\"0:399#out:1\"]},{\"tk\":[2441,41,2441,42],\"els\":[\"0:399#out:1\",\"0:399\"]},{\"tk\":[2442,5,2442,29],\"els\":[\"0:399\"]},{\"tk\":[2442,30,2442,45],\"els\":[\"0:399\"]},{\"tk\":[2445,3,2445,27],\"els\":[\"0:416#out:1\"]},{\"tk\":[2445,28,2445,39],\"els\":[\"0:416#out:1\"]},{\"tk\":[2445,40,2445,41],\"els\":[\"0:416#out:1\",\"0:416\"]},{\"tk\":[2446,5,2446,29],\"els\":[\"0:416\"]},{\"tk\":[2446,30,2446,45],\"els\":[\"0:416\"]},{\"tk\":[2449,3,2449,27],\"els\":[\"0:420#out:1\"]},{\"tk\":[2449,28,2449,38],\"els\":[\"0:420#out:1\"]},{\"tk\":[2449,39,2449,40],\"els\":[\"0:420#out:1\",\"0:420\"]},{\"tk\":[2449,41,2449,65],\"els\":[\"0:420\"]},{\"tk\":[2449,66,2449,81],\"els\":[\"0:420\"]},{\"tk\":[2452,3,2452,27],\"els\":[\"0:2232#out:1\"]},{\"tk\":[2452,28,2452,43],\"els\":[\"0:2232#out:1\"]},{\"tk\":[2452,44,2452,45],\"els\":[\"0:2232#out:1\",\"0:2232\"]},{\"tk\":[2452,46,2452,71],\"els\":[\"0:2232\"]},{\"tk\":[2452,72,2452,74],\"els\":[\"0:2232\"]},{\"tk\":[2455,3,2455,27],\"els\":[\"0:498#out:1\"]},{\"tk\":[2455,28,2455,43],\"els\":[\"0:498#out:1\"]},{\"tk\":[2455,44,2455,45],\"els\":[\"0:498#out:1\",\"0:498\"]},{\"tk\":[2455,46,2455,71],\"els\":[\"0:498\"]},{\"tk\":[2455,72,2455,81],\"els\":[\"0:498\"]},{\"tk\":[2458,3,2458,27],\"els\":[\"0:500#out:1\"]},{\"tk\":[2458,28,2458,43],\"els\":[\"0:500#out:1\"]},{\"tk\":[2458,44,2458,45],\"els\":[\"0:500#out:1\",\"0:500\"]},{\"tk\":[2459,5,2459,30],\"els\":[\"0:500\"]},{\"tk\":[2459,31,2459,42],\"els\":[\"0:500\"]},{\"tk\":[2462,3,2462,27],\"els\":[\"0:502#out:1\"]},{\"tk\":[2462,28,2462,43],\"els\":[\"0:502#out:1\"]},{\"tk\":[2462,44,2462,45],\"els\":[\"0:502#out:1\",\"0:502\"]},{\"tk\":[2463,5,2463,30],\"els\":[\"0:502\"]},{\"tk\":[2463,31,2463,41],\"els\":[\"0:502\"]},{\"tk\":[2466,3,2466,27],\"els\":[\"0:504#out:1\"]},{\"tk\":[2466,28,2466,43],\"els\":[\"0:504#out:1\"]},{\"tk\":[2466,44,2466,45],\"els\":[\"0:504#out:1\",\"0:504\"]},{\"tk\":[2466,46,2466,71],\"els\":[\"0:504\"]},{\"tk\":[2466,72,2466,79],\"els\":[\"0:504\"]},{\"tk\":[2469,3,2469,27],\"els\":[\"0:505#out:1\"]},{\"tk\":[2469,28,2469,43],\"els\":[\"0:505#out:1\"]},{\"tk\":[2469,44,2469,45],\"els\":[\"0:505#out:1\",\"0:505\"]},{\"tk\":[2469,46,2469,71],\"els\":[\"0:505\"]},{\"tk\":[2469,72,2469,81],\"els\":[\"0:505\"]},{\"tk\":[2472,3,2472,27],\"els\":[\"0:506#out:1\"]},{\"tk\":[2472,28,2472,43],\"els\":[\"0:506#out:1\"]},{\"tk\":[2472,44,2472,45],\"els\":[\"0:506#out:1\",\"0:506\"]},{\"tk\":[2472,46,2472,71],\"els\":[\"0:506\"]},{\"tk\":[2472,72,2472,80],\"els\":[\"0:506\"]},{\"tk\":[2475,3,2475,27],\"els\":[\"0:1984#out:1\"]},{\"tk\":[2475,28,2475,43],\"els\":[\"0:1984#out:1\"]},{\"tk\":[2475,44,2475,45],\"els\":[\"0:1984#out:1\",\"0:1984\"]},{\"tk\":[2475,46,2475,71],\"els\":[\"0:1984\"]},{\"tk\":[2475,72,2475,77],\"els\":[\"0:1984\"]},{\"tk\":[2478,3,2478,27],\"els\":[\"0:1985#out:1\"]},{\"tk\":[2478,28,2478,43],\"els\":[\"0:1985#out:1\"]},{\"tk\":[2478,44,2478,45],\"els\":[\"0:1985#out:1\",\"0:1985\"]},{\"tk\":[2478,46,2478,71],\"els\":[\"0:1985\"]},{\"tk\":[2478,72,2478,77],\"els\":[\"0:1985\"]},{\"tk\":[2484,3,2484,5],\"els\":[\"0:2246\",\"0:2245\"]},{\"tk\":[2484,7,2484,32],\"els\":[\"0:2246\",\"0:2245\",\"0:2247\"]},{\"tk\":[2484,33,2484,46],\"els\":[\"0:2246\",\"0:2245\",\"0:2247\"]},{\"tk\":[2488,5,2488,30],\"els\":[\"0:2241\",\"0:2246\",\"0:2245\",\"0:2244\"]},{\"tk\":[2488,31,2488,32],\"els\":[\"0:2241\",\"0:2246\",\"0:2245\",\"0:2244\"]},{\"tk\":[2488,33,2488,34],\"els\":[\"0:2241\",\"0:2246\",\"0:2245\"]},{\"tk\":[2489,7,2489,32],\"els\":[\"0:2241\",\"0:2246\",\"0:2245\"]},{\"tk\":[2489,33,2489,64],\"els\":[\"0:2241\",\"0:2246\",\"0:2245\"]},{\"tk\":[2494,5,2494,30],\"els\":[\"0:2241\",\"0:2246\",\"0:2245\"]},{\"tk\":[2494,31,2494,62],\"els\":[\"0:2241\",\"0:2246\",\"0:2245\"]},{\"tk\":[2494,63,2494,65],\"els\":[\"0:2241\",\"0:2246\",\"0:2245\"]},{\"tk\":[2495,7,2495,31],\"els\":[\"0:2241\"]},{\"tk\":[2495,32,2495,62],\"els\":[\"0:2241\"]},{\"tk\":[2495,63,2495,64],\"els\":[\"0:2241\",\"0:2246\",\"0:2245\"]},{\"tk\":[2496,7,2496,31],\"els\":[\"0:2242\"]},{\"tk\":[2496,32,2496,47],\"els\":[\"0:2242\"]},{\"tk\":[2497,5,2497,15],\"els\":[\"0:2246\",\"0:2245\"]},{\"tk\":[2497,16,2497,41],\"els\":[\"0:2246\",\"0:2245\"]},{\"tk\":[2497,42,2497,64],\"els\":[\"0:2246\",\"0:2245\"]},{\"tk\":[2504,3,2504,27],\"els\":[\"0:2325#out:1\"]},{\"tk\":[2504,28,2504,43],\"els\":[\"0:2325#out:1\"]},{\"tk\":[2504,44,2504,45],\"els\":[\"0:2325#out:1\",\"0:2325\"]},{\"tk\":[2504,46,2504,71],\"els\":[\"0:2325\"]},{\"tk\":[2504,72,2504,73],\"els\":[\"0:2325\"]},{\"tk\":[2507,3,2507,27],\"els\":[\"0:298#out:1\"]},{\"tk\":[2507,28,2507,42],\"els\":[\"0:298#out:1\"]},{\"tk\":[2507,43,2507,44],\"els\":[\"0:298#out:1\",\"0:298\"]},{\"tk\":[2507,45,2507,70],\"els\":[\"0:298\"]},{\"tk\":[2507,71,2507,75],\"els\":[\"0:298\"]},{\"tk\":[2510,3,2510,27],\"els\":[\"0:300#out:1\"]},{\"tk\":[2510,28,2510,42],\"els\":[\"0:300#out:1\"]},{\"tk\":[2510,43,2510,44],\"els\":[\"0:300#out:1\",\"0:300\"]},{\"tk\":[2510,45,2510,70],\"els\":[\"0:300\"]},{\"tk\":[2510,71,2510,75],\"els\":[\"0:300\"]},{\"tk\":[2518,3,2518,28],\"els\":[\"0:2700:5\"]},{\"tk\":[2518,29,2518,38],\"els\":[\"0:2700:5\"]},{\"tk\":[2518,39,2518,40],\"els\":[\"0:2700:5\"]},{\"tk\":[2518,41,2518,65],\"els\":[\"0:2700:5\"]},{\"tk\":[2518,66,2518,71],\"els\":[\"0:2700:5\"]},{\"tk\":[2521,3,2521,5],\"els\":[\"0:3318\"]},{\"tk\":[2521,7,2521,31],\"els\":[\"0:3318\"]},{\"tk\":[2521,32,2521,36],\"els\":[\"0:3318\"]},{\"tk\":[2521,37,2521,38],\"els\":[\"0:3318\"]},{\"tk\":[2522,7,2522,31],\"els\":[\"0:3318\"]},{\"tk\":[2522,32,2522,52],\"els\":[\"0:3318\"]},{\"tk\":[2523,5,2523,29],\"els\":[\"0:3318\"]},{\"tk\":[2523,30,2523,40],\"els\":[\"0:3318\"]},{\"tk\":[2523,41,2523,42],\"els\":[\"0:3318\"]},{\"tk\":[2524,7,2524,31],\"els\":[\"0:3318\"]},{\"tk\":[2524,32,2524,52],\"els\":[\"0:3318\"]},{\"tk\":[2525,10,2525,12],\"els\":[\"0:3318\"]},{\"tk\":[2525,14,2525,38],\"els\":[\"0:3318\"]},{\"tk\":[2525,39,2525,43],\"els\":[\"0:3318\"]},{\"tk\":[2525,44,2525,45],\"els\":[\"0:3318\"]},{\"tk\":[2526,14,2526,38],\"els\":[\"0:3318\"]},{\"tk\":[2526,39,2526,59],\"els\":[\"0:3318\"]},{\"tk\":[2527,5,2527,29],\"els\":[\"0:3318\"]},{\"tk\":[2527,30,2527,40],\"els\":[\"0:3318\"]},{\"tk\":[2527,41,2527,42],\"els\":[\"0:3318\"]},{\"tk\":[2528,7,2528,31],\"els\":[\"0:3318\"]},{\"tk\":[2528,32,2528,52],\"els\":[\"0:3318\"]},{\"tk\":[2530,5,2530,29],\"els\":[\"0:3318\"]},{\"tk\":[2530,30,2530,40],\"els\":[\"0:3318\"]},{\"tk\":[2530,41,2530,42],\"els\":[\"0:3318\"]},{\"tk\":[2530,43,2530,67],\"els\":[\"0:3318\"]},{\"tk\":[2530,68,2530,72],\"els\":[\"0:3318\"]},{\"tk\":[2542,3,2542,28],\"els\":[\"0:3280\"]},{\"tk\":[2542,29,2542,59],\"els\":[\"0:3280\"]},{\"tk\":[2542,60,2542,62],\"els\":[\"0:3280\"]},{\"tk\":[2543,7,2543,31],\"els\":[\"0:3328\"]},{\"tk\":[2543,32,2543,39],\"els\":[\"0:3328\"]},{\"tk\":[2543,40,2543,41],\"els\":[\"0:3328\"]},{\"tk\":[2543,42,2543,66],\"els\":[\"0:3328\"]},{\"tk\":[2543,67,2543,77],\"els\":[\"0:3328\"]},{\"tk\":[2543,78,2543,79],\"els\":[\"0:3266\"]},{\"tk\":[2544,7,2544,31],\"els\":[\"0:3331\"]},{\"tk\":[2544,32,2544,44],\"els\":[\"0:3331\"]},{\"tk\":[2544,45,2544,46],\"els\":[\"0:3331\"]},{\"tk\":[2544,47,2544,71],\"els\":[\"0:3331\"]},{\"tk\":[2544,72,2544,76],\"els\":[\"0:3331\"]},{\"tk\":[2544,78,2544,79],\"els\":[\"0:3266\"]},{\"tk\":[2545,7,2545,31],\"els\":[\"0:3253\"]},{\"tk\":[2545,32,2545,40],\"els\":[\"0:3253\"]},{\"tk\":[2545,41,2545,42],\"els\":[\"0:3253\"]},{\"tk\":[2545,43,2545,67],\"els\":[\"0:3253\"]},{\"tk\":[2545,68,2545,76],\"els\":[\"0:3253\"]},{\"tk\":[2545,78,2545,79],\"els\":[\"0:3296\"]},{\"tk\":[2546,6,2546,30],\"els\":[\"0:3296\"]},{\"tk\":[2546,31,2546,41],\"els\":[\"0:3296\"]},{\"tk\":[2546,43,2546,44],\"els\":[\"0:3280\"]},{\"tk\":[2547,5,2547,29],\"els\":[\"0:3280\"]},{\"tk\":[2547,30,2547,61],\"els\":[\"0:3280\"]},{\"tk\":[2550,3,2550,27],\"els\":[\"0:3704\"]},{\"tk\":[2550,28,2550,33],\"els\":[\"0:3704\"]},{\"tk\":[2550,34,2550,35],\"els\":[\"0:3704\"]},{\"tk\":[2550,36,2550,61],\"els\":[\"0:3704\"]},{\"tk\":[2550,62,2550,69],\"els\":[\"0:3704\"]},{\"tk\":[2551,3,2551,28],\"els\":[\"0:3704\"]},{\"tk\":[2551,29,2551,36],\"els\":[\"0:3704\"]},{\"tk\":[2551,37,2551,38],\"els\":[\"0:3704\"]},{\"tk\":[2551,39,2551,64],\"els\":[\"0:3704\"]},{\"tk\":[2551,65,2551,72],\"els\":[\"0:3704\"]},{\"tk\":[2551,73,2551,74],\"els\":[\"0:3704\"]},{\"tk\":[2552,5,2552,29],\"els\":[\"0:3704\"]},{\"tk\":[2552,30,2552,43],\"els\":[\"0:3704\"]},{\"tk\":[2552,44,2552,45],\"els\":[\"0:3704\"]},{\"tk\":[2552,46,2552,71],\"els\":[\"0:3704\"]},{\"tk\":[2552,72,2552,79],\"els\":[\"0:3704\"]},{\"tk\":[2552,80,2552,81],\"els\":[\"0:3704\"]},{\"tk\":[2553,5,2553,29],\"els\":[\"0:3704\"]},{\"tk\":[2553,30,2553,43],\"els\":[\"0:3704\"]},{\"tk\":[2554,3,2554,28],\"els\":[\"0:3704\"]},{\"tk\":[2554,29,2554,36],\"els\":[\"0:3704\"]},{\"tk\":[2554,37,2554,38],\"els\":[\"0:3704\"]},{\"tk\":[2554,39,2554,64],\"els\":[\"0:3704\"]},{\"tk\":[2554,65,2554,72],\"els\":[\"0:3704\"]},{\"tk\":[2554,73,2554,74],\"els\":[\"0:3704\"]},{\"tk\":[2555,5,2555,29],\"els\":[\"0:3704\"]},{\"tk\":[2555,30,2555,43],\"els\":[\"0:3704\"]},{\"tk\":[2555,44,2555,45],\"els\":[\"0:3704\"]},{\"tk\":[2555,46,2555,70],\"els\":[\"0:3704\"]},{\"tk\":[2555,71,2555,76],\"els\":[\"0:3704\"]},{\"tk\":[2555,77,2555,78],\"els\":[\"0:3704\"]},{\"tk\":[2556,5,2556,29],\"els\":[\"0:3704\"]},{\"tk\":[2556,30,2556,43],\"els\":[\"0:3704\"]},{\"tk\":[2564,3,2564,28],\"els\":[\"0:2255:5\"]},{\"tk\":[2564,29,2564,40],\"els\":[\"0:2255:5\"]},{\"tk\":[2564,41,2564,42],\"els\":[\"0:2255:5\"]},{\"tk\":[2564,43,2564,67],\"els\":[\"0:2255:5\"]},{\"tk\":[2564,68,2564,70],\"els\":[\"0:2255:5\"]},{\"tk\":[2572,3,2572,28],\"els\":[\"0:3632\"]},{\"tk\":[2572,29,2572,60],\"els\":[\"0:3632\"]},{\"tk\":[2572,61,2572,63],\"els\":[\"0:3632\"]},{\"tk\":[2573,7,2573,31],\"els\":[\"0:3682\"]},{\"tk\":[2573,32,2573,41],\"els\":[\"0:3682\"]},{\"tk\":[2573,42,2573,43],\"els\":[\"0:3682\"]},{\"tk\":[2573,44,2573,68],\"els\":[\"0:3682\"]},{\"tk\":[2573,69,2573,79],\"els\":[\"0:3682\"]},{\"tk\":[2573,80,2573,81],\"els\":[\"0:3615\"]},{\"tk\":[2574,7,2574,31],\"els\":[\"0:3615\"]},{\"tk\":[2574,32,2574,41],\"els\":[\"0:3615\"]},{\"tk\":[2574,43,2574,44],\"els\":[\"0:3615\"]},{\"tk\":[2574,46,2574,70],\"els\":[\"0:3602\"]},{\"tk\":[2574,71,2574,81],\"els\":[\"0:3602\"]},{\"tk\":[2575,7,2575,8],\"els\":[\"0:3602\"]},{\"tk\":[2575,9,2575,33],\"els\":[\"0:3602\"]},{\"tk\":[2575,34,2575,44],\"els\":[\"0:3602\"]},{\"tk\":[2575,46,2575,47],\"els\":[\"0:3648\"]},{\"tk\":[2576,6,2576,30],\"els\":[\"0:3648\"]},{\"tk\":[2576,31,2576,43],\"els\":[\"0:3648\"]},{\"tk\":[2576,45,2576,46],\"els\":[\"0:3632\"]},{\"tk\":[2577,5,2577,29],\"els\":[\"0:3632\"]},{\"tk\":[2577,30,2577,61],\"els\":[\"0:3632\"]},{\"tk\":[2585,3,2585,28],\"els\":[\"0:2617:5\"]},{\"tk\":[2585,29,2585,40],\"els\":[\"0:2617:5\"]},{\"tk\":[2585,41,2585,42],\"els\":[\"0:2617:5\"]},{\"tk\":[2585,43,2585,67],\"els\":[\"0:2617:5\"]},{\"tk\":[2585,68,2585,72],\"els\":[\"0:2617:5\"]},{\"tk\":[2593,3,2593,28],\"els\":[\"0:3521\"]},{\"tk\":[2593,29,2593,60],\"els\":[\"0:3521\"]},{\"tk\":[2593,61,2593,63],\"els\":[\"0:3521\"]},{\"tk\":[2594,7,2594,31],\"els\":[\"0:3571\"]},{\"tk\":[2594,32,2594,41],\"els\":[\"0:3571\"]},{\"tk\":[2594,42,2594,43],\"els\":[\"0:3571\"]},{\"tk\":[2595,7,2595,31],\"els\":[\"0:3571\"]},{\"tk\":[2595,32,2595,61],\"els\":[\"0:3571\"]},{\"tk\":[2595,62,2595,63],\"els\":[\"0:3504\"]},{\"tk\":[2596,7,2596,31],\"els\":[\"0:3504\"]},{\"tk\":[2596,32,2596,41],\"els\":[\"0:3504\"]},{\"tk\":[2596,43,2596,44],\"els\":[\"0:3504\"]},{\"tk\":[2596,46,2596,70],\"els\":[\"0:3491\"]},{\"tk\":[2596,71,2596,81],\"els\":[\"0:3491\"]},{\"tk\":[2597,7,2597,8],\"els\":[\"0:3491\"]},{\"tk\":[2597,9,2597,33],\"els\":[\"0:3491\"]},{\"tk\":[2597,34,2597,44],\"els\":[\"0:3491\"]},{\"tk\":[2597,46,2597,47],\"els\":[\"0:3537\"]},{\"tk\":[2598,6,2598,30],\"els\":[\"0:3537\"]},{\"tk\":[2598,31,2598,43],\"els\":[\"0:3537\"]},{\"tk\":[2598,45,2598,46],\"els\":[\"0:3521\"]},{\"tk\":[2599,5,2599,29],\"els\":[\"0:3521\"]},{\"tk\":[2599,30,2599,61],\"els\":[\"0:3521\"]},{\"tk\":[2602,3,2602,5],\"els\":[\"0:3306\"]},{\"tk\":[2602,7,2602,31],\"els\":[\"0:3306\"]},{\"tk\":[2602,32,2602,36],\"els\":[\"0:3306\"]},{\"tk\":[2602,37,2602,38],\"els\":[\"0:3306\"]},{\"tk\":[2603,7,2603,31],\"els\":[\"0:3306\"]},{\"tk\":[2603,32,2603,53],\"els\":[\"0:3306\"]},{\"tk\":[2604,5,2604,29],\"els\":[\"0:3306\"]},{\"tk\":[2604,30,2604,40],\"els\":[\"0:3306\"]},{\"tk\":[2604,41,2604,42],\"els\":[\"0:3306\"]},{\"tk\":[2605,7,2605,31],\"els\":[\"0:3306\"]},{\"tk\":[2605,32,2605,53],\"els\":[\"0:3306\"]},{\"tk\":[2606,10,2606,12],\"els\":[\"0:3306\"]},{\"tk\":[2606,14,2606,38],\"els\":[\"0:3306\"]},{\"tk\":[2606,39,2606,43],\"els\":[\"0:3306\"]},{\"tk\":[2606,44,2606,45],\"els\":[\"0:3306\"]},{\"tk\":[2607,14,2607,38],\"els\":[\"0:3306\"]},{\"tk\":[2607,39,2607,60],\"els\":[\"0:3306\"]},{\"tk\":[2608,5,2608,29],\"els\":[\"0:3306\"]},{\"tk\":[2608,30,2608,40],\"els\":[\"0:3306\"]},{\"tk\":[2608,41,2608,42],\"els\":[\"0:3306\"]},{\"tk\":[2609,7,2609,31],\"els\":[\"0:3306\"]},{\"tk\":[2609,32,2609,53],\"els\":[\"0:3306\"]},{\"tk\":[2611,5,2611,29],\"els\":[\"0:3306\"]},{\"tk\":[2611,30,2611,40],\"els\":[\"0:3306\"]},{\"tk\":[2611,41,2611,42],\"els\":[\"0:3306\"]},{\"tk\":[2611,43,2611,67],\"els\":[\"0:3306\"]},{\"tk\":[2611,68,2611,72],\"els\":[\"0:3306\"]},{\"tk\":[2624,3,2624,28],\"els\":[\"0:3278\"]},{\"tk\":[2624,29,2624,58],\"els\":[\"0:3278\"]},{\"tk\":[2624,59,2624,61],\"els\":[\"0:3278\"]},{\"tk\":[2625,8,2625,32],\"els\":[\"0:3326\"]},{\"tk\":[2625,33,2625,40],\"els\":[\"0:3326\"]},{\"tk\":[2625,41,2625,42],\"els\":[\"0:3326\"]},{\"tk\":[2625,43,2625,67],\"els\":[\"0:3326\"]},{\"tk\":[2625,68,2625,78],\"els\":[\"0:3326\"]},{\"tk\":[2625,79,2625,80],\"els\":[\"0:3246\"]},{\"tk\":[2626,8,2626,32],\"els\":[\"0:3329\"]},{\"tk\":[2626,33,2626,45],\"els\":[\"0:3329\"]},{\"tk\":[2626,46,2626,47],\"els\":[\"0:3329\"]},{\"tk\":[2626,48,2626,72],\"els\":[\"0:3329\"]},{\"tk\":[2626,73,2626,77],\"els\":[\"0:3329\"]},{\"tk\":[2626,79,2626,80],\"els\":[\"0:3246\"]},{\"tk\":[2627,7,2627,32],\"els\":[\"0:3279\"]},{\"tk\":[2627,33,2627,63],\"els\":[\"0:3279\"]},{\"tk\":[2627,65,2627,66],\"els\":[\"0:3246\"]},{\"tk\":[2628,7,2628,31],\"els\":[\"0:3270\"]},{\"tk\":[2628,32,2628,36],\"els\":[\"0:3270\"]},{\"tk\":[2628,37,2628,38],\"els\":[\"0:3270\"]},{\"tk\":[2628,39,2628,63],\"els\":[\"0:3270\"]},{\"tk\":[2628,64,2628,72],\"els\":[\"0:3270\"]},{\"tk\":[2628,74,2628,75],\"els\":[\"0:3294\"]},{\"tk\":[2629,6,2629,30],\"els\":[\"0:3294\"]},{\"tk\":[2629,31,2629,41],\"els\":[\"0:3294\"]},{\"tk\":[2629,43,2629,44],\"els\":[\"0:3278\"]},{\"tk\":[2630,5,2630,29],\"els\":[\"0:3278\"]},{\"tk\":[2630,30,2630,61],\"els\":[\"0:3278\"]},{\"tk\":[2633,3,2633,28],\"els\":[\"0:3279\"]},{\"tk\":[2633,29,2633,59],\"els\":[\"0:3279\"]},{\"tk\":[2633,60,2633,62],\"els\":[\"0:3279\"]},{\"tk\":[2634,5,2634,29],\"els\":[\"0:3279\"]},{\"tk\":[2634,30,2634,61],\"els\":[\"0:3279\"]},{\"tk\":[2634,62,2634,63],\"els\":[\"0:3279\"]},{\"tk\":[2635,5,2635,29],\"els\":[\"0:3279\"]},{\"tk\":[2635,30,2635,34],\"els\":[\"0:3279\"]},{\"tk\":[2644,3,2644,28],\"els\":[\"0:3630\"]},{\"tk\":[2644,29,2644,60],\"els\":[\"0:3630\"]},{\"tk\":[2644,61,2644,63],\"els\":[\"0:3630\"]},{\"tk\":[2645,8,2645,32],\"els\":[\"0:3680\"]},{\"tk\":[2645,33,2645,42],\"els\":[\"0:3680\"]},{\"tk\":[2645,43,2645,44],\"els\":[\"0:3680\"]},{\"tk\":[2645,45,2645,69],\"els\":[\"0:3680\"]},{\"tk\":[2645,70,2645,80],\"els\":[\"0:3680\"]},{\"tk\":[2646,8,2646,9],\"els\":[\"0:3595\"]},{\"tk\":[2646,10,2646,34],\"els\":[\"0:3595\"]},{\"tk\":[2646,35,2646,44],\"els\":[\"0:3595\"]},{\"tk\":[2646,46,2646,47],\"els\":[\"0:3595\"]},{\"tk\":[2647,7,2647,32],\"els\":[\"0:3631\"]},{\"tk\":[2647,33,2647,64],\"els\":[\"0:3631\"]},{\"tk\":[2647,66,2647,67],\"els\":[\"0:3595\"]},{\"tk\":[2648,7,2648,31],\"els\":[\"0:3619\"]},{\"tk\":[2648,32,2648,42],\"els\":[\"0:3619\"]},{\"tk\":[2648,43,2648,44],\"els\":[\"0:3619\"]},{\"tk\":[2648,45,2648,69],\"els\":[\"0:3619\"]},{\"tk\":[2648,70,2648,80],\"els\":[\"0:3619\"]},{\"tk\":[2649,6,2649,7],\"els\":[\"0:3646\"]},{\"tk\":[2649,8,2649,32],\"els\":[\"0:3646\"]},{\"tk\":[2649,33,2649,45],\"els\":[\"0:3646\"]},{\"tk\":[2649,47,2649,48],\"els\":[\"0:3630\"]},{\"tk\":[2650,5,2650,29],\"els\":[\"0:3630\"]},{\"tk\":[2650,30,2650,61],\"els\":[\"0:3630\"]},{\"tk\":[2653,3,2653,28],\"els\":[\"0:3631\"]},{\"tk\":[2653,29,2653,60],\"els\":[\"0:3631\"]},{\"tk\":[2653,61,2653,63],\"els\":[\"0:3631\"]},{\"tk\":[2654,5,2654,29],\"els\":[\"0:3631\"]},{\"tk\":[2654,30,2654,61],\"els\":[\"0:3631\"]},{\"tk\":[2654,62,2654,63],\"els\":[\"0:3631\"]},{\"tk\":[2655,5,2655,29],\"els\":[\"0:3631\"]},{\"tk\":[2655,30,2655,36],\"els\":[\"0:3631\"]},{\"tk\":[2664,3,2664,28],\"els\":[\"0:3519\"]},{\"tk\":[2664,29,2664,60],\"els\":[\"0:3519\"]},{\"tk\":[2664,61,2664,63],\"els\":[\"0:3519\"]},{\"tk\":[2665,8,2665,32],\"els\":[\"0:3569\"]},{\"tk\":[2665,33,2665,42],\"els\":[\"0:3569\"]},{\"tk\":[2665,43,2665,44],\"els\":[\"0:3569\"]},{\"tk\":[2666,8,2666,32],\"els\":[\"0:3569\"]},{\"tk\":[2666,33,2666,62],\"els\":[\"0:3569\"]},{\"tk\":[2666,63,2666,64],\"els\":[\"0:3484\"]},{\"tk\":[2667,8,2667,32],\"els\":[\"0:3484\"]},{\"tk\":[2667,33,2667,42],\"els\":[\"0:3484\"]},{\"tk\":[2667,44,2667,45],\"els\":[\"0:3484\"]},{\"tk\":[2668,7,2668,32],\"els\":[\"0:3520\"]},{\"tk\":[2668,33,2668,64],\"els\":[\"0:3520\"]},{\"tk\":[2668,66,2668,67],\"els\":[\"0:3484\"]},{\"tk\":[2669,7,2669,31],\"els\":[\"0:3508\"]},{\"tk\":[2669,32,2669,42],\"els\":[\"0:3508\"]},{\"tk\":[2669,43,2669,44],\"els\":[\"0:3508\"]},{\"tk\":[2669,45,2669,69],\"els\":[\"0:3508\"]},{\"tk\":[2669,70,2669,80],\"els\":[\"0:3508\"]},{\"tk\":[2670,6,2670,7],\"els\":[\"0:3535\"]},{\"tk\":[2670,8,2670,32],\"els\":[\"0:3535\"]},{\"tk\":[2670,33,2670,45],\"els\":[\"0:3535\"]},{\"tk\":[2670,47,2670,48],\"els\":[\"0:3519\"]},{\"tk\":[2671,5,2671,29],\"els\":[\"0:3519\"]},{\"tk\":[2671,30,2671,61],\"els\":[\"0:3519\"]},{\"tk\":[2674,3,2674,28],\"els\":[\"0:3520\"]},{\"tk\":[2674,29,2674,60],\"els\":[\"0:3520\"]},{\"tk\":[2674,61,2674,63],\"els\":[\"0:3520\"]},{\"tk\":[2675,5,2675,29],\"els\":[\"0:3520\"]},{\"tk\":[2675,30,2675,61],\"els\":[\"0:3520\"]},{\"tk\":[2675,62,2675,63],\"els\":[\"0:3520\"]},{\"tk\":[2676,5,2676,29],\"els\":[\"0:3520\"]},{\"tk\":[2676,30,2676,59],\"els\":[\"0:3520\"]},{\"tk\":[2720,3,2720,16],\"els\":[\"0:6:9\"]},{\"tk\":[2720,17,2720,18],\"els\":[\"0:6:9\"]},{\"tk\":[2720,19,2720,33],\"els\":[\"0:6:9\"]},{\"tk\":[2720,34,2720,59],\"els\":[\"0:6:9\"]},{\"tk\":[2720,60,2720,65],\"els\":[\"0:6:9\"]},{\"tk\":[2721,6,2721,31],\"els\":[\"0:6:9\"]},{\"tk\":[2721,32,2721,37],\"els\":[\"0:6:9\"]},{\"tk\":[2721,38,2721,52],\"els\":[\"0:6:9\"]},{\"tk\":[2722,6,2722,30],\"els\":[\"0:6:9\"]},{\"tk\":[2722,31,2722,46],\"els\":[\"0:6:9\"]},{\"tk\":[2722,48,2722,53],\"els\":[\"0:6:9\"]},{\"tk\":[2722,55,2722,58],\"els\":[\"0:6:9\"]},{\"tk\":[2727,3,2727,5],\"els\":[\"0:6:5\",\"0:6:3\"]},{\"tk\":[2727,7,2727,20],\"els\":[\"0:6:9\"]},{\"tk\":[2729,5,2729,29],\"els\":[\"0:6:4\"]},{\"tk\":[2729,30,2729,35],\"els\":[\"0:6:4\"]},{\"tk\":[2729,36,2729,37],\"els\":[\"0:6:4\",\"0:6:5\",\"0:6:3\"]},{\"tk\":[2729,38,2729,62],\"els\":[\"0:6:9\"]},{\"tk\":[2729,63,2729,78],\"els\":[\"0:6:9\"]},{\"tk\":[2730,5,2730,15],\"els\":[\"0:6:5\",\"0:6:3\"]},{\"tk\":[2730,16,2730,41],\"els\":[\"0:6:5\",\"0:6:3\"]},{\"tk\":[2730,42,2730,72],\"els\":[\"0:6:5\",\"0:6:3\"]},{\"tk\":[2736,3,2736,9],\"els\":[\"0:8\"]},{\"tk\":[2736,11,2736,35],\"els\":[\"0:8\"]},{\"tk\":[2736,36,2736,42],\"els\":[\"0:8\"]},{\"tk\":[2736,42,2736,43],\"els\":[\"0:8\"]},{\"tk\":[2736,43,2736,44],\"els\":[\"0:8\"]},{\"tk\":[2737,11,2737,35],\"els\":[\"0:8\"]},{\"tk\":[2737,36,2737,41],\"els\":[\"0:8\"]},{\"tk\":[2737,42,2737,48],\"els\":[\"0:8\"]},{\"tk\":[2737,53,2737,59],\"els\":[\"0:8\"]},{\"tk\":[2737,70,2737,72],\"els\":[\"0:8\"]},{\"tk\":[2737,73,2737,75],\"els\":[\"0:8\"]},{\"tk\":[2740,3,2740,16],\"els\":[\"0:8\"]},{\"tk\":[2740,17,2740,18],\"els\":[\"0:8\"]},{\"tk\":[2740,19,2740,43],\"els\":[\"0:8\"]},{\"tk\":[2740,44,2740,49],\"els\":[\"0:8\"]},{\"tk\":[2743,3,2743,15],\"els\":[\"0:8\"]},{\"tk\":[2743,16,2743,17],\"els\":[\"0:8\"]},{\"tk\":[2743,18,2743,42],\"els\":[\"0:8\"]},{\"tk\":[2743,43,2743,48],\"els\":[\"0:8\"]},{\"tk\":[2746,3,2746,16],\"els\":[\"0:8\"]},{\"tk\":[2746,16,2746,17],\"els\":[\"0:8\"]},{\"tk\":[2746,17,2746,18],\"els\":[\"0:8\"]},{\"tk\":[2746,20,2746,21],\"els\":[\"0:8\"]},{\"tk\":[2746,22,2746,46],\"els\":[\"0:8\"]},{\"tk\":[2746,47,2746,52],\"els\":[\"0:8\"]},{\"tk\":[2746,53,2746,62],\"els\":[\"0:8\"]},{\"tk\":[2746,62,2746,63],\"els\":[\"0:8\"]},{\"tk\":[2746,63,2746,64],\"els\":[\"0:8\"]},{\"tk\":[2747,3,2747,16],\"els\":[\"0:8\"]},{\"tk\":[2747,16,2747,17],\"els\":[\"0:8\"]},{\"tk\":[2747,17,2747,18],\"els\":[\"0:8\"]},{\"tk\":[2747,20,2747,21],\"els\":[\"0:8\"]},{\"tk\":[2747,22,2747,46],\"els\":[\"0:8\"]},{\"tk\":[2747,47,2747,52],\"els\":[\"0:8\"]},{\"tk\":[2747,53,2747,62],\"els\":[\"0:8\"]},{\"tk\":[2747,62,2747,63],\"els\":[\"0:8\"]},{\"tk\":[2747,63,2747,64],\"els\":[\"0:8\"]},{\"tk\":[2748,3,2748,16],\"els\":[\"0:8\"]},{\"tk\":[2748,16,2748,17],\"els\":[\"0:8\"]},{\"tk\":[2748,17,2748,18],\"els\":[\"0:8\"]},{\"tk\":[2748,20,2748,21],\"els\":[\"0:8\"]},{\"tk\":[2748,22,2748,46],\"els\":[\"0:8\"]},{\"tk\":[2748,47,2748,52],\"els\":[\"0:8\"]},{\"tk\":[2748,53,2748,62],\"els\":[\"0:8\"]},{\"tk\":[2748,62,2748,63],\"els\":[\"0:8\"]},{\"tk\":[2748,63,2748,64],\"els\":[\"0:8\"]},{\"tk\":[2749,3,2749,16],\"els\":[\"0:8\"]},{\"tk\":[2749,16,2749,17],\"els\":[\"0:8\"]},{\"tk\":[2749,17,2749,18],\"els\":[\"0:8\"]},{\"tk\":[2749,20,2749,21],\"els\":[\"0:8\"]},{\"tk\":[2749,22,2749,46],\"els\":[\"0:8\"]},{\"tk\":[2749,47,2749,52],\"els\":[\"0:8\"]},{\"tk\":[2749,53,2749,62],\"els\":[\"0:8\"]},{\"tk\":[2749,62,2749,63],\"els\":[\"0:8\"]},{\"tk\":[2749,63,2749,64],\"els\":[\"0:8\"]},{\"tk\":[2754,3,2754,10],\"els\":[\"0:6:19#out:1\"]},{\"tk\":[2754,11,2754,12],\"els\":[\"0:6:19#out:1\",\"0:6:19\"]},{\"tk\":[2754,13,2754,14],\"els\":[\"0:6:19\"]},{\"tk\":[2754,14,2754,27],\"els\":[\"0:6:9\"]},{\"tk\":[2866,3,2866,27],\"els\":[\"0:296\"]},{\"tk\":[2866,28,2866,29],\"els\":[\"0:296\"]},{\"tk\":[2887,5,2887,30],\"els\":[\"0:2724\"]},{\"tk\":[2887,31,2887,45],\"els\":[\"0:2724\"]},{\"tk\":[2887,46,2887,47],\"els\":[\"0:2724\"]},{\"tk\":[2888,7,2888,31],\"els\":[\"0:2724\"]},{\"tk\":[2888,32,2888,60],\"els\":[\"0:2724\"]},{\"tk\":[2891,5,2891,30],\"els\":[\"0:2436\"]},{\"tk\":[2891,31,2891,41],\"els\":[\"0:2436\"]},{\"tk\":[2891,42,2891,43],\"els\":[\"0:2436\"]},{\"tk\":[2892,7,2892,31],\"els\":[\"0:2436\"]},{\"tk\":[2892,32,2892,62],\"els\":[\"0:2436\"]},{\"tk\":[2895,5,2895,30],\"els\":[\"0:2641\"]},{\"tk\":[2895,31,2895,46],\"els\":[\"0:2641\"]},{\"tk\":[2895,47,2895,48],\"els\":[\"0:2641\"]},{\"tk\":[2896,7,2896,31],\"els\":[\"0:2641\"]},{\"tk\":[2896,32,2896,62],\"els\":[\"0:2641\"]},{\"tk\":[2901,5,2901,30],\"els\":[\"0:2265\"]},{\"tk\":[2901,31,2901,38],\"els\":[\"0:2265\"]},{\"tk\":[2901,39,2901,40],\"els\":[\"0:2265\",\"0:2430\"]},{\"tk\":[2902,7,2902,31],\"els\":[\"0:2430\"]},{\"tk\":[2902,32,2902,52],\"els\":[\"0:2430\"]},{\"tk\":[2907,5,2907,30],\"els\":[\"0:2633\"]},{\"tk\":[2907,31,2907,43],\"els\":[\"0:2633\"]},{\"tk\":[2907,44,2907,45],\"els\":[\"0:2633\",\"0:2688\"]},{\"tk\":[2908,7,2908,31],\"els\":[\"0:2688\"]},{\"tk\":[2908,32,2908,53],\"els\":[\"0:2688\"]},{\"tk\":[2913,5,2913,30],\"els\":[\"0:2716\"]},{\"tk\":[2913,31,2913,42],\"els\":[\"0:2716\"]},{\"tk\":[2913,43,2913,44],\"els\":[\"0:2716\",\"0:2770\"]},{\"tk\":[2914,7,2914,31],\"els\":[\"0:2770\"]},{\"tk\":[2914,32,2914,53],\"els\":[\"0:2770\"]},{\"tk\":[2917,5,2917,30],\"els\":[\"0:1638\"]},{\"tk\":[2917,31,2917,44],\"els\":[\"0:1638\"]},{\"tk\":[2917,45,2917,46],\"els\":[\"0:1638\"]},{\"tk\":[2918,7,2918,31],\"els\":[\"0:1638\"]},{\"tk\":[2918,32,2918,62],\"els\":[\"0:1638\"]},{\"tk\":[2921,5,2921,30],\"els\":[\"0:267\"]},{\"tk\":[2921,31,2921,38],\"els\":[\"0:267\"]},{\"tk\":[2921,39,2921,40],\"els\":[\"0:267\"]},{\"tk\":[2922,7,2922,31],\"els\":[\"0:267\"]},{\"tk\":[2922,32,2922,62],\"els\":[\"0:267\"]},{\"tk\":[2925,5,2925,30],\"els\":[\"0:268\"]},{\"tk\":[2925,31,2925,36],\"els\":[\"0:268\"]},{\"tk\":[2925,37,2925,38],\"els\":[\"0:268\"]},{\"tk\":[2926,7,2926,31],\"els\":[\"0:268\"]},{\"tk\":[2926,32,2926,62],\"els\":[\"0:268\"]},{\"tk\":[2929,5,2929,30],\"els\":[\"0:269\"]},{\"tk\":[2929,31,2929,36],\"els\":[\"0:269\"]},{\"tk\":[2929,37,2929,38],\"els\":[\"0:269\"]},{\"tk\":[2930,7,2930,31],\"els\":[\"0:269\"]},{\"tk\":[2930,32,2930,62],\"els\":[\"0:269\"]},{\"tk\":[2933,5,2933,30],\"els\":[\"0:516\"]},{\"tk\":[2933,31,2933,40],\"els\":[\"0:516\"]},{\"tk\":[2933,41,2933,42],\"els\":[\"0:516\"]},{\"tk\":[2934,7,2934,31],\"els\":[\"0:516\"]},{\"tk\":[2934,32,2934,62],\"els\":[\"0:516\"]},{\"tk\":[2937,5,2937,30],\"els\":[\"0:517\"]},{\"tk\":[2937,31,2937,41],\"els\":[\"0:517\"]},{\"tk\":[2937,42,2937,43],\"els\":[\"0:517\"]},{\"tk\":[2938,7,2938,31],\"els\":[\"0:517\"]},{\"tk\":[2938,32,2938,62],\"els\":[\"0:517\"]},{\"tk\":[2941,5,2941,30],\"els\":[\"0:518\"]},{\"tk\":[2941,31,2941,42],\"els\":[\"0:518\"]},{\"tk\":[2941,43,2941,44],\"els\":[\"0:518\"]},{\"tk\":[2942,7,2942,31],\"els\":[\"0:518\"]},{\"tk\":[2942,32,2942,62],\"els\":[\"0:518\"]},{\"tk\":[2945,5,2945,30],\"els\":[\"0:519\"]},{\"tk\":[2945,31,2945,40],\"els\":[\"0:519\"]},{\"tk\":[2945,41,2945,42],\"els\":[\"0:519\"]},{\"tk\":[2946,7,2946,31],\"els\":[\"0:519\"]},{\"tk\":[2946,32,2946,62],\"els\":[\"0:519\"]},{\"tk\":[2949,5,2949,30],\"els\":[\"0:146\"]},{\"tk\":[2949,31,2949,35],\"els\":[\"0:146\"]},{\"tk\":[2949,36,2949,37],\"els\":[\"0:146\"]},{\"tk\":[2950,7,2950,31],\"els\":[\"0:146\"]},{\"tk\":[2950,32,2950,61],\"els\":[\"0:146\"]},{\"tk\":[2953,5,2953,30],\"els\":[\"0:520\"]},{\"tk\":[2953,31,2953,39],\"els\":[\"0:520\"]},{\"tk\":[2953,40,2953,41],\"els\":[\"0:520\"]},{\"tk\":[2954,7,2954,31],\"els\":[\"0:520\"]},{\"tk\":[2954,32,2954,62],\"els\":[\"0:520\"]},{\"tk\":[2957,5,2957,30],\"els\":[\"0:521\"]},{\"tk\":[2957,31,2957,38],\"els\":[\"0:521\"]},{\"tk\":[2957,39,2957,40],\"els\":[\"0:521\"]},{\"tk\":[2958,7,2958,31],\"els\":[\"0:521\"]},{\"tk\":[2958,32,2958,62],\"els\":[\"0:521\"]},{\"tk\":[2961,5,2961,30],\"els\":[\"0:2227\"]},{\"tk\":[2961,31,2961,33],\"els\":[\"0:2227\"]},{\"tk\":[2961,34,2961,35],\"els\":[\"0:2227\"]},{\"tk\":[2962,7,2962,31],\"els\":[\"0:2227\"]},{\"tk\":[2962,32,2962,62],\"els\":[\"0:2227\"]},{\"tk\":[2965,5,2965,30],\"els\":[\"0:2243\"]},{\"tk\":[2965,31,2965,32],\"els\":[\"0:2243\"]},{\"tk\":[2965,33,2965,34],\"els\":[\"0:2243\"]},{\"tk\":[2966,7,2966,31],\"els\":[\"0:2243\"]},{\"tk\":[2966,32,2966,62],\"els\":[\"0:2243\"]},{\"tk\":[2969,5,2969,30],\"els\":[\"0:154\"]},{\"tk\":[2969,31,2969,35],\"els\":[\"0:154\"]},{\"tk\":[2969,36,2969,37],\"els\":[\"0:154\"]},{\"tk\":[2970,7,2970,31],\"els\":[\"0:154\"]},{\"tk\":[2970,32,2970,61],\"els\":[\"0:154\"]},{\"tk\":[2973,5,2973,30],\"els\":[\"0:2872\"]},{\"tk\":[2973,31,2973,44],\"els\":[\"0:2872\"]},{\"tk\":[2973,45,2973,46],\"els\":[\"0:2872\"]},{\"tk\":[2974,7,2974,31],\"els\":[\"0:2872\"]},{\"tk\":[2974,32,2974,62],\"els\":[\"0:2872\"]},{\"tk\":[2977,5,2977,30],\"els\":[\"0:157\"]},{\"tk\":[2977,31,2977,36],\"els\":[\"0:157\"]},{\"tk\":[2977,37,2977,38],\"els\":[\"0:157\"]},{\"tk\":[2978,7,2978,31],\"els\":[\"0:157\"]},{\"tk\":[2978,32,2978,61],\"els\":[\"0:157\"]},{\"tk\":[2981,5,2981,30],\"els\":[\"0:158\"]},{\"tk\":[2981,31,2981,35],\"els\":[\"0:158\"]},{\"tk\":[2981,36,2981,37],\"els\":[\"0:158\"]},{\"tk\":[2982,7,2982,31],\"els\":[\"0:158\"]},{\"tk\":[2982,32,2982,61],\"els\":[\"0:158\"]},{\"tk\":[2985,5,2985,30],\"els\":[\"0:372\"]},{\"tk\":[2985,31,2985,34],\"els\":[\"0:372\"]},{\"tk\":[2985,35,2985,36],\"els\":[\"0:372\"]},{\"tk\":[2986,7,2986,31],\"els\":[\"0:372\"]},{\"tk\":[2986,32,2986,61],\"els\":[\"0:372\"]},{\"tk\":[2989,5,2989,30],\"els\":[\"0:266\"]},{\"tk\":[2989,31,2989,38],\"els\":[\"0:266\"]},{\"tk\":[2989,39,2989,40],\"els\":[\"0:266\"]},{\"tk\":[2990,7,2990,31],\"els\":[\"0:266\"]},{\"tk\":[2990,32,2990,61],\"els\":[\"0:266\"]},{\"tk\":[3001,5,3001,30],\"els\":[\"0:2700:5\"]},{\"tk\":[3001,31,3001,40],\"els\":[\"0:2700:5\"]},{\"tk\":[3001,41,3001,42],\"els\":[\"0:2700:5\"]},{\"tk\":[3002,7,3002,31],\"els\":[\"0:2700:5\"]},{\"tk\":[3002,32,3002,63],\"els\":[\"0:2700:5\"]},{\"tk\":[3005,5,3005,30],\"els\":[\"0:3280\"]},{\"tk\":[3005,31,3005,61],\"els\":[\"0:3280\"]},{\"tk\":[3005,62,3005,63],\"els\":[\"0:3280\"]},{\"tk\":[3006,7,3006,31],\"els\":[\"0:3280\"]},{\"tk\":[3006,32,3006,58],\"els\":[\"0:3280\"]},{\"tk\":[3014,5,3014,30],\"els\":[\"0:2255:5\"]},{\"tk\":[3014,31,3014,42],\"els\":[\"0:2255:5\"]},{\"tk\":[3014,43,3014,44],\"els\":[\"0:2255:5\"]},{\"tk\":[3015,7,3015,31],\"els\":[\"0:2255:5\"]},{\"tk\":[3015,32,3015,63],\"els\":[\"0:2255:5\"]},{\"tk\":[3018,5,3018,30],\"els\":[\"0:3632\"]},{\"tk\":[3018,31,3018,62],\"els\":[\"0:3632\"]},{\"tk\":[3018,63,3018,64],\"els\":[\"0:3632\"]},{\"tk\":[3019,7,3019,31],\"els\":[\"0:3632\"]},{\"tk\":[3019,32,3019,60],\"els\":[\"0:3632\"]},{\"tk\":[3027,5,3027,30],\"els\":[\"0:2617:5\"]},{\"tk\":[3027,31,3027,42],\"els\":[\"0:2617:5\"]},{\"tk\":[3027,43,3027,44],\"els\":[\"0:2617:5\"]},{\"tk\":[3028,7,3028,31],\"els\":[\"0:2617:5\"]},{\"tk\":[3028,32,3028,63],\"els\":[\"0:2617:5\"]},{\"tk\":[3031,5,3031,30],\"els\":[\"0:3521\"]},{\"tk\":[3031,31,3031,62],\"els\":[\"0:3521\"]},{\"tk\":[3031,63,3031,64],\"els\":[\"0:3521\"]},{\"tk\":[3032,7,3032,31],\"els\":[\"0:3521\"]},{\"tk\":[3032,32,3032,60],\"els\":[\"0:3521\"]},{\"tk\":[3035,5,3035,30],\"els\":[\"0:3278\"]},{\"tk\":[3035,31,3035,60],\"els\":[\"0:3278\"]},{\"tk\":[3035,61,3035,62],\"els\":[\"0:3278\"]},{\"tk\":[3036,7,3036,31],\"els\":[\"0:3278\"]},{\"tk\":[3036,32,3036,59],\"els\":[\"0:3278\"]},{\"tk\":[3039,5,3039,30],\"els\":[\"0:3279\"]},{\"tk\":[3039,31,3039,61],\"els\":[\"0:3279\"]},{\"tk\":[3039,62,3039,63],\"els\":[\"0:3279\"]},{\"tk\":[3040,7,3040,31],\"els\":[\"0:3279\"]},{\"tk\":[3040,32,3040,58],\"els\":[\"0:3279\"]},{\"tk\":[3043,5,3043,30],\"els\":[\"0:3630\"]},{\"tk\":[3043,31,3043,62],\"els\":[\"0:3630\"]},{\"tk\":[3043,63,3043,64],\"els\":[\"0:3630\"]},{\"tk\":[3044,7,3044,31],\"els\":[\"0:3630\"]},{\"tk\":[3044,32,3044,59],\"els\":[\"0:3630\"]},{\"tk\":[3047,5,3047,30],\"els\":[\"0:3631\"]},{\"tk\":[3047,31,3047,62],\"els\":[\"0:3631\"]},{\"tk\":[3047,63,3047,64],\"els\":[\"0:3631\"]},{\"tk\":[3048,7,3048,31],\"els\":[\"0:3631\"]},{\"tk\":[3048,32,3048,60],\"els\":[\"0:3631\"]},{\"tk\":[3051,5,3051,30],\"els\":[\"0:3519\"]},{\"tk\":[3051,31,3051,62],\"els\":[\"0:3519\"]},{\"tk\":[3051,63,3051,64],\"els\":[\"0:3519\"]},{\"tk\":[3052,7,3052,31],\"els\":[\"0:3519\"]},{\"tk\":[3052,32,3052,59],\"els\":[\"0:3519\"]},{\"tk\":[3055,5,3055,30],\"els\":[\"0:3520\"]},{\"tk\":[3055,31,3055,62],\"els\":[\"0:3520\"]},{\"tk\":[3055,63,3055,64],\"els\":[\"0:3520\"]},{\"tk\":[3056,7,3056,31],\"els\":[\"0:3520\"]},{\"tk\":[3056,32,3056,60],\"els\":[\"0:3520\"]},{\"tk\":[3062,5,3062,29],\"els\":[\"0:6:4\"]},{\"tk\":[3062,30,3062,35],\"els\":[\"0:6:4\"]},{\"tk\":[3062,36,3062,37],\"els\":[\"0:6:4\",\"0:6:6\",\"0:6:3\"]},{\"tk\":[3062,38,3062,62],\"els\":[\"0:6:6\"]},{\"tk\":[3062,63,3062,72],\"els\":[\"0:6:6\"]},{\"tk\":[3070,5,3070,29],\"els\":[\"0:34:4\"]},{\"tk\":[3070,30,3070,33],\"els\":[\"0:34:4\"]},{\"tk\":[3070,34,3070,35],\"els\":[\"0:34:4\",\"0:34:6\",\"0:34:3\"]},{\"tk\":[3070,36,3070,60],\"els\":[\"0:34:6\"]},{\"tk\":[3070,61,3070,68],\"els\":[\"0:34:6\"]},{\"tk\":[3078,5,3078,29],\"els\":[\"0:3718:43:4\"]},{\"tk\":[3078,30,3078,35],\"els\":[\"0:3718:43:4\"]},{\"tk\":[3078,36,3078,37],\"els\":[\"0:3718:43:4\",\"0:3718:43:6\",\"0:3718:43:3\"]},{\"tk\":[3078,38,3078,62],\"els\":[\"0:3718:43:6\"]},{\"tk\":[3078,63,3078,72],\"els\":[\"0:3718:43:6\"]},{\"tk\":[3084,5,3084,30],\"els\":[\"0:2241\",\"0:2245\"]},{\"tk\":[3084,31,3084,62],\"els\":[\"0:2241\",\"0:2245\"]},{\"tk\":[3084,63,3084,64],\"els\":[\"0:2241\",\"0:2245\"]},{\"tk\":[3085,7,3085,31],\"els\":[\"0:2241\"]},{\"tk\":[3085,32,3085,57],\"els\":[\"0:2241\"]},{\"tk\":[3090,5,3090,30],\"els\":[\"0:34:9\"]},{\"tk\":[3090,31,3090,36],\"els\":[\"0:34:9\"]},{\"tk\":[3090,37,3090,59],\"els\":[\"0:34:9\"]},{\"tk\":[3090,60,3090,61],\"els\":[\"0:34:9\"]},{\"tk\":[3090,62,3090,67],\"els\":[\"0:34:9\"]},{\"tk\":[3091,5,3091,30],\"els\":[\"0:34:9\"]},{\"tk\":[3091,31,3091,36],\"els\":[\"0:34:9\"]},{\"tk\":[3091,37,3091,52],\"els\":[\"0:34:9\"]},{\"tk\":[3091,53,3091,54],\"els\":[\"0:34:9\"]},{\"tk\":[3091,55,3091,60],\"els\":[\"0:34:9\"]},{\"tk\":[3092,5,3092,30],\"els\":[\"0:34:9\"]},{\"tk\":[3092,31,3092,36],\"els\":[\"0:34:9\"]},{\"tk\":[3092,37,3092,50],\"els\":[\"0:34:9\"]},{\"tk\":[3092,51,3092,52],\"els\":[\"0:34:9\"]},{\"tk\":[3092,53,3092,54],\"els\":[\"0:34:9\"]},{\"tk\":[3093,5,3093,30],\"els\":[\"0:34:9\"]},{\"tk\":[3093,31,3093,36],\"els\":[\"0:34:9\"]},{\"tk\":[3093,37,3093,51],\"els\":[\"0:34:9\"]},{\"tk\":[3093,52,3093,53],\"els\":[\"0:34:9\"]},{\"tk\":[3093,54,3093,60],\"els\":[\"0:34:9\"]},{\"tk\":[3094,5,3094,25],\"els\":[\"0:34:9\"]},{\"tk\":[3094,26,3094,51],\"els\":[\"0:34:9\"]},{\"tk\":[3094,52,3094,57],\"els\":[\"0:34:9\"]},{\"tk\":[3095,27,3095,52],\"els\":[\"0:34:9\"]},{\"tk\":[3095,53,3095,58],\"els\":[\"0:34:9\"]},{\"tk\":[3095,59,3095,73],\"els\":[\"0:34:9\"]},{\"tk\":[3096,5,3096,30],\"els\":[\"0:34:9\"]},{\"tk\":[3096,31,3096,36],\"els\":[\"0:34:9\"]},{\"tk\":[3096,37,3096,52],\"els\":[\"0:34:9\"]},{\"tk\":[3096,53,3096,54],\"els\":[\"0:34:9\"]},{\"tk\":[3096,55,3096,59],\"els\":[\"0:34:9\"]},{\"tk\":[3099,5,3099,30],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3099,31,3099,36],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3099,37,3099,59],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3099,60,3099,61],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3099,62,3099,67],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3100,5,3100,30],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3100,31,3100,36],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3100,37,3100,52],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3100,53,3100,54],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3100,55,3100,60],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3101,5,3101,30],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3101,31,3101,36],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3101,37,3101,50],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3101,51,3101,52],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3101,53,3101,54],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3102,5,3102,30],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3102,31,3102,36],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3102,37,3102,51],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3102,52,3102,53],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3102,54,3102,60],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3103,5,3103,25],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3103,26,3103,51],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3103,52,3103,57],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3104,27,3104,52],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3104,53,3104,58],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3104,59,3104,73],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3105,5,3105,30],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3105,31,3105,36],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3105,37,3105,52],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3105,53,3105,54],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3105,55,3105,59],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3110,5,3110,30],\"els\":[\"0:26\"]},{\"tk\":[3110,31,3110,34],\"els\":[\"0:26\"]},{\"tk\":[3110,35,3110,46],\"els\":[\"0:26\"]},{\"tk\":[3110,47,3110,48],\"els\":[\"0:26\"]},{\"tk\":[3110,49,3110,51],\"els\":[\"0:26\"]},{\"tk\":[3111,5,3111,30],\"els\":[\"0:26\"]},{\"tk\":[3111,31,3111,34],\"els\":[\"0:26\"]},{\"tk\":[3111,35,3111,48],\"els\":[\"0:26\"]},{\"tk\":[3111,49,3111,50],\"els\":[\"0:26\"]},{\"tk\":[3111,51,3111,52],\"els\":[\"0:26\"]},{\"tk\":[3112,5,3112,30],\"els\":[\"0:26\"]},{\"tk\":[3112,31,3112,34],\"els\":[\"0:26\"]},{\"tk\":[3112,35,3112,57],\"els\":[\"0:26\"]},{\"tk\":[3112,58,3112,59],\"els\":[\"0:26\"]},{\"tk\":[3112,60,3112,65],\"els\":[\"0:26\"]},{\"tk\":[3113,5,3113,36],\"els\":[\"0:26\",\"0:720\"]},{\"tk\":[3113,36,3113,37],\"els\":[\"0:26\",\"0:720\"]},{\"tk\":[3113,37,3113,38],\"els\":[\"0:26\",\"0:720\"]},{\"tk\":[3113,38,3113,63],\"els\":[\"0:26\",\"0:720\"]},{\"tk\":[3113,63,3113,64],\"els\":[\"0:26\",\"0:720\"]},{\"tk\":[3113,64,3113,67],\"els\":[\"0:26\",\"0:720\"]},{\"tk\":[3113,67,3113,68],\"els\":[\"0:26\",\"0:720\"]},{\"tk\":[3114,7,3114,25],\"els\":[\"0:26\",\"0:720\",\"0:250#out:1\"]},{\"tk\":[3114,25,3114,26],\"els\":[\"0:26\",\"0:720\"]},{\"tk\":[3114,27,3114,51],\"els\":[\"0:26\",\"0:720\"]},{\"tk\":[3114,51,3114,52],\"els\":[\"0:26\",\"0:720\"]},{\"tk\":[3114,52,3114,70],\"els\":[\"0:26\",\"0:720\"]},{\"tk\":[3114,70,3114,71],\"els\":[\"0:26\",\"0:720\"]},{\"tk\":[3117,5,3117,30],\"els\":[\"0:3761\"]},{\"tk\":[3117,31,3117,36],\"els\":[\"0:3761\"]},{\"tk\":[3117,37,3117,50],\"els\":[\"0:3761\"]},{\"tk\":[3117,51,3117,52],\"els\":[\"0:3761\"]},{\"tk\":[3117,53,3117,54],\"els\":[\"0:3761\"]},{\"tk\":[3118,5,3118,30],\"els\":[\"0:3761\"]},{\"tk\":[3118,31,3118,36],\"els\":[\"0:3761\"]},{\"tk\":[3118,37,3118,49],\"els\":[\"0:3761\"]},{\"tk\":[3118,50,3118,62],\"els\":[\"0:3761\"]},{\"tk\":[3118,63,3118,64],\"els\":[\"0:3761\"]},{\"tk\":[3118,65,3118,69],\"els\":[\"0:3761\"]},{\"tk\":[3119,5,3119,30],\"els\":[\"0:3761\"]},{\"tk\":[3119,31,3119,36],\"els\":[\"0:3761\"]},{\"tk\":[3119,37,3119,59],\"els\":[\"0:3761\"]},{\"tk\":[3119,60,3119,61],\"els\":[\"0:3761\"]},{\"tk\":[3119,62,3119,67],\"els\":[\"0:3761\"]},{\"tk\":[3120,5,3120,36],\"els\":[\"0:3761\"]},{\"tk\":[3120,36,3120,37],\"els\":[\"0:3761\"]},{\"tk\":[3120,37,3120,38],\"els\":[\"0:3761\"]},{\"tk\":[3120,38,3120,63],\"els\":[\"0:3761\"]},{\"tk\":[3120,63,3120,64],\"els\":[\"0:3761\"]},{\"tk\":[3120,64,3120,69],\"els\":[\"0:3761\"]},{\"tk\":[3120,69,3120,70],\"els\":[\"0:3761\"]},{\"tk\":[3123,5,3123,30],\"els\":[\"0:6:9\"]},{\"tk\":[3123,31,3123,36],\"els\":[\"0:6:9\"]},{\"tk\":[3123,37,3123,59],\"els\":[\"0:6:9\"]},{\"tk\":[3123,60,3123,61],\"els\":[\"0:6:9\"]},{\"tk\":[3123,62,3123,67],\"els\":[\"0:6:9\"]},{\"tk\":[3124,5,3124,30],\"els\":[\"0:6:9\"]},{\"tk\":[3124,31,3124,36],\"els\":[\"0:6:9\"]},{\"tk\":[3124,37,3124,52],\"els\":[\"0:6:9\"]},{\"tk\":[3124,53,3124,54],\"els\":[\"0:6:9\"]},{\"tk\":[3124,55,3124,60],\"els\":[\"0:6:9\"]},{\"tk\":[3125,5,3125,30],\"els\":[\"0:6:9\"]},{\"tk\":[3125,31,3125,36],\"els\":[\"0:6:9\"]},{\"tk\":[3125,37,3125,50],\"els\":[\"0:6:9\"]},{\"tk\":[3125,51,3125,52],\"els\":[\"0:6:9\"]},{\"tk\":[3125,53,3125,54],\"els\":[\"0:6:9\"]},{\"tk\":[3126,5,3126,30],\"els\":[\"0:6:9\"]},{\"tk\":[3126,31,3126,36],\"els\":[\"0:6:9\"]},{\"tk\":[3126,37,3126,51],\"els\":[\"0:6:9\"]},{\"tk\":[3126,52,3126,53],\"els\":[\"0:6:9\"]},{\"tk\":[3126,54,3126,60],\"els\":[\"0:6:9\"]},{\"tk\":[3127,5,3127,25],\"els\":[\"0:6:9\"]},{\"tk\":[3127,26,3127,51],\"els\":[\"0:6:9\"]},{\"tk\":[3127,52,3127,57],\"els\":[\"0:6:9\"]},{\"tk\":[3128,27,3128,52],\"els\":[\"0:6:9\"]},{\"tk\":[3128,53,3128,58],\"els\":[\"0:6:9\"]},{\"tk\":[3128,59,3128,73],\"els\":[\"0:6:9\"]},{\"tk\":[3129,5,3129,30],\"els\":[\"0:6:9\"]},{\"tk\":[3129,31,3129,36],\"els\":[\"0:6:9\"]},{\"tk\":[3129,37,3129,52],\"els\":[\"0:6:9\"]},{\"tk\":[3129,53,3129,54],\"els\":[\"0:6:9\"]},{\"tk\":[3129,55,3129,59],\"els\":[\"0:6:9\"]},{\"tk\":[3132,5,3132,30],\"els\":[\"0:3704\"]},{\"tk\":[3132,31,3132,43],\"els\":[\"0:3704\"]},{\"tk\":[3132,44,3132,45],\"els\":[\"0:3704\"]},{\"tk\":[3132,46,3132,47],\"els\":[\"0:3704\"]},{\"tk\":[3135,5,3135,29],\"els\":[\"0:296\"]},{\"tk\":[3135,30,3135,31],\"els\":[\"0:296\"]},{\"tk\":[3135,32,3135,33],\"els\":[\"0:296\"]},{\"tk\":[3135,34,3135,37],\"els\":[\"0:296\"]},{\"tk\":[3143,3,3143,5],\"els\":[\"0:34:9\"]},{\"tk\":[3143,7,3143,8],\"els\":[\"0:34:9\"]},{\"tk\":[3143,8,3143,33],\"els\":[\"0:34:9\"]},{\"tk\":[3143,34,3143,39],\"els\":[\"0:34:9\"]},{\"tk\":[3144,5,3144,30],\"els\":[\"0:34:9\"]},{\"tk\":[3144,31,3144,36],\"els\":[\"0:34:9\"]},{\"tk\":[3144,37,3144,59],\"els\":[\"0:34:9\"]},{\"tk\":[3144,60,3144,61],\"els\":[\"0:34:9\"]},{\"tk\":[3144,62,3144,66],\"els\":[\"0:34:9\"]},{\"tk\":[3145,5,3145,7],\"els\":[\"0:34:9\"]},{\"tk\":[3145,10,3145,35],\"els\":[\"0:34:9\"]},{\"tk\":[3145,36,3145,41],\"els\":[\"0:34:9\"]},{\"tk\":[3145,56,3145,58],\"els\":[\"0:34:9\"]},{\"tk\":[3145,59,3145,60],\"els\":[\"0:34:9\"]},{\"tk\":[3145,62,3145,64],\"els\":[\"0:34:9\"]},{\"tk\":[3146,9,3146,34],\"els\":[\"0:34:9\"]},{\"tk\":[3146,35,3146,40],\"els\":[\"0:34:9\"]},{\"tk\":[3147,7,3147,26],\"els\":[\"0:34:9\"]},{\"tk\":[3147,28,3147,53],\"els\":[\"0:34:9\"]},{\"tk\":[3147,54,3147,59],\"els\":[\"0:34:9\"]},{\"tk\":[3147,60,3147,74],\"els\":[\"0:34:9\"]},{\"tk\":[3154,3,3154,5],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3154,7,3154,8],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3154,8,3154,33],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3154,34,3154,39],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3155,5,3155,30],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3155,31,3155,36],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3155,37,3155,59],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3155,60,3155,61],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3155,62,3155,66],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3156,5,3156,7],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3156,10,3156,35],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3156,36,3156,41],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3156,56,3156,58],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3156,59,3156,60],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3156,62,3156,64],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3157,9,3157,34],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3157,35,3157,40],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3158,7,3158,26],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3158,28,3158,53],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3158,54,3158,59],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3158,60,3158,74],\"els\":[\"0:3718:43:9\"]},{\"tk\":[3165,3,3165,5],\"els\":[\"0:26\"]},{\"tk\":[3165,7,3165,8],\"els\":[\"0:26\"]},{\"tk\":[3165,8,3165,33],\"els\":[\"0:26\"]},{\"tk\":[3165,34,3165,37],\"els\":[\"0:26\"]},{\"tk\":[3166,5,3166,30],\"els\":[\"0:26\"]},{\"tk\":[3166,31,3166,34],\"els\":[\"0:26\"]},{\"tk\":[3166,35,3166,57],\"els\":[\"0:26\"]},{\"tk\":[3166,58,3166,59],\"els\":[\"0:26\"]},{\"tk\":[3166,60,3166,64],\"els\":[\"0:26\"]},{\"tk\":[3167,5,3167,7],\"els\":[\"0:26\"]},{\"tk\":[3167,10,3167,35],\"els\":[\"0:26\"]},{\"tk\":[3167,36,3167,39],\"els\":[\"0:26\"]},{\"tk\":[3167,54,3167,56],\"els\":[\"0:26\"]},{\"tk\":[3167,57,3167,58],\"els\":[\"0:26\"]},{\"tk\":[3167,60,3167,62],\"els\":[\"0:26\"]},{\"tk\":[3168,9,3168,34],\"els\":[\"0:26\"]},{\"tk\":[3168,35,3168,38],\"els\":[\"0:26\"]},{\"tk\":[3170,14,3170,15],\"els\":[\"0:26\"]},{\"tk\":[3170,16,3170,26],\"els\":[\"0:26\"]},{\"tk\":[3170,28,3170,53],\"els\":[\"0:26\"]},{\"tk\":[3170,54,3170,57],\"els\":[\"0:26\"]},{\"tk\":[3170,58,3170,71],\"els\":[\"0:26\"]},{\"tk\":[3171,28,3171,53],\"els\":[\"0:26\"]},{\"tk\":[3171,54,3171,57],\"els\":[\"0:26\"]},{\"tk\":[3171,58,3171,73],\"els\":[\"0:26\"]},{\"tk\":[3172,7,3172,32],\"els\":[\"0:26\"]},{\"tk\":[3172,33,3172,36],\"els\":[\"0:26\"]},{\"tk\":[3172,37,3172,48],\"els\":[\"0:26\"]},{\"tk\":[3172,49,3172,50],\"els\":[\"0:26\"]},{\"tk\":[3173,10,3173,35],\"els\":[\"0:26\"]},{\"tk\":[3173,36,3173,39],\"els\":[\"0:26\"]},{\"tk\":[3173,52,3173,53],\"els\":[\"0:26\"]},{\"tk\":[3174,14,3174,15],\"els\":[\"0:26\"]},{\"tk\":[3174,16,3174,30],\"els\":[\"0:26\"]},{\"tk\":[3174,32,3174,57],\"els\":[\"0:26\"]},{\"tk\":[3174,58,3174,61],\"els\":[\"0:26\"]},{\"tk\":[3174,62,3174,75],\"els\":[\"0:26\"]},{\"tk\":[3175,9,3175,34],\"els\":[\"0:26\"]},{\"tk\":[3175,35,3175,38],\"els\":[\"0:26\"]},{\"tk\":[3176,9,3176,34],\"els\":[\"0:26\"]},{\"tk\":[3176,35,3176,38],\"els\":[\"0:26\"]},{\"tk\":[3177,9,3177,34],\"els\":[\"0:26\"]},{\"tk\":[3177,35,3177,38],\"els\":[\"0:26\"]},{\"tk\":[3178,10,3178,35],\"els\":[\"0:26\"]},{\"tk\":[3178,36,3178,39],\"els\":[\"0:26\"]},{\"tk\":[3178,40,3178,60],\"els\":[\"0:26\"]},{\"tk\":[3179,7,3179,32],\"els\":[\"0:26\"]},{\"tk\":[3179,33,3179,36],\"els\":[\"0:26\"]},{\"tk\":[3179,37,3179,48],\"els\":[\"0:26\"]},{\"tk\":[3179,49,3179,50],\"els\":[\"0:26\"]},{\"tk\":[3180,10,3180,35],\"els\":[\"0:26\"]},{\"tk\":[3180,36,3180,39],\"els\":[\"0:26\"]},{\"tk\":[3180,52,3180,53],\"els\":[\"0:26\"]},{\"tk\":[3181,14,3181,15],\"els\":[\"0:26\"]},{\"tk\":[3181,16,3181,25],\"els\":[\"0:26\"]},{\"tk\":[3181,27,3181,52],\"els\":[\"0:26\"]},{\"tk\":[3181,53,3181,56],\"els\":[\"0:26\"]},{\"tk\":[3181,57,3181,70],\"els\":[\"0:26\"]},{\"tk\":[3182,27,3182,52],\"els\":[\"0:26\"]},{\"tk\":[3182,53,3182,56],\"els\":[\"0:26\"]},{\"tk\":[3182,57,3182,77],\"els\":[\"0:26\"]},{\"tk\":[3183,27,3183,52],\"els\":[\"0:26\"]},{\"tk\":[3183,53,3183,56],\"els\":[\"0:26\"]},{\"tk\":[3183,57,3183,72],\"els\":[\"0:26\"]},{\"tk\":[3184,7,3184,32],\"els\":[\"0:26\"]},{\"tk\":[3184,33,3184,36],\"els\":[\"0:26\"]},{\"tk\":[3184,37,3184,48],\"els\":[\"0:26\"]},{\"tk\":[3184,49,3184,50],\"els\":[\"0:26\"]},{\"tk\":[3185,10,3185,35],\"els\":[\"0:26\"]},{\"tk\":[3185,36,3185,39],\"els\":[\"0:26\"]},{\"tk\":[3185,52,3185,53],\"els\":[\"0:26\"]},{\"tk\":[3192,3,3192,5],\"els\":[\"0:3761\"]},{\"tk\":[3192,7,3192,8],\"els\":[\"0:3761\"]},{\"tk\":[3192,8,3192,33],\"els\":[\"0:3761\"]},{\"tk\":[3192,34,3192,39],\"els\":[\"0:3761\"]},{\"tk\":[3193,5,3193,30],\"els\":[\"0:3761\"]},{\"tk\":[3193,31,3193,36],\"els\":[\"0:3761\"]},{\"tk\":[3193,37,3193,59],\"els\":[\"0:3761\"]},{\"tk\":[3193,60,3193,61],\"els\":[\"0:3761\"]},{\"tk\":[3193,62,3193,66],\"els\":[\"0:3761\"]},{\"tk\":[3194,5,3194,7],\"els\":[\"0:3761\"]},{\"tk\":[3194,10,3194,35],\"els\":[\"0:3761\"]},{\"tk\":[3194,36,3194,41],\"els\":[\"0:3761\"]},{\"tk\":[3194,56,3194,58],\"els\":[\"0:3761\"]},{\"tk\":[3194,59,3194,60],\"els\":[\"0:3761\"]},{\"tk\":[3194,62,3194,64],\"els\":[\"0:3761\"]},{\"tk\":[3195,9,3195,34],\"els\":[\"0:3761\"]},{\"tk\":[3195,35,3195,40],\"els\":[\"0:3761\"]},{\"tk\":[3196,7,3196,19],\"els\":[\"0:3761\"]},{\"tk\":[3196,20,3196,45],\"els\":[\"0:3761\"]},{\"tk\":[3196,46,3196,51],\"els\":[\"0:3761\"]},{\"tk\":[3203,3,3203,5],\"els\":[\"0:6:9\"]},{\"tk\":[3203,7,3203,8],\"els\":[\"0:6:9\"]},{\"tk\":[3203,8,3203,33],\"els\":[\"0:6:9\"]},{\"tk\":[3203,34,3203,39],\"els\":[\"0:6:9\"]},{\"tk\":[3204,5,3204,30],\"els\":[\"0:6:9\"]},{\"tk\":[3204,31,3204,36],\"els\":[\"0:6:9\"]},{\"tk\":[3204,37,3204,59],\"els\":[\"0:6:9\"]},{\"tk\":[3204,60,3204,61],\"els\":[\"0:6:9\"]},{\"tk\":[3204,62,3204,66],\"els\":[\"0:6:9\"]},{\"tk\":[3205,5,3205,7],\"els\":[\"0:6:9\"]},{\"tk\":[3205,10,3205,35],\"els\":[\"0:6:9\"]},{\"tk\":[3205,36,3205,41],\"els\":[\"0:6:9\"]},{\"tk\":[3205,56,3205,58],\"els\":[\"0:6:9\"]},{\"tk\":[3205,59,3205,60],\"els\":[\"0:6:9\"]},{\"tk\":[3205,62,3205,64],\"els\":[\"0:6:9\"]},{\"tk\":[3206,9,3206,34],\"els\":[\"0:6:9\"]},{\"tk\":[3206,35,3206,40],\"els\":[\"0:6:9\"]},{\"tk\":[3207,7,3207,26],\"els\":[\"0:6:9\"]},{\"tk\":[3207,28,3207,53],\"els\":[\"0:6:9\"]},{\"tk\":[3207,54,3207,59],\"els\":[\"0:6:9\"]},{\"tk\":[3207,60,3207,74],\"els\":[\"0:6:9\"]}]}}}","blocks":[{"RTWName":"<Root>/Add","SIDString":"px42LoopCtrQGC20220313:3230"},{"RTWName":"<Root>/Add1","SIDString":"px42LoopCtrQGC20220313:3232"},{"RTWName":"<Root>/Add2","SIDString":"px42LoopCtrQGC20220313:3233"},{"RTWName":"<Root>/Add3","SIDString":"px42LoopCtrQGC20220313:3234"},{"RTWName":"<S1>/des_pitch","SIDString":"px42LoopCtrQGC20220313:347"},{"RTWName":"<S1>/des_roll","SIDString":"px42LoopCtrQGC20220313:348"},{"RTWName":"<S1>/yaw_angle","SIDString":"px42LoopCtrQGC20220313:349"},{"RTWName":"<S1>/pitch_angle","SIDString":"px42LoopCtrQGC20220313:350"},{"RTWName":"<S1>/roll_angle\n","SIDString":"px42LoopCtrQGC20220313:351"},{"RTWName":"<S1>/des_yaw","SIDString":"px42LoopCtrQGC20220313:352"},{"RTWName":"<S1>/Add1","SIDString":"px42LoopCtrQGC20220313:2804"},{"RTWName":"<S1>/Add2","SIDString":"px42LoopCtrQGC20220313:2848"},{"RTWName":"<S1>/Add3","SIDString":"px42LoopCtrQGC20220313:3464"},{"RTWName":"<S1>/Constant","SIDString":"px42LoopCtrQGC20220313:1738"},{"RTWName":"<S1>/Constant1","SIDString":"px42LoopCtrQGC20220313:1839"},{"RTWName":"<S1>/Gain1","SIDString":"px42LoopCtrQGC20220313:3358"},{"RTWName":"<S1>/Gain2","SIDString":"px42LoopCtrQGC20220313:2810"},{"RTWName":"<S1>/J","SIDString":"px42LoopCtrQGC20220313:3112"},{"RTWName":"<S1>/Manual Switch","SIDString":"px42LoopCtrQGC20220313:1737"},{"RTWName":"<S1>/Saturation","SIDString":"px42LoopCtrQGC20220313:1664"},{"RTWName":"<S1>/Saturation1","SIDString":"px42LoopCtrQGC20220313:3113"},{"RTWName":"<S1>/Saturation2","SIDString":"px42LoopCtrQGC20220313:3229"},{"RTWName":"<S1>/Saturation4","SIDString":"px42LoopCtrQGC20220313:3359"},{"RTWName":"<S1>/Scope","SIDString":"px42LoopCtrQGC20220313:2849"},{"RTWName":"<S10>/pitch","SIDString":"px42LoopCtrQGC20220313:2249"},{"RTWName":"<S10>/pitch_des","SIDString":"px42LoopCtrQGC20220313:2250"},{"RTWName":"<S10>/Add","SIDString":"px42LoopCtrQGC20220313:2251"},{"RTWName":"<S10>/Add1","SIDString":"px42LoopCtrQGC20220313:2252"},{"RTWName":"<S10>/Add2","SIDString":"px42LoopCtrQGC20220313:2253"},{"RTWName":"<S10>/Constant1","SIDString":"px42LoopCtrQGC20220313:2382"},{"RTWName":"<S10>/Data Store\nRead","SIDString":"px42LoopCtrQGC20220313:2383"},{"RTWName":"<S10>/Data Store\nRead1","SIDString":"px42LoopCtrQGC20220313:2387"},{"RTWName":"<S10>/Data Store\nWrite","SIDString":"px42LoopCtrQGC20220313:2431"},{"RTWName":"<S10>/Demux","SIDString":"px42LoopCtrQGC20220313:2384"},{"RTWName":"<S16>/U","SIDString":"px42LoopCtrQGC20220313:2255:1"},{"RTWName":"<S16>/Data Type\nDuplicate","SIDString":"px42LoopCtrQGC20220313:2255:2"},{"RTWName":"<S16>/Diff","SIDString":"px42LoopCtrQGC20220313:2255:3"},{"RTWName":"<S16>/TSamp","SIDString":"px42LoopCtrQGC20220313:2255:4"},{"RTWName":"<S16>/UD","SIDString":"px42LoopCtrQGC20220313:2255:5"},{"RTWName":"<S16>/Y","SIDString":"px42LoopCtrQGC20220313:2255:6"},{"RTWName":"<S10>/Gain","SIDString":"px42LoopCtrQGC20220313:2256"},{"RTWName":"<S10>/Gain1","SIDString":"px42LoopCtrQGC20220313:2257"},{"RTWName":"<S10>/Mux","SIDString":"px42LoopCtrQGC20220313:2386"},{"RTWName":"<S10>/Product","SIDString":"px42LoopCtrQGC20220313:2258"},{"RTWName":"<S10>/Product1","SIDString":"px42LoopCtrQGC20220313:2259"},{"RTWName":"<S10>/Sign","SIDString":"px42LoopCtrQGC20220313:2260"},{"RTWName":"<S10>/Slider","SIDString":"px42LoopCtrQGC20220313:2326"},{"RTWName":"<S10>/Slider1","SIDString":"px42LoopCtrQGC20220313:2327"},{"RTWName":"<S10>/Slider2","SIDString":"px42LoopCtrQGC20220313:2328"},{"RTWName":"<S10>/Slider3","SIDString":"px42LoopCtrQGC20220313:2376"},{"RTWName":"<S10>/Slider4","SIDString":"px42LoopCtrQGC20220313:2388"},{"RTWName":"<S17>/pitch","SIDString":"px42LoopCtrQGC20220313:2262"},{"RTWName":"<S17>/pitch_des","SIDString":"px42LoopCtrQGC20220313:2263"},{"RTWName":"<S17>/b","SIDString":"px42LoopCtrQGC20220313:2264"},{"RTWName":"<S17>/Add","SIDString":"px42LoopCtrQGC20220313:2265"},{"RTWName":"<S17>/Gain4","SIDString":"px42LoopCtrQGC20220313:2266"},{"RTWName":"<S17>/Product","SIDString":"px42LoopCtrQGC20220313:2267"},{"RTWName":"<S18>/Abs","SIDString":"px42LoopCtrQGC20220313:2433"},{"RTWName":"<S18>/Add","SIDString":"px42LoopCtrQGC20220313:2467"},{"RTWName":"<S18>/Add1","SIDString":"px42LoopCtrQGC20220313:2269"},{"RTWName":"<S19>/u","SIDString":"px42LoopCtrQGC20220313:2434:1"},{"RTWName":"<S19>/Compare","SIDString":"px42LoopCtrQGC20220313:2434:2"},{"RTWName":"<S19>/Constant","SIDString":"px42LoopCtrQGC20220313:2434:3"},{"RTWName":"<S19>/y","SIDString":"px42LoopCtrQGC20220313:2434:4"},{"RTWName":"<S18>/Data Store\nMemory","SIDString":"px42LoopCtrQGC20220313:2436"},{"RTWName":"<S18>/Data Store\nRead","SIDString":"px42LoopCtrQGC20220313:2469"},{"RTWName":"<S18>/Data Store\nRead1","SIDString":"px42LoopCtrQGC20220313:2432"},{"RTWName":"<S18>/Data Store\nRead3","SIDString":"px42LoopCtrQGC20220313:2470"},{"RTWName":"<S18>/Data Store\nRead4","SIDString":"px42LoopCtrQGC20220313:2478"},{"RTWName":"<S18>/Display","SIDString":"px42LoopCtrQGC20220313:2479"},{"RTWName":"<S18>/Fcn","SIDString":"px42LoopCtrQGC20220313:2471"},{"RTWName":"<S20>:1","SIDString":"px42LoopCtrQGC20220313:2571:1"},{"RTWName":"<S18>/Mux1","SIDString":"px42LoopCtrQGC20220313:2472"},{"RTWName":"<S18>/Scope","SIDString":"px42LoopCtrQGC20220313:2273"},{"RTWName":"<S18>/T","SIDString":"px42LoopCtrQGC20220313:2474"},{"RTWName":"<S18>/ch","SIDString":"px42LoopCtrQGC20220313:2475"},{"RTWName":"<S18>/r","SIDString":"px42LoopCtrQGC20220313:2277"},{"RTWName":"<S21>/Abs1","SIDString":"px42LoopCtrQGC20220313:2443"},{"RTWName":"<S21>/Abs2","SIDString":"px42LoopCtrQGC20220313:2552"},{"RTWName":"<S21>/Add","SIDString":"px42LoopCtrQGC20220313:2575"},{"RTWName":"<S21>/Add2","SIDString":"px42LoopCtrQGC20220313:2559"},{"RTWName":"<S22>/u","SIDString":"px42LoopCtrQGC20220313:2579:1"},{"RTWName":"<S22>/Compare","SIDString":"px42LoopCtrQGC20220313:2579:2"},{"RTWName":"<S22>/Constant","SIDString":"px42LoopCtrQGC20220313:2579:3"},{"RTWName":"<S22>/y","SIDString":"px42LoopCtrQGC20220313:2579:4"},{"RTWName":"<S23>/u","SIDString":"px42LoopCtrQGC20220313:2444:1"},{"RTWName":"<S23>/Compare","SIDString":"px42LoopCtrQGC20220313:2444:2"},{"RTWName":"<S23>/Constant","SIDString":"px42LoopCtrQGC20220313:2444:3"},{"RTWName":"<S23>/y","SIDString":"px42LoopCtrQGC20220313:2444:4"},{"RTWName":"<S4294967295>/u","SIDString":"px42LoopCtrQGC20220313:2553:1"},{"RTWName":"<S4294967295>/Compare","SIDString":"px42LoopCtrQGC20220313:2553:2"},{"RTWName":"<S4294967295>/Constant","SIDString":"px42LoopCtrQGC20220313:2553:3"},{"RTWName":"<S4294967295>/y","SIDString":"px42LoopCtrQGC20220313:2553:4"},{"RTWName":"<S4294967295>/u","SIDString":"px42LoopCtrQGC20220313:2562:1"},{"RTWName":"<S4294967295>/Compare","SIDString":"px42LoopCtrQGC20220313:2562:2"},{"RTWName":"<S4294967295>/Constant","SIDString":"px42LoopCtrQGC20220313:2562:3"},{"RTWName":"<S4294967295>/y","SIDString":"px42LoopCtrQGC20220313:2562:4"},{"RTWName":"<S21>/Data Store\nRead","SIDString":"px42LoopCtrQGC20220313:2576"},{"RTWName":"<S21>/Data Store\nRead2","SIDString":"px42LoopCtrQGC20220313:2445"},{"RTWName":"<S21>/Data Store\nRead3","SIDString":"px42LoopCtrQGC20220313:2577"},{"RTWName":"<S21>/Data Store\nRead5","SIDString":"px42LoopCtrQGC20220313:2554"},{"RTWName":"<S21>/Data Store\nRead6","SIDString":"px42LoopCtrQGC20220313:2560"},{"RTWName":"<S21>/Data Store\nRead7","SIDString":"px42LoopCtrQGC20220313:2561"},{"RTWName":"<S21>/Logical\nOperator","SIDString":"px42LoopCtrQGC20220313:2578"},{"RTWName":"<S21>/Logical\nOperator1","SIDString":"px42LoopCtrQGC20220313:2564"},{"RTWName":"<S24>/Trigger","SIDString":"px42LoopCtrQGC20220313:2442"},{"RTWName":"<S24>/Data Store\nRead2","SIDString":"px42LoopCtrQGC20220313:2435"},{"RTWName":"<S24>/Data Store\nWrite","SIDString":"px42LoopCtrQGC20220313:2437"},{"RTWName":"<S4294967295>/Trigger","SIDString":"px42LoopCtrQGC20220313:2556"},{"RTWName":"<S4294967295>/Data Store\nRead2","SIDString":"px42LoopCtrQGC20220313:2557"},{"RTWName":"<S4294967295>/Data Store\nWrite","SIDString":"px42LoopCtrQGC20220313:2558"},{"RTWName":"<S18>/t","SIDString":"px42LoopCtrQGC20220313:2476"},{"RTWName":"<S18>/H","SIDString":"px42LoopCtrQGC20220313:2279"},{"RTWName":"<S17>/v*","SIDString":"px42LoopCtrQGC20220313:2280"},{"RTWName":"<S17>/H","SIDString":"px42LoopCtrQGC20220313:2281"},{"RTWName":"<S10>/Switch","SIDString":"px42LoopCtrQGC20220313:2385"},{"RTWName":"<S10>/b","SIDString":"px42LoopCtrQGC20220313:2282"},{"RTWName":"<S10>/l","SIDString":"px42LoopCtrQGC20220313:2283"},{"RTWName":"<S10>/u2","SIDString":"px42LoopCtrQGC20220313:2284"},{"RTWName":"<S4294967295>/roll","SIDString":"px42LoopCtrQGC20220313:2287"},{"RTWName":"<S4294967295>/roll_des","SIDString":"px42LoopCtrQGC20220313:2288"},{"RTWName":"<S4294967295>/Add","SIDString":"px42LoopCtrQGC20220313:2289"},{"RTWName":"<S4294967295>/Add1","SIDString":"px42LoopCtrQGC20220313:2290"},{"RTWName":"<S4294967295>/Add2","SIDString":"px42LoopCtrQGC20220313:2291"},{"RTWName":"<S4294967295>/Discrete Derivative","SIDString":"px42LoopCtrQGC20220313:2292"},{"RTWName":"<S4294967295>/Discrete Derivative1","SIDString":"px42LoopCtrQGC20220313:2293"},{"RTWName":"<S4294967295>/Gain","SIDString":"px42LoopCtrQGC20220313:2294"},{"RTWName":"<S4294967295>/Gain1","SIDString":"px42LoopCtrQGC20220313:2295"},{"RTWName":"<S4294967295>/Product","SIDString":"px42LoopCtrQGC20220313:2296"},{"RTWName":"<S4294967295>/Product1","SIDString":"px42LoopCtrQGC20220313:2297"},{"RTWName":"<S4294967295>/Sign","SIDString":"px42LoopCtrQGC20220313:2298"},{"RTWName":"<S44>/roll","SIDString":"px42LoopCtrQGC20220313:2300"},{"RTWName":"<S44>/roll_des","SIDString":"px42LoopCtrQGC20220313:2301"},{"RTWName":"<S44>/b","SIDString":"px42LoopCtrQGC20220313:2302"},{"RTWName":"<S44>/Add","SIDString":"px42LoopCtrQGC20220313:2303"},{"RTWName":"<S44>/Gain4","SIDString":"px42LoopCtrQGC20220313:2304"},{"RTWName":"<S44>/Product","SIDString":"px42LoopCtrQGC20220313:2305"},{"RTWName":"<S45>/Add1","SIDString":"px42LoopCtrQGC20220313:2307"},{"RTWName":"<S45>/Data Store\nRead","SIDString":"px42LoopCtrQGC20220313:2323"},{"RTWName":"<S45>/Fcn","SIDString":"px42LoopCtrQGC20220313:2309"},{"RTWName":"<S45>/Mux1","SIDString":"px42LoopCtrQGC20220313:2310"},{"RTWName":"<S45>/Scope","SIDString":"px42LoopCtrQGC20220313:2311"},{"RTWName":"<S45>/Switch","SIDString":"px42LoopCtrQGC20220313:2312"},{"RTWName":"<S45>/T","SIDString":"px42LoopCtrQGC20220313:2313"},{"RTWName":"<S45>/ch","SIDString":"px42LoopCtrQGC20220313:2314"},{"RTWName":"<S45>/r","SIDString":"px42LoopCtrQGC20220313:2315"},{"RTWName":"<S45>/t","SIDString":"px42LoopCtrQGC20220313:2316"},{"RTWName":"<S45>/H","SIDString":"px42LoopCtrQGC20220313:2317"},{"RTWName":"<S44>/v*","SIDString":"px42LoopCtrQGC20220313:2318"},{"RTWName":"<S44>/H","SIDString":"px42LoopCtrQGC20220313:2319"},{"RTWName":"<S4294967295>/b","SIDString":"px42LoopCtrQGC20220313:2320"},{"RTWName":"<S4294967295>/l","SIDString":"px42LoopCtrQGC20220313:2321"},{"RTWName":"<S4294967295>/u2","SIDString":"px42LoopCtrQGC20220313:2322"},{"RTWName":"<S4294967295>/u","SIDString":"px42LoopCtrQGC20220313:2504"},{"RTWName":"<S4294967295>/Add","SIDString":"px42LoopCtrQGC20220313:2505"},{"RTWName":"<S4294967295>/Add1","SIDString":"px42LoopCtrQGC20220313:2506"},{"RTWName":"<S4294967295>/Add2","SIDString":"px42LoopCtrQGC20220313:2507"},{"RTWName":"<S4294967295>/Divide","SIDString":"px42LoopCtrQGC20220313:2508"},{"RTWName":"<S4294967295>/Gain","SIDString":"px42LoopCtrQGC20220313:2509"},{"RTWName":"<S4294967295>/Gain1","SIDString":"px42LoopCtrQGC20220313:2510"},{"RTWName":"<S4294967295>/Gain2","SIDString":"px42LoopCtrQGC20220313:2511"},{"RTWName":"<S46>:1","SIDString":"px42LoopCtrQGC20220313:2512:1"},{"RTWName":"<S4294967295>/Product","SIDString":"px42LoopCtrQGC20220313:2513"},{"RTWName":"<S4294967295>/Product2","SIDString":"px42LoopCtrQGC20220313:2514"},{"RTWName":"<S4294967295>/Sign","SIDString":"px42LoopCtrQGC20220313:2515"},{"RTWName":"<S4294967295>/lower bound","SIDString":"px42LoopCtrQGC20220313:2516"},{"RTWName":"<S4294967295>/upper bound","SIDString":"px42LoopCtrQGC20220313:2517"},{"RTWName":"<S4294967295>/sat_u","SIDString":"px42LoopCtrQGC20220313:2518"},{"RTWName":"<S4294967295>/u","SIDString":"px42LoopCtrQGC20220313:2520"},{"RTWName":"<S4294967295>/Add","SIDString":"px42LoopCtrQGC20220313:2521"},{"RTWName":"<S4294967295>/Add1","SIDString":"px42LoopCtrQGC20220313:2522"},{"RTWName":"<S4294967295>/Add2","SIDString":"px42LoopCtrQGC20220313:2523"},{"RTWName":"<S4294967295>/Divide","SIDString":"px42LoopCtrQGC20220313:2524"},{"RTWName":"<S4294967295>/Gain","SIDString":"px42LoopCtrQGC20220313:2525"},{"RTWName":"<S4294967295>/Gain1","SIDString":"px42LoopCtrQGC20220313:2526"},{"RTWName":"<S4294967295>/Gain2","SIDString":"px42LoopCtrQGC20220313:2527"},{"RTWName":"<S47>:1","SIDString":"px42LoopCtrQGC20220313:2528:1"},{"RTWName":"<S4294967295>/Product","SIDString":"px42LoopCtrQGC20220313:2529"},{"RTWName":"<S4294967295>/Product2","SIDString":"px42LoopCtrQGC20220313:2530"},{"RTWName":"<S4294967295>/Sign","SIDString":"px42LoopCtrQGC20220313:2531"},{"RTWName":"<S4294967295>/lower bound","SIDString":"px42LoopCtrQGC20220313:2532"},{"RTWName":"<S4294967295>/upper bound","SIDString":"px42LoopCtrQGC20220313:2533"},{"RTWName":"<S4294967295>/sat_u","SIDString":"px42LoopCtrQGC20220313:2534"},{"RTWName":"<S4294967295>/In3","SIDString":"px42LoopCtrQGC20220313:2330"},{"RTWName":"<S4294967295>/In4","SIDString":"px42LoopCtrQGC20220313:2331"},{"RTWName":"<S4294967295>/Constant","SIDString":"px42LoopCtrQGC20220313:2332"},{"RTWName":"<S4294967295>/Constant1","SIDString":"px42LoopCtrQGC20220313:2333"},{"RTWName":"<S4294967295>/Data Store\nRead","SIDString":"px42LoopCtrQGC20220313:2338"},{"RTWName":"<S4294967295>/Data Store\nRead2","SIDString":"px42LoopCtrQGC20220313:2340"},{"RTWName":"<S4294967295>/Demux","SIDString":"px42LoopCtrQGC20220313:2349"},{"RTWName":"<S4294967295>/Discrete Derivative","SIDString":"px42LoopCtrQGC20220313:2350"},{"RTWName":"<S4294967295>/Discrete Derivative1","SIDString":"px42LoopCtrQGC20220313:2351"},{"RTWName":"<S4294967295>/Discrete-Time\nIntegrator","SIDString":"px42LoopCtrQGC20220313:2352"},{"RTWName":"<S4294967295>/Lambda","SIDString":"px42LoopCtrQGC20220313:2378"},{"RTWName":"<S4294967295>/Mux","SIDString":"px42LoopCtrQGC20220313:2354"},{"RTWName":"<S4294967295>/Product","SIDString":"px42LoopCtrQGC20220313:2355"},{"RTWName":"<S4294967295>/Product1","SIDString":"px42LoopCtrQGC20220313:2356"},{"RTWName":"<S4294967295>/Product2","SIDString":"px42LoopCtrQGC20220313:2357"},{"RTWName":"<S4294967295>/Product3","SIDString":"px42LoopCtrQGC20220313:2358"},{"RTWName":"<S4294967295>/Product4","SIDString":"px42LoopCtrQGC20220313:2359"},{"RTWName":"<S4294967295>/Saturation","SIDString":"px42LoopCtrQGC20220313:2360"},{"RTWName":"<S4294967295>/Subtract","SIDString":"px42LoopCtrQGC20220313:2361"},{"RTWName":"<S4294967295>/Subtract1","SIDString":"px42LoopCtrQGC20220313:2362"},{"RTWName":"<S4294967295>/Subtract2","SIDString":"px42LoopCtrQGC20220313:2363"},{"RTWName":"<S4294967295>/Subtract3","SIDString":"px42LoopCtrQGC20220313:2364"},{"RTWName":"<S4294967295>/Subtract4","SIDString":"px42LoopCtrQGC20220313:2365"},{"RTWName":"<S4294967295>/Switch","SIDString":"px42LoopCtrQGC20220313:2366"},{"RTWName":"<S4294967295>/Zero-Order\nHold1","SIDString":"px42LoopCtrQGC20220313:2367"},{"RTWName":"<S4294967295>/Zero-Order\nHold2","SIDString":"px42LoopCtrQGC20220313:2368"},{"RTWName":"<S4294967295>/Zero-Order\nHold5","SIDString":"px42LoopCtrQGC20220313:2369"},{"RTWName":"<S4294967295>/Zero-Order\nHold6","SIDString":"px42LoopCtrQGC20220313:2370"},{"RTWName":"<S4294967295>/gamma","SIDString":"px42LoopCtrQGC20220313:2379"},{"RTWName":"<S4294967295>/kr+i","SIDString":"px42LoopCtrQGC20220313:2381"},{"RTWName":"<S4294967295>/lambda","SIDString":"px42LoopCtrQGC20220313:2380"},{"RTWName":"<S4294967295>/Out1","SIDString":"px42LoopCtrQGC20220313:2375"},{"RTWName":"<S4294967295>/In1","SIDString":"px42LoopCtrQGC20220313:2394"},{"RTWName":"<S4294967295>/In2","SIDString":"px42LoopCtrQGC20220313:2395"},{"RTWName":"<S4294967295>/Constant","SIDString":"px42LoopCtrQGC20220313:2396"},{"RTWName":"<S4294967295>/Constant1","SIDString":"px42LoopCtrQGC20220313:2397"},{"RTWName":"<S4294967295>/Data Store\nRead","SIDString":"px42LoopCtrQGC20220313:2398"},{"RTWName":"<S4294967295>/Data Store\nRead1","SIDString":"px42LoopCtrQGC20220313:2399"},{"RTWName":"<S4294967295>/Demux","SIDString":"px42LoopCtrQGC20220313:2400"},{"RTWName":"<S4294967295>/Discrete Derivative","SIDString":"px42LoopCtrQGC20220313:2401"},{"RTWName":"<S4294967295>/Discrete Derivative1","SIDString":"px42LoopCtrQGC20220313:2402"},{"RTWName":"<S4294967295>/Discrete-Time\nIntegrator","SIDString":"px42LoopCtrQGC20220313:2403"},{"RTWName":"<S4294967295>/Lambda","SIDString":"px42LoopCtrQGC20220313:2404"},{"RTWName":"<S4294967295>/Mux","SIDString":"px42LoopCtrQGC20220313:2405"},{"RTWName":"<S4294967295>/Product","SIDString":"px42LoopCtrQGC20220313:2406"},{"RTWName":"<S4294967295>/Saturation","SIDString":"px42LoopCtrQGC20220313:2407"},{"RTWName":"<S4294967295>/Subtract","SIDString":"px42LoopCtrQGC20220313:2408"},{"RTWName":"<S4294967295>/Subtract1","SIDString":"px42LoopCtrQGC20220313:2409"},{"RTWName":"<S4294967295>/Subtract2","SIDString":"px42LoopCtrQGC20220313:2410"},{"RTWName":"<S4294967295>/Subtract3","SIDString":"px42LoopCtrQGC20220313:2411"},{"RTWName":"<S4294967295>/Subtract4","SIDString":"px42LoopCtrQGC20220313:2412"},{"RTWName":"<S4294967295>/Switch","SIDString":"px42LoopCtrQGC20220313:2413"},{"RTWName":"<S4294967295>/Zero-Order\nHold1","SIDString":"px42LoopCtrQGC20220313:2414"},{"RTWName":"<S4294967295>/Zero-Order\nHold2","SIDString":"px42LoopCtrQGC20220313:2415"},{"RTWName":"<S4294967295>/Zero-Order\nHold5","SIDString":"px42LoopCtrQGC20220313:2416"},{"RTWName":"<S4294967295>/Zero-Order\nHold6","SIDString":"px42LoopCtrQGC20220313:2417"},{"RTWName":"<S4294967295>/gamma","SIDString":"px42LoopCtrQGC20220313:2418"},{"RTWName":"<S4294967295>/kr+I3","SIDString":"px42LoopCtrQGC20220313:2419"},{"RTWName":"<S4294967295>/lambda","SIDString":"px42LoopCtrQGC20220313:2420"},{"RTWName":"<S4294967295>/Out1","SIDString":"px42LoopCtrQGC20220313:2421"},{"RTWName":"<S11>/roll","SIDString":"px42LoopCtrQGC20220313:2607"},{"RTWName":"<S11>/roll_des","SIDString":"px42LoopCtrQGC20220313:2608"},{"RTWName":"<S11>/Add","SIDString":"px42LoopCtrQGC20220313:2609"},{"RTWName":"<S11>/Add1","SIDString":"px42LoopCtrQGC20220313:2610"},{"RTWName":"<S11>/Add2","SIDString":"px42LoopCtrQGC20220313:2611"},{"RTWName":"<S11>/Constant1","SIDString":"px42LoopCtrQGC20220313:2612"},{"RTWName":"<S11>/Data Store\nRead","SIDString":"px42LoopCtrQGC20220313:2613"},{"RTWName":"<S11>/Data Store\nRead1","SIDString":"px42LoopCtrQGC20220313:2614"},{"RTWName":"<S11>/Data Store\nWrite","SIDString":"px42LoopCtrQGC20220313:2615"},{"RTWName":"<S11>/Demux","SIDString":"px42LoopCtrQGC20220313:2616"},{"RTWName":"<S25>/U","SIDString":"px42LoopCtrQGC20220313:2617:1"},{"RTWName":"<S25>/Data Type\nDuplicate","SIDString":"px42LoopCtrQGC20220313:2617:2"},{"RTWName":"<S25>/Diff","SIDString":"px42LoopCtrQGC20220313:2617:3"},{"RTWName":"<S25>/TSamp","SIDString":"px42LoopCtrQGC20220313:2617:4"},{"RTWName":"<S25>/UD","SIDString":"px42LoopCtrQGC20220313:2617:5"},{"RTWName":"<S25>/Y","SIDString":"px42LoopCtrQGC20220313:2617:6"},{"RTWName":"<S11>/Gain","SIDString":"px42LoopCtrQGC20220313:2618"},{"RTWName":"<S11>/J","SIDString":"px42LoopCtrQGC20220313:3111"},{"RTWName":"<S11>/Mux","SIDString":"px42LoopCtrQGC20220313:2620"},{"RTWName":"<S11>/Product","SIDString":"px42LoopCtrQGC20220313:2621"},{"RTWName":"<S11>/Product1","SIDString":"px42LoopCtrQGC20220313:2622"},{"RTWName":"<S11>/Sign","SIDString":"px42LoopCtrQGC20220313:2623"},{"RTWName":"<S11>/Slider","SIDString":"px42LoopCtrQGC20220313:2624"},{"RTWName":"<S11>/Slider1","SIDString":"px42LoopCtrQGC20220313:2625"},{"RTWName":"<S11>/Slider2","SIDString":"px42LoopCtrQGC20220313:2626"},{"RTWName":"<S11>/Slider3","SIDString":"px42LoopCtrQGC20220313:2627"},{"RTWName":"<S11>/Slider4","SIDString":"px42LoopCtrQGC20220313:2628"},{"RTWName":"<S26>/roll","SIDString":"px42LoopCtrQGC20220313:2630"},{"RTWName":"<S26>/roll_des","SIDString":"px42LoopCtrQGC20220313:2631"},{"RTWName":"<S26>/b","SIDString":"px42LoopCtrQGC20220313:2632"},{"RTWName":"<S26>/Add","SIDString":"px42LoopCtrQGC20220313:2633"},{"RTWName":"<S26>/Gain4","SIDString":"px42LoopCtrQGC20220313:2634"},{"RTWName":"<S26>/Product","SIDString":"px42LoopCtrQGC20220313:2635"},{"RTWName":"<S27>/Abs","SIDString":"px42LoopCtrQGC20220313:2637"},{"RTWName":"<S27>/Add","SIDString":"px42LoopCtrQGC20220313:2638"},{"RTWName":"<S27>/Add1","SIDString":"px42LoopCtrQGC20220313:2639"},{"RTWName":"<S28>/u","SIDString":"px42LoopCtrQGC20220313:2640:1"},{"RTWName":"<S28>/Compare","SIDString":"px42LoopCtrQGC20220313:2640:2"},{"RTWName":"<S28>/Constant","SIDString":"px42LoopCtrQGC20220313:2640:3"},{"RTWName":"<S28>/y","SIDString":"px42LoopCtrQGC20220313:2640:4"},{"RTWName":"<S27>/Data Store\nMemory","SIDString":"px42LoopCtrQGC20220313:2641"},{"RTWName":"<S27>/Data Store\nRead","SIDString":"px42LoopCtrQGC20220313:2642"},{"RTWName":"<S27>/Data Store\nRead1","SIDString":"px42LoopCtrQGC20220313:2643"},{"RTWName":"<S27>/Data Store\nRead3","SIDString":"px42LoopCtrQGC20220313:2644"},{"RTWName":"<S27>/Data Store\nRead4","SIDString":"px42LoopCtrQGC20220313:2645"},{"RTWName":"<S27>/Display","SIDString":"px42LoopCtrQGC20220313:2646"},{"RTWName":"<S27>/Fcn","SIDString":"px42LoopCtrQGC20220313:2647"},{"RTWName":"<S29>:1","SIDString":"px42LoopCtrQGC20220313:2648:1"},{"RTWName":"<S27>/Mux1","SIDString":"px42LoopCtrQGC20220313:2649"},{"RTWName":"<S27>/Scope","SIDString":"px42LoopCtrQGC20220313:2650"},{"RTWName":"<S27>/T","SIDString":"px42LoopCtrQGC20220313:2651"},{"RTWName":"<S27>/ch","SIDString":"px42LoopCtrQGC20220313:2652"},{"RTWName":"<S27>/r","SIDString":"px42LoopCtrQGC20220313:2653"},{"RTWName":"<S30>/Abs1","SIDString":"px42LoopCtrQGC20220313:2655"},{"RTWName":"<S30>/Abs2","SIDString":"px42LoopCtrQGC20220313:2656"},{"RTWName":"<S30>/Add","SIDString":"px42LoopCtrQGC20220313:2657"},{"RTWName":"<S30>/Add2","SIDString":"px42LoopCtrQGC20220313:2658"},{"RTWName":"<S31>/u","SIDString":"px42LoopCtrQGC20220313:2659:1"},{"RTWName":"<S31>/Compare","SIDString":"px42LoopCtrQGC20220313:2659:2"},{"RTWName":"<S31>/Constant","SIDString":"px42LoopCtrQGC20220313:2659:3"},{"RTWName":"<S31>/y","SIDString":"px42LoopCtrQGC20220313:2659:4"},{"RTWName":"<S32>/u","SIDString":"px42LoopCtrQGC20220313:2660:1"},{"RTWName":"<S32>/Compare","SIDString":"px42LoopCtrQGC20220313:2660:2"},{"RTWName":"<S32>/Constant","SIDString":"px42LoopCtrQGC20220313:2660:3"},{"RTWName":"<S32>/y","SIDString":"px42LoopCtrQGC20220313:2660:4"},{"RTWName":"<S4294967295>/u","SIDString":"px42LoopCtrQGC20220313:2661:1"},{"RTWName":"<S4294967295>/Compare","SIDString":"px42LoopCtrQGC20220313:2661:2"},{"RTWName":"<S4294967295>/Constant","SIDString":"px42LoopCtrQGC20220313:2661:3"},{"RTWName":"<S4294967295>/y","SIDString":"px42LoopCtrQGC20220313:2661:4"},{"RTWName":"<S4294967295>/u","SIDString":"px42LoopCtrQGC20220313:2662:1"},{"RTWName":"<S4294967295>/Compare","SIDString":"px42LoopCtrQGC20220313:2662:2"},{"RTWName":"<S4294967295>/Constant","SIDString":"px42LoopCtrQGC20220313:2662:3"},{"RTWName":"<S4294967295>/y","SIDString":"px42LoopCtrQGC20220313:2662:4"},{"RTWName":"<S30>/Data Store\nRead","SIDString":"px42LoopCtrQGC20220313:2663"},{"RTWName":"<S30>/Data Store\nRead2","SIDString":"px42LoopCtrQGC20220313:2664"},{"RTWName":"<S30>/Data Store\nRead3","SIDString":"px42LoopCtrQGC20220313:2665"},{"RTWName":"<S30>/Data Store\nRead5","SIDString":"px42LoopCtrQGC20220313:2666"},{"RTWName":"<S30>/Data Store\nRead6","SIDString":"px42LoopCtrQGC20220313:2667"},{"RTWName":"<S30>/Data Store\nRead7","SIDString":"px42LoopCtrQGC20220313:2668"},{"RTWName":"<S30>/Logical\nOperator","SIDString":"px42LoopCtrQGC20220313:2669"},{"RTWName":"<S30>/Logical\nOperator1","SIDString":"px42LoopCtrQGC20220313:2670"},{"RTWName":"<S33>/Trigger","SIDString":"px42LoopCtrQGC20220313:2672"},{"RTWName":"<S33>/Data Store\nRead2","SIDString":"px42LoopCtrQGC20220313:2673"},{"RTWName":"<S33>/Data Store\nWrite","SIDString":"px42LoopCtrQGC20220313:2674"},{"RTWName":"<S4294967295>/Trigger","SIDString":"px42LoopCtrQGC20220313:2676"},{"RTWName":"<S4294967295>/Data Store\nRead2","SIDString":"px42LoopCtrQGC20220313:2677"},{"RTWName":"<S4294967295>/Data Store\nWrite","SIDString":"px42LoopCtrQGC20220313:2678"},{"RTWName":"<S27>/t","SIDString":"px42LoopCtrQGC20220313:2679"},{"RTWName":"<S27>/H","SIDString":"px42LoopCtrQGC20220313:2680"},{"RTWName":"<S26>/v*","SIDString":"px42LoopCtrQGC20220313:2681"},{"RTWName":"<S26>/H","SIDString":"px42LoopCtrQGC20220313:2682"},{"RTWName":"<S11>/Switch","SIDString":"px42LoopCtrQGC20220313:2683"},{"RTWName":"<S11>/b","SIDString":"px42LoopCtrQGC20220313:2684"},{"RTWName":"<S11>/l","SIDString":"px42LoopCtrQGC20220313:2685"},{"RTWName":"<S11>/u2","SIDString":"px42LoopCtrQGC20220313:2686"},{"RTWName":"<S12>/yaw","SIDString":"px42LoopCtrQGC20220313:2690"},{"RTWName":"<S12>/yaw_des","SIDString":"px42LoopCtrQGC20220313:2691"},{"RTWName":"<S12>/Add","SIDString":"px42LoopCtrQGC20220313:2692"},{"RTWName":"<S12>/Add1","SIDString":"px42LoopCtrQGC20220313:2693"},{"RTWName":"<S12>/Add2","SIDString":"px42LoopCtrQGC20220313:2694"},{"RTWName":"<S12>/Constant1","SIDString":"px42LoopCtrQGC20220313:2695"},{"RTWName":"<S12>/Data Store\nRead","SIDString":"px42LoopCtrQGC20220313:2696"},{"RTWName":"<S12>/Data Store\nRead1","SIDString":"px42LoopCtrQGC20220313:2697"},{"RTWName":"<S12>/Data Store\nWrite","SIDString":"px42LoopCtrQGC20220313:2698"},{"RTWName":"<S12>/Demux","SIDString":"px42LoopCtrQGC20220313:2699"},{"RTWName":"<S34>/U","SIDString":"px42LoopCtrQGC20220313:2700:1"},{"RTWName":"<S34>/Data Type\nDuplicate","SIDString":"px42LoopCtrQGC20220313:2700:2"},{"RTWName":"<S34>/Diff","SIDString":"px42LoopCtrQGC20220313:2700:3"},{"RTWName":"<S34>/TSamp","SIDString":"px42LoopCtrQGC20220313:2700:4"},{"RTWName":"<S34>/UD","SIDString":"px42LoopCtrQGC20220313:2700:5"},{"RTWName":"<S34>/Y","SIDString":"px42LoopCtrQGC20220313:2700:6"},{"RTWName":"<S12>/Gain","SIDString":"px42LoopCtrQGC20220313:2701"},{"RTWName":"<S12>/Gain1","SIDString":"px42LoopCtrQGC20220313:2702"},{"RTWName":"<S12>/Mux","SIDString":"px42LoopCtrQGC20220313:2703"},{"RTWName":"<S12>/Product","SIDString":"px42LoopCtrQGC20220313:2704"},{"RTWName":"<S12>/Product1","SIDString":"px42LoopCtrQGC20220313:2705"},{"RTWName":"<S12>/Sign","SIDString":"px42LoopCtrQGC20220313:2706"},{"RTWName":"<S12>/Slider","SIDString":"px42LoopCtrQGC20220313:2707"},{"RTWName":"<S12>/Slider1","SIDString":"px42LoopCtrQGC20220313:2708"},{"RTWName":"<S12>/Slider2","SIDString":"px42LoopCtrQGC20220313:2709"},{"RTWName":"<S12>/Slider3","SIDString":"px42LoopCtrQGC20220313:2710"},{"RTWName":"<S12>/Slider4","SIDString":"px42LoopCtrQGC20220313:2711"},{"RTWName":"<S35>/pitch","SIDString":"px42LoopCtrQGC20220313:2713"},{"RTWName":"<S35>/pitch_des","SIDString":"px42LoopCtrQGC20220313:2714"},{"RTWName":"<S35>/b","SIDString":"px42LoopCtrQGC20220313:2715"},{"RTWName":"<S35>/Add","SIDString":"px42LoopCtrQGC20220313:2716"},{"RTWName":"<S35>/Gain4","SIDString":"px42LoopCtrQGC20220313:2717"},{"RTWName":"<S35>/Product","SIDString":"px42LoopCtrQGC20220313:2718"},{"RTWName":"<S36>/Abs","SIDString":"px42LoopCtrQGC20220313:2720"},{"RTWName":"<S36>/Add","SIDString":"px42LoopCtrQGC20220313:2721"},{"RTWName":"<S36>/Add1","SIDString":"px42LoopCtrQGC20220313:2722"},{"RTWName":"<S37>/u","SIDString":"px42LoopCtrQGC20220313:2723:1"},{"RTWName":"<S37>/Compare","SIDString":"px42LoopCtrQGC20220313:2723:2"},{"RTWName":"<S37>/Constant","SIDString":"px42LoopCtrQGC20220313:2723:3"},{"RTWName":"<S37>/y","SIDString":"px42LoopCtrQGC20220313:2723:4"},{"RTWName":"<S36>/Data Store\nMemory","SIDString":"px42LoopCtrQGC20220313:2724"},{"RTWName":"<S36>/Data Store\nRead","SIDString":"px42LoopCtrQGC20220313:2725"},{"RTWName":"<S36>/Data Store\nRead1","SIDString":"px42LoopCtrQGC20220313:2726"},{"RTWName":"<S36>/Data Store\nRead3","SIDString":"px42LoopCtrQGC20220313:2727"},{"RTWName":"<S36>/Data Store\nRead4","SIDString":"px42LoopCtrQGC20220313:2728"},{"RTWName":"<S36>/Display","SIDString":"px42LoopCtrQGC20220313:2729"},{"RTWName":"<S36>/Fcn","SIDString":"px42LoopCtrQGC20220313:2730"},{"RTWName":"<S38>:1","SIDString":"px42LoopCtrQGC20220313:2731:1"},{"RTWName":"<S36>/Mux1","SIDString":"px42LoopCtrQGC20220313:2732"},{"RTWName":"<S36>/Scope","SIDString":"px42LoopCtrQGC20220313:2733"},{"RTWName":"<S36>/T","SIDString":"px42LoopCtrQGC20220313:2734"},{"RTWName":"<S36>/ch","SIDString":"px42LoopCtrQGC20220313:2735"},{"RTWName":"<S36>/r","SIDString":"px42LoopCtrQGC20220313:2736"},{"RTWName":"<S39>/Abs1","SIDString":"px42LoopCtrQGC20220313:2738"},{"RTWName":"<S39>/Abs2","SIDString":"px42LoopCtrQGC20220313:2739"},{"RTWName":"<S39>/Add","SIDString":"px42LoopCtrQGC20220313:2740"},{"RTWName":"<S39>/Add2","SIDString":"px42LoopCtrQGC20220313:2741"},{"RTWName":"<S40>/u","SIDString":"px42LoopCtrQGC20220313:2742:1"},{"RTWName":"<S40>/Compare","SIDString":"px42LoopCtrQGC20220313:2742:2"},{"RTWName":"<S40>/Constant","SIDString":"px42LoopCtrQGC20220313:2742:3"},{"RTWName":"<S40>/y","SIDString":"px42LoopCtrQGC20220313:2742:4"},{"RTWName":"<S41>/u","SIDString":"px42LoopCtrQGC20220313:2743:1"},{"RTWName":"<S41>/Compare","SIDString":"px42LoopCtrQGC20220313:2743:2"},{"RTWName":"<S41>/Constant","SIDString":"px42LoopCtrQGC20220313:2743:3"},{"RTWName":"<S41>/y","SIDString":"px42LoopCtrQGC20220313:2743:4"},{"RTWName":"<S4294967295>/u","SIDString":"px42LoopCtrQGC20220313:2744:1"},{"RTWName":"<S4294967295>/Compare","SIDString":"px42LoopCtrQGC20220313:2744:2"},{"RTWName":"<S4294967295>/Constant","SIDString":"px42LoopCtrQGC20220313:2744:3"},{"RTWName":"<S4294967295>/y","SIDString":"px42LoopCtrQGC20220313:2744:4"},{"RTWName":"<S4294967295>/u","SIDString":"px42LoopCtrQGC20220313:2745:1"},{"RTWName":"<S4294967295>/Compare","SIDString":"px42LoopCtrQGC20220313:2745:2"},{"RTWName":"<S4294967295>/Constant","SIDString":"px42LoopCtrQGC20220313:2745:3"},{"RTWName":"<S4294967295>/y","SIDString":"px42LoopCtrQGC20220313:2745:4"},{"RTWName":"<S39>/Data Store\nRead","SIDString":"px42LoopCtrQGC20220313:2746"},{"RTWName":"<S39>/Data Store\nRead2","SIDString":"px42LoopCtrQGC20220313:2747"},{"RTWName":"<S39>/Data Store\nRead3","SIDString":"px42LoopCtrQGC20220313:2748"},{"RTWName":"<S39>/Data Store\nRead5","SIDString":"px42LoopCtrQGC20220313:2749"},{"RTWName":"<S39>/Data Store\nRead6","SIDString":"px42LoopCtrQGC20220313:2750"},{"RTWName":"<S39>/Data Store\nRead7","SIDString":"px42LoopCtrQGC20220313:2751"},{"RTWName":"<S39>/Logical\nOperator","SIDString":"px42LoopCtrQGC20220313:2752"},{"RTWName":"<S39>/Logical\nOperator1","SIDString":"px42LoopCtrQGC20220313:2753"},{"RTWName":"<S42>/Trigger","SIDString":"px42LoopCtrQGC20220313:2755"},{"RTWName":"<S42>/Data Store\nRead2","SIDString":"px42LoopCtrQGC20220313:2756"},{"RTWName":"<S42>/Data Store\nWrite","SIDString":"px42LoopCtrQGC20220313:2757"},{"RTWName":"<S4294967295>/Trigger","SIDString":"px42LoopCtrQGC20220313:2759"},{"RTWName":"<S4294967295>/Data Store\nRead2","SIDString":"px42LoopCtrQGC20220313:2760"},{"RTWName":"<S4294967295>/Data Store\nWrite","SIDString":"px42LoopCtrQGC20220313:2761"},{"RTWName":"<S36>/t","SIDString":"px42LoopCtrQGC20220313:2762"},{"RTWName":"<S36>/H","SIDString":"px42LoopCtrQGC20220313:2763"},{"RTWName":"<S35>/v*","SIDString":"px42LoopCtrQGC20220313:2764"},{"RTWName":"<S35>/H","SIDString":"px42LoopCtrQGC20220313:2765"},{"RTWName":"<S12>/Switch","SIDString":"px42LoopCtrQGC20220313:2766"},{"RTWName":"<S12>/b","SIDString":"px42LoopCtrQGC20220313:2767"},{"RTWName":"<S12>/l","SIDString":"px42LoopCtrQGC20220313:2768"},{"RTWName":"<S12>/u2","SIDString":"px42LoopCtrQGC20220313:2769"},{"RTWName":"<S1>/e_pitch","SIDString":"px42LoopCtrQGC20220313:2430"},{"RTWName":"<S1>/e_pitch1","SIDString":"px42LoopCtrQGC20220313:2688"},{"RTWName":"<S1>/e_pitch2","SIDString":"px42LoopCtrQGC20220313:2770"},{"RTWName":"<S13>/u2","SIDString":"px42LoopCtrQGC20220313:3687"},{"RTWName":"<S13>/1/J","SIDString":"px42LoopCtrQGC20220313:3688"},{"RTWName":"<S13>/Abs3","SIDString":"px42LoopCtrQGC20220313:3591"},{"RTWName":"<S13>/Abs4","SIDString":"px42LoopCtrQGC20220313:3592"},{"RTWName":"<S13>/Abs5","SIDString":"px42LoopCtrQGC20220313:3593"},{"RTWName":"<S13>/Abs6","SIDString":"px42LoopCtrQGC20220313:3594"},{"RTWName":"<S13>/Add","SIDString":"px42LoopCtrQGC20220313:3595"},{"RTWName":"<S13>/Add1","SIDString":"px42LoopCtrQGC20220313:3596"},{"RTWName":"<S13>/Add10","SIDString":"px42LoopCtrQGC20220313:3597"},{"RTWName":"<S13>/Add11","SIDString":"px42LoopCtrQGC20220313:3598"},{"RTWName":"<S13>/Add12","SIDString":"px42LoopCtrQGC20220313:3599"},{"RTWName":"<S13>/Add13","SIDString":"px42LoopCtrQGC20220313:3600"},{"RTWName":"<S13>/Add14","SIDString":"px42LoopCtrQGC20220313:3601"},{"RTWName":"<S13>/Add15","SIDString":"px42LoopCtrQGC20220313:3602"},{"RTWName":"<S13>/Add16","SIDString":"px42LoopCtrQGC20220313:3603"},{"RTWName":"<S13>/Add17","SIDString":"px42LoopCtrQGC20220313:3604"},{"RTWName":"<S13>/Add18","SIDString":"px42LoopCtrQGC20220313:3605"},{"RTWName":"<S13>/Add19","SIDString":"px42LoopCtrQGC20220313:3606"},{"RTWName":"<S13>/Add2","SIDString":"px42LoopCtrQGC20220313:3607"},{"RTWName":"<S13>/Add20","SIDString":"px42LoopCtrQGC20220313:3608"},{"RTWName":"<S13>/Add21","SIDString":"px42LoopCtrQGC20220313:3609"},{"RTWName":"<S13>/Add22","SIDString":"px42LoopCtrQGC20220313:3610"},{"RTWName":"<S13>/Add23","SIDString":"px42LoopCtrQGC20220313:3611"},{"RTWName":"<S13>/Add24","SIDString":"px42LoopCtrQGC20220313:3612"},{"RTWName":"<S13>/Add25","SIDString":"px42LoopCtrQGC20220313:3613"},{"RTWName":"<S13>/Add3","SIDString":"px42LoopCtrQGC20220313:3614"},{"RTWName":"<S13>/Add5","SIDString":"px42LoopCtrQGC20220313:3615"},{"RTWName":"<S13>/Add6","SIDString":"px42LoopCtrQGC20220313:3616"},{"RTWName":"<S13>/Add7","SIDString":"px42LoopCtrQGC20220313:3617"},{"RTWName":"<S13>/Add8","SIDString":"px42LoopCtrQGC20220313:3618"},{"RTWName":"<S13>/Add9","SIDString":"px42LoopCtrQGC20220313:3619"},{"RTWName":"<S13>/Constant1","SIDString":"px42LoopCtrQGC20220313:3620"},{"RTWName":"<S13>/Constant2","SIDString":"px42LoopCtrQGC20220313:3621"},{"RTWName":"<S13>/Constant3","SIDString":"px42LoopCtrQGC20220313:3689"},{"RTWName":"<S13>/Constant4","SIDString":"px42LoopCtrQGC20220313:3623"},{"RTWName":"<S13>/Constant6","SIDString":"px42LoopCtrQGC20220313:3624"},{"RTWName":"<S13>/Constant8","SIDString":"px42LoopCtrQGC20220313:3625"},{"RTWName":"<S13>/Data Store\nRead","SIDString":"px42LoopCtrQGC20220313:3690"},{"RTWName":"<S13>/Data Store\nRead1","SIDString":"px42LoopCtrQGC20220313:3691"},{"RTWName":"<S13>/Data Store\nRead2","SIDString":"px42LoopCtrQGC20220313:3692"},{"RTWName":"<S13>/Demux","SIDString":"px42LoopCtrQGC20220313:3629"},{"RTWName":"<S13>/Discrete-Time\nIntegrator","SIDString":"px42LoopCtrQGC20220313:3630"},{"RTWName":"<S13>/Discrete-Time\nIntegrator1","SIDString":"px42LoopCtrQGC20220313:3631"},{"RTWName":"<S13>/Discrete-Time\nIntegrator3","SIDString":"px42LoopCtrQGC20220313:3632"},{"RTWName":"<S13>/Fcn10","SIDString":"px42LoopCtrQGC20220313:3633"},{"RTWName":"<S13>/Fcn3","SIDString":"px42LoopCtrQGC20220313:3634"},{"RTWName":"<S13>/Fcn4","SIDString":"px42LoopCtrQGC20220313:3635"},{"RTWName":"<S13>/Fcn5","SIDString":"px42LoopCtrQGC20220313:3636"},{"RTWName":"<S13>/Fcn6","SIDString":"px42LoopCtrQGC20220313:3637"},{"RTWName":"<S13>/Fcn7","SIDString":"px42LoopCtrQGC20220313:3638"},{"RTWName":"<S13>/Fcn8","SIDString":"px42LoopCtrQGC20220313:3639"},{"RTWName":"<S13>/Fcn9","SIDString":"px42LoopCtrQGC20220313:3640"},{"RTWName":"<S13>/Gain","SIDString":"px42LoopCtrQGC20220313:3641"},{"RTWName":"<S13>/Gain1","SIDString":"px42LoopCtrQGC20220313:3642"},{"RTWName":"<S13>/Gain2","SIDString":"px42LoopCtrQGC20220313:3643"},{"RTWName":"<S13>/Gain3","SIDString":"px42LoopCtrQGC20220313:3644"},{"RTWName":"<S13>/Gain4","SIDString":"px42LoopCtrQGC20220313:3645"},{"RTWName":"<S13>/Gain5","SIDString":"px42LoopCtrQGC20220313:3646"},{"RTWName":"<S13>/Gain6","SIDString":"px42LoopCtrQGC20220313:3647"},{"RTWName":"<S13>/Gain7","SIDString":"px42LoopCtrQGC20220313:3648"},{"RTWName":"<S13>/Gain8","SIDString":"px42LoopCtrQGC20220313:3649"},{"RTWName":"<S13>/Mux","SIDString":"px42LoopCtrQGC20220313:3693"},{"RTWName":"<S13>/Product10","SIDString":"px42LoopCtrQGC20220313:3651"},{"RTWName":"<S13>/Product3","SIDString":"px42LoopCtrQGC20220313:3652"},{"RTWName":"<S13>/Product4","SIDString":"px42LoopCtrQGC20220313:3653"},{"RTWName":"<S13>/Product5","SIDString":"px42LoopCtrQGC20220313:3654"},{"RTWName":"<S13>/Product6","SIDString":"px42LoopCtrQGC20220313:3655"},{"RTWName":"<S13>/Product7","SIDString":"px42LoopCtrQGC20220313:3656"},{"RTWName":"<S13>/Product8","SIDString":"px42LoopCtrQGC20220313:3657"},{"RTWName":"<S13>/Product9","SIDString":"px42LoopCtrQGC20220313:3658"},{"RTWName":"<S13>/Saturation","SIDString":"px42LoopCtrQGC20220313:3659"},{"RTWName":"<S13>/Saturation1","SIDString":"px42LoopCtrQGC20220313:3660"},{"RTWName":"<S13>/Saturation10","SIDString":"px42LoopCtrQGC20220313:3661"},{"RTWName":"<S13>/Saturation11","SIDString":"px42LoopCtrQGC20220313:3662"},{"RTWName":"<S13>/Saturation12","SIDString":"px42LoopCtrQGC20220313:3663"},{"RTWName":"<S13>/Saturation13","SIDString":"px42LoopCtrQGC20220313:3664"},{"RTWName":"<S13>/Saturation14","SIDString":"px42LoopCtrQGC20220313:3665"},{"RTWName":"<S13>/Saturation15","SIDString":"px42LoopCtrQGC20220313:3666"},{"RTWName":"<S13>/Saturation16","SIDString":"px42LoopCtrQGC20220313:3667"},{"RTWName":"<S13>/Saturation17","SIDString":"px42LoopCtrQGC20220313:3668"},{"RTWName":"<S13>/Saturation18","SIDString":"px42LoopCtrQGC20220313:3669"},{"RTWName":"<S13>/Saturation19","SIDString":"px42LoopCtrQGC20220313:3670"},{"RTWName":"<S13>/Saturation3","SIDString":"px42LoopCtrQGC20220313:3671"},{"RTWName":"<S13>/Saturation8","SIDString":"px42LoopCtrQGC20220313:3672"},{"RTWName":"<S13>/Saturation9","SIDString":"px42LoopCtrQGC20220313:3673"},{"RTWName":"<S13>/Scope","SIDString":"px42LoopCtrQGC20220313:3674"},{"RTWName":"<S13>/Switch","SIDString":"px42LoopCtrQGC20220313:3694"},{"RTWName":"<S13>/Zero-Order\nHold1","SIDString":"px42LoopCtrQGC20220313:3695"},{"RTWName":"<S13>/Zero-Order\nHold2","SIDString":"px42LoopCtrQGC20220313:3696"},{"RTWName":"<S13>/Zero-Order\nHold3","SIDString":"px42LoopCtrQGC20220313:3697"},{"RTWName":"<S13>/k/J","SIDString":"px42LoopCtrQGC20220313:3698"},{"RTWName":"<S13>/l1","SIDString":"px42LoopCtrQGC20220313:3680"},{"RTWName":"<S13>/l2","SIDString":"px42LoopCtrQGC20220313:3681"},{"RTWName":"<S13>/l4","SIDString":"px42LoopCtrQGC20220313:3682"},{"RTWName":"<S13>/lambda1","SIDString":"px42LoopCtrQGC20220313:3683"},{"RTWName":"<S13>/lambda2","SIDString":"px42LoopCtrQGC20220313:3684"},{"RTWName":"<S13>/lambda4","SIDString":"px42LoopCtrQGC20220313:3685"},{"RTWName":"<S13>/Out1","SIDString":"px42LoopCtrQGC20220313:3686"},{"RTWName":"<S4294967295>/u2","SIDString":"px42LoopCtrQGC20220313:3126"},{"RTWName":"<S4294967295>/1/J","SIDString":"px42LoopCtrQGC20220313:3127"},{"RTWName":"<S4294967295>/Abs3","SIDString":"px42LoopCtrQGC20220313:3128"},{"RTWName":"<S4294967295>/Abs4","SIDString":"px42LoopCtrQGC20220313:3129"},{"RTWName":"<S4294967295>/Abs5","SIDString":"px42LoopCtrQGC20220313:3130"},{"RTWName":"<S4294967295>/Abs6","SIDString":"px42LoopCtrQGC20220313:3131"},{"RTWName":"<S4294967295>/Add","SIDString":"px42LoopCtrQGC20220313:3132"},{"RTWName":"<S4294967295>/Add1","SIDString":"px42LoopCtrQGC20220313:3133"},{"RTWName":"<S4294967295>/Add10","SIDString":"px42LoopCtrQGC20220313:3134"},{"RTWName":"<S4294967295>/Add11","SIDString":"px42LoopCtrQGC20220313:3135"},{"RTWName":"<S4294967295>/Add12","SIDString":"px42LoopCtrQGC20220313:3136"},{"RTWName":"<S4294967295>/Add13","SIDString":"px42LoopCtrQGC20220313:3137"},{"RTWName":"<S4294967295>/Add14","SIDString":"px42LoopCtrQGC20220313:3138"},{"RTWName":"<S4294967295>/Add15","SIDString":"px42LoopCtrQGC20220313:3139"},{"RTWName":"<S4294967295>/Add16","SIDString":"px42LoopCtrQGC20220313:3140"},{"RTWName":"<S4294967295>/Add17","SIDString":"px42LoopCtrQGC20220313:3141"},{"RTWName":"<S4294967295>/Add18","SIDString":"px42LoopCtrQGC20220313:3142"},{"RTWName":"<S4294967295>/Add19","SIDString":"px42LoopCtrQGC20220313:3143"},{"RTWName":"<S4294967295>/Add2","SIDString":"px42LoopCtrQGC20220313:3144"},{"RTWName":"<S4294967295>/Add20","SIDString":"px42LoopCtrQGC20220313:3145"},{"RTWName":"<S4294967295>/Add21","SIDString":"px42LoopCtrQGC20220313:3146"},{"RTWName":"<S4294967295>/Add22","SIDString":"px42LoopCtrQGC20220313:3147"},{"RTWName":"<S4294967295>/Add23","SIDString":"px42LoopCtrQGC20220313:3148"},{"RTWName":"<S4294967295>/Add24","SIDString":"px42LoopCtrQGC20220313:3149"},{"RTWName":"<S4294967295>/Add25","SIDString":"px42LoopCtrQGC20220313:3150"},{"RTWName":"<S4294967295>/Add3","SIDString":"px42LoopCtrQGC20220313:3151"},{"RTWName":"<S4294967295>/Add4","SIDString":"px42LoopCtrQGC20220313:3152"},{"RTWName":"<S4294967295>/Add5","SIDString":"px42LoopCtrQGC20220313:3153"},{"RTWName":"<S4294967295>/Add6","SIDString":"px42LoopCtrQGC20220313:3154"},{"RTWName":"<S4294967295>/Add7","SIDString":"px42LoopCtrQGC20220313:3155"},{"RTWName":"<S4294967295>/Add8","SIDString":"px42LoopCtrQGC20220313:3156"},{"RTWName":"<S4294967295>/Add9","SIDString":"px42LoopCtrQGC20220313:3157"},{"RTWName":"<S4294967295>/Constant1","SIDString":"px42LoopCtrQGC20220313:3158"},{"RTWName":"<S4294967295>/Constant2","SIDString":"px42LoopCtrQGC20220313:3159"},{"RTWName":"<S4294967295>/Constant3","SIDString":"px42LoopCtrQGC20220313:3160"},{"RTWName":"<S4294967295>/Constant4","SIDString":"px42LoopCtrQGC20220313:3161"},{"RTWName":"<S4294967295>/Constant6","SIDString":"px42LoopCtrQGC20220313:3162"},{"RTWName":"<S4294967295>/Constant8","SIDString":"px42LoopCtrQGC20220313:3163"},{"RTWName":"<S4294967295>/Data Store\nRead","SIDString":"px42LoopCtrQGC20220313:3164"},{"RTWName":"<S4294967295>/Data Store\nRead1","SIDString":"px42LoopCtrQGC20220313:3165"},{"RTWName":"<S4294967295>/Data Store\nRead2","SIDString":"px42LoopCtrQGC20220313:3166"},{"RTWName":"<S4294967295>/Demux","SIDString":"px42LoopCtrQGC20220313:3167"},{"RTWName":"<S4294967295>/Discrete-Time\nIntegrator","SIDString":"px42LoopCtrQGC20220313:3168"},{"RTWName":"<S4294967295>/Discrete-Time\nIntegrator1","SIDString":"px42LoopCtrQGC20220313:3169"},{"RTWName":"<S4294967295>/Discrete-Time\nIntegrator2","SIDString":"px42LoopCtrQGC20220313:3170"},{"RTWName":"<S4294967295>/Discrete-Time\nIntegrator3","SIDString":"px42LoopCtrQGC20220313:3171"},{"RTWName":"<S4294967295>/Fcn10","SIDString":"px42LoopCtrQGC20220313:3172"},{"RTWName":"<S4294967295>/Fcn3","SIDString":"px42LoopCtrQGC20220313:3173"},{"RTWName":"<S4294967295>/Fcn4","SIDString":"px42LoopCtrQGC20220313:3174"},{"RTWName":"<S4294967295>/Fcn5","SIDString":"px42LoopCtrQGC20220313:3175"},{"RTWName":"<S4294967295>/Fcn6","SIDString":"px42LoopCtrQGC20220313:3176"},{"RTWName":"<S4294967295>/Fcn7","SIDString":"px42LoopCtrQGC20220313:3177"},{"RTWName":"<S4294967295>/Fcn8","SIDString":"px42LoopCtrQGC20220313:3178"},{"RTWName":"<S4294967295>/Fcn9","SIDString":"px42LoopCtrQGC20220313:3179"},{"RTWName":"<S4294967295>/Gain","SIDString":"px42LoopCtrQGC20220313:3180"},{"RTWName":"<S4294967295>/Gain1","SIDString":"px42LoopCtrQGC20220313:3181"},{"RTWName":"<S4294967295>/Gain2","SIDString":"px42LoopCtrQGC20220313:3182"},{"RTWName":"<S4294967295>/Gain3","SIDString":"px42LoopCtrQGC20220313:3183"},{"RTWName":"<S4294967295>/Gain4","SIDString":"px42LoopCtrQGC20220313:3184"},{"RTWName":"<S4294967295>/Gain5","SIDString":"px42LoopCtrQGC20220313:3185"},{"RTWName":"<S4294967295>/Gain6","SIDString":"px42LoopCtrQGC20220313:3186"},{"RTWName":"<S4294967295>/Gain7","SIDString":"px42LoopCtrQGC20220313:3187"},{"RTWName":"<S4294967295>/Gain8","SIDString":"px42LoopCtrQGC20220313:3188"},{"RTWName":"<S4294967295>/Mux","SIDString":"px42LoopCtrQGC20220313:3189"},{"RTWName":"<S4294967295>/Product10","SIDString":"px42LoopCtrQGC20220313:3190"},{"RTWName":"<S4294967295>/Product3","SIDString":"px42LoopCtrQGC20220313:3191"},{"RTWName":"<S4294967295>/Product4","SIDString":"px42LoopCtrQGC20220313:3192"},{"RTWName":"<S4294967295>/Product5","SIDString":"px42LoopCtrQGC20220313:3193"},{"RTWName":"<S4294967295>/Product6","SIDString":"px42LoopCtrQGC20220313:3194"},{"RTWName":"<S4294967295>/Product7","SIDString":"px42LoopCtrQGC20220313:3195"},{"RTWName":"<S4294967295>/Product8","SIDString":"px42LoopCtrQGC20220313:3196"},{"RTWName":"<S4294967295>/Product9","SIDString":"px42LoopCtrQGC20220313:3197"},{"RTWName":"<S4294967295>/Saturation","SIDString":"px42LoopCtrQGC20220313:3198"},{"RTWName":"<S4294967295>/Saturation1","SIDString":"px42LoopCtrQGC20220313:3199"},{"RTWName":"<S4294967295>/Saturation10","SIDString":"px42LoopCtrQGC20220313:3200"},{"RTWName":"<S4294967295>/Saturation11","SIDString":"px42LoopCtrQGC20220313:3201"},{"RTWName":"<S4294967295>/Saturation12","SIDString":"px42LoopCtrQGC20220313:3202"},{"RTWName":"<S4294967295>/Saturation13","SIDString":"px42LoopCtrQGC20220313:3203"},{"RTWName":"<S4294967295>/Saturation14","SIDString":"px42LoopCtrQGC20220313:3204"},{"RTWName":"<S4294967295>/Saturation15","SIDString":"px42LoopCtrQGC20220313:3205"},{"RTWName":"<S4294967295>/Saturation16","SIDString":"px42LoopCtrQGC20220313:3206"},{"RTWName":"<S4294967295>/Saturation17","SIDString":"px42LoopCtrQGC20220313:3207"},{"RTWName":"<S4294967295>/Saturation18","SIDString":"px42LoopCtrQGC20220313:3208"},{"RTWName":"<S4294967295>/Saturation19","SIDString":"px42LoopCtrQGC20220313:3209"},{"RTWName":"<S4294967295>/Saturation2","SIDString":"px42LoopCtrQGC20220313:3210"},{"RTWName":"<S4294967295>/Saturation3","SIDString":"px42LoopCtrQGC20220313:3211"},{"RTWName":"<S4294967295>/Saturation8","SIDString":"px42LoopCtrQGC20220313:3212"},{"RTWName":"<S4294967295>/Saturation9","SIDString":"px42LoopCtrQGC20220313:3213"},{"RTWName":"<S4294967295>/Scope","SIDString":"px42LoopCtrQGC20220313:3214"},{"RTWName":"<S4294967295>/Switch","SIDString":"px42LoopCtrQGC20220313:3215"},{"RTWName":"<S4294967295>/Zero-Order\nHold1","SIDString":"px42LoopCtrQGC20220313:3216"},{"RTWName":"<S4294967295>/Zero-Order\nHold2","SIDString":"px42LoopCtrQGC20220313:3217"},{"RTWName":"<S4294967295>/Zero-Order\nHold3","SIDString":"px42LoopCtrQGC20220313:3218"},{"RTWName":"<S4294967295>/k/J","SIDString":"px42LoopCtrQGC20220313:3219"},{"RTWName":"<S4294967295>/l1","SIDString":"px42LoopCtrQGC20220313:3220"},{"RTWName":"<S4294967295>/l2","SIDString":"px42LoopCtrQGC20220313:3221"},{"RTWName":"<S4294967295>/l3","SIDString":"px42LoopCtrQGC20220313:3222"},{"RTWName":"<S4294967295>/l4","SIDString":"px42LoopCtrQGC20220313:3223"},{"RTWName":"<S4294967295>/lambda1","SIDString":"px42LoopCtrQGC20220313:3224"},{"RTWName":"<S4294967295>/lambda2","SIDString":"px42LoopCtrQGC20220313:3225"},{"RTWName":"<S4294967295>/lambda3","SIDString":"px42LoopCtrQGC20220313:3226"},{"RTWName":"<S4294967295>/lambda4","SIDString":"px42LoopCtrQGC20220313:3227"},{"RTWName":"<S4294967295>/Out1","SIDString":"px42LoopCtrQGC20220313:3228"},{"RTWName":"<S14>/u2","SIDString":"px42LoopCtrQGC20220313:3576"},{"RTWName":"<S14>/1/J","SIDString":"px42LoopCtrQGC20220313:3577"},{"RTWName":"<S14>/Abs3","SIDString":"px42LoopCtrQGC20220313:3480"},{"RTWName":"<S14>/Abs4","SIDString":"px42LoopCtrQGC20220313:3481"},{"RTWName":"<S14>/Abs5","SIDString":"px42LoopCtrQGC20220313:3482"},{"RTWName":"<S14>/Abs6","SIDString":"px42LoopCtrQGC20220313:3483"},{"RTWName":"<S14>/Add","SIDString":"px42LoopCtrQGC20220313:3484"},{"RTWName":"<S14>/Add1","SIDString":"px42LoopCtrQGC20220313:3485"},{"RTWName":"<S14>/Add10","SIDString":"px42LoopCtrQGC20220313:3486"},{"RTWName":"<S14>/Add11","SIDString":"px42LoopCtrQGC20220313:3487"},{"RTWName":"<S14>/Add12","SIDString":"px42LoopCtrQGC20220313:3488"},{"RTWName":"<S14>/Add13","SIDString":"px42LoopCtrQGC20220313:3489"},{"RTWName":"<S14>/Add14","SIDString":"px42LoopCtrQGC20220313:3490"},{"RTWName":"<S14>/Add15","SIDString":"px42LoopCtrQGC20220313:3491"},{"RTWName":"<S14>/Add16","SIDString":"px42LoopCtrQGC20220313:3492"},{"RTWName":"<S14>/Add17","SIDString":"px42LoopCtrQGC20220313:3493"},{"RTWName":"<S14>/Add18","SIDString":"px42LoopCtrQGC20220313:3494"},{"RTWName":"<S14>/Add19","SIDString":"px42LoopCtrQGC20220313:3495"},{"RTWName":"<S14>/Add2","SIDString":"px42LoopCtrQGC20220313:3496"},{"RTWName":"<S14>/Add20","SIDString":"px42LoopCtrQGC20220313:3497"},{"RTWName":"<S14>/Add21","SIDString":"px42LoopCtrQGC20220313:3498"},{"RTWName":"<S14>/Add22","SIDString":"px42LoopCtrQGC20220313:3499"},{"RTWName":"<S14>/Add23","SIDString":"px42LoopCtrQGC20220313:3500"},{"RTWName":"<S14>/Add24","SIDString":"px42LoopCtrQGC20220313:3501"},{"RTWName":"<S14>/Add25","SIDString":"px42LoopCtrQGC20220313:3502"},{"RTWName":"<S14>/Add3","SIDString":"px42LoopCtrQGC20220313:3503"},{"RTWName":"<S14>/Add5","SIDString":"px42LoopCtrQGC20220313:3504"},{"RTWName":"<S14>/Add6","SIDString":"px42LoopCtrQGC20220313:3505"},{"RTWName":"<S14>/Add7","SIDString":"px42LoopCtrQGC20220313:3506"},{"RTWName":"<S14>/Add8","SIDString":"px42LoopCtrQGC20220313:3507"},{"RTWName":"<S14>/Add9","SIDString":"px42LoopCtrQGC20220313:3508"},{"RTWName":"<S14>/Constant1","SIDString":"px42LoopCtrQGC20220313:3509"},{"RTWName":"<S14>/Constant2","SIDString":"px42LoopCtrQGC20220313:3510"},{"RTWName":"<S14>/Constant3","SIDString":"px42LoopCtrQGC20220313:3578"},{"RTWName":"<S14>/Constant4","SIDString":"px42LoopCtrQGC20220313:3512"},{"RTWName":"<S14>/Constant6","SIDString":"px42LoopCtrQGC20220313:3513"},{"RTWName":"<S14>/Constant8","SIDString":"px42LoopCtrQGC20220313:3514"},{"RTWName":"<S14>/Data Store\nRead","SIDString":"px42LoopCtrQGC20220313:3579"},{"RTWName":"<S14>/Data Store\nRead1","SIDString":"px42LoopCtrQGC20220313:3580"},{"RTWName":"<S14>/Data Store\nRead2","SIDString":"px42LoopCtrQGC20220313:3581"},{"RTWName":"<S14>/Demux","SIDString":"px42LoopCtrQGC20220313:3518"},{"RTWName":"<S14>/Discrete-Time\nIntegrator","SIDString":"px42LoopCtrQGC20220313:3519"},{"RTWName":"<S14>/Discrete-Time\nIntegrator1","SIDString":"px42LoopCtrQGC20220313:3520"},{"RTWName":"<S14>/Discrete-Time\nIntegrator3","SIDString":"px42LoopCtrQGC20220313:3521"},{"RTWName":"<S14>/Fcn10","SIDString":"px42LoopCtrQGC20220313:3522"},{"RTWName":"<S14>/Fcn3","SIDString":"px42LoopCtrQGC20220313:3523"},{"RTWName":"<S14>/Fcn4","SIDString":"px42LoopCtrQGC20220313:3524"},{"RTWName":"<S14>/Fcn5","SIDString":"px42LoopCtrQGC20220313:3525"},{"RTWName":"<S14>/Fcn6","SIDString":"px42LoopCtrQGC20220313:3526"},{"RTWName":"<S14>/Fcn7","SIDString":"px42LoopCtrQGC20220313:3527"},{"RTWName":"<S14>/Fcn8","SIDString":"px42LoopCtrQGC20220313:3528"},{"RTWName":"<S14>/Fcn9","SIDString":"px42LoopCtrQGC20220313:3529"},{"RTWName":"<S14>/Gain","SIDString":"px42LoopCtrQGC20220313:3530"},{"RTWName":"<S14>/Gain1","SIDString":"px42LoopCtrQGC20220313:3531"},{"RTWName":"<S14>/Gain2","SIDString":"px42LoopCtrQGC20220313:3532"},{"RTWName":"<S14>/Gain3","SIDString":"px42LoopCtrQGC20220313:3533"},{"RTWName":"<S14>/Gain4","SIDString":"px42LoopCtrQGC20220313:3534"},{"RTWName":"<S14>/Gain5","SIDString":"px42LoopCtrQGC20220313:3535"},{"RTWName":"<S14>/Gain6","SIDString":"px42LoopCtrQGC20220313:3536"},{"RTWName":"<S14>/Gain7","SIDString":"px42LoopCtrQGC20220313:3537"},{"RTWName":"<S14>/Gain8","SIDString":"px42LoopCtrQGC20220313:3538"},{"RTWName":"<S14>/Mux","SIDString":"px42LoopCtrQGC20220313:3582"},{"RTWName":"<S14>/Product10","SIDString":"px42LoopCtrQGC20220313:3540"},{"RTWName":"<S14>/Product3","SIDString":"px42LoopCtrQGC20220313:3541"},{"RTWName":"<S14>/Product4","SIDString":"px42LoopCtrQGC20220313:3542"},{"RTWName":"<S14>/Product5","SIDString":"px42LoopCtrQGC20220313:3543"},{"RTWName":"<S14>/Product6","SIDString":"px42LoopCtrQGC20220313:3544"},{"RTWName":"<S14>/Product7","SIDString":"px42LoopCtrQGC20220313:3545"},{"RTWName":"<S14>/Product8","SIDString":"px42LoopCtrQGC20220313:3546"},{"RTWName":"<S14>/Product9","SIDString":"px42LoopCtrQGC20220313:3547"},{"RTWName":"<S14>/Saturation","SIDString":"px42LoopCtrQGC20220313:3548"},{"RTWName":"<S14>/Saturation1","SIDString":"px42LoopCtrQGC20220313:3549"},{"RTWName":"<S14>/Saturation10","SIDString":"px42LoopCtrQGC20220313:3550"},{"RTWName":"<S14>/Saturation11","SIDString":"px42LoopCtrQGC20220313:3551"},{"RTWName":"<S14>/Saturation12","SIDString":"px42LoopCtrQGC20220313:3552"},{"RTWName":"<S14>/Saturation13","SIDString":"px42LoopCtrQGC20220313:3553"},{"RTWName":"<S14>/Saturation14","SIDString":"px42LoopCtrQGC20220313:3554"},{"RTWName":"<S14>/Saturation15","SIDString":"px42LoopCtrQGC20220313:3555"},{"RTWName":"<S14>/Saturation16","SIDString":"px42LoopCtrQGC20220313:3556"},{"RTWName":"<S14>/Saturation17","SIDString":"px42LoopCtrQGC20220313:3557"},{"RTWName":"<S14>/Saturation18","SIDString":"px42LoopCtrQGC20220313:3558"},{"RTWName":"<S14>/Saturation19","SIDString":"px42LoopCtrQGC20220313:3559"},{"RTWName":"<S14>/Saturation3","SIDString":"px42LoopCtrQGC20220313:3560"},{"RTWName":"<S14>/Saturation8","SIDString":"px42LoopCtrQGC20220313:3561"},{"RTWName":"<S14>/Saturation9","SIDString":"px42LoopCtrQGC20220313:3562"},{"RTWName":"<S14>/Scope","SIDString":"px42LoopCtrQGC20220313:3563"},{"RTWName":"<S14>/Switch","SIDString":"px42LoopCtrQGC20220313:3583"},{"RTWName":"<S14>/Zero-Order\nHold1","SIDString":"px42LoopCtrQGC20220313:3584"},{"RTWName":"<S14>/Zero-Order\nHold2","SIDString":"px42LoopCtrQGC20220313:3585"},{"RTWName":"<S14>/Zero-Order\nHold3","SIDString":"px42LoopCtrQGC20220313:3586"},{"RTWName":"<S14>/k/J","SIDString":"px42LoopCtrQGC20220313:3587"},{"RTWName":"<S14>/l1","SIDString":"px42LoopCtrQGC20220313:3569"},{"RTWName":"<S14>/l2","SIDString":"px42LoopCtrQGC20220313:3570"},{"RTWName":"<S14>/l4","SIDString":"px42LoopCtrQGC20220313:3571"},{"RTWName":"<S14>/lambda1","SIDString":"px42LoopCtrQGC20220313:3572"},{"RTWName":"<S14>/lambda2","SIDString":"px42LoopCtrQGC20220313:3573"},{"RTWName":"<S14>/lambda4","SIDString":"px42LoopCtrQGC20220313:3574"},{"RTWName":"<S14>/Out1","SIDString":"px42LoopCtrQGC20220313:3575"},{"RTWName":"<S4294967295>/u2","SIDString":"px42LoopCtrQGC20220313:2878"},{"RTWName":"<S4294967295>/1/J","SIDString":"px42LoopCtrQGC20220313:2879"},{"RTWName":"<S4294967295>/Abs3","SIDString":"px42LoopCtrQGC20220313:2883"},{"RTWName":"<S4294967295>/Abs4","SIDString":"px42LoopCtrQGC20220313:2884"},{"RTWName":"<S4294967295>/Abs5","SIDString":"px42LoopCtrQGC20220313:2885"},{"RTWName":"<S4294967295>/Abs6","SIDString":"px42LoopCtrQGC20220313:2886"},{"RTWName":"<S4294967295>/Add","SIDString":"px42LoopCtrQGC20220313:2887"},{"RTWName":"<S4294967295>/Add1","SIDString":"px42LoopCtrQGC20220313:2888"},{"RTWName":"<S4294967295>/Add10","SIDString":"px42LoopCtrQGC20220313:2889"},{"RTWName":"<S4294967295>/Add11","SIDString":"px42LoopCtrQGC20220313:2890"},{"RTWName":"<S4294967295>/Add12","SIDString":"px42LoopCtrQGC20220313:2891"},{"RTWName":"<S4294967295>/Add13","SIDString":"px42LoopCtrQGC20220313:2892"},{"RTWName":"<S4294967295>/Add14","SIDString":"px42LoopCtrQGC20220313:2893"},{"RTWName":"<S4294967295>/Add15","SIDString":"px42LoopCtrQGC20220313:2894"},{"RTWName":"<S4294967295>/Add16","SIDString":"px42LoopCtrQGC20220313:2895"},{"RTWName":"<S4294967295>/Add17","SIDString":"px42LoopCtrQGC20220313:2896"},{"RTWName":"<S4294967295>/Add18","SIDString":"px42LoopCtrQGC20220313:2897"},{"RTWName":"<S4294967295>/Add19","SIDString":"px42LoopCtrQGC20220313:2898"},{"RTWName":"<S4294967295>/Add2","SIDString":"px42LoopCtrQGC20220313:2899"},{"RTWName":"<S4294967295>/Add20","SIDString":"px42LoopCtrQGC20220313:2900"},{"RTWName":"<S4294967295>/Add21","SIDString":"px42LoopCtrQGC20220313:2901"},{"RTWName":"<S4294967295>/Add22","SIDString":"px42LoopCtrQGC20220313:2902"},{"RTWName":"<S4294967295>/Add23","SIDString":"px42LoopCtrQGC20220313:2903"},{"RTWName":"<S4294967295>/Add24","SIDString":"px42LoopCtrQGC20220313:2904"},{"RTWName":"<S4294967295>/Add25","SIDString":"px42LoopCtrQGC20220313:2905"},{"RTWName":"<S4294967295>/Add3","SIDString":"px42LoopCtrQGC20220313:2906"},{"RTWName":"<S4294967295>/Add4","SIDString":"px42LoopCtrQGC20220313:2907"},{"RTWName":"<S4294967295>/Add5","SIDString":"px42LoopCtrQGC20220313:2908"},{"RTWName":"<S4294967295>/Add6","SIDString":"px42LoopCtrQGC20220313:2909"},{"RTWName":"<S4294967295>/Add7","SIDString":"px42LoopCtrQGC20220313:2910"},{"RTWName":"<S4294967295>/Add8","SIDString":"px42LoopCtrQGC20220313:2911"},{"RTWName":"<S4294967295>/Add9","SIDString":"px42LoopCtrQGC20220313:2912"},{"RTWName":"<S4294967295>/Constant1","SIDString":"px42LoopCtrQGC20220313:2913"},{"RTWName":"<S4294967295>/Constant2","SIDString":"px42LoopCtrQGC20220313:2914"},{"RTWName":"<S4294967295>/Constant3","SIDString":"px42LoopCtrQGC20220313:3093"},{"RTWName":"<S4294967295>/Constant4","SIDString":"px42LoopCtrQGC20220313:2915"},{"RTWName":"<S4294967295>/Constant6","SIDString":"px42LoopCtrQGC20220313:2916"},{"RTWName":"<S4294967295>/Constant8","SIDString":"px42LoopCtrQGC20220313:2917"},{"RTWName":"<S4294967295>/Data Store\nRead","SIDString":"px42LoopCtrQGC20220313:2918"},{"RTWName":"<S4294967295>/Data Store\nRead1","SIDString":"px42LoopCtrQGC20220313:2919"},{"RTWName":"<S4294967295>/Data Store\nRead2","SIDString":"px42LoopCtrQGC20220313:3094"},{"RTWName":"<S4294967295>/Demux","SIDString":"px42LoopCtrQGC20220313:3095"},{"RTWName":"<S4294967295>/Discrete-Time\nIntegrator","SIDString":"px42LoopCtrQGC20220313:2920"},{"RTWName":"<S4294967295>/Discrete-Time\nIntegrator1","SIDString":"px42LoopCtrQGC20220313:2921"},{"RTWName":"<S4294967295>/Discrete-Time\nIntegrator2","SIDString":"px42LoopCtrQGC20220313:2922"},{"RTWName":"<S4294967295>/Discrete-Time\nIntegrator3","SIDString":"px42LoopCtrQGC20220313:2923"},{"RTWName":"<S4294967295>/Fcn10","SIDString":"px42LoopCtrQGC20220313:2926"},{"RTWName":"<S4294967295>/Fcn3","SIDString":"px42LoopCtrQGC20220313:2928"},{"RTWName":"<S4294967295>/Fcn4","SIDString":"px42LoopCtrQGC20220313:2929"},{"RTWName":"<S4294967295>/Fcn5","SIDString":"px42LoopCtrQGC20220313:2930"},{"RTWName":"<S4294967295>/Fcn6","SIDString":"px42LoopCtrQGC20220313:2931"},{"RTWName":"<S4294967295>/Fcn7","SIDString":"px42LoopCtrQGC20220313:2932"},{"RTWName":"<S4294967295>/Fcn8","SIDString":"px42LoopCtrQGC20220313:2933"},{"RTWName":"<S4294967295>/Fcn9","SIDString":"px42LoopCtrQGC20220313:2934"},{"RTWName":"<S4294967295>/Gain","SIDString":"px42LoopCtrQGC20220313:2935"},{"RTWName":"<S4294967295>/Gain1","SIDString":"px42LoopCtrQGC20220313:2936"},{"RTWName":"<S4294967295>/Gain2","SIDString":"px42LoopCtrQGC20220313:2937"},{"RTWName":"<S4294967295>/Gain3","SIDString":"px42LoopCtrQGC20220313:2938"},{"RTWName":"<S4294967295>/Gain4","SIDString":"px42LoopCtrQGC20220313:2939"},{"RTWName":"<S4294967295>/Gain5","SIDString":"px42LoopCtrQGC20220313:2940"},{"RTWName":"<S4294967295>/Gain6","SIDString":"px42LoopCtrQGC20220313:2941"},{"RTWName":"<S4294967295>/Gain7","SIDString":"px42LoopCtrQGC20220313:2942"},{"RTWName":"<S4294967295>/Gain8","SIDString":"px42LoopCtrQGC20220313:2943"},{"RTWName":"<S4294967295>/Mux","SIDString":"px42LoopCtrQGC20220313:3096"},{"RTWName":"<S4294967295>/Product10","SIDString":"px42LoopCtrQGC20220313:2946"},{"RTWName":"<S4294967295>/Product3","SIDString":"px42LoopCtrQGC20220313:2948"},{"RTWName":"<S4294967295>/Product4","SIDString":"px42LoopCtrQGC20220313:2949"},{"RTWName":"<S4294967295>/Product5","SIDString":"px42LoopCtrQGC20220313:2950"},{"RTWName":"<S4294967295>/Product6","SIDString":"px42LoopCtrQGC20220313:2951"},{"RTWName":"<S4294967295>/Product7","SIDString":"px42LoopCtrQGC20220313:2952"},{"RTWName":"<S4294967295>/Product8","SIDString":"px42LoopCtrQGC20220313:2953"},{"RTWName":"<S4294967295>/Product9","SIDString":"px42LoopCtrQGC20220313:2954"},{"RTWName":"<S4294967295>/Saturation","SIDString":"px42LoopCtrQGC20220313:2955"},{"RTWName":"<S4294967295>/Saturation1","SIDString":"px42LoopCtrQGC20220313:2956"},{"RTWName":"<S4294967295>/Saturation10","SIDString":"px42LoopCtrQGC20220313:2957"},{"RTWName":"<S4294967295>/Saturation11","SIDString":"px42LoopCtrQGC20220313:2958"},{"RTWName":"<S4294967295>/Saturation12","SIDString":"px42LoopCtrQGC20220313:2959"},{"RTWName":"<S4294967295>/Saturation13","SIDString":"px42LoopCtrQGC20220313:2960"},{"RTWName":"<S4294967295>/Saturation14","SIDString":"px42LoopCtrQGC20220313:2961"},{"RTWName":"<S4294967295>/Saturation15","SIDString":"px42LoopCtrQGC20220313:2962"},{"RTWName":"<S4294967295>/Saturation16","SIDString":"px42LoopCtrQGC20220313:2963"},{"RTWName":"<S4294967295>/Saturation17","SIDString":"px42LoopCtrQGC20220313:2964"},{"RTWName":"<S4294967295>/Saturation18","SIDString":"px42LoopCtrQGC20220313:2965"},{"RTWName":"<S4294967295>/Saturation19","SIDString":"px42LoopCtrQGC20220313:2966"},{"RTWName":"<S4294967295>/Saturation2","SIDString":"px42LoopCtrQGC20220313:2967"},{"RTWName":"<S4294967295>/Saturation3","SIDString":"px42LoopCtrQGC20220313:2968"},{"RTWName":"<S4294967295>/Saturation8","SIDString":"px42LoopCtrQGC20220313:2973"},{"RTWName":"<S4294967295>/Saturation9","SIDString":"px42LoopCtrQGC20220313:2974"},{"RTWName":"<S4294967295>/Scope","SIDString":"px42LoopCtrQGC20220313:2975"},{"RTWName":"<S4294967295>/Switch","SIDString":"px42LoopCtrQGC20220313:3097"},{"RTWName":"<S4294967295>/Zero-Order\nHold1","SIDString":"px42LoopCtrQGC20220313:2976"},{"RTWName":"<S4294967295>/Zero-Order\nHold2","SIDString":"px42LoopCtrQGC20220313:2977"},{"RTWName":"<S4294967295>/Zero-Order\nHold3","SIDString":"px42LoopCtrQGC20220313:2978"},{"RTWName":"<S4294967295>/k/J","SIDString":"px42LoopCtrQGC20220313:2979"},{"RTWName":"<S4294967295>/l1","SIDString":"px42LoopCtrQGC20220313:2984"},{"RTWName":"<S4294967295>/l2","SIDString":"px42LoopCtrQGC20220313:2985"},{"RTWName":"<S4294967295>/l3","SIDString":"px42LoopCtrQGC20220313:2986"},{"RTWName":"<S4294967295>/l4","SIDString":"px42LoopCtrQGC20220313:2987"},{"RTWName":"<S4294967295>/lambda1","SIDString":"px42LoopCtrQGC20220313:2988"},{"RTWName":"<S4294967295>/lambda2","SIDString":"px42LoopCtrQGC20220313:2989"},{"RTWName":"<S4294967295>/lambda3","SIDString":"px42LoopCtrQGC20220313:2990"},{"RTWName":"<S4294967295>/lambda4","SIDString":"px42LoopCtrQGC20220313:2991"},{"RTWName":"<S4294967295>/Out1","SIDString":"px42LoopCtrQGC20220313:2992"},{"RTWName":"<S15>/u2","SIDString":"px42LoopCtrQGC20220313:3465"},{"RTWName":"<S15>/1/J","SIDString":"px42LoopCtrQGC20220313:3466"},{"RTWName":"<S15>/Abs3","SIDString":"px42LoopCtrQGC20220313:3242"},{"RTWName":"<S15>/Abs4","SIDString":"px42LoopCtrQGC20220313:3243"},{"RTWName":"<S15>/Abs5","SIDString":"px42LoopCtrQGC20220313:3244"},{"RTWName":"<S15>/Abs6","SIDString":"px42LoopCtrQGC20220313:3245"},{"RTWName":"<S15>/Add","SIDString":"px42LoopCtrQGC20220313:3246"},{"RTWName":"<S15>/Add1","SIDString":"px42LoopCtrQGC20220313:3247"},{"RTWName":"<S15>/Add10","SIDString":"px42LoopCtrQGC20220313:3248"},{"RTWName":"<S15>/Add11","SIDString":"px42LoopCtrQGC20220313:3249"},{"RTWName":"<S15>/Add12","SIDString":"px42LoopCtrQGC20220313:3250"},{"RTWName":"<S15>/Add13","SIDString":"px42LoopCtrQGC20220313:3251"},{"RTWName":"<S15>/Add14","SIDString":"px42LoopCtrQGC20220313:3252"},{"RTWName":"<S15>/Add15","SIDString":"px42LoopCtrQGC20220313:3253"},{"RTWName":"<S15>/Add16","SIDString":"px42LoopCtrQGC20220313:3254"},{"RTWName":"<S15>/Add17","SIDString":"px42LoopCtrQGC20220313:3255"},{"RTWName":"<S15>/Add18","SIDString":"px42LoopCtrQGC20220313:3256"},{"RTWName":"<S15>/Add19","SIDString":"px42LoopCtrQGC20220313:3257"},{"RTWName":"<S15>/Add2","SIDString":"px42LoopCtrQGC20220313:3258"},{"RTWName":"<S15>/Add20","SIDString":"px42LoopCtrQGC20220313:3259"},{"RTWName":"<S15>/Add21","SIDString":"px42LoopCtrQGC20220313:3260"},{"RTWName":"<S15>/Add22","SIDString":"px42LoopCtrQGC20220313:3261"},{"RTWName":"<S15>/Add23","SIDString":"px42LoopCtrQGC20220313:3262"},{"RTWName":"<S15>/Add24","SIDString":"px42LoopCtrQGC20220313:3263"},{"RTWName":"<S15>/Add25","SIDString":"px42LoopCtrQGC20220313:3264"},{"RTWName":"<S15>/Add3","SIDString":"px42LoopCtrQGC20220313:3265"},{"RTWName":"<S15>/Add5","SIDString":"px42LoopCtrQGC20220313:3266"},{"RTWName":"<S15>/Add6","SIDString":"px42LoopCtrQGC20220313:3267"},{"RTWName":"<S15>/Add7","SIDString":"px42LoopCtrQGC20220313:3268"},{"RTWName":"<S15>/Add8","SIDString":"px42LoopCtrQGC20220313:3269"},{"RTWName":"<S15>/Add9","SIDString":"px42LoopCtrQGC20220313:3270"},{"RTWName":"<S15>/Constant1","SIDString":"px42LoopCtrQGC20220313:3271"},{"RTWName":"<S15>/Constant2","SIDString":"px42LoopCtrQGC20220313:3272"},{"RTWName":"<S15>/Constant3","SIDString":"px42LoopCtrQGC20220313:3467"},{"RTWName":"<S15>/Constant4","SIDString":"px42LoopCtrQGC20220313:3273"},{"RTWName":"<S15>/Constant6","SIDString":"px42LoopCtrQGC20220313:3274"},{"RTWName":"<S15>/Constant8","SIDString":"px42LoopCtrQGC20220313:3275"},{"RTWName":"<S15>/Data Store\nRead","SIDString":"px42LoopCtrQGC20220313:3468"},{"RTWName":"<S15>/Data Store\nRead1","SIDString":"px42LoopCtrQGC20220313:3469"},{"RTWName":"<S15>/Data Store\nRead2","SIDString":"px42LoopCtrQGC20220313:3470"},{"RTWName":"<S15>/Demux","SIDString":"px42LoopCtrQGC20220313:3339"},{"RTWName":"<S15>/Discrete-Time\nIntegrator","SIDString":"px42LoopCtrQGC20220313:3278"},{"RTWName":"<S15>/Discrete-Time\nIntegrator1","SIDString":"px42LoopCtrQGC20220313:3279"},{"RTWName":"<S15>/Discrete-Time\nIntegrator3","SIDString":"px42LoopCtrQGC20220313:3280"},{"RTWName":"<S15>/Fcn10","SIDString":"px42LoopCtrQGC20220313:3281"},{"RTWName":"<S15>/Fcn3","SIDString":"px42LoopCtrQGC20220313:3282"},{"RTWName":"<S15>/Fcn4","SIDString":"px42LoopCtrQGC20220313:3283"},{"RTWName":"<S15>/Fcn5","SIDString":"px42LoopCtrQGC20220313:3284"},{"RTWName":"<S15>/Fcn6","SIDString":"px42LoopCtrQGC20220313:3285"},{"RTWName":"<S15>/Fcn7","SIDString":"px42LoopCtrQGC20220313:3286"},{"RTWName":"<S15>/Fcn8","SIDString":"px42LoopCtrQGC20220313:3287"},{"RTWName":"<S15>/Fcn9","SIDString":"px42LoopCtrQGC20220313:3288"},{"RTWName":"<S15>/Gain","SIDString":"px42LoopCtrQGC20220313:3289"},{"RTWName":"<S15>/Gain1","SIDString":"px42LoopCtrQGC20220313:3290"},{"RTWName":"<S15>/Gain2","SIDString":"px42LoopCtrQGC20220313:3291"},{"RTWName":"<S15>/Gain3","SIDString":"px42LoopCtrQGC20220313:3292"},{"RTWName":"<S15>/Gain4","SIDString":"px42LoopCtrQGC20220313:3293"},{"RTWName":"<S15>/Gain5","SIDString":"px42LoopCtrQGC20220313:3294"},{"RTWName":"<S15>/Gain6","SIDString":"px42LoopCtrQGC20220313:3295"},{"RTWName":"<S15>/Gain7","SIDString":"px42LoopCtrQGC20220313:3296"},{"RTWName":"<S15>/Gain8","SIDString":"px42LoopCtrQGC20220313:3297"},{"RTWName":"<S15>/Mux","SIDString":"px42LoopCtrQGC20220313:3471"},{"RTWName":"<S15>/Product10","SIDString":"px42LoopCtrQGC20220313:3298"},{"RTWName":"<S15>/Product3","SIDString":"px42LoopCtrQGC20220313:3299"},{"RTWName":"<S15>/Product4","SIDString":"px42LoopCtrQGC20220313:3300"},{"RTWName":"<S15>/Product5","SIDString":"px42LoopCtrQGC20220313:3301"},{"RTWName":"<S15>/Product6","SIDString":"px42LoopCtrQGC20220313:3302"},{"RTWName":"<S15>/Product7","SIDString":"px42LoopCtrQGC20220313:3303"},{"RTWName":"<S15>/Product8","SIDString":"px42LoopCtrQGC20220313:3304"},{"RTWName":"<S15>/Product9","SIDString":"px42LoopCtrQGC20220313:3305"},{"RTWName":"<S15>/Saturation","SIDString":"px42LoopCtrQGC20220313:3306"},{"RTWName":"<S15>/Saturation1","SIDString":"px42LoopCtrQGC20220313:3307"},{"RTWName":"<S15>/Saturation10","SIDString":"px42LoopCtrQGC20220313:3308"},{"RTWName":"<S15>/Saturation11","SIDString":"px42LoopCtrQGC20220313:3309"},{"RTWName":"<S15>/Saturation12","SIDString":"px42LoopCtrQGC20220313:3310"},{"RTWName":"<S15>/Saturation13","SIDString":"px42LoopCtrQGC20220313:3311"},{"RTWName":"<S15>/Saturation14","SIDString":"px42LoopCtrQGC20220313:3312"},{"RTWName":"<S15>/Saturation15","SIDString":"px42LoopCtrQGC20220313:3313"},{"RTWName":"<S15>/Saturation16","SIDString":"px42LoopCtrQGC20220313:3314"},{"RTWName":"<S15>/Saturation17","SIDString":"px42LoopCtrQGC20220313:3315"},{"RTWName":"<S15>/Saturation18","SIDString":"px42LoopCtrQGC20220313:3316"},{"RTWName":"<S15>/Saturation19","SIDString":"px42LoopCtrQGC20220313:3317"},{"RTWName":"<S15>/Saturation3","SIDString":"px42LoopCtrQGC20220313:3318"},{"RTWName":"<S15>/Saturation8","SIDString":"px42LoopCtrQGC20220313:3319"},{"RTWName":"<S15>/Saturation9","SIDString":"px42LoopCtrQGC20220313:3320"},{"RTWName":"<S15>/Scope","SIDString":"px42LoopCtrQGC20220313:3321"},{"RTWName":"<S15>/Switch","SIDString":"px42LoopCtrQGC20220313:3472"},{"RTWName":"<S15>/Zero-Order\nHold1","SIDString":"px42LoopCtrQGC20220313:3473"},{"RTWName":"<S15>/Zero-Order\nHold2","SIDString":"px42LoopCtrQGC20220313:3474"},{"RTWName":"<S15>/Zero-Order\nHold3","SIDString":"px42LoopCtrQGC20220313:3475"},{"RTWName":"<S15>/k/J","SIDString":"px42LoopCtrQGC20220313:3476"},{"RTWName":"<S15>/l1","SIDString":"px42LoopCtrQGC20220313:3326"},{"RTWName":"<S15>/l2","SIDString":"px42LoopCtrQGC20220313:3327"},{"RTWName":"<S15>/l4","SIDString":"px42LoopCtrQGC20220313:3328"},{"RTWName":"<S15>/lambda1","SIDString":"px42LoopCtrQGC20220313:3329"},{"RTWName":"<S15>/lambda2","SIDString":"px42LoopCtrQGC20220313:3330"},{"RTWName":"<S15>/lambda4","SIDString":"px42LoopCtrQGC20220313:3331"},{"RTWName":"<S15>/Out1","SIDString":"px42LoopCtrQGC20220313:3332"},{"RTWName":"<S4294967295>/u2","SIDString":"px42LoopCtrQGC20220313:3361"},{"RTWName":"<S4294967295>/1/J","SIDString":"px42LoopCtrQGC20220313:3362"},{"RTWName":"<S4294967295>/Abs3","SIDString":"px42LoopCtrQGC20220313:3363"},{"RTWName":"<S4294967295>/Abs4","SIDString":"px42LoopCtrQGC20220313:3364"},{"RTWName":"<S4294967295>/Abs5","SIDString":"px42LoopCtrQGC20220313:3365"},{"RTWName":"<S4294967295>/Abs6","SIDString":"px42LoopCtrQGC20220313:3366"},{"RTWName":"<S4294967295>/Add","SIDString":"px42LoopCtrQGC20220313:3367"},{"RTWName":"<S4294967295>/Add1","SIDString":"px42LoopCtrQGC20220313:3368"},{"RTWName":"<S4294967295>/Add10","SIDString":"px42LoopCtrQGC20220313:3369"},{"RTWName":"<S4294967295>/Add11","SIDString":"px42LoopCtrQGC20220313:3370"},{"RTWName":"<S4294967295>/Add12","SIDString":"px42LoopCtrQGC20220313:3371"},{"RTWName":"<S4294967295>/Add13","SIDString":"px42LoopCtrQGC20220313:3372"},{"RTWName":"<S4294967295>/Add14","SIDString":"px42LoopCtrQGC20220313:3373"},{"RTWName":"<S4294967295>/Add15","SIDString":"px42LoopCtrQGC20220313:3374"},{"RTWName":"<S4294967295>/Add16","SIDString":"px42LoopCtrQGC20220313:3375"},{"RTWName":"<S4294967295>/Add17","SIDString":"px42LoopCtrQGC20220313:3376"},{"RTWName":"<S4294967295>/Add18","SIDString":"px42LoopCtrQGC20220313:3377"},{"RTWName":"<S4294967295>/Add19","SIDString":"px42LoopCtrQGC20220313:3378"},{"RTWName":"<S4294967295>/Add2","SIDString":"px42LoopCtrQGC20220313:3379"},{"RTWName":"<S4294967295>/Add20","SIDString":"px42LoopCtrQGC20220313:3380"},{"RTWName":"<S4294967295>/Add21","SIDString":"px42LoopCtrQGC20220313:3381"},{"RTWName":"<S4294967295>/Add22","SIDString":"px42LoopCtrQGC20220313:3382"},{"RTWName":"<S4294967295>/Add23","SIDString":"px42LoopCtrQGC20220313:3383"},{"RTWName":"<S4294967295>/Add24","SIDString":"px42LoopCtrQGC20220313:3384"},{"RTWName":"<S4294967295>/Add25","SIDString":"px42LoopCtrQGC20220313:3385"},{"RTWName":"<S4294967295>/Add3","SIDString":"px42LoopCtrQGC20220313:3386"},{"RTWName":"<S4294967295>/Add4","SIDString":"px42LoopCtrQGC20220313:3387"},{"RTWName":"<S4294967295>/Add5","SIDString":"px42LoopCtrQGC20220313:3388"},{"RTWName":"<S4294967295>/Add6","SIDString":"px42LoopCtrQGC20220313:3389"},{"RTWName":"<S4294967295>/Add7","SIDString":"px42LoopCtrQGC20220313:3390"},{"RTWName":"<S4294967295>/Add8","SIDString":"px42LoopCtrQGC20220313:3391"},{"RTWName":"<S4294967295>/Add9","SIDString":"px42LoopCtrQGC20220313:3392"},{"RTWName":"<S4294967295>/Constant1","SIDString":"px42LoopCtrQGC20220313:3393"},{"RTWName":"<S4294967295>/Constant2","SIDString":"px42LoopCtrQGC20220313:3394"},{"RTWName":"<S4294967295>/Constant3","SIDString":"px42LoopCtrQGC20220313:3395"},{"RTWName":"<S4294967295>/Constant4","SIDString":"px42LoopCtrQGC20220313:3396"},{"RTWName":"<S4294967295>/Constant6","SIDString":"px42LoopCtrQGC20220313:3397"},{"RTWName":"<S4294967295>/Constant8","SIDString":"px42LoopCtrQGC20220313:3398"},{"RTWName":"<S4294967295>/Data Store\nRead","SIDString":"px42LoopCtrQGC20220313:3399"},{"RTWName":"<S4294967295>/Data Store\nRead1","SIDString":"px42LoopCtrQGC20220313:3400"},{"RTWName":"<S4294967295>/Data Store\nRead2","SIDString":"px42LoopCtrQGC20220313:3401"},{"RTWName":"<S4294967295>/Demux","SIDString":"px42LoopCtrQGC20220313:3402"},{"RTWName":"<S4294967295>/Discrete-Time\nIntegrator","SIDString":"px42LoopCtrQGC20220313:3403"},{"RTWName":"<S4294967295>/Discrete-Time\nIntegrator1","SIDString":"px42LoopCtrQGC20220313:3404"},{"RTWName":"<S4294967295>/Discrete-Time\nIntegrator2","SIDString":"px42LoopCtrQGC20220313:3405"},{"RTWName":"<S4294967295>/Discrete-Time\nIntegrator3","SIDString":"px42LoopCtrQGC20220313:3406"},{"RTWName":"<S4294967295>/Fcn10","SIDString":"px42LoopCtrQGC20220313:3407"},{"RTWName":"<S4294967295>/Fcn3","SIDString":"px42LoopCtrQGC20220313:3408"},{"RTWName":"<S4294967295>/Fcn4","SIDString":"px42LoopCtrQGC20220313:3409"},{"RTWName":"<S4294967295>/Fcn5","SIDString":"px42LoopCtrQGC20220313:3410"},{"RTWName":"<S4294967295>/Fcn6","SIDString":"px42LoopCtrQGC20220313:3411"},{"RTWName":"<S4294967295>/Fcn7","SIDString":"px42LoopCtrQGC20220313:3412"},{"RTWName":"<S4294967295>/Fcn8","SIDString":"px42LoopCtrQGC20220313:3413"},{"RTWName":"<S4294967295>/Fcn9","SIDString":"px42LoopCtrQGC20220313:3414"},{"RTWName":"<S4294967295>/Gain","SIDString":"px42LoopCtrQGC20220313:3415"},{"RTWName":"<S4294967295>/Gain1","SIDString":"px42LoopCtrQGC20220313:3416"},{"RTWName":"<S4294967295>/Gain2","SIDString":"px42LoopCtrQGC20220313:3417"},{"RTWName":"<S4294967295>/Gain3","SIDString":"px42LoopCtrQGC20220313:3418"},{"RTWName":"<S4294967295>/Gain4","SIDString":"px42LoopCtrQGC20220313:3419"},{"RTWName":"<S4294967295>/Gain5","SIDString":"px42LoopCtrQGC20220313:3420"},{"RTWName":"<S4294967295>/Gain6","SIDString":"px42LoopCtrQGC20220313:3421"},{"RTWName":"<S4294967295>/Gain7","SIDString":"px42LoopCtrQGC20220313:3422"},{"RTWName":"<S4294967295>/Gain8","SIDString":"px42LoopCtrQGC20220313:3423"},{"RTWName":"<S4294967295>/Mux","SIDString":"px42LoopCtrQGC20220313:3424"},{"RTWName":"<S4294967295>/Product10","SIDString":"px42LoopCtrQGC20220313:3425"},{"RTWName":"<S4294967295>/Product3","SIDString":"px42LoopCtrQGC20220313:3426"},{"RTWName":"<S4294967295>/Product4","SIDString":"px42LoopCtrQGC20220313:3427"},{"RTWName":"<S4294967295>/Product5","SIDString":"px42LoopCtrQGC20220313:3428"},{"RTWName":"<S4294967295>/Product6","SIDString":"px42LoopCtrQGC20220313:3429"},{"RTWName":"<S4294967295>/Product7","SIDString":"px42LoopCtrQGC20220313:3430"},{"RTWName":"<S4294967295>/Product8","SIDString":"px42LoopCtrQGC20220313:3431"},{"RTWName":"<S4294967295>/Product9","SIDString":"px42LoopCtrQGC20220313:3432"},{"RTWName":"<S4294967295>/Saturation","SIDString":"px42LoopCtrQGC20220313:3433"},{"RTWName":"<S4294967295>/Saturation1","SIDString":"px42LoopCtrQGC20220313:3434"},{"RTWName":"<S4294967295>/Saturation10","SIDString":"px42LoopCtrQGC20220313:3435"},{"RTWName":"<S4294967295>/Saturation11","SIDString":"px42LoopCtrQGC20220313:3436"},{"RTWName":"<S4294967295>/Saturation12","SIDString":"px42LoopCtrQGC20220313:3437"},{"RTWName":"<S4294967295>/Saturation13","SIDString":"px42LoopCtrQGC20220313:3438"},{"RTWName":"<S4294967295>/Saturation14","SIDString":"px42LoopCtrQGC20220313:3439"},{"RTWName":"<S4294967295>/Saturation15","SIDString":"px42LoopCtrQGC20220313:3440"},{"RTWName":"<S4294967295>/Saturation16","SIDString":"px42LoopCtrQGC20220313:3441"},{"RTWName":"<S4294967295>/Saturation17","SIDString":"px42LoopCtrQGC20220313:3442"},{"RTWName":"<S4294967295>/Saturation18","SIDString":"px42LoopCtrQGC20220313:3443"},{"RTWName":"<S4294967295>/Saturation19","SIDString":"px42LoopCtrQGC20220313:3444"},{"RTWName":"<S4294967295>/Saturation2","SIDString":"px42LoopCtrQGC20220313:3445"},{"RTWName":"<S4294967295>/Saturation3","SIDString":"px42LoopCtrQGC20220313:3446"},{"RTWName":"<S4294967295>/Saturation8","SIDString":"px42LoopCtrQGC20220313:3447"},{"RTWName":"<S4294967295>/Saturation9","SIDString":"px42LoopCtrQGC20220313:3448"},{"RTWName":"<S4294967295>/Scope","SIDString":"px42LoopCtrQGC20220313:3449"},{"RTWName":"<S4294967295>/Switch","SIDString":"px42LoopCtrQGC20220313:3450"},{"RTWName":"<S4294967295>/Zero-Order\nHold1","SIDString":"px42LoopCtrQGC20220313:3451"},{"RTWName":"<S4294967295>/Zero-Order\nHold2","SIDString":"px42LoopCtrQGC20220313:3452"},{"RTWName":"<S4294967295>/Zero-Order\nHold3","SIDString":"px42LoopCtrQGC20220313:3453"},{"RTWName":"<S4294967295>/k/J","SIDString":"px42LoopCtrQGC20220313:3454"},{"RTWName":"<S4294967295>/l1","SIDString":"px42LoopCtrQGC20220313:3455"},{"RTWName":"<S4294967295>/l2","SIDString":"px42LoopCtrQGC20220313:3456"},{"RTWName":"<S4294967295>/l3","SIDString":"px42LoopCtrQGC20220313:3457"},{"RTWName":"<S4294967295>/l4","SIDString":"px42LoopCtrQGC20220313:3458"},{"RTWName":"<S4294967295>/lambda1","SIDString":"px42LoopCtrQGC20220313:3459"},{"RTWName":"<S4294967295>/lambda2","SIDString":"px42LoopCtrQGC20220313:3460"},{"RTWName":"<S4294967295>/lambda3","SIDString":"px42LoopCtrQGC20220313:3461"},{"RTWName":"<S4294967295>/lambda4","SIDString":"px42LoopCtrQGC20220313:3462"},{"RTWName":"<S4294967295>/Out1","SIDString":"px42LoopCtrQGC20220313:3463"},{"RTWName":"<S1>/tau_Yaw","SIDString":"px42LoopCtrQGC20220313:365"},{"RTWName":"<S1>/tau_Pitch","SIDString":"px42LoopCtrQGC20220313:366"},{"RTWName":"<S1>/tau_Roll","SIDString":"px42LoopCtrQGC20220313:367"},{"RTWName":"<Root>/Bus\nSelector","SIDString":"px42LoopCtrQGC20220313:8"},{"RTWName":"<Root>/Bus\nSelector2","SIDString":"px42LoopCtrQGC20220313:30"},{"RTWName":"<Root>/Cast To Double1","SIDString":"px42LoopCtrQGC20220313:87"},{"RTWName":"<Root>/Constant","SIDString":"px42LoopCtrQGC20220313:236"},{"RTWName":"<Root>/Constant1","SIDString":"px42LoopCtrQGC20220313:341"},{"RTWName":"<Root>/Constant10","SIDString":"px42LoopCtrQGC20220313:3745"},{"RTWName":"<Root>/Constant11","SIDString":"px42LoopCtrQGC20220313:3746"},{"RTWName":"<Root>/Constant2","SIDString":"px42LoopCtrQGC20220313:720"},{"RTWName":"<Root>/Constant3","SIDString":"px42LoopCtrQGC20220313:369"},{"RTWName":"<Root>/Constant4","SIDString":"px42LoopCtrQGC20220313:695"},{"RTWName":"<Root>/Constant5","SIDString":"px42LoopCtrQGC20220313:2022"},{"RTWName":"<Root>/Constant6","SIDString":"px42LoopCtrQGC20220313:3768"},{"RTWName":"<Root>/Constant7","SIDString":"px42LoopCtrQGC20220313:2097"},{"RTWName":"<Root>/Constant8","SIDString":"px42LoopCtrQGC20220313:1874"},{"RTWName":"<Root>/Data Store\nMemory","SIDString":"px42LoopCtrQGC20220313:1638"},{"RTWName":"<Root>/Data Store\nMemory1","SIDString":"px42LoopCtrQGC20220313:249"},{"RTWName":"<Root>/Data Store\nMemory10","SIDString":"px42LoopCtrQGC20220313:267"},{"RTWName":"<Root>/Data Store\nMemory11","SIDString":"px42LoopCtrQGC20220313:268"},{"RTWName":"<Root>/Data Store\nMemory12","SIDString":"px42LoopCtrQGC20220313:269"},{"RTWName":"<Root>/Data Store\nMemory13","SIDString":"px42LoopCtrQGC20220313:375"},{"RTWName":"<Root>/Data Store\nMemory14","SIDString":"px42LoopCtrQGC20220313:376"},{"RTWName":"<Root>/Data Store\nMemory15","SIDString":"px42LoopCtrQGC20220313:377"},{"RTWName":"<Root>/Data Store\nMemory16","SIDString":"px42LoopCtrQGC20220313:516"},{"RTWName":"<Root>/Data Store\nMemory17","SIDString":"px42LoopCtrQGC20220313:517"},{"RTWName":"<Root>/Data Store\nMemory18","SIDString":"px42LoopCtrQGC20220313:518"},{"RTWName":"<Root>/Data Store\nMemory19","SIDString":"px42LoopCtrQGC20220313:519"},{"RTWName":"<Root>/Data Store\nMemory2","SIDString":"px42LoopCtrQGC20220313:146"},{"RTWName":"<Root>/Data Store\nMemory20","SIDString":"px42LoopCtrQGC20220313:520"},{"RTWName":"<Root>/Data Store\nMemory21","SIDString":"px42LoopCtrQGC20220313:521"},{"RTWName":"<Root>/Data Store\nMemory22","SIDString":"px42LoopCtrQGC20220313:701"},{"RTWName":"<Root>/Data Store\nMemory23","SIDString":"px42LoopCtrQGC20220313:702"},{"RTWName":"<Root>/Data Store\nMemory24","SIDString":"px42LoopCtrQGC20220313:722"},{"RTWName":"<Root>/Data Store\nMemory25","SIDString":"px42LoopCtrQGC20220313:723"},{"RTWName":"<Root>/Data Store\nMemory26","SIDString":"px42LoopCtrQGC20220313:724"},{"RTWName":"<Root>/Data Store\nMemory27","SIDString":"px42LoopCtrQGC20220313:1877"},{"RTWName":"<Root>/Data Store\nMemory28","SIDString":"px42LoopCtrQGC20220313:2227"},{"RTWName":"<Root>/Data Store\nMemory29","SIDString":"px42LoopCtrQGC20220313:2243"},{"RTWName":"<Root>/Data Store\nMemory3","SIDString":"px42LoopCtrQGC20220313:154"},{"RTWName":"<Root>/Data Store\nMemory30","SIDString":"px42LoopCtrQGC20220313:2872"},{"RTWName":"<Root>/Data Store\nMemory4","SIDString":"px42LoopCtrQGC20220313:157"},{"RTWName":"<Root>/Data Store\nMemory5","SIDString":"px42LoopCtrQGC20220313:252"},{"RTWName":"<Root>/Data Store\nMemory6","SIDString":"px42LoopCtrQGC20220313:158"},{"RTWName":"<Root>/Data Store\nMemory7","SIDString":"px42LoopCtrQGC20220313:328"},{"RTWName":"<Root>/Data Store\nMemory8","SIDString":"px42LoopCtrQGC20220313:372"},{"RTWName":"<Root>/Data Store\nMemory9","SIDString":"px42LoopCtrQGC20220313:266"},{"RTWName":"<Root>/Data Store\nRead","SIDString":"px42LoopCtrQGC20220313:290"},{"RTWName":"<Root>/Data Store\nRead1","SIDString":"px42LoopCtrQGC20220313:171"},{"RTWName":"<Root>/Data Store\nRead10","SIDString":"px42LoopCtrQGC20220313:302"},{"RTWName":"<Root>/Data Store\nRead11","SIDString":"px42LoopCtrQGC20220313:304"},{"RTWName":"<Root>/Data Store\nRead12","SIDString":"px42LoopCtrQGC20220313:308"},{"RTWName":"<Root>/Data Store\nRead13","SIDString":"px42LoopCtrQGC20220313:329"},{"RTWName":"<Root>/Data Store\nRead14","SIDString":"px42LoopCtrQGC20220313:370"},{"RTWName":"<Root>/Data Store\nRead15","SIDString":"px42LoopCtrQGC20220313:314"},{"RTWName":"<Root>/Data Store\nRead16","SIDString":"px42LoopCtrQGC20220313:315"},{"RTWName":"<Root>/Data Store\nRead17","SIDString":"px42LoopCtrQGC20220313:316"},{"RTWName":"<Root>/Data Store\nRead18","SIDString":"px42LoopCtrQGC20220313:371"},{"RTWName":"<Root>/Data Store\nRead19","SIDString":"px42LoopCtrQGC20220313:318"},{"RTWName":"<Root>/Data Store\nRead2","SIDString":"px42LoopCtrQGC20220313:172"},{"RTWName":"<Root>/Data Store\nRead20","SIDString":"px42LoopCtrQGC20220313:374"},{"RTWName":"<Root>/Data Store\nRead21","SIDString":"px42LoopCtrQGC20220313:381"},{"RTWName":"<Root>/Data Store\nRead22","SIDString":"px42LoopCtrQGC20220313:382"},{"RTWName":"<Root>/Data Store\nRead23","SIDString":"px42LoopCtrQGC20220313:383"},{"RTWName":"<Root>/Data Store\nRead24","SIDString":"px42LoopCtrQGC20220313:388"},{"RTWName":"<Root>/Data Store\nRead25","SIDString":"px42LoopCtrQGC20220313:392"},{"RTWName":"<Root>/Data Store\nRead26","SIDString":"px42LoopCtrQGC20220313:394"},{"RTWName":"<Root>/Data Store\nRead27","SIDString":"px42LoopCtrQGC20220313:396"},{"RTWName":"<Root>/Data Store\nRead28","SIDString":"px42LoopCtrQGC20220313:399"},{"RTWName":"<Root>/Data Store\nRead29","SIDString":"px42LoopCtrQGC20220313:416"},{"RTWName":"<Root>/Data Store\nRead3","SIDString":"px42LoopCtrQGC20220313:337"},{"RTWName":"<Root>/Data Store\nRead30","SIDString":"px42LoopCtrQGC20220313:417"},{"RTWName":"<Root>/Data Store\nRead31","SIDString":"px42LoopCtrQGC20220313:405"},{"RTWName":"<Root>/Data Store\nRead32","SIDString":"px42LoopCtrQGC20220313:420"},{"RTWName":"<Root>/Data Store\nRead33","SIDString":"px42LoopCtrQGC20220313:421"},{"RTWName":"<Root>/Data Store\nRead34","SIDString":"px42LoopCtrQGC20220313:498"},{"RTWName":"<Root>/Data Store\nRead35","SIDString":"px42LoopCtrQGC20220313:500"},{"RTWName":"<Root>/Data Store\nRead36","SIDString":"px42LoopCtrQGC20220313:502"},{"RTWName":"<Root>/Data Store\nRead37","SIDString":"px42LoopCtrQGC20220313:504"},{"RTWName":"<Root>/Data Store\nRead38","SIDString":"px42LoopCtrQGC20220313:505"},{"RTWName":"<Root>/Data Store\nRead39","SIDString":"px42LoopCtrQGC20220313:506"},{"RTWName":"<Root>/Data Store\nRead4","SIDString":"px42LoopCtrQGC20220313:173"},{"RTWName":"<Root>/Data Store\nRead40","SIDString":"px42LoopCtrQGC20220313:2235"},{"RTWName":"<Root>/Data Store\nRead41","SIDString":"px42LoopCtrQGC20220313:2232"},{"RTWName":"<Root>/Data Store\nRead42","SIDString":"px42LoopCtrQGC20220313:725"},{"RTWName":"<Root>/Data Store\nRead43","SIDString":"px42LoopCtrQGC20220313:726"},{"RTWName":"<Root>/Data Store\nRead44","SIDString":"px42LoopCtrQGC20220313:727"},{"RTWName":"<Root>/Data Store\nRead45","SIDString":"px42LoopCtrQGC20220313:813"},{"RTWName":"<Root>/Data Store\nRead46","SIDString":"px42LoopCtrQGC20220313:814"},{"RTWName":"<Root>/Data Store\nRead47","SIDString":"px42LoopCtrQGC20220313:1882"},{"RTWName":"<Root>/Data Store\nRead48","SIDString":"px42LoopCtrQGC20220313:1984"},{"RTWName":"<Root>/Data Store\nRead49","SIDString":"px42LoopCtrQGC20220313:1985"},{"RTWName":"<Root>/Data Store\nRead5","SIDString":"px42LoopCtrQGC20220313:174"},{"RTWName":"<Root>/Data Store\nRead50","SIDString":"px42LoopCtrQGC20220313:2011"},{"RTWName":"<Root>/Data Store\nRead51","SIDString":"px42LoopCtrQGC20220313:2012"},{"RTWName":"<Root>/Data Store\nRead52","SIDString":"px42LoopCtrQGC20220313:2013"},{"RTWName":"<Root>/Data Store\nRead53","SIDString":"px42LoopCtrQGC20220313:2023"},{"RTWName":"<Root>/Data Store\nRead54","SIDString":"px42LoopCtrQGC20220313:2247"},{"RTWName":"<Root>/Data Store\nRead55","SIDString":"px42LoopCtrQGC20220313:2325"},{"RTWName":"<Root>/Data Store\nRead56","SIDString":"px42LoopCtrQGC20220313:3763"},{"RTWName":"<Root>/Data Store\nRead57","SIDString":"px42LoopCtrQGC20220313:3764"},{"RTWName":"<Root>/Data Store\nRead58","SIDString":"px42LoopCtrQGC20220313:3765"},{"RTWName":"<Root>/Data Store\nRead6","SIDString":"px42LoopCtrQGC20220313:250"},{"RTWName":"<Root>/Data Store\nRead7","SIDString":"px42LoopCtrQGC20220313:291"},{"RTWName":"<Root>/Data Store\nRead8","SIDString":"px42LoopCtrQGC20220313:298"},{"RTWName":"<Root>/Data Store\nRead9","SIDString":"px42LoopCtrQGC20220313:300"},{"RTWName":"<Root>/Data Store\nWrite","SIDString":"px42LoopCtrQGC20220313:162"},{"RTWName":"<Root>/Data Store\nWrite1","SIDString":"px42LoopCtrQGC20220313:163"},{"RTWName":"<Root>/Data Store\nWrite10","SIDString":"px42LoopCtrQGC20220313:373"},{"RTWName":"<Root>/Data Store\nWrite11","SIDString":"px42LoopCtrQGC20220313:378"},{"RTWName":"<Root>/Data Store\nWrite12","SIDString":"px42LoopCtrQGC20220313:379"},{"RTWName":"<Root>/Data Store\nWrite13","SIDString":"px42LoopCtrQGC20220313:380"},{"RTWName":"<Root>/Data Store\nWrite14","SIDString":"px42LoopCtrQGC20220313:703"},{"RTWName":"<Root>/Data Store\nWrite15","SIDString":"px42LoopCtrQGC20220313:704"},{"RTWName":"<Root>/Data Store\nWrite16","SIDString":"px42LoopCtrQGC20220313:716"},{"RTWName":"<Root>/Data Store\nWrite17","SIDString":"px42LoopCtrQGC20220313:811"},{"RTWName":"<Root>/Data Store\nWrite18","SIDString":"px42LoopCtrQGC20220313:812"},{"RTWName":"<Root>/Data Store\nWrite19","SIDString":"px42LoopCtrQGC20220313:2016"},{"RTWName":"<Root>/Data Store\nWrite2","SIDString":"px42LoopCtrQGC20220313:292"},{"RTWName":"<Root>/Data Store\nWrite20","SIDString":"px42LoopCtrQGC20220313:525"},{"RTWName":"<Root>/Data Store\nWrite21","SIDString":"px42LoopCtrQGC20220313:526"},{"RTWName":"<Root>/Data Store\nWrite22","SIDString":"px42LoopCtrQGC20220313:527"},{"RTWName":"<Root>/Data Store\nWrite23","SIDString":"px42LoopCtrQGC20220313:2017"},{"RTWName":"<Root>/Data Store\nWrite24","SIDString":"px42LoopCtrQGC20220313:2018"},{"RTWName":"<Root>/Data Store\nWrite25","SIDString":"px42LoopCtrQGC20220313:2019"},{"RTWName":"<Root>/Data Store\nWrite26","SIDString":"px42LoopCtrQGC20220313:2229"},{"RTWName":"<Root>/Data Store\nWrite3","SIDString":"px42LoopCtrQGC20220313:293"},{"RTWName":"<Root>/Data Store\nWrite4","SIDString":"px42LoopCtrQGC20220313:810"},{"RTWName":"<Root>/Data Store\nWrite5","SIDString":"px42LoopCtrQGC20220313:270"},{"RTWName":"<Root>/Data Store\nWrite6","SIDString":"px42LoopCtrQGC20220313:271"},{"RTWName":"<Root>/Data Store\nWrite7","SIDString":"px42LoopCtrQGC20220313:272"},{"RTWName":"<Root>/Data Store\nWrite8","SIDString":"px42LoopCtrQGC20220313:273"},{"RTWName":"<Root>/Data Store\nWrite9","SIDString":"px42LoopCtrQGC20220313:340"},{"RTWName":"<Root>/Data Type Conversion1","SIDString":"px42LoopCtrQGC20220313:31"},{"RTWName":"<Root>/Data Type Conversion3","SIDString":"px42LoopCtrQGC20220313:523"},{"RTWName":"<Root>/Demux","SIDString":"px42LoopCtrQGC20220313:241"},{"RTWName":"<Root>/Demux1","SIDString":"px42LoopCtrQGC20220313:160"},{"RTWName":"<Root>/Demux2","SIDString":"px42LoopCtrQGC20220313:1883"},{"RTWName":"<Root>/Demux3","SIDString":"px42LoopCtrQGC20220313:331"},{"RTWName":"<Root>/Demux4","SIDString":"px42LoopCtrQGC20220313:524"},{"RTWName":"<Root>/Display","SIDString":"px42LoopCtrQGC20220313:10"},{"RTWName":"<Root>/Display1","SIDString":"px42LoopCtrQGC20220313:299"},{"RTWName":"<Root>/Display10","SIDString":"px42LoopCtrQGC20220313:3724"},{"RTWName":"<Root>/Display11","SIDString":"px42LoopCtrQGC20220313:258"},{"RTWName":"<Root>/Display12","SIDString":"px42LoopCtrQGC20220313:389"},{"RTWName":"<Root>/Display13","SIDString":"px42LoopCtrQGC20220313:320"},{"RTWName":"<Root>/Display14","SIDString":"px42LoopCtrQGC20220313:321"},{"RTWName":"<Root>/Display15","SIDString":"px42LoopCtrQGC20220313:322"},{"RTWName":"<Root>/Display16","SIDString":"px42LoopCtrQGC20220313:323"},{"RTWName":"<Root>/Display17","SIDString":"px42LoopCtrQGC20220313:393"},{"RTWName":"<Root>/Display18","SIDString":"px42LoopCtrQGC20220313:395"},{"RTWName":"<Root>/Display19","SIDString":"px42LoopCtrQGC20220313:397"},{"RTWName":"<Root>/Display2","SIDString":"px42LoopCtrQGC20220313:33"},{"RTWName":"<Root>/Display20","SIDString":"px42LoopCtrQGC20220313:499"},{"RTWName":"<Root>/Display21","SIDString":"px42LoopCtrQGC20220313:501"},{"RTWName":"<Root>/Display22","SIDString":"px42LoopCtrQGC20220313:503"},{"RTWName":"<Root>/Display23","SIDString":"px42LoopCtrQGC20220313:507"},{"RTWName":"<Root>/Display24","SIDString":"px42LoopCtrQGC20220313:508"},{"RTWName":"<Root>/Display25","SIDString":"px42LoopCtrQGC20220313:509"},{"RTWName":"<Root>/Display28","SIDString":"px42LoopCtrQGC20220313:3747"},{"RTWName":"<Root>/Display3","SIDString":"px42LoopCtrQGC20220313:2324"},{"RTWName":"<Root>/Display5","SIDString":"px42LoopCtrQGC20220313:301"},{"RTWName":"<Root>/Display6","SIDString":"px42LoopCtrQGC20220313:303"},{"RTWName":"<Root>/Display7","SIDString":"px42LoopCtrQGC20220313:305"},{"RTWName":"<Root>/Display8","SIDString":"px42LoopCtrQGC20220313:309"},{"RTWName":"<Root>/Display9","SIDString":"px42LoopCtrQGC20220313:330"},{"RTWName":"<Root>/Gain1","SIDString":"px42LoopCtrQGC20220313:232"},{"RTWName":"<Root>/Gain10","SIDString":"px42LoopCtrQGC20220313:3706"},{"RTWName":"<Root>/Gain11","SIDString":"px42LoopCtrQGC20220313:3707"},{"RTWName":"<Root>/Gain2","SIDString":"px42LoopCtrQGC20220313:233"},{"RTWName":"<Root>/Gain3","SIDString":"px42LoopCtrQGC20220313:344"},{"RTWName":"<Root>/Gain4","SIDString":"px42LoopCtrQGC20220313:332"},{"RTWName":"<Root>/Gain5","SIDString":"px42LoopCtrQGC20220313:345"},{"RTWName":"<Root>/Gain6","SIDString":"px42LoopCtrQGC20220313:390"},{"RTWName":"<Root>/Gain7","SIDString":"px42LoopCtrQGC20220313:418"},{"RTWName":"<Root>/Gain8","SIDString":"px42LoopCtrQGC20220313:412"},{"RTWName":"<Root>/Gain9","SIDString":"px42LoopCtrQGC20220313:422"},{"RTWName":"<S4294967295>/Attitude","SIDString":"px42LoopCtrQGC20220313:1989"},{"RTWName":"<S4294967295>/u","SIDString":"px42LoopCtrQGC20220313:2015"},{"RTWName":"<S4294967295>/Demux","SIDString":"px42LoopCtrQGC20220313:1990"},{"RTWName":"<S4294967295>/Demux2","SIDString":"px42LoopCtrQGC20220313:1991"},{"RTWName":"<S4294967295>/Intgrt_dX","SIDString":"px42LoopCtrQGC20220313:1992"},{"RTWName":"<S4294967295>/Intgrt_dY","SIDString":"px42LoopCtrQGC20220313:1993"},{"RTWName":"<S4294967295>/Intgrt_dZ","SIDString":"px42LoopCtrQGC20220313:1994"},{"RTWName":"<S4294967295>/Intgrt_ddX","SIDString":"px42LoopCtrQGC20220313:1995"},{"RTWName":"<S4294967295>/Intgrt_ddY","SIDString":"px42LoopCtrQGC20220313:1996"},{"RTWName":"<S4294967295>/Intgrt_ddZ","SIDString":"px42LoopCtrQGC20220313:1997"},{"RTWName":"<S72>:1","SIDString":"px42LoopCtrQGC20220313:1998:1"},{"RTWName":"<S4294967295>/Mux2","SIDString":"px42LoopCtrQGC20220313:2000"},{"RTWName":"<S4294967295>/Saturation","SIDString":"px42LoopCtrQGC20220313:2001"},{"RTWName":"<S4294967295>/slower3","SIDString":"px42LoopCtrQGC20220313:2002"},{"RTWName":"<S4294967295>/slower4","SIDString":"px42LoopCtrQGC20220313:2003"},{"RTWName":"<S4294967295>/slower5","SIDString":"px42LoopCtrQGC20220313:2004"},{"RTWName":"<S4294967295>/x","SIDString":"px42LoopCtrQGC20220313:2005"},{"RTWName":"<S4294967295>/y","SIDString":"px42LoopCtrQGC20220313:2006"},{"RTWName":"<S4294967295>/V_Y","SIDString":"px42LoopCtrQGC20220313:2008"},{"RTWName":"<S4294967295>/V_X","SIDString":"px42LoopCtrQGC20220313:2009"},{"RTWName":"<S4294967295>:1","SIDString":"px42LoopCtrQGC20220313:238:1"},{"RTWName":"<S4294967295>:1","SIDString":"px42LoopCtrQGC20220313:294:1"},{"RTWName":"<S4294967295>:1","SIDString":"px42LoopCtrQGC20220313:295:1"},{"RTWName":"<S4294967295>:1","SIDString":"px42LoopCtrQGC20220313:694:1"},{"RTWName":"<S4294967295>:1","SIDString":"px42LoopCtrQGC20220313:698:1"},{"RTWName":"<Root>/Manual Switch","SIDString":"px42LoopCtrQGC20220313:3705"},{"RTWName":"<Root>/Mixer matrix1","SIDString":"px42LoopCtrQGC20220313:333"},{"RTWName":"<Root>/Mux","SIDString":"px42LoopCtrQGC20220313:1671"},{"RTWName":"<Root>/Mux1","SIDString":"px42LoopCtrQGC20220313:150"},{"RTWName":"<Root>/Mux2","SIDString":"px42LoopCtrQGC20220313:1673"},{"RTWName":"<Root>/Mux3","SIDString":"px42LoopCtrQGC20220313:334"},{"RTWName":"<Root>/Mux4","SIDString":"px42LoopCtrQGC20220313:1876"},{"RTWName":"<Root>/Mux5","SIDString":"px42LoopCtrQGC20220313:2014"},{"RTWName":"<Root>/Mux6","SIDString":"px42LoopCtrQGC20220313:522"},{"RTWName":"<Root>/Mux7","SIDString":"px42LoopCtrQGC20220313:3766"},{"RTWName":"<Root>/PX4 PWM Output1","SIDString":"px42LoopCtrQGC20220313:26"},{"RTWName":"<S2>/Constant","SIDString":"px42LoopCtrQGC20220313:6:2"},{"RTWName":"<S43>/In1","SIDString":"px42LoopCtrQGC20220313:6:4"},{"RTWName":"<S43>/Enable","SIDString":"px42LoopCtrQGC20220313:6:5"},{"RTWName":"<S43>/Out1","SIDString":"px42LoopCtrQGC20220313:6:6"},{"RTWName":"<S2>/NOT","SIDString":"px42LoopCtrQGC20220313:6:19"},{"RTWName":"<S2>/SourceBlock","SIDString":"px42LoopCtrQGC20220313:6:9"},{"RTWName":"<S2>/Out1","SIDString":"px42LoopCtrQGC20220313:6:10"},{"RTWName":"<S2>/Out2","SIDString":"px42LoopCtrQGC20220313:6:11"},{"RTWName":"<S3>/Constant","SIDString":"px42LoopCtrQGC20220313:34:2"},{"RTWName":"<S44>/In1","SIDString":"px42LoopCtrQGC20220313:34:4"},{"RTWName":"<S44>/Enable","SIDString":"px42LoopCtrQGC20220313:34:5"},{"RTWName":"<S44>/Out1","SIDString":"px42LoopCtrQGC20220313:34:6"},{"RTWName":"<S3>/NOT","SIDString":"px42LoopCtrQGC20220313:34:19"},{"RTWName":"<S3>/SourceBlock","SIDString":"px42LoopCtrQGC20220313:34:9"},{"RTWName":"<S3>/Out1","SIDString":"px42LoopCtrQGC20220313:34:10"},{"RTWName":"<S3>/Out2","SIDString":"px42LoopCtrQGC20220313:34:11"},{"RTWName":"<S4294967295>/x","SIDString":"px42LoopCtrQGC20220313:806"},{"RTWName":"<S4294967295>/x_d","SIDString":"px42LoopCtrQGC20220313:807"},{"RTWName":"<S4294967295>/y","SIDString":"px42LoopCtrQGC20220313:808"},{"RTWName":"<S4294967295>/y_d","SIDString":"px42LoopCtrQGC20220313:809"},{"RTWName":"<S4294967295>/Constant","SIDString":"px42LoopCtrQGC20220313:805"},{"RTWName":"<S4294967295>/Gain2","SIDString":"px42LoopCtrQGC20220313:1887"},{"RTWName":"<S4294967295>/Gain4","SIDString":"px42LoopCtrQGC20220313:1935"},{"RTWName":"<S4294967295>/Saturation1","SIDString":"px42LoopCtrQGC20220313:1888"},{"RTWName":"<S4294967295>/Saturation2","SIDString":"px42LoopCtrQGC20220313:1936"},{"RTWName":"<S75>/In1","SIDString":"px42LoopCtrQGC20220313:1890"},{"RTWName":"<S75>/In2","SIDString":"px42LoopCtrQGC20220313:1891"},{"RTWName":"<S75>/-1/m","SIDString":"px42LoopCtrQGC20220313:1892"},{"RTWName":"<S75>/-epsilon","SIDString":"px42LoopCtrQGC20220313:1893"},{"RTWName":"<S75>/-kx","SIDString":"px42LoopCtrQGC20220313:1894"},{"RTWName":"<S75>/Constant1","SIDString":"px42LoopCtrQGC20220313:1895"},{"RTWName":"<S75>/Data Store\nRead","SIDString":"px42LoopCtrQGC20220313:1896"},{"RTWName":"<S75>/Data Store\nRead1","SIDString":"px42LoopCtrQGC20220313:1897"},{"RTWName":"<S75>/Demux","SIDString":"px42LoopCtrQGC20220313:1898"},{"RTWName":"<S75>/Discrete Derivative","SIDString":"px42LoopCtrQGC20220313:1899"},{"RTWName":"<S75>/Discrete Derivative1","SIDString":"px42LoopCtrQGC20220313:1900"},{"RTWName":"<S75>/Discrete Derivative2","SIDString":"px42LoopCtrQGC20220313:1901"},{"RTWName":"<S75>/Discrete-Time\nIntegrator","SIDString":"px42LoopCtrQGC20220313:1902"},{"RTWName":"<S75>/Gain","SIDString":"px42LoopCtrQGC20220313:1903"},{"RTWName":"<S75>/Gain1","SIDString":"px42LoopCtrQGC20220313:1904"},{"RTWName":"<S75>/Gain2","SIDString":"px42LoopCtrQGC20220313:1905"},{"RTWName":"<S75>/Mux","SIDString":"px42LoopCtrQGC20220313:1906"},{"RTWName":"<S75>/Product","SIDString":"px42LoopCtrQGC20220313:1907"},{"RTWName":"<S75>/Product1","SIDString":"px42LoopCtrQGC20220313:1908"},{"RTWName":"<S75>/Product2","SIDString":"px42LoopCtrQGC20220313:1909"},{"RTWName":"<S75>/Product3","SIDString":"px42LoopCtrQGC20220313:1910"},{"RTWName":"<S75>/Subtract","SIDString":"px42LoopCtrQGC20220313:1911"},{"RTWName":"<S75>/Subtract1","SIDString":"px42LoopCtrQGC20220313:1912"},{"RTWName":"<S75>/Subtract2","SIDString":"px42LoopCtrQGC20220313:1913"},{"RTWName":"<S75>/Subtract3","SIDString":"px42LoopCtrQGC20220313:1914"},{"RTWName":"<S75>/Subtract4","SIDString":"px42LoopCtrQGC20220313:1915"},{"RTWName":"<S75>/Subtract5","SIDString":"px42LoopCtrQGC20220313:1916"},{"RTWName":"<S75>/Subtract6","SIDString":"px42LoopCtrQGC20220313:1917"},{"RTWName":"<S75>/Subtract7","SIDString":"px42LoopCtrQGC20220313:1918"},{"RTWName":"<S75>/Switch","SIDString":"px42LoopCtrQGC20220313:1919"},{"RTWName":"<S75>/Zero-Order\nHold1","SIDString":"px42LoopCtrQGC20220313:1920"},{"RTWName":"<S75>/Zero-Order\nHold2","SIDString":"px42LoopCtrQGC20220313:1921"},{"RTWName":"<S75>/Zero-Order\nHold5","SIDString":"px42LoopCtrQGC20220313:1922"},{"RTWName":"<S75>/Zero-Order\nHold6","SIDString":"px42LoopCtrQGC20220313:1923"},{"RTWName":"<S75>/alph","SIDString":"px42LoopCtrQGC20220313:1924"},{"RTWName":"<S75>/gamms","SIDString":"px42LoopCtrQGC20220313:1925"},{"RTWName":"<S75>/Out1","SIDString":"px42LoopCtrQGC20220313:1926"},{"RTWName":"<S76>/In1","SIDString":"px42LoopCtrQGC20220313:1939"},{"RTWName":"<S76>/In2","SIDString":"px42LoopCtrQGC20220313:1940"},{"RTWName":"<S76>/-1/m","SIDString":"px42LoopCtrQGC20220313:1941"},{"RTWName":"<S76>/-epsilon","SIDString":"px42LoopCtrQGC20220313:1942"},{"RTWName":"<S76>/-kx","SIDString":"px42LoopCtrQGC20220313:1943"},{"RTWName":"<S76>/Constant1","SIDString":"px42LoopCtrQGC20220313:1944"},{"RTWName":"<S76>/Data Store\nRead","SIDString":"px42LoopCtrQGC20220313:1945"},{"RTWName":"<S76>/Data Store\nRead1","SIDString":"px42LoopCtrQGC20220313:1946"},{"RTWName":"<S76>/Demux","SIDString":"px42LoopCtrQGC20220313:1947"},{"RTWName":"<S76>/Discrete Derivative","SIDString":"px42LoopCtrQGC20220313:1948"},{"RTWName":"<S76>/Discrete Derivative1","SIDString":"px42LoopCtrQGC20220313:1949"},{"RTWName":"<S76>/Discrete Derivative2","SIDString":"px42LoopCtrQGC20220313:1950"},{"RTWName":"<S76>/Discrete-Time\nIntegrator","SIDString":"px42LoopCtrQGC20220313:1951"},{"RTWName":"<S76>/Gain","SIDString":"px42LoopCtrQGC20220313:1952"},{"RTWName":"<S76>/Gain1","SIDString":"px42LoopCtrQGC20220313:1953"},{"RTWName":"<S76>/Gain2","SIDString":"px42LoopCtrQGC20220313:1954"},{"RTWName":"<S76>/Mux","SIDString":"px42LoopCtrQGC20220313:1955"},{"RTWName":"<S76>/Product","SIDString":"px42LoopCtrQGC20220313:1956"},{"RTWName":"<S76>/Product1","SIDString":"px42LoopCtrQGC20220313:1957"},{"RTWName":"<S76>/Product2","SIDString":"px42LoopCtrQGC20220313:1958"},{"RTWName":"<S76>/Product3","SIDString":"px42LoopCtrQGC20220313:1959"},{"RTWName":"<S76>/Subtract","SIDString":"px42LoopCtrQGC20220313:1960"},{"RTWName":"<S76>/Subtract1","SIDString":"px42LoopCtrQGC20220313:1961"},{"RTWName":"<S76>/Subtract2","SIDString":"px42LoopCtrQGC20220313:1962"},{"RTWName":"<S76>/Subtract3","SIDString":"px42LoopCtrQGC20220313:1963"},{"RTWName":"<S76>/Subtract4","SIDString":"px42LoopCtrQGC20220313:1964"},{"RTWName":"<S76>/Subtract5","SIDString":"px42LoopCtrQGC20220313:1965"},{"RTWName":"<S76>/Subtract6","SIDString":"px42LoopCtrQGC20220313:1966"},{"RTWName":"<S76>/Subtract7","SIDString":"px42LoopCtrQGC20220313:1967"},{"RTWName":"<S76>/Switch","SIDString":"px42LoopCtrQGC20220313:1968"},{"RTWName":"<S76>/Zero-Order\nHold1","SIDString":"px42LoopCtrQGC20220313:1969"},{"RTWName":"<S76>/Zero-Order\nHold2","SIDString":"px42LoopCtrQGC20220313:1970"},{"RTWName":"<S76>/Zero-Order\nHold5","SIDString":"px42LoopCtrQGC20220313:1971"},{"RTWName":"<S76>/Zero-Order\nHold6","SIDString":"px42LoopCtrQGC20220313:1972"},{"RTWName":"<S76>/alph","SIDString":"px42LoopCtrQGC20220313:1973"},{"RTWName":"<S76>/gamms","SIDString":"px42LoopCtrQGC20220313:1974"},{"RTWName":"<S76>/Out1","SIDString":"px42LoopCtrQGC20220313:1975"},{"RTWName":"<S4294967295>/q_x","SIDString":"px42LoopCtrQGC20220313:1982"},{"RTWName":"<S4294967295>/q_y","SIDString":"px42LoopCtrQGC20220313:1933"},{"RTWName":"<S4294967295>/q_z","SIDString":"px42LoopCtrQGC20220313:804"},{"RTWName":"<Root>/Product2","SIDString":"px42LoopCtrQGC20220313:335"},{"RTWName":"<S4>/q","SIDString":"px42LoopCtrQGC20220313:35:1"},{"RTWName":"<S45>/q","SIDString":"px42LoopCtrQGC20220313:35:14:12"},{"RTWName":"<S45>/r11","SIDString":"px42LoopCtrQGC20220313:35:14:6"},{"RTWName":"<S45>/r12","SIDString":"px42LoopCtrQGC20220313:35:14:7"},{"RTWName":"<S45>/r21","SIDString":"px42LoopCtrQGC20220313:35:14:8"},{"RTWName":"<S45>/In4","SIDString":"px42LoopCtrQGC20220313:35:14:9"},{"RTWName":"<S45>/r32","SIDString":"px42LoopCtrQGC20220313:35:14:10"},{"RTWName":"<S47>/In","SIDString":"px42LoopCtrQGC20220313:35:14:46:97"},{"RTWName":"<S47>/If","SIDString":"px42LoopCtrQGC20220313:35:14:46:98"},{"RTWName":"<S48>/Action Port","SIDString":"px42LoopCtrQGC20220313:35:14:46:100"},{"RTWName":"<S48>/Constant","SIDString":"px42LoopCtrQGC20220313:35:14:46:101"},{"RTWName":"<S48>/OutputPos1","SIDString":"px42LoopCtrQGC20220313:35:14:46:102"},{"RTWName":"<S49>/Action Port","SIDString":"px42LoopCtrQGC20220313:35:14:46:104"},{"RTWName":"<S49>/Constant","SIDString":"px42LoopCtrQGC20220313:35:14:46:105"},{"RTWName":"<S49>/OutputNeg1","SIDString":"px42LoopCtrQGC20220313:35:14:46:106"},{"RTWName":"<S50>/In","SIDString":"px42LoopCtrQGC20220313:35:14:46:108"},{"RTWName":"<S50>/Action Port","SIDString":"px42LoopCtrQGC20220313:35:14:46:109"},{"RTWName":"<S50>/OutOrig","SIDString":"px42LoopCtrQGC20220313:35:14:46:110"},{"RTWName":"<S47>/Merge","SIDString":"px42LoopCtrQGC20220313:35:14:46:111"},{"RTWName":"<S47>/Out","SIDString":"px42LoopCtrQGC20220313:35:14:46:112"},{"RTWName":"<S45>/Terminator","SIDString":"px42LoopCtrQGC20220313:35:14:13"},{"RTWName":"<S45>/Trigonometric\nFunction1","SIDString":"px42LoopCtrQGC20220313:35:14:1"},{"RTWName":"<S45>/Trigonometric\nFunction3","SIDString":"px42LoopCtrQGC20220313:35:14:2"},{"RTWName":"<S45>/Vector\nConcatenate","SIDString":"px42LoopCtrQGC20220313:35:14:3"},{"RTWName":"<S45>/trigFcn","SIDString":"px42LoopCtrQGC20220313:35:14:4"},{"RTWName":"<S45>/R1,R2,R3","SIDString":"px42LoopCtrQGC20220313:35:14:11"},{"RTWName":"<S46>/q","SIDString":"px42LoopCtrQGC20220313:35:13:57"},{"RTWName":"<S46>/Demux","SIDString":"px42LoopCtrQGC20220313:35:13:58"},{"RTWName":"<S46>/Mux","SIDString":"px42LoopCtrQGC20220313:35:13:59"},{"RTWName":"<S46>/Product","SIDString":"px42LoopCtrQGC20220313:35:13:60"},{"RTWName":"<S46>/Product1","SIDString":"px42LoopCtrQGC20220313:35:13:61"},{"RTWName":"<S46>/Product2","SIDString":"px42LoopCtrQGC20220313:35:13:62"},{"RTWName":"<S46>/Product3","SIDString":"px42LoopCtrQGC20220313:35:13:63"},{"RTWName":"<S51>/q","SIDString":"px42LoopCtrQGC20220313:35:13:384:66"},{"RTWName":"<S52>/q","SIDString":"px42LoopCtrQGC20220313:35:13:384:385:70"},{"RTWName":"<S52>/Demux","SIDString":"px42LoopCtrQGC20220313:35:13:384:385:71"},{"RTWName":"<S52>/Product","SIDString":"px42LoopCtrQGC20220313:35:13:384:385:72"},{"RTWName":"<S52>/Product1","SIDString":"px42LoopCtrQGC20220313:35:13:384:385:73"},{"RTWName":"<S52>/Product2","SIDString":"px42LoopCtrQGC20220313:35:13:384:385:74"},{"RTWName":"<S52>/Product3","SIDString":"px42LoopCtrQGC20220313:35:13:384:385:75"},{"RTWName":"<S52>/Sum","SIDString":"px42LoopCtrQGC20220313:35:13:384:385:76"},{"RTWName":"<S52>/norm(q)","SIDString":"px42LoopCtrQGC20220313:35:13:384:385:77"},{"RTWName":"<S51>/sqrt","SIDString":"px42LoopCtrQGC20220313:35:13:384:379"},{"RTWName":"<S51>/|q|","SIDString":"px42LoopCtrQGC20220313:35:13:384:69"},{"RTWName":"<S46>/normal(q)","SIDString":"px42LoopCtrQGC20220313:35:13:65"},{"RTWName":"<S4>/fcn1","SIDString":"px42LoopCtrQGC20220313:35:6"},{"RTWName":"<S4>/fcn2","SIDString":"px42LoopCtrQGC20220313:35:7"},{"RTWName":"<S4>/fcn3","SIDString":"px42LoopCtrQGC20220313:35:8"},{"RTWName":"<S4>/fcn4","SIDString":"px42LoopCtrQGC20220313:35:9"},{"RTWName":"<S4>/fcn5","SIDString":"px42LoopCtrQGC20220313:35:10"},{"RTWName":"<S4>/R1,R2,R3","SIDString":"px42LoopCtrQGC20220313:35:12"},{"RTWName":"<S5>/Bitwise\nOperator","SIDString":"px42LoopCtrQGC20220313:3718:268"},{"RTWName":"<S5>/Bus\nSelector","SIDString":"px42LoopCtrQGC20220313:3718:41"},{"RTWName":"<S5>/Data Type Conversion","SIDString":"px42LoopCtrQGC20220313:3718:265"},{"RTWName":"<S5>/Data Type Conversion1","SIDString":"px42LoopCtrQGC20220313:3718:266"},{"RTWName":"<S5>/Data Type Conversion2","SIDString":"px42LoopCtrQGC20220313:3718:270"},{"RTWName":"<S5>/Demux","SIDString":"px42LoopCtrQGC20220313:3718:42"},{"RTWName":"<S5>/Gain","SIDString":"px42LoopCtrQGC20220313:3718:264"},{"RTWName":"<S5>/Gain1","SIDString":"px42LoopCtrQGC20220313:3718:267"},{"RTWName":"<S53>/Constant","SIDString":"px42LoopCtrQGC20220313:3718:43:2"},{"RTWName":"<S54>/In1","SIDString":"px42LoopCtrQGC20220313:3718:43:4"},{"RTWName":"<S54>/Enable","SIDString":"px42LoopCtrQGC20220313:3718:43:5"},{"RTWName":"<S54>/Out1","SIDString":"px42LoopCtrQGC20220313:3718:43:6"},{"RTWName":"<S53>/NOT","SIDString":"px42LoopCtrQGC20220313:3718:43:19"},{"RTWName":"<S53>/SourceBlock","SIDString":"px42LoopCtrQGC20220313:3718:43:9"},{"RTWName":"<S53>/Out1","SIDString":"px42LoopCtrQGC20220313:3718:43:10"},{"RTWName":"<S53>/Out2","SIDString":"px42LoopCtrQGC20220313:3718:43:11"},{"RTWName":"<S5>/Terminator_channel1","SIDString":"px42LoopCtrQGC20220313:3718:271"},{"RTWName":"<S5>/Terminator_channel2","SIDString":"px42LoopCtrQGC20220313:3718:272"},{"RTWName":"<S5>/Terminator_channel3","SIDString":"px42LoopCtrQGC20220313:3718:273"},{"RTWName":"<S5>/Terminator_channel4","SIDString":"px42LoopCtrQGC20220313:3718:274"},{"RTWName":"<S5>/Terminator_channel5","SIDString":"px42LoopCtrQGC20220313:3718:253"},{"RTWName":"<S5>/Terminator_channel6","SIDString":"px42LoopCtrQGC20220313:3718:254"},{"RTWName":"<S5>/Terminator_channel7","SIDString":"px42LoopCtrQGC20220313:3718:255"},{"RTWName":"<S5>/Terminator_channel_count","SIDString":"px42LoopCtrQGC20220313:3718:257"},{"RTWName":"<S5>/Terminator_rc_input_source","SIDString":"px42LoopCtrQGC20220313:3718:261"},{"RTWName":"<S5>/Terminator_rssi","SIDString":"px42LoopCtrQGC20220313:3718:258"},{"RTWName":"<S5>/Terminator_time_stamp","SIDString":"px42LoopCtrQGC20220313:3718:263"},{"RTWName":"<S5>/Terminator_timestamp_last_signal","SIDString":"px42LoopCtrQGC20220313:3718:262"},{"RTWName":"<S5>/term_ch_10\n","SIDString":"px42LoopCtrQGC20220313:3718:75"},{"RTWName":"<S5>/term_ch_11","SIDString":"px42LoopCtrQGC20220313:3718:76"},{"RTWName":"<S5>/term_ch_12","SIDString":"px42LoopCtrQGC20220313:3718:77"},{"RTWName":"<S5>/term_ch_13","SIDString":"px42LoopCtrQGC20220313:3718:78"},{"RTWName":"<S5>/term_ch_14","SIDString":"px42LoopCtrQGC20220313:3718:79"},{"RTWName":"<S5>/term_ch_15","SIDString":"px42LoopCtrQGC20220313:3718:80"},{"RTWName":"<S5>/term_ch_16","SIDString":"px42LoopCtrQGC20220313:3718:81"},{"RTWName":"<S5>/term_ch_17","SIDString":"px42LoopCtrQGC20220313:3718:82"},{"RTWName":"<S5>/term_ch_18","SIDString":"px42LoopCtrQGC20220313:3718:83"},{"RTWName":"<S5>/term_ch_9","SIDString":"px42LoopCtrQGC20220313:3718:74"},{"RTWName":"<S5>/Out_Status","SIDString":"px42LoopCtrQGC20220313:3718:44"},{"RTWName":"<S5>/Outport_channel8","SIDString":"px42LoopCtrQGC20220313:3718:275"},{"RTWName":"<Root>/Reset","SIDString":"px42LoopCtrQGC20220313:718"},{"RTWName":"<Root>/Saturation","SIDString":"px42LoopCtrQGC20220313:2236"},{"RTWName":"<Root>/Scope","SIDString":"px42LoopCtrQGC20220313:425"},{"RTWName":"<Root>/Scope1","SIDString":"px42LoopCtrQGC20220313:1663"},{"RTWName":"<Root>/Scope2","SIDString":"px42LoopCtrQGC20220313:1987"},{"RTWName":"<Root>/Selector","SIDString":"px42LoopCtrQGC20220313:9"},{"RTWName":"<Root>/Serial Receive","SIDString":"px42LoopCtrQGC20220313:234"},{"RTWName":"<Root>/Serial Transmit","SIDString":"px42LoopCtrQGC20220313:97"},{"RTWName":"<Root>/Serial Transmit1","SIDString":"px42LoopCtrQGC20220313:3761"},{"RTWName":"<Root>/Sine Wave","SIDString":"px42LoopCtrQGC20220313:3704"},{"RTWName":"<Root>/Sine Wave1","SIDString":"px42LoopCtrQGC20220313:1872"},{"RTWName":"<Root>/Sine Wave2","SIDString":"px42LoopCtrQGC20220313:1873"},{"RTWName":"<Root>/Slider Switch","SIDString":"px42LoopCtrQGC20220313:1646"},{"RTWName":"<Root>/Slider Switch1","SIDString":"px42LoopCtrQGC20220313:1878"},{"RTWName":"<Root>/Slider Switch2","SIDString":"px42LoopCtrQGC20220313:2873"},{"RTWName":"<Root>/Slider1","SIDString":"px42LoopCtrQGC20220313:3118"},{"RTWName":"<Root>/Slider2","SIDString":"px42LoopCtrQGC20220313:3119"},{"RTWName":"<Root>/Slider3","SIDString":"px42LoopCtrQGC20220313:3120"},{"RTWName":"<Root>/Slider6","SIDString":"px42LoopCtrQGC20220313:953"},{"RTWName":"<S4294967295>/Constant7","SIDString":"px42LoopCtrQGC20220313:1538"},{"RTWName":"<S4294967295>/Data Store\nRead54","SIDString":"px42LoopCtrQGC20220313:2090"},{"RTWName":"<S4294967295>/Data Store\nRead55","SIDString":"px42LoopCtrQGC20220313:2092"},{"RTWName":"<S4294967295>/Data Store\nRead56","SIDString":"px42LoopCtrQGC20220313:2093"},{"RTWName":"<S4294967295>/Mux7","SIDString":"px42LoopCtrQGC20220313:2091"},{"RTWName":"<S4294967295>/Switch3","SIDString":"px42LoopCtrQGC20220313:2088"},{"RTWName":"<S4294967295>/des_pitch/roll","SIDString":"px42LoopCtrQGC20220313:2096"},{"RTWName":"<S6>/Enable","SIDString":"px42LoopCtrQGC20220313:2246"},{"RTWName":"<S6>/Constant9","SIDString":"px42LoopCtrQGC20220313:2242"},{"RTWName":"<S6>/Data Store\nWrite27","SIDString":"px42LoopCtrQGC20220313:2244"},{"RTWName":"<S6>/Discrete-Time\nIntegrator","SIDString":"px42LoopCtrQGC20220313:2241"},{"RTWName":"<Root>/Switch","SIDString":"px42LoopCtrQGC20220313:1875"},{"RTWName":"<Root>/Switch1","SIDString":"px42LoopCtrQGC20220313:2024"},{"RTWName":"<Root>/Switch2","SIDString":"px42LoopCtrQGC20220313:2025"},{"RTWName":"<Root>/Switch3","SIDString":"px42LoopCtrQGC20220313:3740"},{"RTWName":"<Root>/Terminator","SIDString":"px42LoopCtrQGC20220313:7"},{"RTWName":"<Root>/Toggle Switch","SIDString":"px42LoopCtrQGC20220313:714"},{"RTWName":"<Root>/XY Graph","SIDString":"px42LoopCtrQGC20220313:2026"},{"RTWName":"<Root>/Zero-Order\nHold1","SIDString":"px42LoopCtrQGC20220313:264"},{"RTWName":"<S7>/Data Store\nWrite28","SIDString":"px42LoopCtrQGC20220313:1642"},{"RTWName":"<S7>/attitude_flag","SIDString":"px42LoopCtrQGC20220313:1643"},{"RTWName":"<Root>/fault_1","SIDString":"px42LoopCtrQGC20220313:2868"},{"RTWName":"<Root>/fault_2","SIDString":"px42LoopCtrQGC20220313:3115"},{"RTWName":"<Root>/fault_3","SIDString":"px42LoopCtrQGC20220313:3116"},{"RTWName":"<Root>/fault_4","SIDString":"px42LoopCtrQGC20220313:3117"},{"RTWName":"<S8>/Data Store\nWrite28","SIDString":"px42LoopCtrQGC20220313:2875"},{"RTWName":"<S8>/observer_flag","SIDString":"px42LoopCtrQGC20220313:2876"},{"RTWName":"<S9>/Data Store\nWrite28","SIDString":"px42LoopCtrQGC20220313:1879"},{"RTWName":"<S9>/position_flag","SIDString":"px42LoopCtrQGC20220313:1880"},{"RTWName":"<Root>/u","SIDString":"px42LoopCtrQGC20220313:296"},{"RTWName":"<Root>/Attitude controller","SIDString":"px42LoopCtrQGC20220313:346"},{"RTWName":"<S1>/Subsystem","SIDString":"px42LoopCtrQGC20220313:2248"},{"RTWName":"<S10>/Discrete Derivative1","SIDString":"px42LoopCtrQGC20220313:2255"},{"RTWName":"<S10>/Subsystem1","SIDString":"px42LoopCtrQGC20220313:2261"},{"RTWName":"<S17>/Subsystem","SIDString":"px42LoopCtrQGC20220313:2268"},{"RTWName":"<S18>/Compare\nTo Constant1","SIDString":"px42LoopCtrQGC20220313:2434"},{"RTWName":"<S18>/MATLAB Function","SIDString":"px42LoopCtrQGC20220313:2571"},{"RTWName":"<S18>/start_time","SIDString":"px42LoopCtrQGC20220313:2565"},{"RTWName":"<S21>/Compare\nTo Constant1","SIDString":"px42LoopCtrQGC20220313:2579"},{"RTWName":"<S21>/Compare\nTo Constant2","SIDString":"px42LoopCtrQGC20220313:2444"},{"RTWName":"<S21>/Compare\nTo Constant4","SIDString":"px42LoopCtrQGC20220313:2553"},{"RTWName":"<S21>/Compare\nTo Constant5","SIDString":"px42LoopCtrQGC20220313:2562"},{"RTWName":"<S21>/Subsystem","SIDString":"px42LoopCtrQGC20220313:2441"},{"RTWName":"<S21>/Subsystem1","SIDString":"px42LoopCtrQGC20220313:2555"},{"RTWName":"<S1>/Subsystem1","SIDString":"px42LoopCtrQGC20220313:2286"},{"RTWName":"<S4294967295>/Subsystem1","SIDString":"px42LoopCtrQGC20220313:2299"},{"RTWName":"<S44>/Subsystem","SIDString":"px42LoopCtrQGC20220313:2306"},{"RTWName":"<S1>/Subsystem2","SIDString":"px42LoopCtrQGC20220313:2503"},{"RTWName":"<S4294967295>/MATLAB Function","SIDString":"px42LoopCtrQGC20220313:2512"},{"RTWName":"<S1>/Subsystem3","SIDString":"px42LoopCtrQGC20220313:2519"},{"RTWName":"<S4294967295>/MATLAB Function","SIDString":"px42LoopCtrQGC20220313:2528"},{"RTWName":"<S1>/Subsystem4","SIDString":"px42LoopCtrQGC20220313:2329"},{"RTWName":"<S1>/Subsystem5","SIDString":"px42LoopCtrQGC20220313:2393"},{"RTWName":"<S1>/Subsystem6","SIDString":"px42LoopCtrQGC20220313:2606"},{"RTWName":"<S11>/Discrete Derivative1","SIDString":"px42LoopCtrQGC20220313:2617"},{"RTWName":"<S11>/Subsystem1","SIDString":"px42LoopCtrQGC20220313:2629"},{"RTWName":"<S26>/Subsystem","SIDString":"px42LoopCtrQGC20220313:2636"},{"RTWName":"<S27>/Compare\nTo Constant1","SIDString":"px42LoopCtrQGC20220313:2640"},{"RTWName":"<S27>/MATLAB Function","SIDString":"px42LoopCtrQGC20220313:2648"},{"RTWName":"<S27>/start_time","SIDString":"px42LoopCtrQGC20220313:2654"},{"RTWName":"<S30>/Compare\nTo Constant1","SIDString":"px42LoopCtrQGC20220313:2659"},{"RTWName":"<S30>/Compare\nTo Constant2","SIDString":"px42LoopCtrQGC20220313:2660"},{"RTWName":"<S30>/Compare\nTo Constant4","SIDString":"px42LoopCtrQGC20220313:2661"},{"RTWName":"<S30>/Compare\nTo Constant5","SIDString":"px42LoopCtrQGC20220313:2662"},{"RTWName":"<S30>/Subsystem","SIDString":"px42LoopCtrQGC20220313:2671"},{"RTWName":"<S30>/Subsystem1","SIDString":"px42LoopCtrQGC20220313:2675"},{"RTWName":"<S1>/Subsystem7","SIDString":"px42LoopCtrQGC20220313:2689"},{"RTWName":"<S12>/Discrete Derivative1","SIDString":"px42LoopCtrQGC20220313:2700"},{"RTWName":"<S12>/Subsystem1","SIDString":"px42LoopCtrQGC20220313:2712"},{"RTWName":"<S35>/Subsystem","SIDString":"px42LoopCtrQGC20220313:2719"},{"RTWName":"<S36>/Compare\nTo Constant1","SIDString":"px42LoopCtrQGC20220313:2723"},{"RTWName":"<S36>/MATLAB Function","SIDString":"px42LoopCtrQGC20220313:2731"},{"RTWName":"<S36>/start_time","SIDString":"px42LoopCtrQGC20220313:2737"},{"RTWName":"<S39>/Compare\nTo Constant1","SIDString":"px42LoopCtrQGC20220313:2742"},{"RTWName":"<S39>/Compare\nTo Constant2","SIDString":"px42LoopCtrQGC20220313:2743"},{"RTWName":"<S39>/Compare\nTo Constant4","SIDString":"px42LoopCtrQGC20220313:2744"},{"RTWName":"<S39>/Compare\nTo Constant5","SIDString":"px42LoopCtrQGC20220313:2745"},{"RTWName":"<S39>/Subsystem","SIDString":"px42LoopCtrQGC20220313:2754"},{"RTWName":"<S39>/Subsystem1","SIDString":"px42LoopCtrQGC20220313:2758"},{"RTWName":"<S1>/observer_pitch_3","SIDString":"px42LoopCtrQGC20220313:3588"},{"RTWName":"<S1>/observer_pitch_4","SIDString":"px42LoopCtrQGC20220313:3125"},{"RTWName":"<S1>/observer_roll_3","SIDString":"px42LoopCtrQGC20220313:3477"},{"RTWName":"<S1>/observer_roll_4","SIDString":"px42LoopCtrQGC20220313:2877"},{"RTWName":"<S1>/observer_yaw","SIDString":"px42LoopCtrQGC20220313:3239"},{"RTWName":"<S1>/observer_yaw_4","SIDString":"px42LoopCtrQGC20220313:3360"},{"RTWName":"<Root>/Integer_Position","SIDString":"px42LoopCtrQGC20220313:1988"},{"RTWName":"<S4294967295>/MATLAB Function1","SIDString":"px42LoopCtrQGC20220313:1998"},{"RTWName":"<Root>/MATLAB Function","SIDString":"px42LoopCtrQGC20220313:238"},{"RTWName":"<Root>/MATLAB Function1","SIDString":"px42LoopCtrQGC20220313:294"},{"RTWName":"<Root>/MATLAB Function2","SIDString":"px42LoopCtrQGC20220313:295"},{"RTWName":"<Root>/MATLAB Function3","SIDString":"px42LoopCtrQGC20220313:694"},{"RTWName":"<Root>/MATLAB Function4","SIDString":"px42LoopCtrQGC20220313:698"},{"RTWName":"<Root>/PX4 uORB Read","SIDString":"px42LoopCtrQGC20220313:6"},{"RTWName":"<S2>/Enabled\nSubsystem","SIDString":"px42LoopCtrQGC20220313:6:3"},{"RTWName":"<Root>/PX4 uORB Read2","SIDString":"px42LoopCtrQGC20220313:34"},{"RTWName":"<S3>/Enabled\nSubsystem","SIDString":"px42LoopCtrQGC20220313:34:3"},{"RTWName":"<Root>/Position controller","SIDString":"px42LoopCtrQGC20220313:729"},{"RTWName":"<S4294967295>/Subsystem1","SIDString":"px42LoopCtrQGC20220313:1889"},{"RTWName":"<S4294967295>/Subsystem3","SIDString":"px42LoopCtrQGC20220313:1938"},{"RTWName":"<Root>/Quaternions to Rotation Angles","SIDString":"px42LoopCtrQGC20220313:35"},{"RTWName":"<S4>/Angle Calculation","SIDString":"px42LoopCtrQGC20220313:35:14"},{"RTWName":"<S45>/Protect asincos input","SIDString":"px42LoopCtrQGC20220313:35:14:46"},{"RTWName":"<S47>/If Action\nSubsystem","SIDString":"px42LoopCtrQGC20220313:35:14:46:99"},{"RTWName":"<S47>/If Action\nSubsystem1","SIDString":"px42LoopCtrQGC20220313:35:14:46:103"},{"RTWName":"<S47>/If Action\nSubsystem2","SIDString":"px42LoopCtrQGC20220313:35:14:46:107"},{"RTWName":"<S4>/Quaternion\nNormalize","SIDString":"px42LoopCtrQGC20220313:35:13"},{"RTWName":"<S46>/Quaternion\nModulus","SIDString":"px42LoopCtrQGC20220313:35:13:384"},{"RTWName":"<S51>/Quaternion\nNorm","SIDString":"px42LoopCtrQGC20220313:35:13:384:385"},{"RTWName":"<Root>/Radio Control Transmitter","SIDString":"px42LoopCtrQGC20220313:3718"},{"RTWName":"<S5>/PX4 uORB Read","SIDString":"px42LoopCtrQGC20220313:3718:43"},{"RTWName":"<S53>/Enabled\nSubsystem","SIDString":"px42LoopCtrQGC20220313:3718:43:3"},{"RTWName":"<Root>/Subsystem","SIDString":"px42LoopCtrQGC20220313:2095"},{"RTWName":"<Root>/Subsystem1","SIDString":"px42LoopCtrQGC20220313:2245"},{"RTWName":"<Root>/attitude_button","SIDString":"px42LoopCtrQGC20220313:1644"},{"RTWName":"<Root>/observer_button","SIDString":"px42LoopCtrQGC20220313:2874"},{"RTWName":"<Root>/position_button","SIDString":"px42LoopCtrQGC20220313:1881"}]};